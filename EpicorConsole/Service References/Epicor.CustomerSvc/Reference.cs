//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicorConsole.Epicor.CustomerSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.UpdExtCustomerTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.BillToRefsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerListTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerTableset : EpicorConsole.Epicor.CustomerSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustBankTable CustBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustBillToTable CustBillToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustChildTable CustChildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustDfltDocTypeTable CustDfltDocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustICTable CustICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustLabExpRateTable CustLabExpRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustMFBillTable CustMFBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustMandateTable CustMandateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustRestrictionTable CustRestrictionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustUPSEmailTable CustUPSEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomCrdPoolTable CustomCrdPoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerTable CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerAttchTable CustomerAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerDiscPriceLstTable CustomerDiscPriceLstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerDocsTable CustomerDocsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerDocsSHTable CustomerDocsSHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerFSPriceListTable CustomerFSPriceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerPriceLstTable CustomerPriceLstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.EntityGLCTable EntityGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.GlbCustCredTable GlbCustCredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.MangCustTable MangCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.NAMemberTable NAMemberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.PECustWhldHistTable PECustWhldHistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.PartnerTable PartnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToTable ShipToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToAttchTable ShipToAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToDiscPriceLstTable ShipToDiscPriceLstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToLabExpRateTable ShipToLabExpRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToMFBillTable ShipToMFBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToPriceLstTable ShipToPriceLstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToRestrictionTable ShipToRestrictionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToSrchTable ShipToSrchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToUPSEmlTable ShipToUPSEmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.TaxExemptTable TaxExemptField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustBankTable CustBank {
            get {
                return this.CustBankField;
            }
            set {
                if ((object.ReferenceEquals(this.CustBankField, value) != true)) {
                    this.CustBankField = value;
                    this.RaisePropertyChanged("CustBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustBillToTable CustBillTo {
            get {
                return this.CustBillToField;
            }
            set {
                if ((object.ReferenceEquals(this.CustBillToField, value) != true)) {
                    this.CustBillToField = value;
                    this.RaisePropertyChanged("CustBillTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustChildTable CustChild {
            get {
                return this.CustChildField;
            }
            set {
                if ((object.ReferenceEquals(this.CustChildField, value) != true)) {
                    this.CustChildField = value;
                    this.RaisePropertyChanged("CustChild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustDfltDocTypeTable CustDfltDocType {
            get {
                return this.CustDfltDocTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustDfltDocTypeField, value) != true)) {
                    this.CustDfltDocTypeField = value;
                    this.RaisePropertyChanged("CustDfltDocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustICTable CustIC {
            get {
                return this.CustICField;
            }
            set {
                if ((object.ReferenceEquals(this.CustICField, value) != true)) {
                    this.CustICField = value;
                    this.RaisePropertyChanged("CustIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustLabExpRateTable CustLabExpRate {
            get {
                return this.CustLabExpRateField;
            }
            set {
                if ((object.ReferenceEquals(this.CustLabExpRateField, value) != true)) {
                    this.CustLabExpRateField = value;
                    this.RaisePropertyChanged("CustLabExpRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustMFBillTable CustMFBill {
            get {
                return this.CustMFBillField;
            }
            set {
                if ((object.ReferenceEquals(this.CustMFBillField, value) != true)) {
                    this.CustMFBillField = value;
                    this.RaisePropertyChanged("CustMFBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustMandateTable CustMandate {
            get {
                return this.CustMandateField;
            }
            set {
                if ((object.ReferenceEquals(this.CustMandateField, value) != true)) {
                    this.CustMandateField = value;
                    this.RaisePropertyChanged("CustMandate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustRestrictionTable CustRestriction {
            get {
                return this.CustRestrictionField;
            }
            set {
                if ((object.ReferenceEquals(this.CustRestrictionField, value) != true)) {
                    this.CustRestrictionField = value;
                    this.RaisePropertyChanged("CustRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustUPSEmailTable CustUPSEmail {
            get {
                return this.CustUPSEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CustUPSEmailField, value) != true)) {
                    this.CustUPSEmailField = value;
                    this.RaisePropertyChanged("CustUPSEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomCrdPoolTable CustomCrdPool {
            get {
                return this.CustomCrdPoolField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomCrdPoolField, value) != true)) {
                    this.CustomCrdPoolField = value;
                    this.RaisePropertyChanged("CustomCrdPool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTable Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerAttchTable CustomerAttch {
            get {
                return this.CustomerAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAttchField, value) != true)) {
                    this.CustomerAttchField = value;
                    this.RaisePropertyChanged("CustomerAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerDiscPriceLstTable CustomerDiscPriceLst {
            get {
                return this.CustomerDiscPriceLstField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDiscPriceLstField, value) != true)) {
                    this.CustomerDiscPriceLstField = value;
                    this.RaisePropertyChanged("CustomerDiscPriceLst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerDocsTable CustomerDocs {
            get {
                return this.CustomerDocsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDocsField, value) != true)) {
                    this.CustomerDocsField = value;
                    this.RaisePropertyChanged("CustomerDocs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerDocsSHTable CustomerDocsSH {
            get {
                return this.CustomerDocsSHField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDocsSHField, value) != true)) {
                    this.CustomerDocsSHField = value;
                    this.RaisePropertyChanged("CustomerDocsSH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerFSPriceListTable CustomerFSPriceList {
            get {
                return this.CustomerFSPriceListField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFSPriceListField, value) != true)) {
                    this.CustomerFSPriceListField = value;
                    this.RaisePropertyChanged("CustomerFSPriceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerPriceLstTable CustomerPriceLst {
            get {
                return this.CustomerPriceLstField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPriceLstField, value) != true)) {
                    this.CustomerPriceLstField = value;
                    this.RaisePropertyChanged("CustomerPriceLst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.EntityGLCTable EntityGLC {
            get {
                return this.EntityGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityGLCField, value) != true)) {
                    this.EntityGLCField = value;
                    this.RaisePropertyChanged("EntityGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustCredTable GlbCustCred {
            get {
                return this.GlbCustCredField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCustCredField, value) != true)) {
                    this.GlbCustCredField = value;
                    this.RaisePropertyChanged("GlbCustCred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.MangCustTable MangCust {
            get {
                return this.MangCustField;
            }
            set {
                if ((object.ReferenceEquals(this.MangCustField, value) != true)) {
                    this.MangCustField = value;
                    this.RaisePropertyChanged("MangCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.NAMemberTable NAMember {
            get {
                return this.NAMemberField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMemberField, value) != true)) {
                    this.NAMemberField = value;
                    this.RaisePropertyChanged("NAMember");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.PECustWhldHistTable PECustWhldHist {
            get {
                return this.PECustWhldHistField;
            }
            set {
                if ((object.ReferenceEquals(this.PECustWhldHistField, value) != true)) {
                    this.PECustWhldHistField = value;
                    this.RaisePropertyChanged("PECustWhldHist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.PartnerTable Partner {
            get {
                return this.PartnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerField, value) != true)) {
                    this.PartnerField = value;
                    this.RaisePropertyChanged("Partner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToTable ShipTo {
            get {
                return this.ShipToField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToField, value) != true)) {
                    this.ShipToField = value;
                    this.RaisePropertyChanged("ShipTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToAttchTable ShipToAttch {
            get {
                return this.ShipToAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAttchField, value) != true)) {
                    this.ShipToAttchField = value;
                    this.RaisePropertyChanged("ShipToAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToDiscPriceLstTable ShipToDiscPriceLst {
            get {
                return this.ShipToDiscPriceLstField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToDiscPriceLstField, value) != true)) {
                    this.ShipToDiscPriceLstField = value;
                    this.RaisePropertyChanged("ShipToDiscPriceLst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToLabExpRateTable ShipToLabExpRate {
            get {
                return this.ShipToLabExpRateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToLabExpRateField, value) != true)) {
                    this.ShipToLabExpRateField = value;
                    this.RaisePropertyChanged("ShipToLabExpRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToMFBillTable ShipToMFBill {
            get {
                return this.ShipToMFBillField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToMFBillField, value) != true)) {
                    this.ShipToMFBillField = value;
                    this.RaisePropertyChanged("ShipToMFBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToPriceLstTable ShipToPriceLst {
            get {
                return this.ShipToPriceLstField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToPriceLstField, value) != true)) {
                    this.ShipToPriceLstField = value;
                    this.RaisePropertyChanged("ShipToPriceLst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToRestrictionTable ShipToRestriction {
            get {
                return this.ShipToRestrictionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToRestrictionField, value) != true)) {
                    this.ShipToRestrictionField = value;
                    this.RaisePropertyChanged("ShipToRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToSrchTable ShipToSrch {
            get {
                return this.ShipToSrchField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToSrchField, value) != true)) {
                    this.ShipToSrchField = value;
                    this.RaisePropertyChanged("ShipToSrch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToUPSEmlTable ShipToUPSEml {
            get {
                return this.ShipToUPSEmlField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToUPSEmlField, value) != true)) {
                    this.ShipToUPSEmlField = value;
                    this.RaisePropertyChanged("ShipToUPSEml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.TaxExemptTable TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtCustomerTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtCustomerTableset : EpicorConsole.Epicor.CustomerSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustBankTable CustBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustBillToTable CustBillToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustChildTable CustChildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustDfltDocTypeTable CustDfltDocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustICTable CustICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustLabExpRateTable CustLabExpRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustMFBillTable CustMFBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustMandateTable CustMandateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustRestrictionTable CustRestrictionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustUPSEmailTable CustUPSEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomCrdPoolTable CustomCrdPoolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerTable CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerAttchTable CustomerAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerDiscPriceLstTable CustomerDiscPriceLstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerDocsTable CustomerDocsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerDocsSHTable CustomerDocsSHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerFSPriceListTable CustomerFSPriceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerPriceLstTable CustomerPriceLstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.EntityGLCTable EntityGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.GlbCustCredTable GlbCustCredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.MangCustTable MangCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.NAMemberTable NAMemberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.PECustWhldHistTable PECustWhldHistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.PartnerTable PartnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToTable ShipToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToAttchTable ShipToAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToDiscPriceLstTable ShipToDiscPriceLstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToLabExpRateTable ShipToLabExpRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToMFBillTable ShipToMFBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToPriceLstTable ShipToPriceLstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToRestrictionTable ShipToRestrictionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToSrchTable ShipToSrchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToUPSEmlTable ShipToUPSEmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.TaxExemptTable TaxExemptField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustBankTable CustBank {
            get {
                return this.CustBankField;
            }
            set {
                if ((object.ReferenceEquals(this.CustBankField, value) != true)) {
                    this.CustBankField = value;
                    this.RaisePropertyChanged("CustBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustBillToTable CustBillTo {
            get {
                return this.CustBillToField;
            }
            set {
                if ((object.ReferenceEquals(this.CustBillToField, value) != true)) {
                    this.CustBillToField = value;
                    this.RaisePropertyChanged("CustBillTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustChildTable CustChild {
            get {
                return this.CustChildField;
            }
            set {
                if ((object.ReferenceEquals(this.CustChildField, value) != true)) {
                    this.CustChildField = value;
                    this.RaisePropertyChanged("CustChild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustDfltDocTypeTable CustDfltDocType {
            get {
                return this.CustDfltDocTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustDfltDocTypeField, value) != true)) {
                    this.CustDfltDocTypeField = value;
                    this.RaisePropertyChanged("CustDfltDocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustICTable CustIC {
            get {
                return this.CustICField;
            }
            set {
                if ((object.ReferenceEquals(this.CustICField, value) != true)) {
                    this.CustICField = value;
                    this.RaisePropertyChanged("CustIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustLabExpRateTable CustLabExpRate {
            get {
                return this.CustLabExpRateField;
            }
            set {
                if ((object.ReferenceEquals(this.CustLabExpRateField, value) != true)) {
                    this.CustLabExpRateField = value;
                    this.RaisePropertyChanged("CustLabExpRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustMFBillTable CustMFBill {
            get {
                return this.CustMFBillField;
            }
            set {
                if ((object.ReferenceEquals(this.CustMFBillField, value) != true)) {
                    this.CustMFBillField = value;
                    this.RaisePropertyChanged("CustMFBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustMandateTable CustMandate {
            get {
                return this.CustMandateField;
            }
            set {
                if ((object.ReferenceEquals(this.CustMandateField, value) != true)) {
                    this.CustMandateField = value;
                    this.RaisePropertyChanged("CustMandate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustRestrictionTable CustRestriction {
            get {
                return this.CustRestrictionField;
            }
            set {
                if ((object.ReferenceEquals(this.CustRestrictionField, value) != true)) {
                    this.CustRestrictionField = value;
                    this.RaisePropertyChanged("CustRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustUPSEmailTable CustUPSEmail {
            get {
                return this.CustUPSEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CustUPSEmailField, value) != true)) {
                    this.CustUPSEmailField = value;
                    this.RaisePropertyChanged("CustUPSEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomCrdPoolTable CustomCrdPool {
            get {
                return this.CustomCrdPoolField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomCrdPoolField, value) != true)) {
                    this.CustomCrdPoolField = value;
                    this.RaisePropertyChanged("CustomCrdPool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTable Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerAttchTable CustomerAttch {
            get {
                return this.CustomerAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAttchField, value) != true)) {
                    this.CustomerAttchField = value;
                    this.RaisePropertyChanged("CustomerAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerDiscPriceLstTable CustomerDiscPriceLst {
            get {
                return this.CustomerDiscPriceLstField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDiscPriceLstField, value) != true)) {
                    this.CustomerDiscPriceLstField = value;
                    this.RaisePropertyChanged("CustomerDiscPriceLst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerDocsTable CustomerDocs {
            get {
                return this.CustomerDocsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDocsField, value) != true)) {
                    this.CustomerDocsField = value;
                    this.RaisePropertyChanged("CustomerDocs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerDocsSHTable CustomerDocsSH {
            get {
                return this.CustomerDocsSHField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDocsSHField, value) != true)) {
                    this.CustomerDocsSHField = value;
                    this.RaisePropertyChanged("CustomerDocsSH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerFSPriceListTable CustomerFSPriceList {
            get {
                return this.CustomerFSPriceListField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFSPriceListField, value) != true)) {
                    this.CustomerFSPriceListField = value;
                    this.RaisePropertyChanged("CustomerFSPriceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerPriceLstTable CustomerPriceLst {
            get {
                return this.CustomerPriceLstField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPriceLstField, value) != true)) {
                    this.CustomerPriceLstField = value;
                    this.RaisePropertyChanged("CustomerPriceLst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.EntityGLCTable EntityGLC {
            get {
                return this.EntityGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityGLCField, value) != true)) {
                    this.EntityGLCField = value;
                    this.RaisePropertyChanged("EntityGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustCredTable GlbCustCred {
            get {
                return this.GlbCustCredField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCustCredField, value) != true)) {
                    this.GlbCustCredField = value;
                    this.RaisePropertyChanged("GlbCustCred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.MangCustTable MangCust {
            get {
                return this.MangCustField;
            }
            set {
                if ((object.ReferenceEquals(this.MangCustField, value) != true)) {
                    this.MangCustField = value;
                    this.RaisePropertyChanged("MangCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.NAMemberTable NAMember {
            get {
                return this.NAMemberField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMemberField, value) != true)) {
                    this.NAMemberField = value;
                    this.RaisePropertyChanged("NAMember");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.PECustWhldHistTable PECustWhldHist {
            get {
                return this.PECustWhldHistField;
            }
            set {
                if ((object.ReferenceEquals(this.PECustWhldHistField, value) != true)) {
                    this.PECustWhldHistField = value;
                    this.RaisePropertyChanged("PECustWhldHist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.PartnerTable Partner {
            get {
                return this.PartnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerField, value) != true)) {
                    this.PartnerField = value;
                    this.RaisePropertyChanged("Partner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToTable ShipTo {
            get {
                return this.ShipToField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToField, value) != true)) {
                    this.ShipToField = value;
                    this.RaisePropertyChanged("ShipTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToAttchTable ShipToAttch {
            get {
                return this.ShipToAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAttchField, value) != true)) {
                    this.ShipToAttchField = value;
                    this.RaisePropertyChanged("ShipToAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToDiscPriceLstTable ShipToDiscPriceLst {
            get {
                return this.ShipToDiscPriceLstField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToDiscPriceLstField, value) != true)) {
                    this.ShipToDiscPriceLstField = value;
                    this.RaisePropertyChanged("ShipToDiscPriceLst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToLabExpRateTable ShipToLabExpRate {
            get {
                return this.ShipToLabExpRateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToLabExpRateField, value) != true)) {
                    this.ShipToLabExpRateField = value;
                    this.RaisePropertyChanged("ShipToLabExpRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToMFBillTable ShipToMFBill {
            get {
                return this.ShipToMFBillField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToMFBillField, value) != true)) {
                    this.ShipToMFBillField = value;
                    this.RaisePropertyChanged("ShipToMFBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToPriceLstTable ShipToPriceLst {
            get {
                return this.ShipToPriceLstField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToPriceLstField, value) != true)) {
                    this.ShipToPriceLstField = value;
                    this.RaisePropertyChanged("ShipToPriceLst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToRestrictionTable ShipToRestriction {
            get {
                return this.ShipToRestrictionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToRestrictionField, value) != true)) {
                    this.ShipToRestrictionField = value;
                    this.RaisePropertyChanged("ShipToRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToSrchTable ShipToSrch {
            get {
                return this.ShipToSrchField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToSrchField, value) != true)) {
                    this.ShipToSrchField = value;
                    this.RaisePropertyChanged("ShipToSrch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToUPSEmlTable ShipToUPSEml {
            get {
                return this.ShipToUPSEmlField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToUPSEmlField, value) != true)) {
                    this.ShipToUPSEmlField = value;
                    this.RaisePropertyChanged("ShipToUPSEml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.TaxExemptTable TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCAddrValidationTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ETCAddrValidationTableset : EpicorConsole.Epicor.CustomerSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ETCAddressTable ETCAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ETCMessageTable ETCMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ETCAddressTable ETCAddress {
            get {
                return this.ETCAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ETCAddressField, value) != true)) {
                    this.ETCAddressField = value;
                    this.RaisePropertyChanged("ETCAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ETCMessageTable ETCMessage {
            get {
                return this.ETCMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ETCMessageField, value) != true)) {
                    this.ETCMessageField = value;
                    this.RaisePropertyChanged("ETCMessage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillToRefsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class BillToRefsTableset : EpicorConsole.Epicor.CustomerSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.BillToRefsTable BillToRefsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.BillToRefsTable BillToRefs {
            get {
                return this.BillToRefsField;
            }
            set {
                if ((object.ReferenceEquals(this.BillToRefsField, value) != true)) {
                    this.BillToRefsField = value;
                    this.RaisePropertyChanged("BillToRefs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbCustomerTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class GlbCustomerTableset : EpicorConsole.Epicor.CustomerSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.GlbCustBillToTable GlbCustBillToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.GlbCustomerTable GlbCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.GlbShipToTable GlbShipToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustBillToTable GlbCustBillTo {
            get {
                return this.GlbCustBillToField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCustBillToField, value) != true)) {
                    this.GlbCustBillToField = value;
                    this.RaisePropertyChanged("GlbCustBillTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTable GlbCustomer {
            get {
                return this.GlbCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCustomerField, value) != true)) {
                    this.GlbCustomerField = value;
                    this.RaisePropertyChanged("GlbCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.GlbShipToTable GlbShipTo {
            get {
                return this.GlbShipToField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbShipToField, value) != true)) {
                    this.GlbShipToField = value;
                    this.RaisePropertyChanged("GlbShipTo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : EpicorConsole.Epicor.CustomerSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerListTableset : EpicorConsole.Epicor.CustomerSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerListTable CustomerListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerListTable CustomerList {
            get {
                return this.CustomerListField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerListField, value) != true)) {
                    this.CustomerListField = value;
                    this.RaisePropertyChanged("CustomerList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustomerListRow")]
    [System.SerializableAttribute()]
    public class CustomerListTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustomerListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustBankTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustBankRow")]
    [System.SerializableAttribute()]
    public class CustBankTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustBankRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustBillToTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustBillToRow")]
    [System.SerializableAttribute()]
    public class CustBillToTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustBillToRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustChildTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustChildRow")]
    [System.SerializableAttribute()]
    public class CustChildTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustChildRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustDfltDocTypeTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustDfltDocTypeRow")]
    [System.SerializableAttribute()]
    public class CustDfltDocTypeTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustDfltDocTypeRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustICTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustICRow")]
    [System.SerializableAttribute()]
    public class CustICTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustICRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustLabExpRateTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustLabExpRateRow")]
    [System.SerializableAttribute()]
    public class CustLabExpRateTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustLabExpRateRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustMFBillTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustMFBillRow")]
    [System.SerializableAttribute()]
    public class CustMFBillTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustMFBillRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustMandateTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustMandateRow")]
    [System.SerializableAttribute()]
    public class CustMandateTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustMandateRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustRestrictionTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustRestrictionRow")]
    [System.SerializableAttribute()]
    public class CustRestrictionTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustRestrictionRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustUPSEmailTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustUPSEmailRow")]
    [System.SerializableAttribute()]
    public class CustUPSEmailTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustUPSEmailRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomCrdPoolTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustomCrdPoolRow")]
    [System.SerializableAttribute()]
    public class CustomCrdPoolTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustomCrdPoolRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustomerRow")]
    [System.SerializableAttribute()]
    public class CustomerTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustomerRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustomerAttchRow")]
    [System.SerializableAttribute()]
    public class CustomerAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustomerAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerDiscPriceLstTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustomerDiscPriceLstRow")]
    [System.SerializableAttribute()]
    public class CustomerDiscPriceLstTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustomerDiscPriceLstRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerDocsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustomerDocsRow")]
    [System.SerializableAttribute()]
    public class CustomerDocsTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustomerDocsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerDocsSHTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustomerDocsSHRow")]
    [System.SerializableAttribute()]
    public class CustomerDocsSHTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustomerDocsSHRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerFSPriceListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustomerFSPriceListRow")]
    [System.SerializableAttribute()]
    public class CustomerFSPriceListTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustomerFSPriceListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerPriceLstTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustomerPriceLstRow")]
    [System.SerializableAttribute()]
    public class CustomerPriceLstTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.CustomerPriceLstRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EntityGLCTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EntityGLCRow")]
    [System.SerializableAttribute()]
    public class EntityGLCTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.EntityGLCRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="GlbCustCredTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="GlbCustCredRow")]
    [System.SerializableAttribute()]
    public class GlbCustCredTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.GlbCustCredRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MangCustTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="MangCustRow")]
    [System.SerializableAttribute()]
    public class MangCustTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.MangCustRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="NAMemberTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="NAMemberRow")]
    [System.SerializableAttribute()]
    public class NAMemberTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.NAMemberRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PECustWhldHistTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PECustWhldHistRow")]
    [System.SerializableAttribute()]
    public class PECustWhldHistTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.PECustWhldHistRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartnerTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartnerRow")]
    [System.SerializableAttribute()]
    public class PartnerTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.PartnerRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipToTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipToRow")]
    [System.SerializableAttribute()]
    public class ShipToTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ShipToRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipToAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipToAttchRow")]
    [System.SerializableAttribute()]
    public class ShipToAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ShipToAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipToDiscPriceLstTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipToDiscPriceLstRow")]
    [System.SerializableAttribute()]
    public class ShipToDiscPriceLstTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ShipToDiscPriceLstRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipToLabExpRateTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipToLabExpRateRow")]
    [System.SerializableAttribute()]
    public class ShipToLabExpRateTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ShipToLabExpRateRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipToMFBillTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipToMFBillRow")]
    [System.SerializableAttribute()]
    public class ShipToMFBillTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ShipToMFBillRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipToPriceLstTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipToPriceLstRow")]
    [System.SerializableAttribute()]
    public class ShipToPriceLstTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ShipToPriceLstRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipToRestrictionTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipToRestrictionRow")]
    [System.SerializableAttribute()]
    public class ShipToRestrictionTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ShipToRestrictionRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipToSrchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipToSrchRow")]
    [System.SerializableAttribute()]
    public class ShipToSrchTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ShipToSrchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipToUPSEmlTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipToUPSEmlRow")]
    [System.SerializableAttribute()]
    public class ShipToUPSEmlTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ShipToUPSEmlRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TaxExemptTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="TaxExemptRow")]
    [System.SerializableAttribute()]
    public class TaxExemptTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.TaxExemptRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustBankRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustBankRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AgreeExpDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgreeRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowAsAltRemitToBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankBranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankBranchCodeDescBankBranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankBranchCodeDescDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankPersonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankRegionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustBankRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrespAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IBANCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalBICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXCURPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOnAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PMUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayMethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PayMethodSummarizePerCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayMethodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransPersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransPersonName2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransPersonName3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransPersonName4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransPersonName5Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AgreeExpDate {
            get {
                return this.AgreeExpDateField;
            }
            set {
                if ((this.AgreeExpDateField.Equals(value) != true)) {
                    this.AgreeExpDateField = value;
                    this.RaisePropertyChanged("AgreeExpDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgreeRef {
            get {
                return this.AgreeRefField;
            }
            set {
                if ((object.ReferenceEquals(this.AgreeRefField, value) != true)) {
                    this.AgreeRefField = value;
                    this.RaisePropertyChanged("AgreeRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAsAltRemitToBank {
            get {
                return this.AllowAsAltRemitToBankField;
            }
            set {
                if ((this.AllowAsAltRemitToBankField.Equals(value) != true)) {
                    this.AllowAsAltRemitToBankField = value;
                    this.RaisePropertyChanged("AllowAsAltRemitToBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctNumber {
            get {
                return this.BankAcctNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctNumberField, value) != true)) {
                    this.BankAcctNumberField = value;
                    this.RaisePropertyChanged("BankAcctNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankBranchCode {
            get {
                return this.BankBranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankBranchCodeField, value) != true)) {
                    this.BankBranchCodeField = value;
                    this.RaisePropertyChanged("BankBranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankBranchCodeDescBankBranchCode {
            get {
                return this.BankBranchCodeDescBankBranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankBranchCodeDescBankBranchCodeField, value) != true)) {
                    this.BankBranchCodeDescBankBranchCodeField = value;
                    this.RaisePropertyChanged("BankBranchCodeDescBankBranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankBranchCodeDescDescription {
            get {
                return this.BankBranchCodeDescDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BankBranchCodeDescDescriptionField, value) != true)) {
                    this.BankBranchCodeDescDescriptionField = value;
                    this.RaisePropertyChanged("BankBranchCodeDescDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankID {
            get {
                return this.BankIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankIDField, value) != true)) {
                    this.BankIDField = value;
                    this.RaisePropertyChanged("BankID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankIdentifier {
            get {
                return this.BankIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.BankIdentifierField, value) != true)) {
                    this.BankIdentifierField = value;
                    this.RaisePropertyChanged("BankIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankName {
            get {
                return this.BankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNameField, value) != true)) {
                    this.BankNameField = value;
                    this.RaisePropertyChanged("BankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankPersonCode {
            get {
                return this.BankPersonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankPersonCodeField, value) != true)) {
                    this.BankPersonCodeField = value;
                    this.RaisePropertyChanged("BankPersonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankRegionType {
            get {
                return this.BankRegionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankRegionTypeField, value) != true)) {
                    this.BankRegionTypeField = value;
                    this.RaisePropertyChanged("BankRegionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustBankRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrespAccount {
            get {
                return this.CorrespAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrespAccountField, value) != true)) {
                    this.CorrespAccountField = value;
                    this.RaisePropertyChanged("CorrespAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Country {
            get {
                return this.CountryField;
            }
            set {
                if ((this.CountryField.Equals(value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IBANCode {
            get {
                return this.IBANCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IBANCodeField, value) != true)) {
                    this.IBANCodeField = value;
                    this.RaisePropertyChanged("IBANCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalName {
            get {
                return this.LegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNameField, value) != true)) {
                    this.LegalNameField = value;
                    this.RaisePropertyChanged("LegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalBIC {
            get {
                return this.LocalBICField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalBICField, value) != true)) {
                    this.LocalBICField = value;
                    this.RaisePropertyChanged("LocalBIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXCURP {
            get {
                return this.MXCURPField;
            }
            set {
                if ((object.ReferenceEquals(this.MXCURPField, value) != true)) {
                    this.MXCURPField = value;
                    this.RaisePropertyChanged("MXCURP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOnAccount {
            get {
                return this.NameOnAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOnAccountField, value) != true)) {
                    this.NameOnAccountField = value;
                    this.RaisePropertyChanged("NameOnAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PMUID {
            get {
                return this.PMUIDField;
            }
            set {
                if ((this.PMUIDField.Equals(value) != true)) {
                    this.PMUIDField = value;
                    this.RaisePropertyChanged("PMUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayMethodName {
            get {
                return this.PayMethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayMethodNameField, value) != true)) {
                    this.PayMethodNameField = value;
                    this.RaisePropertyChanged("PayMethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PayMethodSummarizePerCustomer {
            get {
                return this.PayMethodSummarizePerCustomerField;
            }
            set {
                if ((this.PayMethodSummarizePerCustomerField.Equals(value) != true)) {
                    this.PayMethodSummarizePerCustomerField = value;
                    this.RaisePropertyChanged("PayMethodSummarizePerCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayMethodType {
            get {
                return this.PayMethodTypeField;
            }
            set {
                if ((this.PayMethodTypeField.Equals(value) != true)) {
                    this.PayMethodTypeField = value;
                    this.RaisePropertyChanged("PayMethodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrimaryBank {
            get {
                return this.PrimaryBankField;
            }
            set {
                if ((this.PrimaryBankField.Equals(value) != true)) {
                    this.PrimaryBankField = value;
                    this.RaisePropertyChanged("PrimaryBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransPersonName {
            get {
                return this.TransPersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TransPersonNameField, value) != true)) {
                    this.TransPersonNameField = value;
                    this.RaisePropertyChanged("TransPersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransPersonName2 {
            get {
                return this.TransPersonName2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TransPersonName2Field, value) != true)) {
                    this.TransPersonName2Field = value;
                    this.RaisePropertyChanged("TransPersonName2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransPersonName3 {
            get {
                return this.TransPersonName3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TransPersonName3Field, value) != true)) {
                    this.TransPersonName3Field = value;
                    this.RaisePropertyChanged("TransPersonName3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransPersonName4 {
            get {
                return this.TransPersonName4Field;
            }
            set {
                if ((object.ReferenceEquals(this.TransPersonName4Field, value) != true)) {
                    this.TransPersonName4Field = value;
                    this.RaisePropertyChanged("TransPersonName4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransPersonName5 {
            get {
                return this.TransPersonName5Field;
            }
            set {
                if ((object.ReferenceEquals(this.TransPersonName5Field, value) != true)) {
                    this.TransPersonName5Field = value;
                    this.RaisePropertyChanged("TransPersonName5");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustBillToRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustChildRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustDfltDocTypeRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustICRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustLabExpRateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustMFBillRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustMandateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustRestrictionRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustUPSEmailRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomCrdPoolRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerDiscPriceLstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerDocsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerDocsSHRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerFSPriceListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerPriceLstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EntityGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.GlbCustCredRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.MangCustRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.NAMemberRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.PECustWhldHistRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.PartnerRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToDiscPriceLstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToLabExpRateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToMFBillRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToPriceLstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToRestrictionRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToSrchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToUPSEmlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.TaxExemptRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ETCAddressRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ETCMessageRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.BillToRefsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.GlbCustBillToRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.GlbCustomerRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.GlbShipToRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustBankRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustBillToRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustChildRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustDfltDocTypeRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustICRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustLabExpRateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustMFBillRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustMandateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustRestrictionRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustUPSEmailRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomCrdPoolRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerDiscPriceLstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerDocsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerDocsSHRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerFSPriceListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustomerPriceLstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EntityGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.GlbCustCredRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.MangCustRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.NAMemberRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.PECustWhldHistRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.PartnerRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToDiscPriceLstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToLabExpRateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToMFBillRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToPriceLstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToRestrictionRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToSrchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ShipToUPSEmlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.TaxExemptRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ETCAddressRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.ETCMessageRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.BillToRefsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.GlbCustBillToRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.GlbCustomerRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.GlbShipToRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.CustBankRow))]
    public partial class IceRow : EpicorConsole.Epicor.CustomerSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerListRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowShipTo3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustGrupGroupDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustPartOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritoryTerritoryDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowShipTo3 {
            get {
                return this.AllowShipTo3Field;
            }
            set {
                if ((this.AllowShipTo3Field.Equals(value) != true)) {
                    this.AllowShipTo3Field = value;
                    this.RaisePropertyChanged("AllowShipTo3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryNum {
            get {
                return this.CountryNumField;
            }
            set {
                if ((this.CountryNumField.Equals(value) != true)) {
                    this.CountryNumField = value;
                    this.RaisePropertyChanged("CountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditHold {
            get {
                return this.CreditHoldField;
            }
            set {
                if ((this.CreditHoldField.Equals(value) != true)) {
                    this.CreditHoldField = value;
                    this.RaisePropertyChanged("CreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustGrupGroupDesc {
            get {
                return this.CustGrupGroupDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CustGrupGroupDescField, value) != true)) {
                    this.CustGrupGroupDescField = value;
                    this.RaisePropertyChanged("CustGrupGroupDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustPartOpts {
            get {
                return this.CustPartOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustPartOptsField, value) != true)) {
                    this.CustPartOptsField = value;
                    this.RaisePropertyChanged("CustPartOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasBank {
            get {
                return this.HasBankField;
            }
            set {
                if ((this.HasBankField.Equals(value) != true)) {
                    this.HasBankField = value;
                    this.RaisePropertyChanged("HasBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoContact {
            get {
                return this.NoContactField;
            }
            set {
                if ((this.NoContactField.Equals(value) != true)) {
                    this.NoContactField = value;
                    this.RaisePropertyChanged("NoContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNum {
            get {
                return this.PhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumField, value) != true)) {
                    this.PhoneNumField = value;
                    this.RaisePropertyChanged("PhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCode {
            get {
                return this.TermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeField, value) != true)) {
                    this.TermsCodeField = value;
                    this.RaisePropertyChanged("TermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritoryID {
            get {
                return this.TerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryIDField, value) != true)) {
                    this.TerritoryIDField = value;
                    this.RaisePropertyChanged("TerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritoryTerritoryDesc {
            get {
                return this.TerritoryTerritoryDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryTerritoryDescField, value) != true)) {
                    this.TerritoryTerritoryDescField = value;
                    this.RaisePropertyChanged("TerritoryTerritoryDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustBillToRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustBillToRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTConPrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BTCreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTLegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustBillToRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultBillToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgRegCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddrList {
            get {
                return this.BTAddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddrListField, value) != true)) {
                    this.BTAddrListField = value;
                    this.RaisePropertyChanged("BTAddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddress1 {
            get {
                return this.BTAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddress1Field, value) != true)) {
                    this.BTAddress1Field = value;
                    this.RaisePropertyChanged("BTAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddress2 {
            get {
                return this.BTAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddress2Field, value) != true)) {
                    this.BTAddress2Field = value;
                    this.RaisePropertyChanged("BTAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddress3 {
            get {
                return this.BTAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddress3Field, value) != true)) {
                    this.BTAddress3Field = value;
                    this.RaisePropertyChanged("BTAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCity {
            get {
                return this.BTCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCityField, value) != true)) {
                    this.BTCityField = value;
                    this.RaisePropertyChanged("BTCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTConPrc {
            get {
                return this.BTConPrcField;
            }
            set {
                if ((this.BTConPrcField.Equals(value) != true)) {
                    this.BTConPrcField = value;
                    this.RaisePropertyChanged("BTConPrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTContactName {
            get {
                return this.BTContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTContactNameField, value) != true)) {
                    this.BTContactNameField = value;
                    this.RaisePropertyChanged("BTContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCountry {
            get {
                return this.BTCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCountryField, value) != true)) {
                    this.BTCountryField = value;
                    this.RaisePropertyChanged("BTCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BTCreditHold {
            get {
                return this.BTCreditHoldField;
            }
            set {
                if ((this.BTCreditHoldField.Equals(value) != true)) {
                    this.BTCreditHoldField = value;
                    this.RaisePropertyChanged("BTCreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTFaxNum {
            get {
                return this.BTFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTFaxNumField, value) != true)) {
                    this.BTFaxNumField = value;
                    this.RaisePropertyChanged("BTFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTLegalName {
            get {
                return this.BTLegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTLegalNameField, value) != true)) {
                    this.BTLegalNameField = value;
                    this.RaisePropertyChanged("BTLegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTPhoneNum {
            get {
                return this.BTPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTPhoneNumField, value) != true)) {
                    this.BTPhoneNumField = value;
                    this.RaisePropertyChanged("BTPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTState {
            get {
                return this.BTStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BTStateField, value) != true)) {
                    this.BTStateField = value;
                    this.RaisePropertyChanged("BTState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTZip {
            get {
                return this.BTZipField;
            }
            set {
                if ((object.ReferenceEquals(this.BTZipField, value) != true)) {
                    this.BTZipField = value;
                    this.RaisePropertyChanged("BTZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustBillToRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultBillTo {
            get {
                return this.DefaultBillToField;
            }
            set {
                if ((this.DefaultBillToField.Equals(value) != true)) {
                    this.DefaultBillToField = value;
                    this.RaisePropertyChanged("DefaultBillTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbFlag {
            get {
                return this.GlbFlagField;
            }
            set {
                if ((this.GlbFlagField.Equals(value) != true)) {
                    this.GlbFlagField = value;
                    this.RaisePropertyChanged("GlbFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbLink {
            get {
                return this.GlbLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbLinkField, value) != true)) {
                    this.GlbLinkField = value;
                    this.RaisePropertyChanged("GlbLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoiceAddress {
            get {
                return this.InvoiceAddressField;
            }
            set {
                if ((this.InvoiceAddressField.Equals(value) != true)) {
                    this.InvoiceAddressField = value;
                    this.RaisePropertyChanged("InvoiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgRegCode {
            get {
                return this.OrgRegCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgRegCodeField, value) != true)) {
                    this.OrgRegCodeField = value;
                    this.RaisePropertyChanged("OrgRegCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankCode {
            get {
                return this.OurBankCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankCodeField, value) != true)) {
                    this.OurBankCodeField = value;
                    this.RaisePropertyChanged("OurBankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegReason {
            get {
                return this.TaxRegReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegReasonField, value) != true)) {
                    this.TaxRegReasonField = value;
                    this.RaisePropertyChanged("TaxRegReason");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustChildRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustChildRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustChildRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustChildRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentCustNum {
            get {
                return this.ParentCustNumField;
            }
            set {
                if ((this.ParentCustNumField.Equals(value) != true)) {
                    this.ParentCustNumField = value;
                    this.RaisePropertyChanged("ParentCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustDfltDocTypeRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustDfltDocTypeRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustDfltDocTypeRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvcTypeTranDocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustDfltDocTypeRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvcTypeTranDoc {
            get {
                return this.InvcTypeTranDocField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcTypeTranDocField, value) != true)) {
                    this.InvcTypeTranDocField = value;
                    this.RaisePropertyChanged("InvcTypeTranDoc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceType {
            get {
                return this.InvoiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeField, value) != true)) {
                    this.InvoiceTypeField = value;
                    this.RaisePropertyChanged("InvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeDescription {
            get {
                return this.TranDocTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeDescriptionField, value) != true)) {
                    this.TranDocTypeDescriptionField = value;
                    this.RaisePropertyChanged("TranDocTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustICRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustICRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustICRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustICRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBTName {
            get {
                return this.CustomerBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerBTNameField, value) != true)) {
                    this.CustomerBTNameField = value;
                    this.RaisePropertyChanged("CustomerBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICCode {
            get {
                return this.ICCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ICCodeField, value) != true)) {
                    this.ICCodeField = value;
                    this.RaisePropertyChanged("ICCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICCodeDescription {
            get {
                return this.ICCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ICCodeDescriptionField, value) != true)) {
                    this.ICCodeDescriptionField = value;
                    this.RaisePropertyChanged("ICCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICTypeDescription {
            get {
                return this.ICTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ICTypeDescriptionField, value) != true)) {
                    this.ICTypeDescriptionField = value;
                    this.RaisePropertyChanged("ICTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICTypeID {
            get {
                return this.ICTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ICTypeIDField, value) != true)) {
                    this.ICTypeIDField = value;
                    this.RaisePropertyChanged("ICTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Primary {
            get {
                return this.PrimaryField;
            }
            set {
                if ((this.PrimaryField.Equals(value) != true)) {
                    this.PrimaryField = value;
                    this.RaisePropertyChanged("Primary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustLabExpRateRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustLabExpRateRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustLabExpRateRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RateMultiplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustLabExpRateRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBTName {
            get {
                return this.CustomerBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerBTNameField, value) != true)) {
                    this.CustomerBTNameField = value;
                    this.RaisePropertyChanged("CustomerBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseCode {
            get {
                return this.ExpenseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseCodeField, value) != true)) {
                    this.ExpenseCodeField = value;
                    this.RaisePropertyChanged("ExpenseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedRate {
            get {
                return this.FixedRateField;
            }
            set {
                if ((this.FixedRateField.Equals(value) != true)) {
                    this.FixedRateField = value;
                    this.RaisePropertyChanged("FixedRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RateMultiplier {
            get {
                return this.RateMultiplierField;
            }
            set {
                if ((this.RateMultiplierField.Equals(value) != true)) {
                    this.RateMultiplierField = value;
                    this.RaisePropertyChanged("RateMultiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RateType {
            get {
                return this.RateTypeField;
            }
            set {
                if ((this.RateTypeField.Equals(value) != true)) {
                    this.RateTypeField = value;
                    this.RaisePropertyChanged("RateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustMFBillRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustMFBillRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustMFBillRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayBTCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustMFBillRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayAccount {
            get {
                return this.PayAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PayAccountField, value) != true)) {
                    this.PayAccountField = value;
                    this.RaisePropertyChanged("PayAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress1 {
            get {
                return this.PayBTAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress1Field, value) != true)) {
                    this.PayBTAddress1Field = value;
                    this.RaisePropertyChanged("PayBTAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress2 {
            get {
                return this.PayBTAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress2Field, value) != true)) {
                    this.PayBTAddress2Field = value;
                    this.RaisePropertyChanged("PayBTAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress3 {
            get {
                return this.PayBTAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress3Field, value) != true)) {
                    this.PayBTAddress3Field = value;
                    this.RaisePropertyChanged("PayBTAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCity {
            get {
                return this.PayBTCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCityField, value) != true)) {
                    this.PayBTCityField = value;
                    this.RaisePropertyChanged("PayBTCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCountry {
            get {
                return this.PayBTCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCountryField, value) != true)) {
                    this.PayBTCountryField = value;
                    this.RaisePropertyChanged("PayBTCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayBTCountryNum {
            get {
                return this.PayBTCountryNumField;
            }
            set {
                if ((this.PayBTCountryNumField.Equals(value) != true)) {
                    this.PayBTCountryNumField = value;
                    this.RaisePropertyChanged("PayBTCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTFlag {
            get {
                return this.PayBTFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTFlagField, value) != true)) {
                    this.PayBTFlagField = value;
                    this.RaisePropertyChanged("PayBTFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTPhone {
            get {
                return this.PayBTPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTPhoneField, value) != true)) {
                    this.PayBTPhoneField = value;
                    this.RaisePropertyChanged("PayBTPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTState {
            get {
                return this.PayBTStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTStateField, value) != true)) {
                    this.PayBTStateField = value;
                    this.RaisePropertyChanged("PayBTState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTZip {
            get {
                return this.PayBTZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTZipField, value) != true)) {
                    this.PayBTZipField = value;
                    this.RaisePropertyChanged("PayBTZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayTypeDesc {
            get {
                return this.PayTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PayTypeDescField, value) != true)) {
                    this.PayTypeDescField = value;
                    this.RaisePropertyChanged("PayTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustMandateRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustMandateRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctBankIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctBankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctIBANCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctLegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustMandateRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditorCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorRefPartyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorRefPartyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustBankBankIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustBankIBANCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DebtorCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorRefPartyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorRefPartyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstUseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastUseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MandateCanBeDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MandateReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MandateReferenceExtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MandateStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MandateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrintedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrintedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SignedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignedPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UndContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidToField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctBankIdentifier {
            get {
                return this.BankAcctBankIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctBankIdentifierField, value) != true)) {
                    this.BankAcctBankIdentifierField = value;
                    this.RaisePropertyChanged("BankAcctBankIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctBankName {
            get {
                return this.BankAcctBankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctBankNameField, value) != true)) {
                    this.BankAcctBankNameField = value;
                    this.RaisePropertyChanged("BankAcctBankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctDescription {
            get {
                return this.BankAcctDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctDescriptionField, value) != true)) {
                    this.BankAcctDescriptionField = value;
                    this.RaisePropertyChanged("BankAcctDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctIBANCode {
            get {
                return this.BankAcctIBANCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctIBANCodeField, value) != true)) {
                    this.BankAcctIBANCodeField = value;
                    this.RaisePropertyChanged("BankAcctIBANCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctID {
            get {
                return this.BankAcctIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctIDField, value) != true)) {
                    this.BankAcctIDField = value;
                    this.RaisePropertyChanged("BankAcctID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctLegalName {
            get {
                return this.BankAcctLegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctLegalNameField, value) != true)) {
                    this.BankAcctLegalNameField = value;
                    this.RaisePropertyChanged("BankAcctLegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustMandateRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorAddress1 {
            get {
                return this.CreditorAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorAddress1Field, value) != true)) {
                    this.CreditorAddress1Field = value;
                    this.RaisePropertyChanged("CreditorAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorAddress2 {
            get {
                return this.CreditorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorAddress2Field, value) != true)) {
                    this.CreditorAddress2Field = value;
                    this.RaisePropertyChanged("CreditorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorAddress3 {
            get {
                return this.CreditorAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorAddress3Field, value) != true)) {
                    this.CreditorAddress3Field = value;
                    this.RaisePropertyChanged("CreditorAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorCity {
            get {
                return this.CreditorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorCityField, value) != true)) {
                    this.CreditorCityField = value;
                    this.RaisePropertyChanged("CreditorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditorCountryNum {
            get {
                return this.CreditorCountryNumField;
            }
            set {
                if ((this.CreditorCountryNumField.Equals(value) != true)) {
                    this.CreditorCountryNumField = value;
                    this.RaisePropertyChanged("CreditorCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorID {
            get {
                return this.CreditorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorIDField, value) != true)) {
                    this.CreditorIDField = value;
                    this.RaisePropertyChanged("CreditorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorName {
            get {
                return this.CreditorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorNameField, value) != true)) {
                    this.CreditorNameField = value;
                    this.RaisePropertyChanged("CreditorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorRefPartyID {
            get {
                return this.CreditorRefPartyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorRefPartyIDField, value) != true)) {
                    this.CreditorRefPartyIDField = value;
                    this.RaisePropertyChanged("CreditorRefPartyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorRefPartyName {
            get {
                return this.CreditorRefPartyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorRefPartyNameField, value) != true)) {
                    this.CreditorRefPartyNameField = value;
                    this.RaisePropertyChanged("CreditorRefPartyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorZip {
            get {
                return this.CreditorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorZipField, value) != true)) {
                    this.CreditorZipField = value;
                    this.RaisePropertyChanged("CreditorZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustBankBankIdentifier {
            get {
                return this.CustBankBankIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.CustBankBankIdentifierField, value) != true)) {
                    this.CustBankBankIdentifierField = value;
                    this.RaisePropertyChanged("CustBankBankIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustBankIBANCode {
            get {
                return this.CustBankIBANCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustBankIBANCodeField, value) != true)) {
                    this.CustBankIBANCodeField = value;
                    this.RaisePropertyChanged("CustBankIBANCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorAddress1 {
            get {
                return this.DebtorAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorAddress1Field, value) != true)) {
                    this.DebtorAddress1Field = value;
                    this.RaisePropertyChanged("DebtorAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorAddress2 {
            get {
                return this.DebtorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorAddress2Field, value) != true)) {
                    this.DebtorAddress2Field = value;
                    this.RaisePropertyChanged("DebtorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorAddress3 {
            get {
                return this.DebtorAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorAddress3Field, value) != true)) {
                    this.DebtorAddress3Field = value;
                    this.RaisePropertyChanged("DebtorAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorCity {
            get {
                return this.DebtorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorCityField, value) != true)) {
                    this.DebtorCityField = value;
                    this.RaisePropertyChanged("DebtorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DebtorCountryNum {
            get {
                return this.DebtorCountryNumField;
            }
            set {
                if ((this.DebtorCountryNumField.Equals(value) != true)) {
                    this.DebtorCountryNumField = value;
                    this.RaisePropertyChanged("DebtorCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorName {
            get {
                return this.DebtorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorNameField, value) != true)) {
                    this.DebtorNameField = value;
                    this.RaisePropertyChanged("DebtorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorRefPartyID {
            get {
                return this.DebtorRefPartyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorRefPartyIDField, value) != true)) {
                    this.DebtorRefPartyIDField = value;
                    this.RaisePropertyChanged("DebtorRefPartyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorRefPartyName {
            get {
                return this.DebtorRefPartyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorRefPartyNameField, value) != true)) {
                    this.DebtorRefPartyNameField = value;
                    this.RaisePropertyChanged("DebtorRefPartyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorZip {
            get {
                return this.DebtorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorZipField, value) != true)) {
                    this.DebtorZipField = value;
                    this.RaisePropertyChanged("DebtorZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstUseDate {
            get {
                return this.FirstUseDateField;
            }
            set {
                if ((this.FirstUseDateField.Equals(value) != true)) {
                    this.FirstUseDateField = value;
                    this.RaisePropertyChanged("FirstUseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastUseDate {
            get {
                return this.LastUseDateField;
            }
            set {
                if ((this.LastUseDateField.Equals(value) != true)) {
                    this.LastUseDateField = value;
                    this.RaisePropertyChanged("LastUseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MandateCanBeDeleted {
            get {
                return this.MandateCanBeDeletedField;
            }
            set {
                if ((this.MandateCanBeDeletedField.Equals(value) != true)) {
                    this.MandateCanBeDeletedField = value;
                    this.RaisePropertyChanged("MandateCanBeDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MandateReference {
            get {
                return this.MandateReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.MandateReferenceField, value) != true)) {
                    this.MandateReferenceField = value;
                    this.RaisePropertyChanged("MandateReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MandateReferenceExt {
            get {
                return this.MandateReferenceExtField;
            }
            set {
                if ((object.ReferenceEquals(this.MandateReferenceExtField, value) != true)) {
                    this.MandateReferenceExtField = value;
                    this.RaisePropertyChanged("MandateReferenceExt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MandateStatus {
            get {
                return this.MandateStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MandateStatusField, value) != true)) {
                    this.MandateStatusField = value;
                    this.RaisePropertyChanged("MandateStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MandateType {
            get {
                return this.MandateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MandateTypeField, value) != true)) {
                    this.MandateTypeField = value;
                    this.RaisePropertyChanged("MandateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeField, value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintedBy {
            get {
                return this.PrintedByField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintedByField, value) != true)) {
                    this.PrintedByField = value;
                    this.RaisePropertyChanged("PrintedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrintedDate {
            get {
                return this.PrintedDateField;
            }
            set {
                if ((this.PrintedDateField.Equals(value) != true)) {
                    this.PrintedDateField = value;
                    this.RaisePropertyChanged("PrintedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignedBy {
            get {
                return this.SignedByField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedByField, value) != true)) {
                    this.SignedByField = value;
                    this.RaisePropertyChanged("SignedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SignedDate {
            get {
                return this.SignedDateField;
            }
            set {
                if ((this.SignedDateField.Equals(value) != true)) {
                    this.SignedDateField = value;
                    this.RaisePropertyChanged("SignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignedPlace {
            get {
                return this.SignedPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedPlaceField, value) != true)) {
                    this.SignedPlaceField = value;
                    this.RaisePropertyChanged("SignedPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UndContractID {
            get {
                return this.UndContractIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UndContractIDField, value) != true)) {
                    this.UndContractIDField = value;
                    this.RaisePropertyChanged("UndContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustRestrictionRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustRestrictionRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustRestrictionRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustRestrictionRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionTypeDescription {
            get {
                return this.RestrictionTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionTypeDescriptionField, value) != true)) {
                    this.RestrictionTypeDescriptionField = value;
                    this.RaisePropertyChanged("RestrictionTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionTypeID {
            get {
                return this.RestrictionTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionTypeIDField, value) != true)) {
                    this.RestrictionTypeIDField = value;
                    this.RaisePropertyChanged("RestrictionTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustUPSEmailRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustUPSEmailRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustUPSEmailRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeliveryNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FailureNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipmentNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UPSQVSeqField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustUPSEmailRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeliveryNotify {
            get {
                return this.DeliveryNotifyField;
            }
            set {
                if ((this.DeliveryNotifyField.Equals(value) != true)) {
                    this.DeliveryNotifyField = value;
                    this.RaisePropertyChanged("DeliveryNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableQuantumView {
            get {
                return this.EnableQuantumViewField;
            }
            set {
                if ((this.EnableQuantumViewField.Equals(value) != true)) {
                    this.EnableQuantumViewField = value;
                    this.RaisePropertyChanged("EnableQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FailureNotify {
            get {
                return this.FailureNotifyField;
            }
            set {
                if ((this.FailureNotifyField.Equals(value) != true)) {
                    this.FailureNotifyField = value;
                    this.RaisePropertyChanged("FailureNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipmentNotify {
            get {
                return this.ShipmentNotifyField;
            }
            set {
                if ((this.ShipmentNotifyField.Equals(value) != true)) {
                    this.ShipmentNotifyField = value;
                    this.RaisePropertyChanged("ShipmentNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UPSQVSeq {
            get {
                return this.UPSQVSeqField;
            }
            set {
                if ((this.UPSQVSeqField.Equals(value) != true)) {
                    this.UPSQVSeqField = value;
                    this.RaisePropertyChanged("UPSQVSeq");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomCrdPoolRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomCrdPoolRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomCrdPoolRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrdPoolCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalNAField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomCrdPoolRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrdPoolCode {
            get {
                return this.CrdPoolCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CrdPoolCodeField, value) != true)) {
                    this.CrdPoolCodeField = value;
                    this.RaisePropertyChanged("CrdPoolCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditAvailable {
            get {
                return this.CreditAvailableField;
            }
            set {
                if ((this.CreditAvailableField.Equals(value) != true)) {
                    this.CreditAvailableField = value;
                    this.RaisePropertyChanged("CreditAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditUsed {
            get {
                return this.CreditUsedField;
            }
            set {
                if ((this.CreditUsedField.Equals(value) != true)) {
                    this.CreditUsedField = value;
                    this.RaisePropertyChanged("CreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalNA {
            get {
                return this.GlobalNAField;
            }
            set {
                if ((this.GlobalNAField.Equals(value) != true)) {
                    this.GlobalNAField = value;
                    this.RaisePropertyChanged("GlobalNA");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ACATCommCareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ACATOtherCareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ACATRespCareTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ACATRespCareTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AEPLOQTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGAFIPResponsibilityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGAFIPResponsibilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGBillToProvinceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGBillToProvinceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGGrossIncomeTaxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGIDDocTypeCUITMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGIDDocTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGIDDocTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGIDDocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGProvinceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGProvinceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGUseGoodDefaultMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARInvoiceAdjITCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARInvoiceITCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcctRefNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcrossNatAccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddlHdlgFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddressValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdvancedLaborRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllocPriorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowAltBillToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowAsAltRemitToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowShipTo3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AnnualRevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyHoldToOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttrCodeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTFormatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTLegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillDayDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFreqDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BorderCrossingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COASegReferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool COIsOneTimeCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COOneTimeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CertOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckConfirmCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckDateCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckDuplicatePOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckUpdateCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChrgAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CollectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CollectionsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommercialInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidateLinesPerPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidateSOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContBillDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditCardOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreditClearDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditClearTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditClearUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreditHoldDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditHoldSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditIncludeOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditIncludePIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditMemoITCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreditReviewDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustGrupGroupDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CustPILimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustPartOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustPricingSchemaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEOrgTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCollectionPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultInvoicestyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultLOQstyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultOrderAcknowledgementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultOversPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultPackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandAddActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandAddLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCancelActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandCancelLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandChangeActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandChangeDateActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandChangeDateLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandChangeLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckCUMMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckCUMMActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckCfgActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForPartActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForRevActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForRunOutPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForRunOutPartActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCloseNoMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCloseRejSkdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandDateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandDeliveryDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandNewLineActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandNewLineLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandQtyChangeActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandQtyChangeLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandSplitSchedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandUnitPriceDiffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandUnitPriceDiffActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DirectDebitingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscQualDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscountQualifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DmdCheckPartialShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DmdCheckShipActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocGlobalCreditLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocGlobalPILimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspBTFormatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspFormatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspRlsClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DueDateCriteriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDICodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EInvCompanyIDAttrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ERSOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ETCAddrChgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EarlyBufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableGlobalCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableGlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityUseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EstDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcFromValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExtCoExistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalCRMCustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalCRMCustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExternalCRMLastSyncField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalCRMSyncRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalDeliveryNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FFCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FederalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FinChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FxdGlbOrdCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FxdGlbPICreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FxdOrderCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FxdPICreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FxdTotOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FxdTotPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAChildCrdAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbNACreditIsShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNACreditSharedPrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAOwnCreditAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAOwnCreditUsedDspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAParentCrdAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbNAParentCreditIsUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAParentCreditPrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAParentsCreditUsedDspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAPoolCrdAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAPoolCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNASharedCreditUsedDspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalCredIncOrdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalCredIncPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlobalCreditLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCurrencyCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCurrencyCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCurrencyCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCurrencyCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCurrencyDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlobalPILimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazmatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICTraderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INCSTNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INPANNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IndividualPackIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntegrationFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntrntlShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvPerPackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvcOrderCmpDfltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLLBAnnualHomeCapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLLBAnnualPartPenCapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLLBAnnualResiCapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLLBAnnualSelfFndCapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LLLBAsAtDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LLLBAssetAssessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLLBLifeTimeCapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLLBMeansTestAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLLBMeansTestFeeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LLLBPrevEntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOQBookCaFinishingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOQBookCaPressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOQBookCapaperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOQBookCatPlatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOQBookPCFinishingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOQBookPCPaperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOQBookPCPlatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOQBookPCPressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOQPrepressStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOQVariationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LateBufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LetterOfInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkPortNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXCURPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXMunicipioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MYIndustryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagedVendIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManagedVendNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkUpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkUpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCashRecITCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAChildCrdAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NACreditCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NACreditIsShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NACreditPreferenceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NACreditSharedPrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NACreditUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAOwnCreditAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAOwnCreditUsedDspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAParentCrdAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NAParentCreditIsUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAParentCreditPrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAParentsCreditUsedDspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAPoolCrdAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAPoolCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NARlsClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NASharedCreditUsedDspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NATotalCreditAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NATotalCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStdPkgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotifyEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfEmployeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSSaveAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSmartStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OneInvPerPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHoldForReviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgRegCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurSupplierCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideRlsClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OversPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnershipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PBTermsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PECollectionAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PEGoodsContributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteePhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeTaxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEIdentityDocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PENoAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PENotFoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PEWithholdAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PIFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PMUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParamCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayMethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PayMethodSummarizePerCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayMethodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PendingTerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PeriodicBillingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodicityDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodicityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredBankBankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredBankDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimBConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimPConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimSConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintAckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintLabelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintStatementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RACodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RASchedCdRADescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RebateFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RebateVendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReminderCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReminderGroupDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResaleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservePriDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservePriorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RfqAttachAllowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServAuthNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServHomeDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServInstructField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipExprtDeclartnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToTerrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingQualifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingQualifierDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SyncToExternalCRMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TATaxAuthorityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string THBranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIRegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxAuthorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaxRoundRuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TerritoryLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritoryTerritoryDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ThirdPLCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickerLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickerSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotGlbInvoiceCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotGlbOpenCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotGlbOrderCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotGlbPICreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotInvoiceCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotLCCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotLCCumInvoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotLCInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotLCOpenOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotLCUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotOpenCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotOpenInvoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotOpenInvoicesLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotOpenLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotOpenOrderLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotOpenOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotOpenPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotOrderCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotPICreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradingPartnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVEmailTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVShipFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UPSQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UndersPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidPayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidShipToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidSoldToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VariationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WICustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WIShippingCostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ACATCommCare {
            get {
                return this.ACATCommCareField;
            }
            set {
                if ((this.ACATCommCareField.Equals(value) != true)) {
                    this.ACATCommCareField = value;
                    this.RaisePropertyChanged("ACATCommCare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ACATOtherCare {
            get {
                return this.ACATOtherCareField;
            }
            set {
                if ((this.ACATOtherCareField.Equals(value) != true)) {
                    this.ACATOtherCareField = value;
                    this.RaisePropertyChanged("ACATOtherCare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ACATRespCareType {
            get {
                return this.ACATRespCareTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ACATRespCareTypeField, value) != true)) {
                    this.ACATRespCareTypeField = value;
                    this.RaisePropertyChanged("ACATRespCareType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ACATRespCareTypeDesc {
            get {
                return this.ACATRespCareTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ACATRespCareTypeDescField, value) != true)) {
                    this.ACATRespCareTypeDescField = value;
                    this.RaisePropertyChanged("ACATRespCareTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AEPLOQType {
            get {
                return this.AEPLOQTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AEPLOQTypeField, value) != true)) {
                    this.AEPLOQTypeField = value;
                    this.RaisePropertyChanged("AEPLOQType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGAFIPResponsibilityCode {
            get {
                return this.AGAFIPResponsibilityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGAFIPResponsibilityCodeField, value) != true)) {
                    this.AGAFIPResponsibilityCodeField = value;
                    this.RaisePropertyChanged("AGAFIPResponsibilityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGAFIPResponsibilityDescription {
            get {
                return this.AGAFIPResponsibilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AGAFIPResponsibilityDescriptionField, value) != true)) {
                    this.AGAFIPResponsibilityDescriptionField = value;
                    this.RaisePropertyChanged("AGAFIPResponsibilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGBillToProvinceCode {
            get {
                return this.AGBillToProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGBillToProvinceCodeField, value) != true)) {
                    this.AGBillToProvinceCodeField = value;
                    this.RaisePropertyChanged("AGBillToProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGBillToProvinceDescription {
            get {
                return this.AGBillToProvinceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AGBillToProvinceDescriptionField, value) != true)) {
                    this.AGBillToProvinceDescriptionField = value;
                    this.RaisePropertyChanged("AGBillToProvinceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGGrossIncomeTaxID {
            get {
                return this.AGGrossIncomeTaxIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AGGrossIncomeTaxIDField, value) != true)) {
                    this.AGGrossIncomeTaxIDField = value;
                    this.RaisePropertyChanged("AGGrossIncomeTaxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGIDDocTypeCUITMark {
            get {
                return this.AGIDDocTypeCUITMarkField;
            }
            set {
                if ((this.AGIDDocTypeCUITMarkField.Equals(value) != true)) {
                    this.AGIDDocTypeCUITMarkField = value;
                    this.RaisePropertyChanged("AGIDDocTypeCUITMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGIDDocTypeCode {
            get {
                return this.AGIDDocTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGIDDocTypeCodeField, value) != true)) {
                    this.AGIDDocTypeCodeField = value;
                    this.RaisePropertyChanged("AGIDDocTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGIDDocTypeDescription {
            get {
                return this.AGIDDocTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AGIDDocTypeDescriptionField, value) != true)) {
                    this.AGIDDocTypeDescriptionField = value;
                    this.RaisePropertyChanged("AGIDDocTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGIDDocumentNumber {
            get {
                return this.AGIDDocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AGIDDocumentNumberField, value) != true)) {
                    this.AGIDDocumentNumberField = value;
                    this.RaisePropertyChanged("AGIDDocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGProvinceCode {
            get {
                return this.AGProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGProvinceCodeField, value) != true)) {
                    this.AGProvinceCodeField = value;
                    this.RaisePropertyChanged("AGProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGProvinceDescription {
            get {
                return this.AGProvinceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AGProvinceDescriptionField, value) != true)) {
                    this.AGProvinceDescriptionField = value;
                    this.RaisePropertyChanged("AGProvinceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGUseGoodDefaultMark {
            get {
                return this.AGUseGoodDefaultMarkField;
            }
            set {
                if ((this.AGUseGoodDefaultMarkField.Equals(value) != true)) {
                    this.AGUseGoodDefaultMarkField = value;
                    this.RaisePropertyChanged("AGUseGoodDefaultMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARInvoiceAdjITCode {
            get {
                return this.ARInvoiceAdjITCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvoiceAdjITCodeField, value) != true)) {
                    this.ARInvoiceAdjITCodeField = value;
                    this.RaisePropertyChanged("ARInvoiceAdjITCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARInvoiceITCode {
            get {
                return this.ARInvoiceITCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvoiceITCodeField, value) != true)) {
                    this.ARInvoiceITCodeField = value;
                    this.RaisePropertyChanged("ARInvoiceITCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcctRefNumber {
            get {
                return this.AcctRefNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AcctRefNumberField, value) != true)) {
                    this.AcctRefNumberField = value;
                    this.RaisePropertyChanged("AcctRefNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AcrossNatAcc {
            get {
                return this.AcrossNatAccField;
            }
            set {
                if ((this.AcrossNatAccField.Equals(value) != true)) {
                    this.AcrossNatAccField = value;
                    this.RaisePropertyChanged("AcrossNatAcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddlHdlgFlag {
            get {
                return this.AddlHdlgFlagField;
            }
            set {
                if ((this.AddlHdlgFlagField.Equals(value) != true)) {
                    this.AddlHdlgFlagField = value;
                    this.RaisePropertyChanged("AddlHdlgFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrList {
            get {
                return this.AddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrListField, value) != true)) {
                    this.AddrListField = value;
                    this.RaisePropertyChanged("AddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddressVal {
            get {
                return this.AddressValField;
            }
            set {
                if ((this.AddressValField.Equals(value) != true)) {
                    this.AddressValField = value;
                    this.RaisePropertyChanged("AddressVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdvancedLaborRate {
            get {
                return this.AdvancedLaborRateField;
            }
            set {
                if ((this.AdvancedLaborRateField.Equals(value) != true)) {
                    this.AdvancedLaborRateField = value;
                    this.RaisePropertyChanged("AdvancedLaborRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllocPriorityCode {
            get {
                return this.AllocPriorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AllocPriorityCodeField, value) != true)) {
                    this.AllocPriorityCodeField = value;
                    this.RaisePropertyChanged("AllocPriorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAltBillTo {
            get {
                return this.AllowAltBillToField;
            }
            set {
                if ((this.AllowAltBillToField.Equals(value) != true)) {
                    this.AllowAltBillToField = value;
                    this.RaisePropertyChanged("AllowAltBillTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAsAltRemitTo {
            get {
                return this.AllowAsAltRemitToField;
            }
            set {
                if ((this.AllowAsAltRemitToField.Equals(value) != true)) {
                    this.AllowAsAltRemitToField = value;
                    this.RaisePropertyChanged("AllowAsAltRemitTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowOTS {
            get {
                return this.AllowOTSField;
            }
            set {
                if ((this.AllowOTSField.Equals(value) != true)) {
                    this.AllowOTSField = value;
                    this.RaisePropertyChanged("AllowOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowShipTo3 {
            get {
                return this.AllowShipTo3Field;
            }
            set {
                if ((this.AllowShipTo3Field.Equals(value) != true)) {
                    this.AllowShipTo3Field = value;
                    this.RaisePropertyChanged("AllowShipTo3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AnnualRevenue {
            get {
                return this.AnnualRevenueField;
            }
            set {
                if ((this.AnnualRevenueField.Equals(value) != true)) {
                    this.AnnualRevenueField = value;
                    this.RaisePropertyChanged("AnnualRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyChrg {
            get {
                return this.ApplyChrgField;
            }
            set {
                if ((this.ApplyChrgField.Equals(value) != true)) {
                    this.ApplyChrgField = value;
                    this.RaisePropertyChanged("ApplyChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyHoldToOrders {
            get {
                return this.ApplyHoldToOrdersField;
            }
            set {
                if ((this.ApplyHoldToOrdersField.Equals(value) != true)) {
                    this.ApplyHoldToOrdersField = value;
                    this.RaisePropertyChanged("ApplyHoldToOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttrCodeList {
            get {
                return this.AttrCodeListField;
            }
            set {
                if ((object.ReferenceEquals(this.AttrCodeListField, value) != true)) {
                    this.AttrCodeListField = value;
                    this.RaisePropertyChanged("AttrCodeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddrList {
            get {
                return this.BTAddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddrListField, value) != true)) {
                    this.BTAddrListField = value;
                    this.RaisePropertyChanged("BTAddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddress1 {
            get {
                return this.BTAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddress1Field, value) != true)) {
                    this.BTAddress1Field = value;
                    this.RaisePropertyChanged("BTAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddress2 {
            get {
                return this.BTAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddress2Field, value) != true)) {
                    this.BTAddress2Field = value;
                    this.RaisePropertyChanged("BTAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddress3 {
            get {
                return this.BTAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddress3Field, value) != true)) {
                    this.BTAddress3Field = value;
                    this.RaisePropertyChanged("BTAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCity {
            get {
                return this.BTCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCityField, value) != true)) {
                    this.BTCityField = value;
                    this.RaisePropertyChanged("BTCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCountry {
            get {
                return this.BTCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCountryField, value) != true)) {
                    this.BTCountryField = value;
                    this.RaisePropertyChanged("BTCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCountryNum {
            get {
                return this.BTCountryNumField;
            }
            set {
                if ((this.BTCountryNumField.Equals(value) != true)) {
                    this.BTCountryNumField = value;
                    this.RaisePropertyChanged("BTCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTFaxNum {
            get {
                return this.BTFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTFaxNumField, value) != true)) {
                    this.BTFaxNumField = value;
                    this.RaisePropertyChanged("BTFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTFormatStr {
            get {
                return this.BTFormatStrField;
            }
            set {
                if ((object.ReferenceEquals(this.BTFormatStrField, value) != true)) {
                    this.BTFormatStrField = value;
                    this.RaisePropertyChanged("BTFormatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTLegalName {
            get {
                return this.BTLegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTLegalNameField, value) != true)) {
                    this.BTLegalNameField = value;
                    this.RaisePropertyChanged("BTLegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTName {
            get {
                return this.BTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTNameField, value) != true)) {
                    this.BTNameField = value;
                    this.RaisePropertyChanged("BTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTPhoneNum {
            get {
                return this.BTPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTPhoneNumField, value) != true)) {
                    this.BTPhoneNumField = value;
                    this.RaisePropertyChanged("BTPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTState {
            get {
                return this.BTStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BTStateField, value) != true)) {
                    this.BTStateField = value;
                    this.RaisePropertyChanged("BTState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTZip {
            get {
                return this.BTZipField;
            }
            set {
                if ((object.ReferenceEquals(this.BTZipField, value) != true)) {
                    this.BTZipField = value;
                    this.RaisePropertyChanged("BTZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrCode {
            get {
                return this.BaseCurrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrCodeField, value) != true)) {
                    this.BaseCurrCodeField = value;
                    this.RaisePropertyChanged("BaseCurrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillDay {
            get {
                return this.BillDayField;
            }
            set {
                if ((this.BillDayField.Equals(value) != true)) {
                    this.BillDayField = value;
                    this.RaisePropertyChanged("BillDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillDayDesc {
            get {
                return this.BillDayDescField;
            }
            set {
                if ((object.ReferenceEquals(this.BillDayDescField, value) != true)) {
                    this.BillDayDescField = value;
                    this.RaisePropertyChanged("BillDayDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFreqDescription {
            get {
                return this.BillFreqDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFreqDescriptionField, value) != true)) {
                    this.BillFreqDescriptionField = value;
                    this.RaisePropertyChanged("BillFreqDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFrequency {
            get {
                return this.BillFrequencyField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFrequencyField, value) != true)) {
                    this.BillFrequencyField = value;
                    this.RaisePropertyChanged("BillFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderCrossing {
            get {
                return this.BorderCrossingField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderCrossingField, value) != true)) {
                    this.BorderCrossingField = value;
                    this.RaisePropertyChanged("BorderCrossing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessCust {
            get {
                return this.BusinessCustField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessCustField, value) != true)) {
                    this.BusinessCustField = value;
                    this.RaisePropertyChanged("BusinessCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COASegReferences {
            get {
                return this.COASegReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.COASegReferencesField, value) != true)) {
                    this.COASegReferencesField = value;
                    this.RaisePropertyChanged("COASegReferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COD {
            get {
                return this.CODField;
            }
            set {
                if ((this.CODField.Equals(value) != true)) {
                    this.CODField = value;
                    this.RaisePropertyChanged("COD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFreight {
            get {
                return this.CODFreightField;
            }
            set {
                if ((this.CODFreightField.Equals(value) != true)) {
                    this.CODFreightField = value;
                    this.RaisePropertyChanged("CODFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COIsOneTimeCust {
            get {
                return this.COIsOneTimeCustField;
            }
            set {
                if ((this.COIsOneTimeCustField.Equals(value) != true)) {
                    this.COIsOneTimeCustField = value;
                    this.RaisePropertyChanged("COIsOneTimeCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COOneTimeID {
            get {
                return this.COOneTimeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COOneTimeIDField, value) != true)) {
                    this.COOneTimeIDField = value;
                    this.RaisePropertyChanged("COOneTimeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSR {
            get {
                return this.CSRField;
            }
            set {
                if ((object.ReferenceEquals(this.CSRField, value) != true)) {
                    this.CSRField = value;
                    this.RaisePropertyChanged("CSR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CertOfOrigin {
            get {
                return this.CertOfOriginField;
            }
            set {
                if ((this.CertOfOriginField.Equals(value) != true)) {
                    this.CertOfOriginField = value;
                    this.RaisePropertyChanged("CertOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeCode {
            get {
                return this.ChargeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeCodeField, value) != true)) {
                    this.ChargeCodeField = value;
                    this.RaisePropertyChanged("ChargeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeCodeDesc {
            get {
                return this.ChargeCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeCodeDescField, value) != true)) {
                    this.ChargeCodeDescField = value;
                    this.RaisePropertyChanged("ChargeCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckConfirmCapPromise {
            get {
                return this.CheckConfirmCapPromiseField;
            }
            set {
                if ((this.CheckConfirmCapPromiseField.Equals(value) != true)) {
                    this.CheckConfirmCapPromiseField = value;
                    this.RaisePropertyChanged("CheckConfirmCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckDateCapPromise {
            get {
                return this.CheckDateCapPromiseField;
            }
            set {
                if ((this.CheckDateCapPromiseField.Equals(value) != true)) {
                    this.CheckDateCapPromiseField = value;
                    this.RaisePropertyChanged("CheckDateCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckDuplicatePO {
            get {
                return this.CheckDuplicatePOField;
            }
            set {
                if ((this.CheckDuplicatePOField.Equals(value) != true)) {
                    this.CheckDuplicatePOField = value;
                    this.RaisePropertyChanged("CheckDuplicatePO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckUpdateCapPromise {
            get {
                return this.CheckUpdateCapPromiseField;
            }
            set {
                if ((this.CheckUpdateCapPromiseField.Equals(value) != true)) {
                    this.CheckUpdateCapPromiseField = value;
                    this.RaisePropertyChanged("CheckUpdateCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChrgAmount {
            get {
                return this.ChrgAmountField;
            }
            set {
                if ((this.ChrgAmountField.Equals(value) != true)) {
                    this.ChrgAmountField = value;
                    this.RaisePropertyChanged("ChrgAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Collections {
            get {
                return this.CollectionsField;
            }
            set {
                if ((this.CollectionsField.Equals(value) != true)) {
                    this.CollectionsField = value;
                    this.RaisePropertyChanged("Collections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CollectionsDate {
            get {
                return this.CollectionsDateField;
            }
            set {
                if ((this.CollectionsDateField.Equals(value) != true)) {
                    this.CollectionsDateField = value;
                    this.RaisePropertyChanged("CollectionsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommercialInvoice {
            get {
                return this.CommercialInvoiceField;
            }
            set {
                if ((this.CommercialInvoiceField.Equals(value) != true)) {
                    this.CommercialInvoiceField = value;
                    this.RaisePropertyChanged("CommercialInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidateLinesPerPart {
            get {
                return this.ConsolidateLinesPerPartField;
            }
            set {
                if ((this.ConsolidateLinesPerPartField.Equals(value) != true)) {
                    this.ConsolidateLinesPerPartField = value;
                    this.RaisePropertyChanged("ConsolidateLinesPerPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidateSO {
            get {
                return this.ConsolidateSOField;
            }
            set {
                if ((this.ConsolidateSOField.Equals(value) != true)) {
                    this.ConsolidateSOField = value;
                    this.RaisePropertyChanged("ConsolidateSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContBillDay {
            get {
                return this.ContBillDayField;
            }
            set {
                if ((this.ContBillDayField.Equals(value) != true)) {
                    this.ContBillDayField = value;
                    this.RaisePropertyChanged("ContBillDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryNum {
            get {
                return this.CountryNumField;
            }
            set {
                if ((this.CountryNumField.Equals(value) != true)) {
                    this.CountryNumField = value;
                    this.RaisePropertyChanged("CountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditCardOrder {
            get {
                return this.CreditCardOrderField;
            }
            set {
                if ((this.CreditCardOrderField.Equals(value) != true)) {
                    this.CreditCardOrderField = value;
                    this.RaisePropertyChanged("CreditCardOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreditClearDate {
            get {
                return this.CreditClearDateField;
            }
            set {
                if ((this.CreditClearDateField.Equals(value) != true)) {
                    this.CreditClearDateField = value;
                    this.RaisePropertyChanged("CreditClearDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditClearTime {
            get {
                return this.CreditClearTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditClearTimeField, value) != true)) {
                    this.CreditClearTimeField = value;
                    this.RaisePropertyChanged("CreditClearTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditClearUserID {
            get {
                return this.CreditClearUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditClearUserIDField, value) != true)) {
                    this.CreditClearUserIDField = value;
                    this.RaisePropertyChanged("CreditClearUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditHold {
            get {
                return this.CreditHoldField;
            }
            set {
                if ((this.CreditHoldField.Equals(value) != true)) {
                    this.CreditHoldField = value;
                    this.RaisePropertyChanged("CreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreditHoldDate {
            get {
                return this.CreditHoldDateField;
            }
            set {
                if ((this.CreditHoldDateField.Equals(value) != true)) {
                    this.CreditHoldDateField = value;
                    this.RaisePropertyChanged("CreditHoldDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditHoldSource {
            get {
                return this.CreditHoldSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditHoldSourceField, value) != true)) {
                    this.CreditHoldSourceField = value;
                    this.RaisePropertyChanged("CreditHoldSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditIncludeOrders {
            get {
                return this.CreditIncludeOrdersField;
            }
            set {
                if ((this.CreditIncludeOrdersField.Equals(value) != true)) {
                    this.CreditIncludeOrdersField = value;
                    this.RaisePropertyChanged("CreditIncludeOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditIncludePI {
            get {
                return this.CreditIncludePIField;
            }
            set {
                if ((this.CreditIncludePIField.Equals(value) != true)) {
                    this.CreditIncludePIField = value;
                    this.RaisePropertyChanged("CreditIncludePI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditLimit {
            get {
                return this.CreditLimitField;
            }
            set {
                if ((this.CreditLimitField.Equals(value) != true)) {
                    this.CreditLimitField = value;
                    this.RaisePropertyChanged("CreditLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditMemoITCode {
            get {
                return this.CreditMemoITCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditMemoITCodeField, value) != true)) {
                    this.CreditMemoITCodeField = value;
                    this.RaisePropertyChanged("CreditMemoITCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreditReviewDate {
            get {
                return this.CreditReviewDateField;
            }
            set {
                if ((this.CreditReviewDateField.Equals(value) != true)) {
                    this.CreditReviewDateField = value;
                    this.RaisePropertyChanged("CreditReviewDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrDesc {
            get {
                return this.CurrencyCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrDescField, value) != true)) {
                    this.CurrencyCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrName {
            get {
                return this.CurrencyCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrNameField, value) != true)) {
                    this.CurrencyCurrNameField = value;
                    this.RaisePropertyChanged("CurrencyCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrSymbol {
            get {
                return this.CurrencyCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrSymbolField, value) != true)) {
                    this.CurrencyCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrencyID {
            get {
                return this.CurrencyCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrencyIDField, value) != true)) {
                    this.CurrencyCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyDocumentDesc {
            get {
                return this.CurrencyDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyDocumentDescField, value) != true)) {
                    this.CurrencyDocumentDescField = value;
                    this.RaisePropertyChanged("CurrencyDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustGrupGroupDesc {
            get {
                return this.CustGrupGroupDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CustGrupGroupDescField, value) != true)) {
                    this.CustGrupGroupDescField = value;
                    this.RaisePropertyChanged("CustGrupGroupDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CustPILimit {
            get {
                return this.CustPILimitField;
            }
            set {
                if ((this.CustPILimitField.Equals(value) != true)) {
                    this.CustPILimitField = value;
                    this.RaisePropertyChanged("CustPILimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustPartOpts {
            get {
                return this.CustPartOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustPartOptsField, value) != true)) {
                    this.CustPartOptsField = value;
                    this.RaisePropertyChanged("CustPartOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustPricingSchema {
            get {
                return this.CustPricingSchemaField;
            }
            set {
                if ((object.ReferenceEquals(this.CustPricingSchemaField, value) != true)) {
                    this.CustPricingSchemaField = value;
                    this.RaisePropertyChanged("CustPricingSchema");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustTypeDescription {
            get {
                return this.CustTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CustTypeDescriptionField, value) != true)) {
                    this.CustTypeDescriptionField = value;
                    this.RaisePropertyChanged("CustTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustURL {
            get {
                return this.CustURLField;
            }
            set {
                if ((object.ReferenceEquals(this.CustURLField, value) != true)) {
                    this.CustURLField = value;
                    this.RaisePropertyChanged("CustURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEOrgType {
            get {
                return this.DEOrgTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DEOrgTypeField, value) != true)) {
                    this.DEOrgTypeField = value;
                    this.RaisePropertyChanged("DEOrgType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCollectionPosted {
            get {
                return this.DateCollectionPostedField;
            }
            set {
                if ((this.DateCollectionPostedField.Equals(value) != true)) {
                    this.DateCollectionPostedField = value;
                    this.RaisePropertyChanged("DateCollectionPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredIns {
            get {
                return this.DeclaredInsField;
            }
            set {
                if ((this.DeclaredInsField.Equals(value) != true)) {
                    this.DeclaredInsField = value;
                    this.RaisePropertyChanged("DeclaredIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultFOB {
            get {
                return this.DefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultFOBField, value) != true)) {
                    this.DefaultFOBField = value;
                    this.RaisePropertyChanged("DefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultInvoicestyle {
            get {
                return this.DefaultInvoicestyleField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultInvoicestyleField, value) != true)) {
                    this.DefaultInvoicestyleField = value;
                    this.RaisePropertyChanged("DefaultInvoicestyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultLOQstyle {
            get {
                return this.DefaultLOQstyleField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultLOQstyleField, value) != true)) {
                    this.DefaultLOQstyleField = value;
                    this.RaisePropertyChanged("DefaultLOQstyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultOrderAcknowledgement {
            get {
                return this.DefaultOrderAcknowledgementField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultOrderAcknowledgementField, value) != true)) {
                    this.DefaultOrderAcknowledgementField = value;
                    this.RaisePropertyChanged("DefaultOrderAcknowledgement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultOversPricing {
            get {
                return this.DefaultOversPricingField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultOversPricingField, value) != true)) {
                    this.DefaultOversPricingField = value;
                    this.RaisePropertyChanged("DefaultOversPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultPackSlip {
            get {
                return this.DefaultPackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultPackSlipField, value) != true)) {
                    this.DefaultPackSlipField = value;
                    this.RaisePropertyChanged("DefaultPackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeferredRev {
            get {
                return this.DeferredRevField;
            }
            set {
                if ((this.DeferredRevField.Equals(value) != true)) {
                    this.DeferredRevField = value;
                    this.RaisePropertyChanged("DeferredRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryConf {
            get {
                return this.DeliveryConfField;
            }
            set {
                if ((this.DeliveryConfField.Equals(value) != true)) {
                    this.DeliveryConfField = value;
                    this.RaisePropertyChanged("DeliveryConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryTypeDescription {
            get {
                return this.DeliveryTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeDescriptionField, value) != true)) {
                    this.DeliveryTypeDescriptionField = value;
                    this.RaisePropertyChanged("DeliveryTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandAddAction {
            get {
                return this.DemandAddActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandAddActionField, value) != true)) {
                    this.DemandAddActionField = value;
                    this.RaisePropertyChanged("DemandAddAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandAddLeadTime {
            get {
                return this.DemandAddLeadTimeField;
            }
            set {
                if ((this.DemandAddLeadTimeField.Equals(value) != true)) {
                    this.DemandAddLeadTimeField = value;
                    this.RaisePropertyChanged("DemandAddLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCancelAction {
            get {
                return this.DemandCancelActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCancelActionField, value) != true)) {
                    this.DemandCancelActionField = value;
                    this.RaisePropertyChanged("DemandCancelAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandCancelLeadTime {
            get {
                return this.DemandCancelLeadTimeField;
            }
            set {
                if ((this.DemandCancelLeadTimeField.Equals(value) != true)) {
                    this.DemandCancelLeadTimeField = value;
                    this.RaisePropertyChanged("DemandCancelLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseAction {
            get {
                return this.DemandCapPromiseActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseActionField, value) != true)) {
                    this.DemandCapPromiseActionField = value;
                    this.RaisePropertyChanged("DemandCapPromiseAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseDate {
            get {
                return this.DemandCapPromiseDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseDateField, value) != true)) {
                    this.DemandCapPromiseDateField = value;
                    this.RaisePropertyChanged("DemandCapPromiseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseUpdate {
            get {
                return this.DemandCapPromiseUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseUpdateField, value) != true)) {
                    this.DemandCapPromiseUpdateField = value;
                    this.RaisePropertyChanged("DemandCapPromiseUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandChangeAction {
            get {
                return this.DemandChangeActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandChangeActionField, value) != true)) {
                    this.DemandChangeActionField = value;
                    this.RaisePropertyChanged("DemandChangeAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandChangeDateAction {
            get {
                return this.DemandChangeDateActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandChangeDateActionField, value) != true)) {
                    this.DemandChangeDateActionField = value;
                    this.RaisePropertyChanged("DemandChangeDateAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandChangeDateLeadTime {
            get {
                return this.DemandChangeDateLeadTimeField;
            }
            set {
                if ((this.DemandChangeDateLeadTimeField.Equals(value) != true)) {
                    this.DemandChangeDateLeadTimeField = value;
                    this.RaisePropertyChanged("DemandChangeDateLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandChangeLeadTime {
            get {
                return this.DemandChangeLeadTimeField;
            }
            set {
                if ((this.DemandChangeLeadTimeField.Equals(value) != true)) {
                    this.DemandChangeLeadTimeField = value;
                    this.RaisePropertyChanged("DemandChangeLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckCUMM {
            get {
                return this.DemandCheckCUMMField;
            }
            set {
                if ((this.DemandCheckCUMMField.Equals(value) != true)) {
                    this.DemandCheckCUMMField = value;
                    this.RaisePropertyChanged("DemandCheckCUMM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckCUMMAction {
            get {
                return this.DemandCheckCUMMActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckCUMMActionField, value) != true)) {
                    this.DemandCheckCUMMActionField = value;
                    this.RaisePropertyChanged("DemandCheckCUMMAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckCfgAction {
            get {
                return this.DemandCheckCfgActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckCfgActionField, value) != true)) {
                    this.DemandCheckCfgActionField = value;
                    this.RaisePropertyChanged("DemandCheckCfgAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckConfig {
            get {
                return this.DemandCheckConfigField;
            }
            set {
                if ((this.DemandCheckConfigField.Equals(value) != true)) {
                    this.DemandCheckConfigField = value;
                    this.RaisePropertyChanged("DemandCheckConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForPart {
            get {
                return this.DemandCheckForPartField;
            }
            set {
                if ((this.DemandCheckForPartField.Equals(value) != true)) {
                    this.DemandCheckForPartField = value;
                    this.RaisePropertyChanged("DemandCheckForPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForPartAction {
            get {
                return this.DemandCheckForPartActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForPartActionField, value) != true)) {
                    this.DemandCheckForPartActionField = value;
                    this.RaisePropertyChanged("DemandCheckForPartAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForRev {
            get {
                return this.DemandCheckForRevField;
            }
            set {
                if ((this.DemandCheckForRevField.Equals(value) != true)) {
                    this.DemandCheckForRevField = value;
                    this.RaisePropertyChanged("DemandCheckForRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForRevAction {
            get {
                return this.DemandCheckForRevActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForRevActionField, value) != true)) {
                    this.DemandCheckForRevActionField = value;
                    this.RaisePropertyChanged("DemandCheckForRevAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForRunOutPart {
            get {
                return this.DemandCheckForRunOutPartField;
            }
            set {
                if ((this.DemandCheckForRunOutPartField.Equals(value) != true)) {
                    this.DemandCheckForRunOutPartField = value;
                    this.RaisePropertyChanged("DemandCheckForRunOutPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForRunOutPartAction {
            get {
                return this.DemandCheckForRunOutPartActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForRunOutPartActionField, value) != true)) {
                    this.DemandCheckForRunOutPartActionField = value;
                    this.RaisePropertyChanged("DemandCheckForRunOutPartAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCloseNoMatch {
            get {
                return this.DemandCloseNoMatchField;
            }
            set {
                if ((this.DemandCloseNoMatchField.Equals(value) != true)) {
                    this.DemandCloseNoMatchField = value;
                    this.RaisePropertyChanged("DemandCloseNoMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCloseRejSkd {
            get {
                return this.DemandCloseRejSkdField;
            }
            set {
                if ((this.DemandCloseRejSkdField.Equals(value) != true)) {
                    this.DemandCloseRejSkdField = value;
                    this.RaisePropertyChanged("DemandCloseRejSkd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandDateType {
            get {
                return this.DemandDateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandDateTypeField, value) != true)) {
                    this.DemandDateTypeField = value;
                    this.RaisePropertyChanged("DemandDateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandDeliveryDays {
            get {
                return this.DemandDeliveryDaysField;
            }
            set {
                if ((this.DemandDeliveryDaysField.Equals(value) != true)) {
                    this.DemandDeliveryDaysField = value;
                    this.RaisePropertyChanged("DemandDeliveryDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandNewLineAction {
            get {
                return this.DemandNewLineActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandNewLineActionField, value) != true)) {
                    this.DemandNewLineActionField = value;
                    this.RaisePropertyChanged("DemandNewLineAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandNewLineLeadTime {
            get {
                return this.DemandNewLineLeadTimeField;
            }
            set {
                if ((this.DemandNewLineLeadTimeField.Equals(value) != true)) {
                    this.DemandNewLineLeadTimeField = value;
                    this.RaisePropertyChanged("DemandNewLineLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandPricing {
            get {
                return this.DemandPricingField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandPricingField, value) != true)) {
                    this.DemandPricingField = value;
                    this.RaisePropertyChanged("DemandPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandQtyChangeAction {
            get {
                return this.DemandQtyChangeActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandQtyChangeActionField, value) != true)) {
                    this.DemandQtyChangeActionField = value;
                    this.RaisePropertyChanged("DemandQtyChangeAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandQtyChangeLeadTime {
            get {
                return this.DemandQtyChangeLeadTimeField;
            }
            set {
                if ((this.DemandQtyChangeLeadTimeField.Equals(value) != true)) {
                    this.DemandQtyChangeLeadTimeField = value;
                    this.RaisePropertyChanged("DemandQtyChangeLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandSplitSched {
            get {
                return this.DemandSplitSchedField;
            }
            set {
                if ((this.DemandSplitSchedField.Equals(value) != true)) {
                    this.DemandSplitSchedField = value;
                    this.RaisePropertyChanged("DemandSplitSched");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandUnitPriceDiff {
            get {
                return this.DemandUnitPriceDiffField;
            }
            set {
                if ((this.DemandUnitPriceDiffField.Equals(value) != true)) {
                    this.DemandUnitPriceDiffField = value;
                    this.RaisePropertyChanged("DemandUnitPriceDiff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandUnitPriceDiffAction {
            get {
                return this.DemandUnitPriceDiffActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandUnitPriceDiffActionField, value) != true)) {
                    this.DemandUnitPriceDiffActionField = value;
                    this.RaisePropertyChanged("DemandUnitPriceDiffAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DirectDebiting {
            get {
                return this.DirectDebitingField;
            }
            set {
                if ((this.DirectDebitingField.Equals(value) != true)) {
                    this.DirectDebitingField = value;
                    this.RaisePropertyChanged("DirectDebiting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscQualDescription {
            get {
                return this.DiscQualDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscQualDescriptionField, value) != true)) {
                    this.DiscQualDescriptionField = value;
                    this.RaisePropertyChanged("DiscQualDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountPercent {
            get {
                return this.DiscountPercentField;
            }
            set {
                if ((this.DiscountPercentField.Equals(value) != true)) {
                    this.DiscountPercentField = value;
                    this.RaisePropertyChanged("DiscountPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscountQualifier {
            get {
                return this.DiscountQualifierField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscountQualifierField, value) != true)) {
                    this.DiscountQualifierField = value;
                    this.RaisePropertyChanged("DiscountQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DmdCheckPartialShip {
            get {
                return this.DmdCheckPartialShipField;
            }
            set {
                if ((this.DmdCheckPartialShipField.Equals(value) != true)) {
                    this.DmdCheckPartialShipField = value;
                    this.RaisePropertyChanged("DmdCheckPartialShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DmdCheckShipAction {
            get {
                return this.DmdCheckShipActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DmdCheckShipActionField, value) != true)) {
                    this.DmdCheckShipActionField = value;
                    this.RaisePropertyChanged("DmdCheckShipAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocGlobalCreditLimit {
            get {
                return this.DocGlobalCreditLimitField;
            }
            set {
                if ((this.DocGlobalCreditLimitField.Equals(value) != true)) {
                    this.DocGlobalCreditLimitField = value;
                    this.RaisePropertyChanged("DocGlobalCreditLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocGlobalPILimit {
            get {
                return this.DocGlobalPILimitField;
            }
            set {
                if ((this.DocGlobalPILimitField.Equals(value) != true)) {
                    this.DocGlobalPILimitField = value;
                    this.RaisePropertyChanged("DocGlobalPILimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocOnly {
            get {
                return this.DocOnlyField;
            }
            set {
                if ((this.DocOnlyField.Equals(value) != true)) {
                    this.DocOnlyField = value;
                    this.RaisePropertyChanged("DocOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspBTFormatStr {
            get {
                return this.DspBTFormatStrField;
            }
            set {
                if ((object.ReferenceEquals(this.DspBTFormatStrField, value) != true)) {
                    this.DspBTFormatStrField = value;
                    this.RaisePropertyChanged("DspBTFormatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspFormatStr {
            get {
                return this.DspFormatStrField;
            }
            set {
                if ((object.ReferenceEquals(this.DspFormatStrField, value) != true)) {
                    this.DspFormatStrField = value;
                    this.RaisePropertyChanged("DspFormatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspRlsClass {
            get {
                return this.DspRlsClassField;
            }
            set {
                if ((object.ReferenceEquals(this.DspRlsClassField, value) != true)) {
                    this.DspRlsClassField = value;
                    this.RaisePropertyChanged("DspRlsClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DueDateCriteria {
            get {
                return this.DueDateCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DueDateCriteriaField, value) != true)) {
                    this.DueDateCriteriaField = value;
                    this.RaisePropertyChanged("DueDateCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EAddress {
            get {
                return this.EAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EAddressField, value) != true)) {
                    this.EAddressField = value;
                    this.RaisePropertyChanged("EAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCType {
            get {
                return this.ECCTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCTypeField, value) != true)) {
                    this.ECCTypeField = value;
                    this.RaisePropertyChanged("ECCType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDICode {
            get {
                return this.EDICodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EDICodeField, value) != true)) {
                    this.EDICodeField = value;
                    this.RaisePropertyChanged("EDICode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EInvCompanyIDAttr {
            get {
                return this.EInvCompanyIDAttrField;
            }
            set {
                if ((object.ReferenceEquals(this.EInvCompanyIDAttrField, value) != true)) {
                    this.EInvCompanyIDAttrField = value;
                    this.RaisePropertyChanged("EInvCompanyIDAttr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EInvoice {
            get {
                return this.EInvoiceField;
            }
            set {
                if ((this.EInvoiceField.Equals(value) != true)) {
                    this.EInvoiceField = value;
                    this.RaisePropertyChanged("EInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMailAddress {
            get {
                return this.EMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailAddressField, value) != true)) {
                    this.EMailAddressField = value;
                    this.RaisePropertyChanged("EMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ERSOrder {
            get {
                return this.ERSOrderField;
            }
            set {
                if ((this.ERSOrderField.Equals(value) != true)) {
                    this.ERSOrderField = value;
                    this.RaisePropertyChanged("ERSOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ETCAddrChg {
            get {
                return this.ETCAddrChgField;
            }
            set {
                if ((this.ETCAddrChgField.Equals(value) != true)) {
                    this.ETCAddrChgField = value;
                    this.RaisePropertyChanged("ETCAddrChg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EarlyBuffer {
            get {
                return this.EarlyBufferField;
            }
            set {
                if ((this.EarlyBufferField.Equals(value) != true)) {
                    this.EarlyBufferField = value;
                    this.RaisePropertyChanged("EarlyBuffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableGlobalCust {
            get {
                return this.EnableGlobalCustField;
            }
            set {
                if ((this.EnableGlobalCustField.Equals(value) != true)) {
                    this.EnableGlobalCustField = value;
                    this.RaisePropertyChanged("EnableGlobalCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableGlobalLock {
            get {
                return this.EnableGlobalLockField;
            }
            set {
                if ((this.EnableGlobalLockField.Equals(value) != true)) {
                    this.EnableGlobalLockField = value;
                    this.RaisePropertyChanged("EnableGlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityUseCode {
            get {
                return this.EntityUseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityUseCodeField, value) != true)) {
                    this.EntityUseCodeField = value;
                    this.RaisePropertyChanged("EntityUseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EstDate {
            get {
                return this.EstDateField;
            }
            set {
                if ((this.EstDateField.Equals(value) != true)) {
                    this.EstDateField = value;
                    this.RaisePropertyChanged("EstDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcFromVal {
            get {
                return this.ExcFromValField;
            }
            set {
                if ((this.ExcFromValField.Equals(value) != true)) {
                    this.ExcFromValField = value;
                    this.RaisePropertyChanged("ExcFromVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExtCoExist {
            get {
                return this.ExtCoExistField;
            }
            set {
                if ((this.ExtCoExistField.Equals(value) != true)) {
                    this.ExtCoExistField = value;
                    this.RaisePropertyChanged("ExtCoExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtID {
            get {
                return this.ExtIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtIDField, value) != true)) {
                    this.ExtIDField = value;
                    this.RaisePropertyChanged("ExtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalCRMCustomerID {
            get {
                return this.ExternalCRMCustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalCRMCustomerIDField, value) != true)) {
                    this.ExternalCRMCustomerIDField = value;
                    this.RaisePropertyChanged("ExternalCRMCustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalCRMCustomerType {
            get {
                return this.ExternalCRMCustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalCRMCustomerTypeField, value) != true)) {
                    this.ExternalCRMCustomerTypeField = value;
                    this.RaisePropertyChanged("ExternalCRMCustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExternalCRMLastSync {
            get {
                return this.ExternalCRMLastSyncField;
            }
            set {
                if ((this.ExternalCRMLastSyncField.Equals(value) != true)) {
                    this.ExternalCRMLastSyncField = value;
                    this.RaisePropertyChanged("ExternalCRMLastSync");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalCRMSyncRequired {
            get {
                return this.ExternalCRMSyncRequiredField;
            }
            set {
                if ((this.ExternalCRMSyncRequiredField.Equals(value) != true)) {
                    this.ExternalCRMSyncRequiredField = value;
                    this.RaisePropertyChanged("ExternalCRMSyncRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalDeliveryNote {
            get {
                return this.ExternalDeliveryNoteField;
            }
            set {
                if ((this.ExternalDeliveryNoteField.Equals(value) != true)) {
                    this.ExternalDeliveryNoteField = value;
                    this.RaisePropertyChanged("ExternalDeliveryNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress1 {
            get {
                return this.FFAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress1Field, value) != true)) {
                    this.FFAddress1Field = value;
                    this.RaisePropertyChanged("FFAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress2 {
            get {
                return this.FFAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress2Field, value) != true)) {
                    this.FFAddress2Field = value;
                    this.RaisePropertyChanged("FFAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress3 {
            get {
                return this.FFAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress3Field, value) != true)) {
                    this.FFAddress3Field = value;
                    this.RaisePropertyChanged("FFAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCity {
            get {
                return this.FFCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCityField, value) != true)) {
                    this.FFCityField = value;
                    this.RaisePropertyChanged("FFCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCompName {
            get {
                return this.FFCompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCompNameField, value) != true)) {
                    this.FFCompNameField = value;
                    this.RaisePropertyChanged("FFCompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFContact {
            get {
                return this.FFContactField;
            }
            set {
                if ((object.ReferenceEquals(this.FFContactField, value) != true)) {
                    this.FFContactField = value;
                    this.RaisePropertyChanged("FFContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCountry {
            get {
                return this.FFCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCountryField, value) != true)) {
                    this.FFCountryField = value;
                    this.RaisePropertyChanged("FFCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FFCountryNum {
            get {
                return this.FFCountryNumField;
            }
            set {
                if ((this.FFCountryNumField.Equals(value) != true)) {
                    this.FFCountryNumField = value;
                    this.RaisePropertyChanged("FFCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFID {
            get {
                return this.FFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FFIDField, value) != true)) {
                    this.FFIDField = value;
                    this.RaisePropertyChanged("FFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFPhoneNum {
            get {
                return this.FFPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FFPhoneNumField, value) != true)) {
                    this.FFPhoneNumField = value;
                    this.RaisePropertyChanged("FFPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFState {
            get {
                return this.FFStateField;
            }
            set {
                if ((object.ReferenceEquals(this.FFStateField, value) != true)) {
                    this.FFStateField = value;
                    this.RaisePropertyChanged("FFState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFZip {
            get {
                return this.FFZipField;
            }
            set {
                if ((object.ReferenceEquals(this.FFZipField, value) != true)) {
                    this.FFZipField = value;
                    this.RaisePropertyChanged("FFZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOBDescription {
            get {
                return this.FOBDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBDescriptionField, value) != true)) {
                    this.FOBDescriptionField = value;
                    this.RaisePropertyChanged("FOBDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNum {
            get {
                return this.FaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumField, value) != true)) {
                    this.FaxNumField = value;
                    this.RaisePropertyChanged("FaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FederalID {
            get {
                return this.FederalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FederalIDField, value) != true)) {
                    this.FederalIDField = value;
                    this.RaisePropertyChanged("FederalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FinCharges {
            get {
                return this.FinChargesField;
            }
            set {
                if ((this.FinChargesField.Equals(value) != true)) {
                    this.FinChargesField = value;
                    this.RaisePropertyChanged("FinCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatStr {
            get {
                return this.FormatStrField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatStrField, value) != true)) {
                    this.FormatStrField = value;
                    this.RaisePropertyChanged("FormatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FxdGlbOrdCredit {
            get {
                return this.FxdGlbOrdCreditField;
            }
            set {
                if ((this.FxdGlbOrdCreditField.Equals(value) != true)) {
                    this.FxdGlbOrdCreditField = value;
                    this.RaisePropertyChanged("FxdGlbOrdCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FxdGlbPICredit {
            get {
                return this.FxdGlbPICreditField;
            }
            set {
                if ((this.FxdGlbPICreditField.Equals(value) != true)) {
                    this.FxdGlbPICreditField = value;
                    this.RaisePropertyChanged("FxdGlbPICredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FxdOrderCredit {
            get {
                return this.FxdOrderCreditField;
            }
            set {
                if ((this.FxdOrderCreditField.Equals(value) != true)) {
                    this.FxdOrderCreditField = value;
                    this.RaisePropertyChanged("FxdOrderCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FxdPICredit {
            get {
                return this.FxdPICreditField;
            }
            set {
                if ((this.FxdPICreditField.Equals(value) != true)) {
                    this.FxdPICreditField = value;
                    this.RaisePropertyChanged("FxdPICredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FxdTotOrders {
            get {
                return this.FxdTotOrdersField;
            }
            set {
                if ((this.FxdTotOrdersField.Equals(value) != true)) {
                    this.FxdTotOrdersField = value;
                    this.RaisePropertyChanged("FxdTotOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FxdTotPI {
            get {
                return this.FxdTotPIField;
            }
            set {
                if ((this.FxdTotPIField.Equals(value) != true)) {
                    this.FxdTotPIField = value;
                    this.RaisePropertyChanged("FxdTotPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbFlag {
            get {
                return this.GlbFlagField;
            }
            set {
                if ((this.GlbFlagField.Equals(value) != true)) {
                    this.GlbFlagField = value;
                    this.RaisePropertyChanged("GlbFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbLink {
            get {
                return this.GlbLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbLinkField, value) != true)) {
                    this.GlbLinkField = value;
                    this.RaisePropertyChanged("GlbLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAChildCrdAvail {
            get {
                return this.GlbNAChildCrdAvailField;
            }
            set {
                if ((this.GlbNAChildCrdAvailField.Equals(value) != true)) {
                    this.GlbNAChildCrdAvailField = value;
                    this.RaisePropertyChanged("GlbNAChildCrdAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbNACreditIsShare {
            get {
                return this.GlbNACreditIsShareField;
            }
            set {
                if ((this.GlbNACreditIsShareField.Equals(value) != true)) {
                    this.GlbNACreditIsShareField = value;
                    this.RaisePropertyChanged("GlbNACreditIsShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNACreditSharedPrc {
            get {
                return this.GlbNACreditSharedPrcField;
            }
            set {
                if ((this.GlbNACreditSharedPrcField.Equals(value) != true)) {
                    this.GlbNACreditSharedPrcField = value;
                    this.RaisePropertyChanged("GlbNACreditSharedPrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAOwnCreditAvail {
            get {
                return this.GlbNAOwnCreditAvailField;
            }
            set {
                if ((this.GlbNAOwnCreditAvailField.Equals(value) != true)) {
                    this.GlbNAOwnCreditAvailField = value;
                    this.RaisePropertyChanged("GlbNAOwnCreditAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAOwnCreditUsedDsp {
            get {
                return this.GlbNAOwnCreditUsedDspField;
            }
            set {
                if ((this.GlbNAOwnCreditUsedDspField.Equals(value) != true)) {
                    this.GlbNAOwnCreditUsedDspField = value;
                    this.RaisePropertyChanged("GlbNAOwnCreditUsedDsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAParentCrdAvail {
            get {
                return this.GlbNAParentCrdAvailField;
            }
            set {
                if ((this.GlbNAParentCrdAvailField.Equals(value) != true)) {
                    this.GlbNAParentCrdAvailField = value;
                    this.RaisePropertyChanged("GlbNAParentCrdAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbNAParentCreditIsUsed {
            get {
                return this.GlbNAParentCreditIsUsedField;
            }
            set {
                if ((this.GlbNAParentCreditIsUsedField.Equals(value) != true)) {
                    this.GlbNAParentCreditIsUsedField = value;
                    this.RaisePropertyChanged("GlbNAParentCreditIsUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAParentCreditPrc {
            get {
                return this.GlbNAParentCreditPrcField;
            }
            set {
                if ((this.GlbNAParentCreditPrcField.Equals(value) != true)) {
                    this.GlbNAParentCreditPrcField = value;
                    this.RaisePropertyChanged("GlbNAParentCreditPrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAParentsCreditUsedDsp {
            get {
                return this.GlbNAParentsCreditUsedDspField;
            }
            set {
                if ((this.GlbNAParentsCreditUsedDspField.Equals(value) != true)) {
                    this.GlbNAParentsCreditUsedDspField = value;
                    this.RaisePropertyChanged("GlbNAParentsCreditUsedDsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAPoolCrdAvail {
            get {
                return this.GlbNAPoolCrdAvailField;
            }
            set {
                if ((this.GlbNAPoolCrdAvailField.Equals(value) != true)) {
                    this.GlbNAPoolCrdAvailField = value;
                    this.RaisePropertyChanged("GlbNAPoolCrdAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAPoolCreditUsed {
            get {
                return this.GlbNAPoolCreditUsedField;
            }
            set {
                if ((this.GlbNAPoolCreditUsedField.Equals(value) != true)) {
                    this.GlbNAPoolCreditUsedField = value;
                    this.RaisePropertyChanged("GlbNAPoolCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNASharedCreditUsedDsp {
            get {
                return this.GlbNASharedCreditUsedDspField;
            }
            set {
                if ((this.GlbNASharedCreditUsedDspField.Equals(value) != true)) {
                    this.GlbNASharedCreditUsedDspField = value;
                    this.RaisePropertyChanged("GlbNASharedCreditUsedDsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalCredIncOrd {
            get {
                return this.GlobalCredIncOrdField;
            }
            set {
                if ((this.GlobalCredIncOrdField.Equals(value) != true)) {
                    this.GlobalCredIncOrdField = value;
                    this.RaisePropertyChanged("GlobalCredIncOrd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalCredIncPI {
            get {
                return this.GlobalCredIncPIField;
            }
            set {
                if ((this.GlobalCredIncPIField.Equals(value) != true)) {
                    this.GlobalCredIncPIField = value;
                    this.RaisePropertyChanged("GlobalCredIncPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCreditHold {
            get {
                return this.GlobalCreditHoldField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCreditHoldField, value) != true)) {
                    this.GlobalCreditHoldField = value;
                    this.RaisePropertyChanged("GlobalCreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlobalCreditLimit {
            get {
                return this.GlobalCreditLimitField;
            }
            set {
                if ((this.GlobalCreditLimitField.Equals(value) != true)) {
                    this.GlobalCreditLimitField = value;
                    this.RaisePropertyChanged("GlobalCreditLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCurrencyCode {
            get {
                return this.GlobalCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCurrencyCodeField, value) != true)) {
                    this.GlobalCurrencyCodeField = value;
                    this.RaisePropertyChanged("GlobalCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCurrencyCurrDesc {
            get {
                return this.GlobalCurrencyCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCurrencyCurrDescField, value) != true)) {
                    this.GlobalCurrencyCurrDescField = value;
                    this.RaisePropertyChanged("GlobalCurrencyCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCurrencyCurrName {
            get {
                return this.GlobalCurrencyCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCurrencyCurrNameField, value) != true)) {
                    this.GlobalCurrencyCurrNameField = value;
                    this.RaisePropertyChanged("GlobalCurrencyCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCurrencyCurrSymbol {
            get {
                return this.GlobalCurrencyCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCurrencyCurrSymbolField, value) != true)) {
                    this.GlobalCurrencyCurrSymbolField = value;
                    this.RaisePropertyChanged("GlobalCurrencyCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCurrencyCurrencyID {
            get {
                return this.GlobalCurrencyCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCurrencyCurrencyIDField, value) != true)) {
                    this.GlobalCurrencyCurrencyIDField = value;
                    this.RaisePropertyChanged("GlobalCurrencyCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCurrencyDocumentDesc {
            get {
                return this.GlobalCurrencyDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCurrencyDocumentDescField, value) != true)) {
                    this.GlobalCurrencyDocumentDescField = value;
                    this.RaisePropertyChanged("GlobalCurrencyDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalCust {
            get {
                return this.GlobalCustField;
            }
            set {
                if ((this.GlobalCustField.Equals(value) != true)) {
                    this.GlobalCustField = value;
                    this.RaisePropertyChanged("GlobalCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlobalPILimit {
            get {
                return this.GlobalPILimitField;
            }
            set {
                if ((this.GlobalPILimitField.Equals(value) != true)) {
                    this.GlobalPILimitField = value;
                    this.RaisePropertyChanged("GlobalPILimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundType {
            get {
                return this.GroundTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundTypeField, value) != true)) {
                    this.GroundTypeField = value;
                    this.RaisePropertyChanged("GroundType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasBank {
            get {
                return this.HasBankField;
            }
            set {
                if ((this.HasBankField.Equals(value) != true)) {
                    this.HasBankField = value;
                    this.RaisePropertyChanged("HasBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hazmat {
            get {
                return this.HazmatField;
            }
            set {
                if ((this.HazmatField.Equals(value) != true)) {
                    this.HazmatField = value;
                    this.RaisePropertyChanged("Hazmat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICCust {
            get {
                return this.ICCustField;
            }
            set {
                if ((this.ICCustField.Equals(value) != true)) {
                    this.ICCustField = value;
                    this.RaisePropertyChanged("ICCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICTrader {
            get {
                return this.ICTraderField;
            }
            set {
                if ((this.ICTraderField.Equals(value) != true)) {
                    this.ICTraderField = value;
                    this.RaisePropertyChanged("ICTrader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INCSTNumber {
            get {
                return this.INCSTNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.INCSTNumberField, value) != true)) {
                    this.INCSTNumberField = value;
                    this.RaisePropertyChanged("INCSTNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INPANNumber {
            get {
                return this.INPANNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.INPANNumberField, value) != true)) {
                    this.INPANNumberField = value;
                    this.RaisePropertyChanged("INPANNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IndividualPackIDs {
            get {
                return this.IndividualPackIDsField;
            }
            set {
                if ((this.IndividualPackIDsField.Equals(value) != true)) {
                    this.IndividualPackIDsField = value;
                    this.RaisePropertyChanged("IndividualPackIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntegrationFlag {
            get {
                return this.IntegrationFlagField;
            }
            set {
                if ((this.IntegrationFlagField.Equals(value) != true)) {
                    this.IntegrationFlagField = value;
                    this.RaisePropertyChanged("IntegrationFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntrntlShip {
            get {
                return this.IntrntlShipField;
            }
            set {
                if ((this.IntrntlShipField.Equals(value) != true)) {
                    this.IntrntlShipField = value;
                    this.RaisePropertyChanged("IntrntlShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvPerPackLine {
            get {
                return this.InvPerPackLineField;
            }
            set {
                if ((this.InvPerPackLineField.Equals(value) != true)) {
                    this.InvPerPackLineField = value;
                    this.RaisePropertyChanged("InvPerPackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvcOrderCmpDflt {
            get {
                return this.InvcOrderCmpDfltField;
            }
            set {
                if ((this.InvcOrderCmpDfltField.Equals(value) != true)) {
                    this.InvcOrderCmpDfltField = value;
                    this.RaisePropertyChanged("InvcOrderCmpDflt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLLBAnnualHomeCap {
            get {
                return this.LLLBAnnualHomeCapField;
            }
            set {
                if ((this.LLLBAnnualHomeCapField.Equals(value) != true)) {
                    this.LLLBAnnualHomeCapField = value;
                    this.RaisePropertyChanged("LLLBAnnualHomeCap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLLBAnnualPartPenCap {
            get {
                return this.LLLBAnnualPartPenCapField;
            }
            set {
                if ((this.LLLBAnnualPartPenCapField.Equals(value) != true)) {
                    this.LLLBAnnualPartPenCapField = value;
                    this.RaisePropertyChanged("LLLBAnnualPartPenCap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLLBAnnualResiCap {
            get {
                return this.LLLBAnnualResiCapField;
            }
            set {
                if ((this.LLLBAnnualResiCapField.Equals(value) != true)) {
                    this.LLLBAnnualResiCapField = value;
                    this.RaisePropertyChanged("LLLBAnnualResiCap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLLBAnnualSelfFndCap {
            get {
                return this.LLLBAnnualSelfFndCapField;
            }
            set {
                if ((this.LLLBAnnualSelfFndCapField.Equals(value) != true)) {
                    this.LLLBAnnualSelfFndCapField = value;
                    this.RaisePropertyChanged("LLLBAnnualSelfFndCap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LLLBAsAtDate {
            get {
                return this.LLLBAsAtDateField;
            }
            set {
                if ((this.LLLBAsAtDateField.Equals(value) != true)) {
                    this.LLLBAsAtDateField = value;
                    this.RaisePropertyChanged("LLLBAsAtDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LLLBAssetAssess {
            get {
                return this.LLLBAssetAssessField;
            }
            set {
                if ((this.LLLBAssetAssessField.Equals(value) != true)) {
                    this.LLLBAssetAssessField = value;
                    this.RaisePropertyChanged("LLLBAssetAssess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLLBLifeTimeCap {
            get {
                return this.LLLBLifeTimeCapField;
            }
            set {
                if ((this.LLLBLifeTimeCapField.Equals(value) != true)) {
                    this.LLLBLifeTimeCapField = value;
                    this.RaisePropertyChanged("LLLBLifeTimeCap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLLBMeansTestAmt {
            get {
                return this.LLLBMeansTestAmtField;
            }
            set {
                if ((this.LLLBMeansTestAmtField.Equals(value) != true)) {
                    this.LLLBMeansTestAmtField = value;
                    this.RaisePropertyChanged("LLLBMeansTestAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLLBMeansTestFeeAmt {
            get {
                return this.LLLBMeansTestFeeAmtField;
            }
            set {
                if ((this.LLLBMeansTestFeeAmtField.Equals(value) != true)) {
                    this.LLLBMeansTestFeeAmtField = value;
                    this.RaisePropertyChanged("LLLBMeansTestFeeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LLLBPrevEntryDate {
            get {
                return this.LLLBPrevEntryDateField;
            }
            set {
                if ((this.LLLBPrevEntryDateField.Equals(value) != true)) {
                    this.LLLBPrevEntryDateField = value;
                    this.RaisePropertyChanged("LLLBPrevEntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOQBookCaFinishing {
            get {
                return this.LOQBookCaFinishingField;
            }
            set {
                if ((this.LOQBookCaFinishingField.Equals(value) != true)) {
                    this.LOQBookCaFinishingField = value;
                    this.RaisePropertyChanged("LOQBookCaFinishing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOQBookCaPress {
            get {
                return this.LOQBookCaPressField;
            }
            set {
                if ((this.LOQBookCaPressField.Equals(value) != true)) {
                    this.LOQBookCaPressField = value;
                    this.RaisePropertyChanged("LOQBookCaPress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOQBookCapaper {
            get {
                return this.LOQBookCapaperField;
            }
            set {
                if ((this.LOQBookCapaperField.Equals(value) != true)) {
                    this.LOQBookCapaperField = value;
                    this.RaisePropertyChanged("LOQBookCapaper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOQBookCatPlates {
            get {
                return this.LOQBookCatPlatesField;
            }
            set {
                if ((this.LOQBookCatPlatesField.Equals(value) != true)) {
                    this.LOQBookCatPlatesField = value;
                    this.RaisePropertyChanged("LOQBookCatPlates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOQBookPCFinishing {
            get {
                return this.LOQBookPCFinishingField;
            }
            set {
                if ((this.LOQBookPCFinishingField.Equals(value) != true)) {
                    this.LOQBookPCFinishingField = value;
                    this.RaisePropertyChanged("LOQBookPCFinishing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOQBookPCPaper {
            get {
                return this.LOQBookPCPaperField;
            }
            set {
                if ((this.LOQBookPCPaperField.Equals(value) != true)) {
                    this.LOQBookPCPaperField = value;
                    this.RaisePropertyChanged("LOQBookPCPaper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOQBookPCPlates {
            get {
                return this.LOQBookPCPlatesField;
            }
            set {
                if ((this.LOQBookPCPlatesField.Equals(value) != true)) {
                    this.LOQBookPCPlatesField = value;
                    this.RaisePropertyChanged("LOQBookPCPlates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOQBookPCPress {
            get {
                return this.LOQBookPCPressField;
            }
            set {
                if ((this.LOQBookPCPressField.Equals(value) != true)) {
                    this.LOQBookPCPressField = value;
                    this.RaisePropertyChanged("LOQBookPCPress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOQPrepressStyle {
            get {
                return this.LOQPrepressStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.LOQPrepressStyleField, value) != true)) {
                    this.LOQPrepressStyleField = value;
                    this.RaisePropertyChanged("LOQPrepressStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOQVariations {
            get {
                return this.LOQVariationsField;
            }
            set {
                if ((this.LOQVariationsField.Equals(value) != true)) {
                    this.LOQVariationsField = value;
                    this.RaisePropertyChanged("LOQVariations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LangNameID {
            get {
                return this.LangNameIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LangNameIDField, value) != true)) {
                    this.LangNameIDField = value;
                    this.RaisePropertyChanged("LangNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageDescription {
            get {
                return this.LanguageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageDescriptionField, value) != true)) {
                    this.LanguageDescriptionField = value;
                    this.RaisePropertyChanged("LanguageDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LateBuffer {
            get {
                return this.LateBufferField;
            }
            set {
                if ((this.LateBufferField.Equals(value) != true)) {
                    this.LateBufferField = value;
                    this.RaisePropertyChanged("LateBuffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalName {
            get {
                return this.LegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNameField, value) != true)) {
                    this.LegalNameField = value;
                    this.RaisePropertyChanged("LegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LetterOfInstr {
            get {
                return this.LetterOfInstrField;
            }
            set {
                if ((this.LetterOfInstrField.Equals(value) != true)) {
                    this.LetterOfInstrField = value;
                    this.RaisePropertyChanged("LetterOfInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkPortNum {
            get {
                return this.LinkPortNumField;
            }
            set {
                if ((this.LinkPortNumField.Equals(value) != true)) {
                    this.LinkPortNumField = value;
                    this.RaisePropertyChanged("LinkPortNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCode {
            get {
                return this.ListCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCodeField, value) != true)) {
                    this.ListCodeField = value;
                    this.RaisePropertyChanged("ListCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXAccountNumber {
            get {
                return this.MXAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MXAccountNumberField, value) != true)) {
                    this.MXAccountNumberField = value;
                    this.RaisePropertyChanged("MXAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXCURP {
            get {
                return this.MXCURPField;
            }
            set {
                if ((object.ReferenceEquals(this.MXCURPField, value) != true)) {
                    this.MXCURPField = value;
                    this.RaisePropertyChanged("MXCURP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMunicipio {
            get {
                return this.MXMunicipioField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMunicipioField, value) != true)) {
                    this.MXMunicipioField = value;
                    this.RaisePropertyChanged("MXMunicipio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MYIndustryCode {
            get {
                return this.MYIndustryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MYIndustryCodeField, value) != true)) {
                    this.MYIndustryCodeField = value;
                    this.RaisePropertyChanged("MYIndustryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagedVendID {
            get {
                return this.ManagedVendIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagedVendIDField, value) != true)) {
                    this.ManagedVendIDField = value;
                    this.RaisePropertyChanged("ManagedVendID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManagedVendNum {
            get {
                return this.ManagedVendNumField;
            }
            set {
                if ((this.ManagedVendNumField.Equals(value) != true)) {
                    this.ManagedVendNumField = value;
                    this.RaisePropertyChanged("ManagedVendNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkUpDescription {
            get {
                return this.MarkUpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkUpDescriptionField, value) != true)) {
                    this.MarkUpDescriptionField = value;
                    this.RaisePropertyChanged("MarkUpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkUpID {
            get {
                return this.MarkUpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkUpIDField, value) != true)) {
                    this.MarkUpIDField = value;
                    this.RaisePropertyChanged("MarkUpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCashRecITCode {
            get {
                return this.MiscCashRecITCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCashRecITCodeField, value) != true)) {
                    this.MiscCashRecITCodeField = value;
                    this.RaisePropertyChanged("MiscCashRecITCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAChildCrdAvail {
            get {
                return this.NAChildCrdAvailField;
            }
            set {
                if ((this.NAChildCrdAvailField.Equals(value) != true)) {
                    this.NAChildCrdAvailField = value;
                    this.RaisePropertyChanged("NAChildCrdAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NACreditCust {
            get {
                return this.NACreditCustField;
            }
            set {
                if ((this.NACreditCustField.Equals(value) != true)) {
                    this.NACreditCustField = value;
                    this.RaisePropertyChanged("NACreditCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NACreditIsShare {
            get {
                return this.NACreditIsShareField;
            }
            set {
                if ((this.NACreditIsShareField.Equals(value) != true)) {
                    this.NACreditIsShareField = value;
                    this.RaisePropertyChanged("NACreditIsShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NACreditPreferenceList {
            get {
                return this.NACreditPreferenceListField;
            }
            set {
                if ((object.ReferenceEquals(this.NACreditPreferenceListField, value) != true)) {
                    this.NACreditPreferenceListField = value;
                    this.RaisePropertyChanged("NACreditPreferenceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NACreditSharedPrc {
            get {
                return this.NACreditSharedPrcField;
            }
            set {
                if ((this.NACreditSharedPrcField.Equals(value) != true)) {
                    this.NACreditSharedPrcField = value;
                    this.RaisePropertyChanged("NACreditSharedPrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NACreditUpdated {
            get {
                return this.NACreditUpdatedField;
            }
            set {
                if ((this.NACreditUpdatedField.Equals(value) != true)) {
                    this.NACreditUpdatedField = value;
                    this.RaisePropertyChanged("NACreditUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAOwnCreditAvail {
            get {
                return this.NAOwnCreditAvailField;
            }
            set {
                if ((this.NAOwnCreditAvailField.Equals(value) != true)) {
                    this.NAOwnCreditAvailField = value;
                    this.RaisePropertyChanged("NAOwnCreditAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAOwnCreditUsedDsp {
            get {
                return this.NAOwnCreditUsedDspField;
            }
            set {
                if ((this.NAOwnCreditUsedDspField.Equals(value) != true)) {
                    this.NAOwnCreditUsedDspField = value;
                    this.RaisePropertyChanged("NAOwnCreditUsedDsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAParentCrdAvail {
            get {
                return this.NAParentCrdAvailField;
            }
            set {
                if ((this.NAParentCrdAvailField.Equals(value) != true)) {
                    this.NAParentCrdAvailField = value;
                    this.RaisePropertyChanged("NAParentCrdAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NAParentCreditIsUsed {
            get {
                return this.NAParentCreditIsUsedField;
            }
            set {
                if ((this.NAParentCreditIsUsedField.Equals(value) != true)) {
                    this.NAParentCreditIsUsedField = value;
                    this.RaisePropertyChanged("NAParentCreditIsUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAParentCreditPrc {
            get {
                return this.NAParentCreditPrcField;
            }
            set {
                if ((this.NAParentCreditPrcField.Equals(value) != true)) {
                    this.NAParentCreditPrcField = value;
                    this.RaisePropertyChanged("NAParentCreditPrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAParentsCreditUsedDsp {
            get {
                return this.NAParentsCreditUsedDspField;
            }
            set {
                if ((this.NAParentsCreditUsedDspField.Equals(value) != true)) {
                    this.NAParentsCreditUsedDspField = value;
                    this.RaisePropertyChanged("NAParentsCreditUsedDsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAPoolCrdAvail {
            get {
                return this.NAPoolCrdAvailField;
            }
            set {
                if ((this.NAPoolCrdAvailField.Equals(value) != true)) {
                    this.NAPoolCrdAvailField = value;
                    this.RaisePropertyChanged("NAPoolCrdAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAPoolCreditUsed {
            get {
                return this.NAPoolCreditUsedField;
            }
            set {
                if ((this.NAPoolCreditUsedField.Equals(value) != true)) {
                    this.NAPoolCreditUsedField = value;
                    this.RaisePropertyChanged("NAPoolCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NARlsClassCode {
            get {
                return this.NARlsClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NARlsClassCodeField, value) != true)) {
                    this.NARlsClassCodeField = value;
                    this.RaisePropertyChanged("NARlsClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NASharedCreditUsedDsp {
            get {
                return this.NASharedCreditUsedDspField;
            }
            set {
                if ((this.NASharedCreditUsedDspField.Equals(value) != true)) {
                    this.NASharedCreditUsedDspField = value;
                    this.RaisePropertyChanged("NASharedCreditUsedDsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NATotalCreditAvail {
            get {
                return this.NATotalCreditAvailField;
            }
            set {
                if ((this.NATotalCreditAvailField.Equals(value) != true)) {
                    this.NATotalCreditAvailField = value;
                    this.RaisePropertyChanged("NATotalCreditAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NATotalCreditUsed {
            get {
                return this.NATotalCreditUsedField;
            }
            set {
                if ((this.NATotalCreditUsedField.Equals(value) != true)) {
                    this.NATotalCreditUsedField = value;
                    this.RaisePropertyChanged("NATotalCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoContact {
            get {
                return this.NoContactField;
            }
            set {
                if ((this.NoContactField.Equals(value) != true)) {
                    this.NoContactField = value;
                    this.RaisePropertyChanged("NoContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStdPkg {
            get {
                return this.NonStdPkgField;
            }
            set {
                if ((this.NonStdPkgField.Equals(value) != true)) {
                    this.NonStdPkgField = value;
                    this.RaisePropertyChanged("NonStdPkg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyEMail {
            get {
                return this.NotifyEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyEMailField, value) != true)) {
                    this.NotifyEMailField = value;
                    this.RaisePropertyChanged("NotifyEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyFlag {
            get {
                return this.NotifyFlagField;
            }
            set {
                if ((this.NotifyFlagField.Equals(value) != true)) {
                    this.NotifyFlagField = value;
                    this.RaisePropertyChanged("NotifyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfEmployees {
            get {
                return this.NumberOfEmployeesField;
            }
            set {
                if ((this.NumberOfEmployeesField.Equals(value) != true)) {
                    this.NumberOfEmployeesField = value;
                    this.RaisePropertyChanged("NumberOfEmployees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSSaveAs {
            get {
                return this.OTSSaveAsField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSSaveAsField, value) != true)) {
                    this.OTSSaveAsField = value;
                    this.RaisePropertyChanged("OTSSaveAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSmartString {
            get {
                return this.OTSmartStringField;
            }
            set {
                if ((this.OTSmartStringField.Equals(value) != true)) {
                    this.OTSmartStringField = value;
                    this.RaisePropertyChanged("OTSmartString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OneInvPerPS {
            get {
                return this.OneInvPerPSField;
            }
            set {
                if ((this.OneInvPerPSField.Equals(value) != true)) {
                    this.OneInvPerPSField = value;
                    this.RaisePropertyChanged("OneInvPerPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHoldForReview {
            get {
                return this.OrderHoldForReviewField;
            }
            set {
                if ((this.OrderHoldForReviewField.Equals(value) != true)) {
                    this.OrderHoldForReviewField = value;
                    this.RaisePropertyChanged("OrderHoldForReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgRegCode {
            get {
                return this.OrgRegCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgRegCodeField, value) != true)) {
                    this.OrgRegCodeField = value;
                    this.RaisePropertyChanged("OrgRegCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankCode {
            get {
                return this.OurBankCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankCodeField, value) != true)) {
                    this.OurBankCodeField = value;
                    this.RaisePropertyChanged("OurBankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurSupplierCode {
            get {
                return this.OurSupplierCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurSupplierCodeField, value) != true)) {
                    this.OurSupplierCodeField = value;
                    this.RaisePropertyChanged("OurSupplierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideRlsClass {
            get {
                return this.OverrideRlsClassField;
            }
            set {
                if ((this.OverrideRlsClassField.Equals(value) != true)) {
                    this.OverrideRlsClassField = value;
                    this.RaisePropertyChanged("OverrideRlsClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OversPct {
            get {
                return this.OversPctField;
            }
            set {
                if ((this.OversPctField.Equals(value) != true)) {
                    this.OversPctField = value;
                    this.RaisePropertyChanged("OversPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ownership {
            get {
                return this.OwnershipField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnershipField, value) != true)) {
                    this.OwnershipField = value;
                    this.RaisePropertyChanged("Ownership");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PBTerms {
            get {
                return this.PBTermsField;
            }
            set {
                if ((this.PBTermsField.Equals(value) != true)) {
                    this.PBTermsField = value;
                    this.RaisePropertyChanged("PBTerms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PECollectionAgent {
            get {
                return this.PECollectionAgentField;
            }
            set {
                if ((this.PECollectionAgentField.Equals(value) != true)) {
                    this.PECollectionAgentField = value;
                    this.RaisePropertyChanged("PECollectionAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEDocumentID {
            get {
                return this.PEDocumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEDocumentIDField, value) != true)) {
                    this.PEDocumentIDField = value;
                    this.RaisePropertyChanged("PEDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PEGoodsContributor {
            get {
                return this.PEGoodsContributorField;
            }
            set {
                if ((this.PEGoodsContributorField.Equals(value) != true)) {
                    this.PEGoodsContributorField = value;
                    this.RaisePropertyChanged("PEGoodsContributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeAddress1 {
            get {
                return this.PEGuaranteeAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeAddress1Field, value) != true)) {
                    this.PEGuaranteeAddress1Field = value;
                    this.RaisePropertyChanged("PEGuaranteeAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeAddress2 {
            get {
                return this.PEGuaranteeAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeAddress2Field, value) != true)) {
                    this.PEGuaranteeAddress2Field = value;
                    this.RaisePropertyChanged("PEGuaranteeAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeAddress3 {
            get {
                return this.PEGuaranteeAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeAddress3Field, value) != true)) {
                    this.PEGuaranteeAddress3Field = value;
                    this.RaisePropertyChanged("PEGuaranteeAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeCity {
            get {
                return this.PEGuaranteeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeCityField, value) != true)) {
                    this.PEGuaranteeCityField = value;
                    this.RaisePropertyChanged("PEGuaranteeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeCountry {
            get {
                return this.PEGuaranteeCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeCountryField, value) != true)) {
                    this.PEGuaranteeCountryField = value;
                    this.RaisePropertyChanged("PEGuaranteeCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeName {
            get {
                return this.PEGuaranteeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeNameField, value) != true)) {
                    this.PEGuaranteeNameField = value;
                    this.RaisePropertyChanged("PEGuaranteeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteePhoneNum {
            get {
                return this.PEGuaranteePhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteePhoneNumField, value) != true)) {
                    this.PEGuaranteePhoneNumField = value;
                    this.RaisePropertyChanged("PEGuaranteePhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeState {
            get {
                return this.PEGuaranteeStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeStateField, value) != true)) {
                    this.PEGuaranteeStateField = value;
                    this.RaisePropertyChanged("PEGuaranteeState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeTaxID {
            get {
                return this.PEGuaranteeTaxIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeTaxIDField, value) != true)) {
                    this.PEGuaranteeTaxIDField = value;
                    this.RaisePropertyChanged("PEGuaranteeTaxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeZip {
            get {
                return this.PEGuaranteeZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeZipField, value) != true)) {
                    this.PEGuaranteeZipField = value;
                    this.RaisePropertyChanged("PEGuaranteeZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEIdentityDocType {
            get {
                return this.PEIdentityDocTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PEIdentityDocTypeField, value) != true)) {
                    this.PEIdentityDocTypeField = value;
                    this.RaisePropertyChanged("PEIdentityDocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PENoAddress {
            get {
                return this.PENoAddressField;
            }
            set {
                if ((this.PENoAddressField.Equals(value) != true)) {
                    this.PENoAddressField = value;
                    this.RaisePropertyChanged("PENoAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PENotFound {
            get {
                return this.PENotFoundField;
            }
            set {
                if ((this.PENotFoundField.Equals(value) != true)) {
                    this.PENotFoundField = value;
                    this.RaisePropertyChanged("PENotFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PEWithholdAgent {
            get {
                return this.PEWithholdAgentField;
            }
            set {
                if ((this.PEWithholdAgentField.Equals(value) != true)) {
                    this.PEWithholdAgentField = value;
                    this.RaisePropertyChanged("PEWithholdAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PIFlag {
            get {
                return this.PIFlagField;
            }
            set {
                if ((this.PIFlagField.Equals(value) != true)) {
                    this.PIFlagField = value;
                    this.RaisePropertyChanged("PIFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PMUID {
            get {
                return this.PMUIDField;
            }
            set {
                if ((this.PMUIDField.Equals(value) != true)) {
                    this.PMUIDField = value;
                    this.RaisePropertyChanged("PMUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParamCode {
            get {
                return this.ParamCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamCodeField, value) != true)) {
                    this.ParamCodeField = value;
                    this.RaisePropertyChanged("ParamCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCustID {
            get {
                return this.ParentCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCustIDField, value) != true)) {
                    this.ParentCustIDField = value;
                    this.RaisePropertyChanged("ParentCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentCustNum {
            get {
                return this.ParentCustNumField;
            }
            set {
                if ((this.ParentCustNumField.Equals(value) != true)) {
                    this.ParentCustNumField = value;
                    this.RaisePropertyChanged("ParentCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayMethodName {
            get {
                return this.PayMethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayMethodNameField, value) != true)) {
                    this.PayMethodNameField = value;
                    this.RaisePropertyChanged("PayMethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PayMethodSummarizePerCustomer {
            get {
                return this.PayMethodSummarizePerCustomerField;
            }
            set {
                if ((this.PayMethodSummarizePerCustomerField.Equals(value) != true)) {
                    this.PayMethodSummarizePerCustomerField = value;
                    this.RaisePropertyChanged("PayMethodSummarizePerCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayMethodType {
            get {
                return this.PayMethodTypeField;
            }
            set {
                if ((this.PayMethodTypeField.Equals(value) != true)) {
                    this.PayMethodTypeField = value;
                    this.RaisePropertyChanged("PayMethodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PendingTerritoryID {
            get {
                return this.PendingTerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PendingTerritoryIDField, value) != true)) {
                    this.PendingTerritoryIDField = value;
                    this.RaisePropertyChanged("PendingTerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PeriodicBilling {
            get {
                return this.PeriodicBillingField;
            }
            set {
                if ((this.PeriodicBillingField.Equals(value) != true)) {
                    this.PeriodicBillingField = value;
                    this.RaisePropertyChanged("PeriodicBilling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodicityCode {
            get {
                return this.PeriodicityCodeField;
            }
            set {
                if ((this.PeriodicityCodeField.Equals(value) != true)) {
                    this.PeriodicityCodeField = value;
                    this.RaisePropertyChanged("PeriodicityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodicityDesc {
            get {
                return this.PeriodicityDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodicityDescField, value) != true)) {
                    this.PeriodicityDescField = value;
                    this.RaisePropertyChanged("PeriodicityDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodicityList {
            get {
                return this.PeriodicityListField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodicityListField, value) != true)) {
                    this.PeriodicityListField = value;
                    this.RaisePropertyChanged("PeriodicityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNum {
            get {
                return this.PhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumField, value) != true)) {
                    this.PhoneNumField = value;
                    this.RaisePropertyChanged("PhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredBank {
            get {
                return this.PreferredBankField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredBankField, value) != true)) {
                    this.PreferredBankField = value;
                    this.RaisePropertyChanged("PreferredBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredBankBankName {
            get {
                return this.PreferredBankBankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredBankBankNameField, value) != true)) {
                    this.PreferredBankBankNameField = value;
                    this.RaisePropertyChanged("PreferredBankBankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredBankDescription {
            get {
                return this.PreferredBankDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredBankDescriptionField, value) != true)) {
                    this.PreferredBankDescriptionField = value;
                    this.RaisePropertyChanged("PreferredBankDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceTolerance {
            get {
                return this.PriceToleranceField;
            }
            set {
                if ((this.PriceToleranceField.Equals(value) != true)) {
                    this.PriceToleranceField = value;
                    this.RaisePropertyChanged("PriceTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimBCon {
            get {
                return this.PrimBConField;
            }
            set {
                if ((this.PrimBConField.Equals(value) != true)) {
                    this.PrimBConField = value;
                    this.RaisePropertyChanged("PrimBCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimPCon {
            get {
                return this.PrimPConField;
            }
            set {
                if ((this.PrimPConField.Equals(value) != true)) {
                    this.PrimPConField = value;
                    this.RaisePropertyChanged("PrimPCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimSCon {
            get {
                return this.PrimSConField;
            }
            set {
                if ((this.PrimSConField.Equals(value) != true)) {
                    this.PrimSConField = value;
                    this.RaisePropertyChanged("PrimSCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintAck {
            get {
                return this.PrintAckField;
            }
            set {
                if ((this.PrintAckField.Equals(value) != true)) {
                    this.PrintAckField = value;
                    this.RaisePropertyChanged("PrintAck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintLabels {
            get {
                return this.PrintLabelsField;
            }
            set {
                if ((this.PrintLabelsField.Equals(value) != true)) {
                    this.PrintLabelsField = value;
                    this.RaisePropertyChanged("PrintLabels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintStatements {
            get {
                return this.PrintStatementsField;
            }
            set {
                if ((this.PrintStatementsField.Equals(value) != true)) {
                    this.PrintStatementsField = value;
                    this.RaisePropertyChanged("PrintStatements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RACode {
            get {
                return this.RACodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RACodeField, value) != true)) {
                    this.RACodeField = value;
                    this.RaisePropertyChanged("RACode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RASchedCdRADesc {
            get {
                return this.RASchedCdRADescField;
            }
            set {
                if ((object.ReferenceEquals(this.RASchedCdRADescField, value) != true)) {
                    this.RASchedCdRADescField = value;
                    this.RaisePropertyChanged("RASchedCdRADesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RebateForm {
            get {
                return this.RebateFormField;
            }
            set {
                if ((object.ReferenceEquals(this.RebateFormField, value) != true)) {
                    this.RebateFormField = value;
                    this.RaisePropertyChanged("RebateForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RebateVendorNum {
            get {
                return this.RebateVendorNumField;
            }
            set {
                if ((this.RebateVendorNumField.Equals(value) != true)) {
                    this.RebateVendorNumField = value;
                    this.RaisePropertyChanged("RebateVendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNotes {
            get {
                return this.RefNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNotesField, value) != true)) {
                    this.RefNotesField = value;
                    this.RaisePropertyChanged("RefNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationCode {
            get {
                return this.RegistrationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationCodeField, value) != true)) {
                    this.RegistrationCodeField = value;
                    this.RaisePropertyChanged("RegistrationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReminderCode {
            get {
                return this.ReminderCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReminderCodeField, value) != true)) {
                    this.ReminderCodeField = value;
                    this.RaisePropertyChanged("ReminderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReminderGroupDesc {
            get {
                return this.ReminderGroupDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReminderGroupDescField, value) != true)) {
                    this.ReminderGroupDescField = value;
                    this.RaisePropertyChanged("ReminderGroupDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResDelivery {
            get {
                return this.ResDeliveryField;
            }
            set {
                if ((this.ResDeliveryField.Equals(value) != true)) {
                    this.ResDeliveryField = value;
                    this.RaisePropertyChanged("ResDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResaleID {
            get {
                return this.ResaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResaleIDField, value) != true)) {
                    this.ResaleIDField = value;
                    this.RaisePropertyChanged("ResaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReservePriDescription {
            get {
                return this.ReservePriDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservePriDescriptionField, value) != true)) {
                    this.ReservePriDescriptionField = value;
                    this.RaisePropertyChanged("ReservePriDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReservePriorityCode {
            get {
                return this.ReservePriorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservePriorityCodeField, value) != true)) {
                    this.ReservePriorityCodeField = value;
                    this.RaisePropertyChanged("ReservePriorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RfqAttachAllow {
            get {
                return this.RfqAttachAllowField;
            }
            set {
                if ((this.RfqAttachAllowField.Equals(value) != true)) {
                    this.RfqAttachAllowField = value;
                    this.RaisePropertyChanged("RfqAttachAllow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode {
            get {
                return this.SalesRepCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCodeField, value) != true)) {
                    this.SalesRepCodeField = value;
                    this.RaisePropertyChanged("SalesRepCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName {
            get {
                return this.SalesRepNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepNameField, value) != true)) {
                    this.SalesRepNameField = value;
                    this.RaisePropertyChanged("SalesRepName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatDelivery {
            get {
                return this.SatDeliveryField;
            }
            set {
                if ((this.SatDeliveryField.Equals(value) != true)) {
                    this.SatDeliveryField = value;
                    this.RaisePropertyChanged("SatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatPickup {
            get {
                return this.SatPickupField;
            }
            set {
                if ((this.SatPickupField.Equals(value) != true)) {
                    this.SatPickupField = value;
                    this.RaisePropertyChanged("SatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchIDs {
            get {
                return this.SearchIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchIDsField, value) != true)) {
                    this.SearchIDsField = value;
                    this.RaisePropertyChanged("SearchIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendShipment {
            get {
                return this.SendShipmentField;
            }
            set {
                if ((this.SendShipmentField.Equals(value) != true)) {
                    this.SendShipmentField = value;
                    this.RaisePropertyChanged("SendShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAlert {
            get {
                return this.ServAlertField;
            }
            set {
                if ((this.ServAlertField.Equals(value) != true)) {
                    this.ServAlertField = value;
                    this.RaisePropertyChanged("ServAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServAuthNum {
            get {
                return this.ServAuthNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ServAuthNumField, value) != true)) {
                    this.ServAuthNumField = value;
                    this.RaisePropertyChanged("ServAuthNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServDeliveryDate {
            get {
                return this.ServDeliveryDateField;
            }
            set {
                if ((this.ServDeliveryDateField.Equals(value) != true)) {
                    this.ServDeliveryDateField = value;
                    this.RaisePropertyChanged("ServDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServHomeDel {
            get {
                return this.ServHomeDelField;
            }
            set {
                if ((this.ServHomeDelField.Equals(value) != true)) {
                    this.ServHomeDelField = value;
                    this.RaisePropertyChanged("ServHomeDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServInstruct {
            get {
                return this.ServInstructField;
            }
            set {
                if ((object.ReferenceEquals(this.ServInstructField, value) != true)) {
                    this.ServInstructField = value;
                    this.RaisePropertyChanged("ServInstruct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServPhone {
            get {
                return this.ServPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServPhoneField, value) != true)) {
                    this.ServPhoneField = value;
                    this.RaisePropertyChanged("ServPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef1 {
            get {
                return this.ServRef1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef1Field, value) != true)) {
                    this.ServRef1Field = value;
                    this.RaisePropertyChanged("ServRef1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef2 {
            get {
                return this.ServRef2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef2Field, value) != true)) {
                    this.ServRef2Field = value;
                    this.RaisePropertyChanged("ServRef2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef3 {
            get {
                return this.ServRef3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef3Field, value) != true)) {
                    this.ServRef3Field = value;
                    this.RaisePropertyChanged("ServRef3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef4 {
            get {
                return this.ServRef4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef4Field, value) != true)) {
                    this.ServRef4Field = value;
                    this.RaisePropertyChanged("ServRef4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef5 {
            get {
                return this.ServRef5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef5Field, value) != true)) {
                    this.ServRef5Field = value;
                    this.RaisePropertyChanged("ServRef5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServRelease {
            get {
                return this.ServReleaseField;
            }
            set {
                if ((this.ServReleaseField.Equals(value) != true)) {
                    this.ServReleaseField = value;
                    this.RaisePropertyChanged("ServRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSignature {
            get {
                return this.ServSignatureField;
            }
            set {
                if ((this.ServSignatureField.Equals(value) != true)) {
                    this.ServSignatureField = value;
                    this.RaisePropertyChanged("ServSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipExprtDeclartn {
            get {
                return this.ShipExprtDeclartnField;
            }
            set {
                if ((this.ShipExprtDeclartnField.Equals(value) != true)) {
                    this.ShipExprtDeclartnField = value;
                    this.RaisePropertyChanged("ShipExprtDeclartn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToTerrList {
            get {
                return this.ShipToTerrListField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToTerrListField, value) != true)) {
                    this.ShipToTerrListField = value;
                    this.RaisePropertyChanged("ShipToTerrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaDescription {
            get {
                return this.ShipViaDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaDescriptionField, value) != true)) {
                    this.ShipViaDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaWebDesc {
            get {
                return this.ShipViaWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaWebDescField, value) != true)) {
                    this.ShipViaWebDescField = value;
                    this.RaisePropertyChanged("ShipViaWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingQualifier {
            get {
                return this.ShippingQualifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingQualifierField, value) != true)) {
                    this.ShippingQualifierField = value;
                    this.RaisePropertyChanged("ShippingQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingQualifierDesc {
            get {
                return this.ShippingQualifierDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingQualifierDescField, value) != true)) {
                    this.ShippingQualifierDescField = value;
                    this.RaisePropertyChanged("ShippingQualifierDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SyncToExternalCRM {
            get {
                return this.SyncToExternalCRMField;
            }
            set {
                if ((this.SyncToExternalCRMField.Equals(value) != true)) {
                    this.SyncToExternalCRMField = value;
                    this.RaisePropertyChanged("SyncToExternalCRM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TATaxAuthorityDescription {
            get {
                return this.TATaxAuthorityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TATaxAuthorityDescriptionField, value) != true)) {
                    this.TATaxAuthorityDescriptionField = value;
                    this.RaisePropertyChanged("TATaxAuthorityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string THBranchID {
            get {
                return this.THBranchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.THBranchIDField, value) != true)) {
                    this.THBranchIDField = value;
                    this.RaisePropertyChanged("THBranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIRegNum {
            get {
                return this.TWGUIRegNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIRegNumField, value) != true)) {
                    this.TWGUIRegNumField = value;
                    this.RaisePropertyChanged("TWGUIRegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxAuthorityCode {
            get {
                return this.TaxAuthorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxAuthorityCodeField, value) != true)) {
                    this.TaxAuthorityCodeField = value;
                    this.RaisePropertyChanged("TaxAuthorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxMethod {
            get {
                return this.TaxMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxMethodField, value) != true)) {
                    this.TaxMethodField = value;
                    this.RaisePropertyChanged("TaxMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegReason {
            get {
                return this.TaxRegReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegReasonField, value) != true)) {
                    this.TaxRegReasonField = value;
                    this.RaisePropertyChanged("TaxRegReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionDescription {
            get {
                return this.TaxRegionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionDescriptionField, value) != true)) {
                    this.TaxRegionDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaxRoundRule {
            get {
                return this.TaxRoundRuleField;
            }
            set {
                if ((this.TaxRoundRuleField.Equals(value) != true)) {
                    this.TaxRoundRuleField = value;
                    this.RaisePropertyChanged("TaxRoundRule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCode {
            get {
                return this.TermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeField, value) != true)) {
                    this.TermsCodeField = value;
                    this.RaisePropertyChanged("TermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsDescription {
            get {
                return this.TermsDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsDescriptionField, value) != true)) {
                    this.TermsDescriptionField = value;
                    this.RaisePropertyChanged("TermsDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritoryID {
            get {
                return this.TerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryIDField, value) != true)) {
                    this.TerritoryIDField = value;
                    this.RaisePropertyChanged("TerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TerritoryLock {
            get {
                return this.TerritoryLockField;
            }
            set {
                if ((this.TerritoryLockField.Equals(value) != true)) {
                    this.TerritoryLockField = value;
                    this.RaisePropertyChanged("TerritoryLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritoryTerritoryDesc {
            get {
                return this.TerritoryTerritoryDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryTerritoryDescField, value) != true)) {
                    this.TerritoryTerritoryDescField = value;
                    this.RaisePropertyChanged("TerritoryTerritoryDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ThirdPLCust {
            get {
                return this.ThirdPLCustField;
            }
            set {
                if ((this.ThirdPLCustField.Equals(value) != true)) {
                    this.ThirdPLCustField = value;
                    this.RaisePropertyChanged("ThirdPLCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TickerLocation {
            get {
                return this.TickerLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerLocationField, value) != true)) {
                    this.TickerLocationField = value;
                    this.RaisePropertyChanged("TickerLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TickerSymbol {
            get {
                return this.TickerSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerSymbolField, value) != true)) {
                    this.TickerSymbolField = value;
                    this.RaisePropertyChanged("TickerSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotGlbInvoiceCredit {
            get {
                return this.TotGlbInvoiceCreditField;
            }
            set {
                if ((this.TotGlbInvoiceCreditField.Equals(value) != true)) {
                    this.TotGlbInvoiceCreditField = value;
                    this.RaisePropertyChanged("TotGlbInvoiceCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotGlbOpenCredit {
            get {
                return this.TotGlbOpenCreditField;
            }
            set {
                if ((this.TotGlbOpenCreditField.Equals(value) != true)) {
                    this.TotGlbOpenCreditField = value;
                    this.RaisePropertyChanged("TotGlbOpenCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotGlbOrderCredit {
            get {
                return this.TotGlbOrderCreditField;
            }
            set {
                if ((this.TotGlbOrderCreditField.Equals(value) != true)) {
                    this.TotGlbOrderCreditField = value;
                    this.RaisePropertyChanged("TotGlbOrderCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotGlbPICredit {
            get {
                return this.TotGlbPICreditField;
            }
            set {
                if ((this.TotGlbPICreditField.Equals(value) != true)) {
                    this.TotGlbPICreditField = value;
                    this.RaisePropertyChanged("TotGlbPICredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotInvoiceCredit {
            get {
                return this.TotInvoiceCreditField;
            }
            set {
                if ((this.TotInvoiceCreditField.Equals(value) != true)) {
                    this.TotInvoiceCreditField = value;
                    this.RaisePropertyChanged("TotInvoiceCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotLCCredit {
            get {
                return this.TotLCCreditField;
            }
            set {
                if ((this.TotLCCreditField.Equals(value) != true)) {
                    this.TotLCCreditField = value;
                    this.RaisePropertyChanged("TotLCCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotLCCumInvoices {
            get {
                return this.TotLCCumInvoicesField;
            }
            set {
                if ((this.TotLCCumInvoicesField.Equals(value) != true)) {
                    this.TotLCCumInvoicesField = value;
                    this.RaisePropertyChanged("TotLCCumInvoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotLCInvoiceBal {
            get {
                return this.TotLCInvoiceBalField;
            }
            set {
                if ((this.TotLCInvoiceBalField.Equals(value) != true)) {
                    this.TotLCInvoiceBalField = value;
                    this.RaisePropertyChanged("TotLCInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotLCOpenOrders {
            get {
                return this.TotLCOpenOrdersField;
            }
            set {
                if ((this.TotLCOpenOrdersField.Equals(value) != true)) {
                    this.TotLCOpenOrdersField = value;
                    this.RaisePropertyChanged("TotLCOpenOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotLCUsed {
            get {
                return this.TotLCUsedField;
            }
            set {
                if ((this.TotLCUsedField.Equals(value) != true)) {
                    this.TotLCUsedField = value;
                    this.RaisePropertyChanged("TotLCUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotOpenCredit {
            get {
                return this.TotOpenCreditField;
            }
            set {
                if ((this.TotOpenCreditField.Equals(value) != true)) {
                    this.TotOpenCreditField = value;
                    this.RaisePropertyChanged("TotOpenCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotOpenInvoices {
            get {
                return this.TotOpenInvoicesField;
            }
            set {
                if ((this.TotOpenInvoicesField.Equals(value) != true)) {
                    this.TotOpenInvoicesField = value;
                    this.RaisePropertyChanged("TotOpenInvoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotOpenInvoicesLC {
            get {
                return this.TotOpenInvoicesLCField;
            }
            set {
                if ((this.TotOpenInvoicesLCField.Equals(value) != true)) {
                    this.TotOpenInvoicesLCField = value;
                    this.RaisePropertyChanged("TotOpenInvoicesLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotOpenLC {
            get {
                return this.TotOpenLCField;
            }
            set {
                if ((this.TotOpenLCField.Equals(value) != true)) {
                    this.TotOpenLCField = value;
                    this.RaisePropertyChanged("TotOpenLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotOpenOrderLC {
            get {
                return this.TotOpenOrderLCField;
            }
            set {
                if ((this.TotOpenOrderLCField.Equals(value) != true)) {
                    this.TotOpenOrderLCField = value;
                    this.RaisePropertyChanged("TotOpenOrderLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotOpenOrders {
            get {
                return this.TotOpenOrdersField;
            }
            set {
                if ((this.TotOpenOrdersField.Equals(value) != true)) {
                    this.TotOpenOrdersField = value;
                    this.RaisePropertyChanged("TotOpenOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotOpenPI {
            get {
                return this.TotOpenPIField;
            }
            set {
                if ((this.TotOpenPIField.Equals(value) != true)) {
                    this.TotOpenPIField = value;
                    this.RaisePropertyChanged("TotOpenPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotOrderCredit {
            get {
                return this.TotOrderCreditField;
            }
            set {
                if ((this.TotOrderCreditField.Equals(value) != true)) {
                    this.TotOrderCreditField = value;
                    this.RaisePropertyChanged("TotOrderCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotPICredit {
            get {
                return this.TotPICreditField;
            }
            set {
                if ((this.TotPICreditField.Equals(value) != true)) {
                    this.TotPICreditField = value;
                    this.RaisePropertyChanged("TotPICredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradingPartnerName {
            get {
                return this.TradingPartnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TradingPartnerNameField, value) != true)) {
                    this.TradingPartnerNameField = value;
                    this.RaisePropertyChanged("TradingPartnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVEmailType {
            get {
                return this.UPSQVEmailTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVEmailTypeField, value) != true)) {
                    this.UPSQVEmailTypeField = value;
                    this.RaisePropertyChanged("UPSQVEmailType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVMemo {
            get {
                return this.UPSQVMemoField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVMemoField, value) != true)) {
                    this.UPSQVMemoField = value;
                    this.RaisePropertyChanged("UPSQVMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVShipFromName {
            get {
                return this.UPSQVShipFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVShipFromNameField, value) != true)) {
                    this.UPSQVShipFromNameField = value;
                    this.RaisePropertyChanged("UPSQVShipFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UPSQuantumView {
            get {
                return this.UPSQuantumViewField;
            }
            set {
                if ((this.UPSQuantumViewField.Equals(value) != true)) {
                    this.UPSQuantumViewField = value;
                    this.RaisePropertyChanged("UPSQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UndersPct {
            get {
                return this.UndersPctField;
            }
            set {
                if ((this.UndersPctField.Equals(value) != true)) {
                    this.UndersPctField = value;
                    this.RaisePropertyChanged("UndersPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidPayer {
            get {
                return this.ValidPayerField;
            }
            set {
                if ((this.ValidPayerField.Equals(value) != true)) {
                    this.ValidPayerField = value;
                    this.RaisePropertyChanged("ValidPayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidShipTo {
            get {
                return this.ValidShipToField;
            }
            set {
                if ((this.ValidShipToField.Equals(value) != true)) {
                    this.ValidShipToField = value;
                    this.RaisePropertyChanged("ValidShipTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidSoldTo {
            get {
                return this.ValidSoldToField;
            }
            set {
                if ((this.ValidSoldToField.Equals(value) != true)) {
                    this.ValidSoldToField = value;
                    this.RaisePropertyChanged("ValidSoldTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Variations {
            get {
                return this.VariationsField;
            }
            set {
                if ((this.VariationsField.Equals(value) != true)) {
                    this.VariationsField = value;
                    this.RaisePropertyChanged("Variations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIApplication {
            get {
                return this.WIApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.WIApplicationField, value) != true)) {
                    this.WIApplicationField = value;
                    this.RaisePropertyChanged("WIApplication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WICustomer {
            get {
                return this.WICustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.WICustomerField, value) != true)) {
                    this.WICustomerField = value;
                    this.RaisePropertyChanged("WICustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WIShippingCosts {
            get {
                return this.WIShippingCostsField;
            }
            set {
                if ((this.WIShippingCostsField.Equals(value) != true)) {
                    this.WIShippingCostsField = value;
                    this.RaisePropertyChanged("WIShippingCosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebCustomer {
            get {
                return this.WebCustomerField;
            }
            set {
                if ((this.WebCustomerField.Equals(value) != true)) {
                    this.WebCustomerField = value;
                    this.RaisePropertyChanged("WebCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerAttchRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDiscPriceLstRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerDiscPriceLstRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerDiscPriceLstRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceListListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerDiscPriceLstRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCode {
            get {
                return this.ListCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCodeField, value) != true)) {
                    this.ListCodeField = value;
                    this.RaisePropertyChanged("ListCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListEndDate {
            get {
                return this.PriceListEndDateField;
            }
            set {
                if ((this.PriceListEndDateField.Equals(value) != true)) {
                    this.PriceListEndDateField = value;
                    this.RaisePropertyChanged("PriceListEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceListListDescription {
            get {
                return this.PriceListListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceListListDescriptionField, value) != true)) {
                    this.PriceListListDescriptionField = value;
                    this.RaisePropertyChanged("PriceListListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListStartDate {
            get {
                return this.PriceListStartDateField;
            }
            set {
                if ((this.PriceListStartDateField.Equals(value) != true)) {
                    this.PriceListStartDateField = value;
                    this.RaisePropertyChanged("PriceListStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDocsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerDocsRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcceptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltTradingPartnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckForPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerDocsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteCurrentReleasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDIPartValidationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutBoundDocReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutboundAutomaticField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutboundDocNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutboundManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartOptionAvailListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartOptionSelListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartOptionSelectedListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TestRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseCustPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseCustomerDefaultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsePartUPCField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcceptType {
            get {
                return this.AcceptTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AcceptTypeField, value) != true)) {
                    this.AcceptTypeField = value;
                    this.RaisePropertyChanged("AcceptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltTradingPartnerName {
            get {
                return this.AltTradingPartnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AltTradingPartnerNameField, value) != true)) {
                    this.AltTradingPartnerNameField = value;
                    this.RaisePropertyChanged("AltTradingPartnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckForPart {
            get {
                return this.CheckForPartField;
            }
            set {
                if ((this.CheckForPartField.Equals(value) != true)) {
                    this.CheckForPartField = value;
                    this.RaisePropertyChanged("CheckForPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerDocsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBTName {
            get {
                return this.CustomerBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerBTNameField, value) != true)) {
                    this.CustomerBTNameField = value;
                    this.RaisePropertyChanged("CustomerBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteCurrentReleases {
            get {
                return this.DeleteCurrentReleasesField;
            }
            set {
                if ((this.DeleteCurrentReleasesField.Equals(value) != true)) {
                    this.DeleteCurrentReleasesField = value;
                    this.RaisePropertyChanged("DeleteCurrentReleases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDirection {
            get {
                return this.DocDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDirectionField, value) != true)) {
                    this.DocDirectionField = value;
                    this.RaisePropertyChanged("DocDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDIPartValidation {
            get {
                return this.EDIPartValidationField;
            }
            set {
                if ((object.ReferenceEquals(this.EDIPartValidationField, value) != true)) {
                    this.EDIPartValidationField = value;
                    this.RaisePropertyChanged("EDIPartValidation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MapID {
            get {
                return this.MapIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MapIDField, value) != true)) {
                    this.MapIDField = value;
                    this.RaisePropertyChanged("MapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutBoundDocReq {
            get {
                return this.OutBoundDocReqField;
            }
            set {
                if ((this.OutBoundDocReqField.Equals(value) != true)) {
                    this.OutBoundDocReqField = value;
                    this.RaisePropertyChanged("OutBoundDocReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutboundAutomatic {
            get {
                return this.OutboundAutomaticField;
            }
            set {
                if ((this.OutboundAutomaticField.Equals(value) != true)) {
                    this.OutboundAutomaticField = value;
                    this.RaisePropertyChanged("OutboundAutomatic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutboundDocName {
            get {
                return this.OutboundDocNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OutboundDocNameField, value) != true)) {
                    this.OutboundDocNameField = value;
                    this.RaisePropertyChanged("OutboundDocName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutboundManual {
            get {
                return this.OutboundManualField;
            }
            set {
                if ((this.OutboundManualField.Equals(value) != true)) {
                    this.OutboundManualField = value;
                    this.RaisePropertyChanged("OutboundManual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartOptionAvailList {
            get {
                return this.PartOptionAvailListField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOptionAvailListField, value) != true)) {
                    this.PartOptionAvailListField = value;
                    this.RaisePropertyChanged("PartOptionAvailList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartOptionSelList {
            get {
                return this.PartOptionSelListField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOptionSelListField, value) != true)) {
                    this.PartOptionSelListField = value;
                    this.RaisePropertyChanged("PartOptionSelList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartOptionSelectedList {
            get {
                return this.PartOptionSelectedListField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOptionSelectedListField, value) != true)) {
                    this.PartOptionSelectedListField = value;
                    this.RaisePropertyChanged("PartOptionSelectedList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TestRecord {
            get {
                return this.TestRecordField;
            }
            set {
                if ((this.TestRecordField.Equals(value) != true)) {
                    this.TestRecordField = value;
                    this.RaisePropertyChanged("TestRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseCustPart {
            get {
                return this.UseCustPartField;
            }
            set {
                if ((this.UseCustPartField.Equals(value) != true)) {
                    this.UseCustPartField = value;
                    this.RaisePropertyChanged("UseCustPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseCustomerDefaults {
            get {
                return this.UseCustomerDefaultsField;
            }
            set {
                if ((this.UseCustomerDefaultsField.Equals(value) != true)) {
                    this.UseCustomerDefaultsField = value;
                    this.RaisePropertyChanged("UseCustomerDefaults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsePartUPC {
            get {
                return this.UsePartUPCField;
            }
            set {
                if ((this.UsePartUPCField.Equals(value) != true)) {
                    this.UsePartUPCField = value;
                    this.RaisePropertyChanged("UsePartUPC");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDocsSHRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerDocsSHRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcceptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltTradingPartnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckForPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerDocsSHRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteCurrentReleasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDIPartValidationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutBoundDocReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutboundAutomaticField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutboundDocNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutboundManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartOptionAvailListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartOptionSelListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartOptionSelectedListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TestRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseCustPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseCustomerDefaultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsePartUPCField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcceptType {
            get {
                return this.AcceptTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AcceptTypeField, value) != true)) {
                    this.AcceptTypeField = value;
                    this.RaisePropertyChanged("AcceptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltTradingPartnerName {
            get {
                return this.AltTradingPartnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AltTradingPartnerNameField, value) != true)) {
                    this.AltTradingPartnerNameField = value;
                    this.RaisePropertyChanged("AltTradingPartnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckForPart {
            get {
                return this.CheckForPartField;
            }
            set {
                if ((this.CheckForPartField.Equals(value) != true)) {
                    this.CheckForPartField = value;
                    this.RaisePropertyChanged("CheckForPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerDocsSHRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteCurrentReleases {
            get {
                return this.DeleteCurrentReleasesField;
            }
            set {
                if ((this.DeleteCurrentReleasesField.Equals(value) != true)) {
                    this.DeleteCurrentReleasesField = value;
                    this.RaisePropertyChanged("DeleteCurrentReleases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDirection {
            get {
                return this.DocDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDirectionField, value) != true)) {
                    this.DocDirectionField = value;
                    this.RaisePropertyChanged("DocDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDIPartValidation {
            get {
                return this.EDIPartValidationField;
            }
            set {
                if ((object.ReferenceEquals(this.EDIPartValidationField, value) != true)) {
                    this.EDIPartValidationField = value;
                    this.RaisePropertyChanged("EDIPartValidation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MapID {
            get {
                return this.MapIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MapIDField, value) != true)) {
                    this.MapIDField = value;
                    this.RaisePropertyChanged("MapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutBoundDocReq {
            get {
                return this.OutBoundDocReqField;
            }
            set {
                if ((this.OutBoundDocReqField.Equals(value) != true)) {
                    this.OutBoundDocReqField = value;
                    this.RaisePropertyChanged("OutBoundDocReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutboundAutomatic {
            get {
                return this.OutboundAutomaticField;
            }
            set {
                if ((this.OutboundAutomaticField.Equals(value) != true)) {
                    this.OutboundAutomaticField = value;
                    this.RaisePropertyChanged("OutboundAutomatic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutboundDocName {
            get {
                return this.OutboundDocNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OutboundDocNameField, value) != true)) {
                    this.OutboundDocNameField = value;
                    this.RaisePropertyChanged("OutboundDocName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutboundManual {
            get {
                return this.OutboundManualField;
            }
            set {
                if ((this.OutboundManualField.Equals(value) != true)) {
                    this.OutboundManualField = value;
                    this.RaisePropertyChanged("OutboundManual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartOptionAvailList {
            get {
                return this.PartOptionAvailListField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOptionAvailListField, value) != true)) {
                    this.PartOptionAvailListField = value;
                    this.RaisePropertyChanged("PartOptionAvailList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartOptionSelList {
            get {
                return this.PartOptionSelListField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOptionSelListField, value) != true)) {
                    this.PartOptionSelListField = value;
                    this.RaisePropertyChanged("PartOptionSelList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartOptionSelectedList {
            get {
                return this.PartOptionSelectedListField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOptionSelectedListField, value) != true)) {
                    this.PartOptionSelectedListField = value;
                    this.RaisePropertyChanged("PartOptionSelectedList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TestRecord {
            get {
                return this.TestRecordField;
            }
            set {
                if ((this.TestRecordField.Equals(value) != true)) {
                    this.TestRecordField = value;
                    this.RaisePropertyChanged("TestRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseCustPart {
            get {
                return this.UseCustPartField;
            }
            set {
                if ((this.UseCustPartField.Equals(value) != true)) {
                    this.UseCustPartField = value;
                    this.RaisePropertyChanged("UseCustPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseCustomerDefaults {
            get {
                return this.UseCustomerDefaultsField;
            }
            set {
                if ((this.UseCustomerDefaultsField.Equals(value) != true)) {
                    this.UseCustomerDefaultsField = value;
                    this.RaisePropertyChanged("UseCustomerDefaults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsePartUPC {
            get {
                return this.UsePartUPCField;
            }
            set {
                if ((this.UsePartUPCField.Equals(value) != true)) {
                    this.UsePartUPCField = value;
                    this.RaisePropertyChanged("UsePartUPC");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerFSPriceListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerFSPriceListRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerFSPriceListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceListListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerFSPriceListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCode {
            get {
                return this.ListCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCodeField, value) != true)) {
                    this.ListCodeField = value;
                    this.RaisePropertyChanged("ListCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListEndDate {
            get {
                return this.PriceListEndDateField;
            }
            set {
                if ((this.PriceListEndDateField.Equals(value) != true)) {
                    this.PriceListEndDateField = value;
                    this.RaisePropertyChanged("PriceListEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceListListDescription {
            get {
                return this.PriceListListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceListListDescriptionField, value) != true)) {
                    this.PriceListListDescriptionField = value;
                    this.RaisePropertyChanged("PriceListListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListStartDate {
            get {
                return this.PriceListStartDateField;
            }
            set {
                if ((this.PriceListStartDateField.Equals(value) != true)) {
                    this.PriceListStartDateField = value;
                    this.RaisePropertyChanged("PriceListStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerPriceLstRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustomerPriceLstRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.CustomerPriceLstRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceListListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.CustomerPriceLstRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCode {
            get {
                return this.ListCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCodeField, value) != true)) {
                    this.ListCodeField = value;
                    this.RaisePropertyChanged("ListCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListEndDate {
            get {
                return this.PriceListEndDateField;
            }
            set {
                if ((this.PriceListEndDateField.Equals(value) != true)) {
                    this.PriceListEndDateField = value;
                    this.RaisePropertyChanged("PriceListEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceListListDescription {
            get {
                return this.PriceListListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceListListDescriptionField, value) != true)) {
                    this.PriceListListDescriptionField = value;
                    this.RaisePropertyChanged("PriceListListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListStartDate {
            get {
                return this.PriceListStartDateField;
            }
            set {
                if ((this.PriceListStartDateField.Equals(value) != true)) {
                    this.PriceListStartDateField = value;
                    this.RaisePropertyChanged("PriceListStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityGLCRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EntityGLCRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankFeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CashDeskIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.EntityGLCRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeductionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtSystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLCntrlDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLCntrlTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLControlCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalEntityGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFilteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JCDeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OprTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReclassCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedToFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxTblIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctID {
            get {
                return this.BankAcctIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctIDField, value) != true)) {
                    this.BankAcctIDField = value;
                    this.RaisePropertyChanged("BankAcctID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankFeeID {
            get {
                return this.BankFeeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankFeeIDField, value) != true)) {
                    this.BankFeeIDField = value;
                    this.RaisePropertyChanged("BankFeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessEntity {
            get {
                return this.BusinessEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessEntityField, value) != true)) {
                    this.BusinessEntityField = value;
                    this.RaisePropertyChanged("BusinessEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallCode {
            get {
                return this.CallCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CallCodeField, value) != true)) {
                    this.CallCodeField = value;
                    this.RaisePropertyChanged("CallCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CashDeskID {
            get {
                return this.CashDeskIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CashDeskIDField, value) != true)) {
                    this.CashDeskIDField = value;
                    this.RaisePropertyChanged("CashDeskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeCode {
            get {
                return this.ChargeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeCodeField, value) != true)) {
                    this.ChargeCodeField = value;
                    this.RaisePropertyChanged("ChargeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassCode {
            get {
                return this.ClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassCodeField, value) != true)) {
                    this.ClassCodeField = value;
                    this.RaisePropertyChanged("ClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassIDField, value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.EntityGLCRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeductionID {
            get {
                return this.DeductionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeductionIDField, value) != true)) {
                    this.DeductionIDField = value;
                    this.RaisePropertyChanged("DeductionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseCode {
            get {
                return this.ExpenseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseCodeField, value) != true)) {
                    this.ExpenseCodeField = value;
                    this.RaisePropertyChanged("ExpenseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseTypeCode {
            get {
                return this.ExpenseTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseTypeCodeField, value) != true)) {
                    this.ExpenseTypeCodeField = value;
                    this.RaisePropertyChanged("ExpenseTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompanyID {
            get {
                return this.ExtCompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyIDField, value) != true)) {
                    this.ExtCompanyIDField = value;
                    this.RaisePropertyChanged("ExtCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtSystemID {
            get {
                return this.ExtSystemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtSystemIDField, value) != true)) {
                    this.ExtSystemIDField = value;
                    this.RaisePropertyChanged("ExtSystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromPlant {
            get {
                return this.FromPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.FromPlantField, value) != true)) {
                    this.FromPlantField = value;
                    this.RaisePropertyChanged("FromPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLCntrlDescription {
            get {
                return this.GLCntrlDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GLCntrlDescriptionField, value) != true)) {
                    this.GLCntrlDescriptionField = value;
                    this.RaisePropertyChanged("GLCntrlDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLCntrlTypeDescription {
            get {
                return this.GLCntrlTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GLCntrlTypeDescriptionField, value) != true)) {
                    this.GLCntrlTypeDescriptionField = value;
                    this.RaisePropertyChanged("GLCntrlTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLControlCode {
            get {
                return this.GLControlCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLControlCodeField, value) != true)) {
                    this.GLControlCodeField = value;
                    this.RaisePropertyChanged("GLControlCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLControlType {
            get {
                return this.GLControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLControlTypeField, value) != true)) {
                    this.GLControlTypeField = value;
                    this.RaisePropertyChanged("GLControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalEntityGLC {
            get {
                return this.GlobalEntityGLCField;
            }
            set {
                if ((this.GlobalEntityGLCField.Equals(value) != true)) {
                    this.GlobalEntityGLCField = value;
                    this.RaisePropertyChanged("GlobalEntityGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeadNum {
            get {
                return this.HeadNumField;
            }
            set {
                if ((this.HeadNumField.Equals(value) != true)) {
                    this.HeadNumField = value;
                    this.RaisePropertyChanged("HeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumField, value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternalCompany {
            get {
                return this.IsExternalCompanyField;
            }
            set {
                if ((this.IsExternalCompanyField.Equals(value) != true)) {
                    this.IsExternalCompanyField = value;
                    this.RaisePropertyChanged("IsExternalCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFiltered {
            get {
                return this.IsFilteredField;
            }
            set {
                if ((this.IsFilteredField.Equals(value) != true)) {
                    this.IsFilteredField = value;
                    this.RaisePropertyChanged("IsFiltered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JCDept {
            get {
                return this.JCDeptField;
            }
            set {
                if ((object.ReferenceEquals(this.JCDeptField, value) != true)) {
                    this.JCDeptField = value;
                    this.RaisePropertyChanged("JCDept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key1 {
            get {
                return this.Key1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key1Field, value) != true)) {
                    this.Key1Field = value;
                    this.RaisePropertyChanged("Key1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key2 {
            get {
                return this.Key2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key2Field, value) != true)) {
                    this.Key2Field = value;
                    this.RaisePropertyChanged("Key2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key3 {
            get {
                return this.Key3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key3Field, value) != true)) {
                    this.Key3Field = value;
                    this.RaisePropertyChanged("Key3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key4 {
            get {
                return this.Key4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key4Field, value) != true)) {
                    this.Key4Field = value;
                    this.RaisePropertyChanged("Key4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key5 {
            get {
                return this.Key5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key5Field, value) != true)) {
                    this.Key5Field = value;
                    this.RaisePropertyChanged("Key5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key6 {
            get {
                return this.Key6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key6Field, value) != true)) {
                    this.Key6Field = value;
                    this.RaisePropertyChanged("Key6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OprTypeCode {
            get {
                return this.OprTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OprTypeCodeField, value) != true)) {
                    this.OprTypeCodeField = value;
                    this.RaisePropertyChanged("OprTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIStatus {
            get {
                return this.PIStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PIStatusField, value) != true)) {
                    this.PIStatusField = value;
                    this.RaisePropertyChanged("PIStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayTypeID {
            get {
                return this.PayTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PayTypeIDField, value) != true)) {
                    this.PayTypeIDField = value;
                    this.RaisePropertyChanged("PayTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PerConName {
            get {
                return this.PerConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PerConNameField, value) != true)) {
                    this.PerConNameField = value;
                    this.RaisePropertyChanged("PerConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchCode {
            get {
                return this.PurchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchCodeField, value) != true)) {
                    this.PurchCodeField = value;
                    this.RaisePropertyChanged("PurchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCode {
            get {
                return this.ReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeField, value) != true)) {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonType {
            get {
                return this.ReasonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonTypeField, value) != true)) {
                    this.ReasonTypeField = value;
                    this.RaisePropertyChanged("ReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReclassCodeID {
            get {
                return this.ReclassCodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReclassCodeIDField, value) != true)) {
                    this.ReclassCodeIDField = value;
                    this.RaisePropertyChanged("ReclassCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedToFile {
            get {
                return this.RelatedToFileField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedToFileField, value) != true)) {
                    this.RelatedToFileField = value;
                    this.RaisePropertyChanged("RelatedToFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesCatID {
            get {
                return this.SalesCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesCatIDField, value) != true)) {
                    this.SalesCatIDField = value;
                    this.RaisePropertyChanged("SalesCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Shift {
            get {
                return this.ShiftField;
            }
            set {
                if ((this.ShiftField.Equals(value) != true)) {
                    this.ShiftField = value;
                    this.RaisePropertyChanged("Shift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TIN {
            get {
                return this.TINField;
            }
            set {
                if ((object.ReferenceEquals(this.TINField, value) != true)) {
                    this.TINField = value;
                    this.RaisePropertyChanged("TIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxTblID {
            get {
                return this.TaxTblIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxTblIDField, value) != true)) {
                    this.TaxTblIDField = value;
                    this.RaisePropertyChanged("TaxTblID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToPlant {
            get {
                return this.ToPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.ToPlantField, value) != true)) {
                    this.ToPlantField = value;
                    this.RaisePropertyChanged("ToPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferMethod {
            get {
                return this.TransferMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferMethodField, value) != true)) {
                    this.TransferMethodField = value;
                    this.RaisePropertyChanged("TransferMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeIDField, value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbCustCredRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class GlbCustCredRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ARLOCTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ARTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.GlbCustCredRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocARLOCTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocARTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPITotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocSOTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAExceedLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAOwnCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAParentsCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAPoolCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNASharedCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAExceedLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAOwnCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAParentsCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAPoolCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NASharedCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PITotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SOTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalInvoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPayInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ARLOCTotal {
            get {
                return this.ARLOCTotalField;
            }
            set {
                if ((this.ARLOCTotalField.Equals(value) != true)) {
                    this.ARLOCTotalField = value;
                    this.RaisePropertyChanged("ARLOCTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ARTotal {
            get {
                return this.ARTotalField;
            }
            set {
                if ((this.ARTotalField.Equals(value) != true)) {
                    this.ARTotalField = value;
                    this.RaisePropertyChanged("ARTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustCredRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocARLOCTotal {
            get {
                return this.DocARLOCTotalField;
            }
            set {
                if ((this.DocARLOCTotalField.Equals(value) != true)) {
                    this.DocARLOCTotalField = value;
                    this.RaisePropertyChanged("DocARLOCTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocARTotal {
            get {
                return this.DocARTotalField;
            }
            set {
                if ((this.DocARTotalField.Equals(value) != true)) {
                    this.DocARTotalField = value;
                    this.RaisePropertyChanged("DocARTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPITotal {
            get {
                return this.DocPITotalField;
            }
            set {
                if ((this.DocPITotalField.Equals(value) != true)) {
                    this.DocPITotalField = value;
                    this.RaisePropertyChanged("DocPITotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocSOTotal {
            get {
                return this.DocSOTotalField;
            }
            set {
                if ((this.DocSOTotalField.Equals(value) != true)) {
                    this.DocSOTotalField = value;
                    this.RaisePropertyChanged("DocSOTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompName {
            get {
                return this.ExtCompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompNameField, value) != true)) {
                    this.ExtCompNameField = value;
                    this.RaisePropertyChanged("ExtCompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbCustNum {
            get {
                return this.GlbCustNumField;
            }
            set {
                if ((this.GlbCustNumField.Equals(value) != true)) {
                    this.GlbCustNumField = value;
                    this.RaisePropertyChanged("GlbCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAExceedLimit {
            get {
                return this.GlbNAExceedLimitField;
            }
            set {
                if ((this.GlbNAExceedLimitField.Equals(value) != true)) {
                    this.GlbNAExceedLimitField = value;
                    this.RaisePropertyChanged("GlbNAExceedLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAOwnCreditUsed {
            get {
                return this.GlbNAOwnCreditUsedField;
            }
            set {
                if ((this.GlbNAOwnCreditUsedField.Equals(value) != true)) {
                    this.GlbNAOwnCreditUsedField = value;
                    this.RaisePropertyChanged("GlbNAOwnCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAParentsCreditUsed {
            get {
                return this.GlbNAParentsCreditUsedField;
            }
            set {
                if ((this.GlbNAParentsCreditUsedField.Equals(value) != true)) {
                    this.GlbNAParentsCreditUsedField = value;
                    this.RaisePropertyChanged("GlbNAParentsCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAPoolCreditUsed {
            get {
                return this.GlbNAPoolCreditUsedField;
            }
            set {
                if ((this.GlbNAPoolCreditUsedField.Equals(value) != true)) {
                    this.GlbNAPoolCreditUsedField = value;
                    this.RaisePropertyChanged("GlbNAPoolCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNASharedCreditUsed {
            get {
                return this.GlbNASharedCreditUsedField;
            }
            set {
                if ((this.GlbNASharedCreditUsedField.Equals(value) != true)) {
                    this.GlbNASharedCreditUsedField = value;
                    this.RaisePropertyChanged("GlbNASharedCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCurrencyCode {
            get {
                return this.GlobalCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCurrencyCodeField, value) != true)) {
                    this.GlobalCurrencyCodeField = value;
                    this.RaisePropertyChanged("GlobalCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAExceedLimit {
            get {
                return this.NAExceedLimitField;
            }
            set {
                if ((this.NAExceedLimitField.Equals(value) != true)) {
                    this.NAExceedLimitField = value;
                    this.RaisePropertyChanged("NAExceedLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAOwnCreditUsed {
            get {
                return this.NAOwnCreditUsedField;
            }
            set {
                if ((this.NAOwnCreditUsedField.Equals(value) != true)) {
                    this.NAOwnCreditUsedField = value;
                    this.RaisePropertyChanged("NAOwnCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAParentsCreditUsed {
            get {
                return this.NAParentsCreditUsedField;
            }
            set {
                if ((this.NAParentsCreditUsedField.Equals(value) != true)) {
                    this.NAParentsCreditUsedField = value;
                    this.RaisePropertyChanged("NAParentsCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAPoolCreditUsed {
            get {
                return this.NAPoolCreditUsedField;
            }
            set {
                if ((this.NAPoolCreditUsedField.Equals(value) != true)) {
                    this.NAPoolCreditUsedField = value;
                    this.RaisePropertyChanged("NAPoolCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NASharedCreditUsed {
            get {
                return this.NASharedCreditUsedField;
            }
            set {
                if ((this.NASharedCreditUsedField.Equals(value) != true)) {
                    this.NASharedCreditUsedField = value;
                    this.RaisePropertyChanged("NASharedCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PITotal {
            get {
                return this.PITotalField;
            }
            set {
                if ((this.PITotalField.Equals(value) != true)) {
                    this.PITotalField = value;
                    this.RaisePropertyChanged("PITotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentCustNum {
            get {
                return this.ParentCustNumField;
            }
            set {
                if ((this.ParentCustNumField.Equals(value) != true)) {
                    this.ParentCustNumField = value;
                    this.RaisePropertyChanged("ParentCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SOTotal {
            get {
                return this.SOTotalField;
            }
            set {
                if ((this.SOTotalField.Equals(value) != true)) {
                    this.SOTotalField = value;
                    this.RaisePropertyChanged("SOTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalInvoices {
            get {
                return this.TotalInvoicesField;
            }
            set {
                if ((this.TotalInvoicesField.Equals(value) != true)) {
                    this.TotalInvoicesField = value;
                    this.RaisePropertyChanged("TotalInvoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOrders {
            get {
                return this.TotalOrdersField;
            }
            set {
                if ((this.TotalOrdersField.Equals(value) != true)) {
                    this.TotalOrdersField = value;
                    this.RaisePropertyChanged("TotalOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPayIns {
            get {
                return this.TotalPayInsField;
            }
            set {
                if ((this.TotalPayInsField.Equals(value) != true)) {
                    this.TotalPayInsField = value;
                    this.RaisePropertyChanged("TotalPayIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MangCustRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class MangCustRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.MangCustRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumZIPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.MangCustRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress1 {
            get {
                return this.VendorNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress1Field, value) != true)) {
                    this.VendorNumAddress1Field = value;
                    this.RaisePropertyChanged("VendorNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress2 {
            get {
                return this.VendorNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress2Field, value) != true)) {
                    this.VendorNumAddress2Field = value;
                    this.RaisePropertyChanged("VendorNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress3 {
            get {
                return this.VendorNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress3Field, value) != true)) {
                    this.VendorNumAddress3Field = value;
                    this.RaisePropertyChanged("VendorNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCity {
            get {
                return this.VendorNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCityField, value) != true)) {
                    this.VendorNumCityField = value;
                    this.RaisePropertyChanged("VendorNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCountry {
            get {
                return this.VendorNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCountryField, value) != true)) {
                    this.VendorNumCountryField = value;
                    this.RaisePropertyChanged("VendorNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCurrencyCode {
            get {
                return this.VendorNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCurrencyCodeField, value) != true)) {
                    this.VendorNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumDefaultFOB {
            get {
                return this.VendorNumDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumDefaultFOBField, value) != true)) {
                    this.VendorNumDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorNumDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName {
            get {
                return this.VendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumNameField, value) != true)) {
                    this.VendorNumNameField = value;
                    this.RaisePropertyChanged("VendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumState {
            get {
                return this.VendorNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumStateField, value) != true)) {
                    this.VendorNumStateField = value;
                    this.RaisePropertyChanged("VendorNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumTermsCode {
            get {
                return this.VendorNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumTermsCodeField, value) != true)) {
                    this.VendorNumTermsCodeField = value;
                    this.RaisePropertyChanged("VendorNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumVendorID {
            get {
                return this.VendorNumVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumVendorIDField, value) != true)) {
                    this.VendorNumVendorIDField = value;
                    this.RaisePropertyChanged("VendorNumVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumZIP {
            get {
                return this.VendorNumZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumZIPField, value) != true)) {
                    this.VendorNumZIPField = value;
                    this.RaisePropertyChanged("VendorNumZIP");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NAMemberRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class NAMemberRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.NAMemberRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RlsClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TieredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TopCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TopCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TopCustNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.NAMemberRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RlsClassCode {
            get {
                return this.RlsClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RlsClassCodeField, value) != true)) {
                    this.RlsClassCodeField = value;
                    this.RaisePropertyChanged("RlsClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Tiered {
            get {
                return this.TieredField;
            }
            set {
                if ((this.TieredField.Equals(value) != true)) {
                    this.TieredField = value;
                    this.RaisePropertyChanged("Tiered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TopCustID {
            get {
                return this.TopCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TopCustIDField, value) != true)) {
                    this.TopCustIDField = value;
                    this.RaisePropertyChanged("TopCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TopCustName {
            get {
                return this.TopCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TopCustNameField, value) != true)) {
                    this.TopCustNameField = value;
                    this.RaisePropertyChanged("TopCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TopCustNum {
            get {
                return this.TopCustNumField;
            }
            set {
                if ((this.TopCustNumField.Equals(value) != true)) {
                    this.TopCustNumField = value;
                    this.RaisePropertyChanged("TopCustNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PECustWhldHistRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PECustWhldHistRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CollectionAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.PECustWhldHistRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GoodContributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotFoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WithholdingAgentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CollectionAgent {
            get {
                return this.CollectionAgentField;
            }
            set {
                if ((this.CollectionAgentField.Equals(value) != true)) {
                    this.CollectionAgentField = value;
                    this.RaisePropertyChanged("CollectionAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.PECustWhldHistRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GoodContributor {
            get {
                return this.GoodContributorField;
            }
            set {
                if ((this.GoodContributorField.Equals(value) != true)) {
                    this.GoodContributorField = value;
                    this.RaisePropertyChanged("GoodContributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoAddress {
            get {
                return this.NoAddressField;
            }
            set {
                if ((this.NoAddressField.Equals(value) != true)) {
                    this.NoAddressField = value;
                    this.RaisePropertyChanged("NoAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotFound {
            get {
                return this.NotFoundField;
            }
            set {
                if ((this.NotFoundField.Equals(value) != true)) {
                    this.NotFoundField = value;
                    this.RaisePropertyChanged("NotFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordSeq {
            get {
                return this.RecordSeqField;
            }
            set {
                if ((this.RecordSeqField.Equals(value) != true)) {
                    this.RecordSeqField = value;
                    this.RaisePropertyChanged("RecordSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WithholdingAgent {
            get {
                return this.WithholdingAgentField;
            }
            set {
                if ((this.WithholdingAgentField.Equals(value) != true)) {
                    this.WithholdingAgentField = value;
                    this.RaisePropertyChanged("WithholdingAgent");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartnerRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.PartnerRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspSearchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartnerNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartnerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.PartnerRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspSearchID {
            get {
                return this.DspSearchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DspSearchIDField, value) != true)) {
                    this.DspSearchIDField = value;
                    this.RaisePropertyChanged("DspSearchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerID {
            get {
                return this.PartnerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerIDField, value) != true)) {
                    this.PartnerIDField = value;
                    this.RaisePropertyChanged("PartnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerNum {
            get {
                return this.PartnerNumField;
            }
            set {
                if ((this.PartnerNumField.Equals(value) != true)) {
                    this.PartnerNumField = value;
                    this.RaisePropertyChanged("PartnerNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerType {
            get {
                return this.PartnerTypeField;
            }
            set {
                if ((this.PartnerTypeField.Equals(value) != true)) {
                    this.PartnerTypeField = value;
                    this.RaisePropertyChanged("PartnerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchID {
            get {
                return this.SearchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchIDField, value) != true)) {
                    this.SearchIDField = value;
                    this.RaisePropertyChanged("SearchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipToRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGApartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGExtraStreetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGFloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGGrossIncomeTaxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGLocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGLocationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGNeighborhoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGProvinceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGProvinceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGStreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGStreetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddlHdlgFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddressValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BorderCrossingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COASegReferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CertOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckConfirmCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckDateCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckUpdateCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChrgAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommercialInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreatedByEDIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandAddActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandAddLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCancelActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandCancelLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandChangeActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandChangeDateActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandChangeDateLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandChangeLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckCfgActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForPartActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForRevActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForRunOutPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForRunOutPartActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckPartialShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckShipActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCloseRejSkdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandDateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandDeliveryDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandNewLineActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandNewLineLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandQtyChangeActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandQtyChangeLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandUnitPriceDiffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandUnitPriceDiffActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandUseCustomerValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspFormatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDICodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDIShipNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ETCAddrChgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EarlyBufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityUseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcFromValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FFCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazardousShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazmatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INExciseRegNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INSTRegistrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVATNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IndividualPackIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntegrationFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntrntlShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAlternateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LateBufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LetterOfInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXCURPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXFederalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXMunicipioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterCustIDBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterCustIDCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterCustIDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStdPkgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotifyEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSmartStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgRegCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideCarrierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PendingTerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodicityDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodicityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimSConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryShipToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResaleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServAuthNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServHomeDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServInstructField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipExprtDeclartnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TATaxAuthorityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxAuthorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerrSelectFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritorySelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritorySelectDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritoryTerritoryDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradingPartnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVShipFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UPSQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WIWebShipToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZIPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGApartment {
            get {
                return this.AGApartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AGApartmentField, value) != true)) {
                    this.AGApartmentField = value;
                    this.RaisePropertyChanged("AGApartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGExtraStreetNumber {
            get {
                return this.AGExtraStreetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AGExtraStreetNumberField, value) != true)) {
                    this.AGExtraStreetNumberField = value;
                    this.RaisePropertyChanged("AGExtraStreetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGFloor {
            get {
                return this.AGFloorField;
            }
            set {
                if ((object.ReferenceEquals(this.AGFloorField, value) != true)) {
                    this.AGFloorField = value;
                    this.RaisePropertyChanged("AGFloor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGGrossIncomeTaxID {
            get {
                return this.AGGrossIncomeTaxIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AGGrossIncomeTaxIDField, value) != true)) {
                    this.AGGrossIncomeTaxIDField = value;
                    this.RaisePropertyChanged("AGGrossIncomeTaxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGLocationCode {
            get {
                return this.AGLocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGLocationCodeField, value) != true)) {
                    this.AGLocationCodeField = value;
                    this.RaisePropertyChanged("AGLocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGLocationDescription {
            get {
                return this.AGLocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AGLocationDescriptionField, value) != true)) {
                    this.AGLocationDescriptionField = value;
                    this.RaisePropertyChanged("AGLocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGNeighborhood {
            get {
                return this.AGNeighborhoodField;
            }
            set {
                if ((object.ReferenceEquals(this.AGNeighborhoodField, value) != true)) {
                    this.AGNeighborhoodField = value;
                    this.RaisePropertyChanged("AGNeighborhood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGProvinceCode {
            get {
                return this.AGProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGProvinceCodeField, value) != true)) {
                    this.AGProvinceCodeField = value;
                    this.RaisePropertyChanged("AGProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGProvinceDescription {
            get {
                return this.AGProvinceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AGProvinceDescriptionField, value) != true)) {
                    this.AGProvinceDescriptionField = value;
                    this.RaisePropertyChanged("AGProvinceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGStreet {
            get {
                return this.AGStreetField;
            }
            set {
                if ((object.ReferenceEquals(this.AGStreetField, value) != true)) {
                    this.AGStreetField = value;
                    this.RaisePropertyChanged("AGStreet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGStreetNumber {
            get {
                return this.AGStreetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AGStreetNumberField, value) != true)) {
                    this.AGStreetNumberField = value;
                    this.RaisePropertyChanged("AGStreetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddlHdlgFlag {
            get {
                return this.AddlHdlgFlagField;
            }
            set {
                if ((this.AddlHdlgFlagField.Equals(value) != true)) {
                    this.AddlHdlgFlagField = value;
                    this.RaisePropertyChanged("AddlHdlgFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrList {
            get {
                return this.AddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrListField, value) != true)) {
                    this.AddrListField = value;
                    this.RaisePropertyChanged("AddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddressVal {
            get {
                return this.AddressValField;
            }
            set {
                if ((this.AddressValField.Equals(value) != true)) {
                    this.AddressValField = value;
                    this.RaisePropertyChanged("AddressVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyChrg {
            get {
                return this.ApplyChrgField;
            }
            set {
                if ((this.ApplyChrgField.Equals(value) != true)) {
                    this.ApplyChrgField = value;
                    this.RaisePropertyChanged("ApplyChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderCrossing {
            get {
                return this.BorderCrossingField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderCrossingField, value) != true)) {
                    this.BorderCrossingField = value;
                    this.RaisePropertyChanged("BorderCrossing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COASegReferences {
            get {
                return this.COASegReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.COASegReferencesField, value) != true)) {
                    this.COASegReferencesField = value;
                    this.RaisePropertyChanged("COASegReferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COD {
            get {
                return this.CODField;
            }
            set {
                if ((this.CODField.Equals(value) != true)) {
                    this.CODField = value;
                    this.RaisePropertyChanged("COD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFreight {
            get {
                return this.CODFreightField;
            }
            set {
                if ((this.CODFreightField.Equals(value) != true)) {
                    this.CODFreightField = value;
                    this.RaisePropertyChanged("CODFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CertOfOrigin {
            get {
                return this.CertOfOriginField;
            }
            set {
                if ((this.CertOfOriginField.Equals(value) != true)) {
                    this.CertOfOriginField = value;
                    this.RaisePropertyChanged("CertOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckConfirmCapPromise {
            get {
                return this.CheckConfirmCapPromiseField;
            }
            set {
                if ((this.CheckConfirmCapPromiseField.Equals(value) != true)) {
                    this.CheckConfirmCapPromiseField = value;
                    this.RaisePropertyChanged("CheckConfirmCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckDateCapPromise {
            get {
                return this.CheckDateCapPromiseField;
            }
            set {
                if ((this.CheckDateCapPromiseField.Equals(value) != true)) {
                    this.CheckDateCapPromiseField = value;
                    this.RaisePropertyChanged("CheckDateCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckUpdateCapPromise {
            get {
                return this.CheckUpdateCapPromiseField;
            }
            set {
                if ((this.CheckUpdateCapPromiseField.Equals(value) != true)) {
                    this.CheckUpdateCapPromiseField = value;
                    this.RaisePropertyChanged("CheckUpdateCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChrgAmount {
            get {
                return this.ChrgAmountField;
            }
            set {
                if ((this.ChrgAmountField.Equals(value) != true)) {
                    this.ChrgAmountField = value;
                    this.RaisePropertyChanged("ChrgAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommercialInvoice {
            get {
                return this.CommercialInvoiceField;
            }
            set {
                if ((this.CommercialInvoiceField.Equals(value) != true)) {
                    this.CommercialInvoiceField = value;
                    this.RaisePropertyChanged("CommercialInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryNum {
            get {
                return this.CountryNumField;
            }
            set {
                if ((this.CountryNumField.Equals(value) != true)) {
                    this.CountryNumField = value;
                    this.RaisePropertyChanged("CountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreatedByEDI {
            get {
                return this.CreatedByEDIField;
            }
            set {
                if ((this.CreatedByEDIField.Equals(value) != true)) {
                    this.CreatedByEDIField = value;
                    this.RaisePropertyChanged("CreatedByEDI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredIns {
            get {
                return this.DeclaredInsField;
            }
            set {
                if ((this.DeclaredInsField.Equals(value) != true)) {
                    this.DeclaredInsField = value;
                    this.RaisePropertyChanged("DeclaredIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryConf {
            get {
                return this.DeliveryConfField;
            }
            set {
                if ((this.DeliveryConfField.Equals(value) != true)) {
                    this.DeliveryConfField = value;
                    this.RaisePropertyChanged("DeliveryConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryTypeDescription {
            get {
                return this.DeliveryTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeDescriptionField, value) != true)) {
                    this.DeliveryTypeDescriptionField = value;
                    this.RaisePropertyChanged("DeliveryTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandAddAction {
            get {
                return this.DemandAddActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandAddActionField, value) != true)) {
                    this.DemandAddActionField = value;
                    this.RaisePropertyChanged("DemandAddAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandAddLeadTime {
            get {
                return this.DemandAddLeadTimeField;
            }
            set {
                if ((this.DemandAddLeadTimeField.Equals(value) != true)) {
                    this.DemandAddLeadTimeField = value;
                    this.RaisePropertyChanged("DemandAddLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCancelAction {
            get {
                return this.DemandCancelActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCancelActionField, value) != true)) {
                    this.DemandCancelActionField = value;
                    this.RaisePropertyChanged("DemandCancelAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandCancelLeadTime {
            get {
                return this.DemandCancelLeadTimeField;
            }
            set {
                if ((this.DemandCancelLeadTimeField.Equals(value) != true)) {
                    this.DemandCancelLeadTimeField = value;
                    this.RaisePropertyChanged("DemandCancelLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseAction {
            get {
                return this.DemandCapPromiseActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseActionField, value) != true)) {
                    this.DemandCapPromiseActionField = value;
                    this.RaisePropertyChanged("DemandCapPromiseAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseDate {
            get {
                return this.DemandCapPromiseDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseDateField, value) != true)) {
                    this.DemandCapPromiseDateField = value;
                    this.RaisePropertyChanged("DemandCapPromiseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseUpdate {
            get {
                return this.DemandCapPromiseUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseUpdateField, value) != true)) {
                    this.DemandCapPromiseUpdateField = value;
                    this.RaisePropertyChanged("DemandCapPromiseUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandChangeAction {
            get {
                return this.DemandChangeActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandChangeActionField, value) != true)) {
                    this.DemandChangeActionField = value;
                    this.RaisePropertyChanged("DemandChangeAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandChangeDateAction {
            get {
                return this.DemandChangeDateActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandChangeDateActionField, value) != true)) {
                    this.DemandChangeDateActionField = value;
                    this.RaisePropertyChanged("DemandChangeDateAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandChangeDateLeadTime {
            get {
                return this.DemandChangeDateLeadTimeField;
            }
            set {
                if ((this.DemandChangeDateLeadTimeField.Equals(value) != true)) {
                    this.DemandChangeDateLeadTimeField = value;
                    this.RaisePropertyChanged("DemandChangeDateLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandChangeLeadTime {
            get {
                return this.DemandChangeLeadTimeField;
            }
            set {
                if ((this.DemandChangeLeadTimeField.Equals(value) != true)) {
                    this.DemandChangeLeadTimeField = value;
                    this.RaisePropertyChanged("DemandChangeLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckCfgAction {
            get {
                return this.DemandCheckCfgActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckCfgActionField, value) != true)) {
                    this.DemandCheckCfgActionField = value;
                    this.RaisePropertyChanged("DemandCheckCfgAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckConfig {
            get {
                return this.DemandCheckConfigField;
            }
            set {
                if ((this.DemandCheckConfigField.Equals(value) != true)) {
                    this.DemandCheckConfigField = value;
                    this.RaisePropertyChanged("DemandCheckConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForPart {
            get {
                return this.DemandCheckForPartField;
            }
            set {
                if ((this.DemandCheckForPartField.Equals(value) != true)) {
                    this.DemandCheckForPartField = value;
                    this.RaisePropertyChanged("DemandCheckForPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForPartAction {
            get {
                return this.DemandCheckForPartActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForPartActionField, value) != true)) {
                    this.DemandCheckForPartActionField = value;
                    this.RaisePropertyChanged("DemandCheckForPartAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForRev {
            get {
                return this.DemandCheckForRevField;
            }
            set {
                if ((this.DemandCheckForRevField.Equals(value) != true)) {
                    this.DemandCheckForRevField = value;
                    this.RaisePropertyChanged("DemandCheckForRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForRevAction {
            get {
                return this.DemandCheckForRevActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForRevActionField, value) != true)) {
                    this.DemandCheckForRevActionField = value;
                    this.RaisePropertyChanged("DemandCheckForRevAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForRunOutPart {
            get {
                return this.DemandCheckForRunOutPartField;
            }
            set {
                if ((this.DemandCheckForRunOutPartField.Equals(value) != true)) {
                    this.DemandCheckForRunOutPartField = value;
                    this.RaisePropertyChanged("DemandCheckForRunOutPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForRunOutPartAction {
            get {
                return this.DemandCheckForRunOutPartActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForRunOutPartActionField, value) != true)) {
                    this.DemandCheckForRunOutPartActionField = value;
                    this.RaisePropertyChanged("DemandCheckForRunOutPartAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckPartialShip {
            get {
                return this.DemandCheckPartialShipField;
            }
            set {
                if ((this.DemandCheckPartialShipField.Equals(value) != true)) {
                    this.DemandCheckPartialShipField = value;
                    this.RaisePropertyChanged("DemandCheckPartialShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckShipAction {
            get {
                return this.DemandCheckShipActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckShipActionField, value) != true)) {
                    this.DemandCheckShipActionField = value;
                    this.RaisePropertyChanged("DemandCheckShipAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCloseRejSkd {
            get {
                return this.DemandCloseRejSkdField;
            }
            set {
                if ((this.DemandCloseRejSkdField.Equals(value) != true)) {
                    this.DemandCloseRejSkdField = value;
                    this.RaisePropertyChanged("DemandCloseRejSkd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandDateType {
            get {
                return this.DemandDateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandDateTypeField, value) != true)) {
                    this.DemandDateTypeField = value;
                    this.RaisePropertyChanged("DemandDateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandDeliveryDays {
            get {
                return this.DemandDeliveryDaysField;
            }
            set {
                if ((this.DemandDeliveryDaysField.Equals(value) != true)) {
                    this.DemandDeliveryDaysField = value;
                    this.RaisePropertyChanged("DemandDeliveryDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandNewLineAction {
            get {
                return this.DemandNewLineActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandNewLineActionField, value) != true)) {
                    this.DemandNewLineActionField = value;
                    this.RaisePropertyChanged("DemandNewLineAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandNewLineLeadTime {
            get {
                return this.DemandNewLineLeadTimeField;
            }
            set {
                if ((this.DemandNewLineLeadTimeField.Equals(value) != true)) {
                    this.DemandNewLineLeadTimeField = value;
                    this.RaisePropertyChanged("DemandNewLineLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandPricing {
            get {
                return this.DemandPricingField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandPricingField, value) != true)) {
                    this.DemandPricingField = value;
                    this.RaisePropertyChanged("DemandPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandQtyChangeAction {
            get {
                return this.DemandQtyChangeActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandQtyChangeActionField, value) != true)) {
                    this.DemandQtyChangeActionField = value;
                    this.RaisePropertyChanged("DemandQtyChangeAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandQtyChangeLeadTime {
            get {
                return this.DemandQtyChangeLeadTimeField;
            }
            set {
                if ((this.DemandQtyChangeLeadTimeField.Equals(value) != true)) {
                    this.DemandQtyChangeLeadTimeField = value;
                    this.RaisePropertyChanged("DemandQtyChangeLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandUnitPriceDiff {
            get {
                return this.DemandUnitPriceDiffField;
            }
            set {
                if ((this.DemandUnitPriceDiffField.Equals(value) != true)) {
                    this.DemandUnitPriceDiffField = value;
                    this.RaisePropertyChanged("DemandUnitPriceDiff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandUnitPriceDiffAction {
            get {
                return this.DemandUnitPriceDiffActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandUnitPriceDiffActionField, value) != true)) {
                    this.DemandUnitPriceDiffActionField = value;
                    this.RaisePropertyChanged("DemandUnitPriceDiffAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandUseCustomerValues {
            get {
                return this.DemandUseCustomerValuesField;
            }
            set {
                if ((this.DemandUseCustomerValuesField.Equals(value) != true)) {
                    this.DemandUseCustomerValuesField = value;
                    this.RaisePropertyChanged("DemandUseCustomerValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocOnly {
            get {
                return this.DocOnlyField;
            }
            set {
                if ((this.DocOnlyField.Equals(value) != true)) {
                    this.DocOnlyField = value;
                    this.RaisePropertyChanged("DocOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspFormatStr {
            get {
                return this.DspFormatStrField;
            }
            set {
                if ((object.ReferenceEquals(this.DspFormatStrField, value) != true)) {
                    this.DspFormatStrField = value;
                    this.RaisePropertyChanged("DspFormatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDICode {
            get {
                return this.EDICodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EDICodeField, value) != true)) {
                    this.EDICodeField = value;
                    this.RaisePropertyChanged("EDICode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDIShipNum {
            get {
                return this.EDIShipNumField;
            }
            set {
                if ((object.ReferenceEquals(this.EDIShipNumField, value) != true)) {
                    this.EDIShipNumField = value;
                    this.RaisePropertyChanged("EDIShipNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMailAddress {
            get {
                return this.EMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailAddressField, value) != true)) {
                    this.EMailAddressField = value;
                    this.RaisePropertyChanged("EMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ETCAddrChg {
            get {
                return this.ETCAddrChgField;
            }
            set {
                if ((this.ETCAddrChgField.Equals(value) != true)) {
                    this.ETCAddrChgField = value;
                    this.RaisePropertyChanged("ETCAddrChg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EarlyBuffer {
            get {
                return this.EarlyBufferField;
            }
            set {
                if ((this.EarlyBufferField.Equals(value) != true)) {
                    this.EarlyBufferField = value;
                    this.RaisePropertyChanged("EarlyBuffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityUseCode {
            get {
                return this.EntityUseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityUseCodeField, value) != true)) {
                    this.EntityUseCodeField = value;
                    this.RaisePropertyChanged("EntityUseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcFromVal {
            get {
                return this.ExcFromValField;
            }
            set {
                if ((this.ExcFromValField.Equals(value) != true)) {
                    this.ExcFromValField = value;
                    this.RaisePropertyChanged("ExcFromVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress1 {
            get {
                return this.FFAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress1Field, value) != true)) {
                    this.FFAddress1Field = value;
                    this.RaisePropertyChanged("FFAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress2 {
            get {
                return this.FFAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress2Field, value) != true)) {
                    this.FFAddress2Field = value;
                    this.RaisePropertyChanged("FFAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress3 {
            get {
                return this.FFAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress3Field, value) != true)) {
                    this.FFAddress3Field = value;
                    this.RaisePropertyChanged("FFAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCity {
            get {
                return this.FFCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCityField, value) != true)) {
                    this.FFCityField = value;
                    this.RaisePropertyChanged("FFCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCompName {
            get {
                return this.FFCompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCompNameField, value) != true)) {
                    this.FFCompNameField = value;
                    this.RaisePropertyChanged("FFCompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFContact {
            get {
                return this.FFContactField;
            }
            set {
                if ((object.ReferenceEquals(this.FFContactField, value) != true)) {
                    this.FFContactField = value;
                    this.RaisePropertyChanged("FFContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCountry {
            get {
                return this.FFCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCountryField, value) != true)) {
                    this.FFCountryField = value;
                    this.RaisePropertyChanged("FFCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FFCountryNum {
            get {
                return this.FFCountryNumField;
            }
            set {
                if ((this.FFCountryNumField.Equals(value) != true)) {
                    this.FFCountryNumField = value;
                    this.RaisePropertyChanged("FFCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFID {
            get {
                return this.FFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FFIDField, value) != true)) {
                    this.FFIDField = value;
                    this.RaisePropertyChanged("FFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFPhoneNum {
            get {
                return this.FFPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FFPhoneNumField, value) != true)) {
                    this.FFPhoneNumField = value;
                    this.RaisePropertyChanged("FFPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFState {
            get {
                return this.FFStateField;
            }
            set {
                if ((object.ReferenceEquals(this.FFStateField, value) != true)) {
                    this.FFStateField = value;
                    this.RaisePropertyChanged("FFState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFZip {
            get {
                return this.FFZipField;
            }
            set {
                if ((object.ReferenceEquals(this.FFZipField, value) != true)) {
                    this.FFZipField = value;
                    this.RaisePropertyChanged("FFZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNum {
            get {
                return this.FaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumField, value) != true)) {
                    this.FaxNumField = value;
                    this.RaisePropertyChanged("FaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatStr {
            get {
                return this.FormatStrField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatStrField, value) != true)) {
                    this.FormatStrField = value;
                    this.RaisePropertyChanged("FormatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbFlag {
            get {
                return this.GlbFlagField;
            }
            set {
                if ((this.GlbFlagField.Equals(value) != true)) {
                    this.GlbFlagField = value;
                    this.RaisePropertyChanged("GlbFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbLink {
            get {
                return this.GlbLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbLinkField, value) != true)) {
                    this.GlbLinkField = value;
                    this.RaisePropertyChanged("GlbLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundType {
            get {
                return this.GroundTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundTypeField, value) != true)) {
                    this.GroundTypeField = value;
                    this.RaisePropertyChanged("GroundType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HazardousShipment {
            get {
                return this.HazardousShipmentField;
            }
            set {
                if ((this.HazardousShipmentField.Equals(value) != true)) {
                    this.HazardousShipmentField = value;
                    this.RaisePropertyChanged("HazardousShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hazmat {
            get {
                return this.HazmatField;
            }
            set {
                if ((this.HazmatField.Equals(value) != true)) {
                    this.HazmatField = value;
                    this.RaisePropertyChanged("Hazmat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INExciseRegNumber {
            get {
                return this.INExciseRegNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.INExciseRegNumberField, value) != true)) {
                    this.INExciseRegNumberField = value;
                    this.RaisePropertyChanged("INExciseRegNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INSTRegistration {
            get {
                return this.INSTRegistrationField;
            }
            set {
                if ((object.ReferenceEquals(this.INSTRegistrationField, value) != true)) {
                    this.INSTRegistrationField = value;
                    this.RaisePropertyChanged("INSTRegistration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVATNumber {
            get {
                return this.INVATNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.INVATNumberField, value) != true)) {
                    this.INVATNumberField = value;
                    this.RaisePropertyChanged("INVATNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IndividualPackIDs {
            get {
                return this.IndividualPackIDsField;
            }
            set {
                if ((this.IndividualPackIDsField.Equals(value) != true)) {
                    this.IndividualPackIDsField = value;
                    this.RaisePropertyChanged("IndividualPackIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntegrationFlag {
            get {
                return this.IntegrationFlagField;
            }
            set {
                if ((this.IntegrationFlagField.Equals(value) != true)) {
                    this.IntegrationFlagField = value;
                    this.RaisePropertyChanged("IntegrationFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntrntlShip {
            get {
                return this.IntrntlShipField;
            }
            set {
                if ((this.IntrntlShipField.Equals(value) != true)) {
                    this.IntrntlShipField = value;
                    this.RaisePropertyChanged("IntrntlShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlternate {
            get {
                return this.IsAlternateField;
            }
            set {
                if ((this.IsAlternateField.Equals(value) != true)) {
                    this.IsAlternateField = value;
                    this.RaisePropertyChanged("IsAlternate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LangNameID {
            get {
                return this.LangNameIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LangNameIDField, value) != true)) {
                    this.LangNameIDField = value;
                    this.RaisePropertyChanged("LangNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageDescription {
            get {
                return this.LanguageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageDescriptionField, value) != true)) {
                    this.LanguageDescriptionField = value;
                    this.RaisePropertyChanged("LanguageDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LateBuffer {
            get {
                return this.LateBufferField;
            }
            set {
                if ((this.LateBufferField.Equals(value) != true)) {
                    this.LateBufferField = value;
                    this.RaisePropertyChanged("LateBuffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalName {
            get {
                return this.LegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNameField, value) != true)) {
                    this.LegalNameField = value;
                    this.RaisePropertyChanged("LegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LetterOfInstr {
            get {
                return this.LetterOfInstrField;
            }
            set {
                if ((this.LetterOfInstrField.Equals(value) != true)) {
                    this.LetterOfInstrField = value;
                    this.RaisePropertyChanged("LetterOfInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXCURP {
            get {
                return this.MXCURPField;
            }
            set {
                if ((object.ReferenceEquals(this.MXCURPField, value) != true)) {
                    this.MXCURPField = value;
                    this.RaisePropertyChanged("MXCURP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXFederalID {
            get {
                return this.MXFederalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MXFederalIDField, value) != true)) {
                    this.MXFederalIDField = value;
                    this.RaisePropertyChanged("MXFederalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMunicipio {
            get {
                return this.MXMunicipioField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMunicipioField, value) != true)) {
                    this.MXMunicipioField = value;
                    this.RaisePropertyChanged("MXMunicipio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterCustIDBTName {
            get {
                return this.MasterCustIDBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterCustIDBTNameField, value) != true)) {
                    this.MasterCustIDBTNameField = value;
                    this.RaisePropertyChanged("MasterCustIDBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterCustIDCustID {
            get {
                return this.MasterCustIDCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterCustIDCustIDField, value) != true)) {
                    this.MasterCustIDCustIDField = value;
                    this.RaisePropertyChanged("MasterCustIDCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterCustIDName {
            get {
                return this.MasterCustIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterCustIDNameField, value) != true)) {
                    this.MasterCustIDNameField = value;
                    this.RaisePropertyChanged("MasterCustIDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterCustNum {
            get {
                return this.MasterCustNumField;
            }
            set {
                if ((this.MasterCustNumField.Equals(value) != true)) {
                    this.MasterCustNumField = value;
                    this.RaisePropertyChanged("MasterCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterShipToNum {
            get {
                return this.MasterShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterShipToNumField, value) != true)) {
                    this.MasterShipToNumField = value;
                    this.RaisePropertyChanged("MasterShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStdPkg {
            get {
                return this.NonStdPkgField;
            }
            set {
                if ((this.NonStdPkgField.Equals(value) != true)) {
                    this.NonStdPkgField = value;
                    this.RaisePropertyChanged("NonStdPkg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyEMail {
            get {
                return this.NotifyEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyEMailField, value) != true)) {
                    this.NotifyEMailField = value;
                    this.RaisePropertyChanged("NotifyEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyFlag {
            get {
                return this.NotifyFlagField;
            }
            set {
                if ((this.NotifyFlagField.Equals(value) != true)) {
                    this.NotifyFlagField = value;
                    this.RaisePropertyChanged("NotifyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSmartString {
            get {
                return this.OTSmartStringField;
            }
            set {
                if ((this.OTSmartStringField.Equals(value) != true)) {
                    this.OTSmartStringField = value;
                    this.RaisePropertyChanged("OTSmartString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgRegCode {
            get {
                return this.OrgRegCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgRegCodeField, value) != true)) {
                    this.OrgRegCodeField = value;
                    this.RaisePropertyChanged("OrgRegCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideCarrier {
            get {
                return this.OverrideCarrierField;
            }
            set {
                if ((this.OverrideCarrierField.Equals(value) != true)) {
                    this.OverrideCarrierField = value;
                    this.RaisePropertyChanged("OverrideCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideService {
            get {
                return this.OverrideServiceField;
            }
            set {
                if ((this.OverrideServiceField.Equals(value) != true)) {
                    this.OverrideServiceField = value;
                    this.RaisePropertyChanged("OverrideService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PendingTerritoryID {
            get {
                return this.PendingTerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PendingTerritoryIDField, value) != true)) {
                    this.PendingTerritoryIDField = value;
                    this.RaisePropertyChanged("PendingTerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodicityCode {
            get {
                return this.PeriodicityCodeField;
            }
            set {
                if ((this.PeriodicityCodeField.Equals(value) != true)) {
                    this.PeriodicityCodeField = value;
                    this.RaisePropertyChanged("PeriodicityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodicityDesc {
            get {
                return this.PeriodicityDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodicityDescField, value) != true)) {
                    this.PeriodicityDescField = value;
                    this.RaisePropertyChanged("PeriodicityDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodicityList {
            get {
                return this.PeriodicityListField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodicityListField, value) != true)) {
                    this.PeriodicityListField = value;
                    this.RaisePropertyChanged("PeriodicityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNum {
            get {
                return this.PhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumField, value) != true)) {
                    this.PhoneNumField = value;
                    this.RaisePropertyChanged("PhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceTolerance {
            get {
                return this.PriceToleranceField;
            }
            set {
                if ((this.PriceToleranceField.Equals(value) != true)) {
                    this.PriceToleranceField = value;
                    this.RaisePropertyChanged("PriceTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimSCon {
            get {
                return this.PrimSConField;
            }
            set {
                if ((this.PrimSConField.Equals(value) != true)) {
                    this.PrimSConField = value;
                    this.RaisePropertyChanged("PrimSCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrimaryShipTo {
            get {
                return this.PrimaryShipToField;
            }
            set {
                if ((this.PrimaryShipToField.Equals(value) != true)) {
                    this.PrimaryShipToField = value;
                    this.RaisePropertyChanged("PrimaryShipTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNotes {
            get {
                return this.RefNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNotesField, value) != true)) {
                    this.RefNotesField = value;
                    this.RaisePropertyChanged("RefNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResDelivery {
            get {
                return this.ResDeliveryField;
            }
            set {
                if ((this.ResDeliveryField.Equals(value) != true)) {
                    this.ResDeliveryField = value;
                    this.RaisePropertyChanged("ResDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResaleID {
            get {
                return this.ResaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResaleIDField, value) != true)) {
                    this.ResaleIDField = value;
                    this.RaisePropertyChanged("ResaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode {
            get {
                return this.SalesRepCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCodeField, value) != true)) {
                    this.SalesRepCodeField = value;
                    this.RaisePropertyChanged("SalesRepCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName {
            get {
                return this.SalesRepNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepNameField, value) != true)) {
                    this.SalesRepNameField = value;
                    this.RaisePropertyChanged("SalesRepName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatDelivery {
            get {
                return this.SatDeliveryField;
            }
            set {
                if ((this.SatDeliveryField.Equals(value) != true)) {
                    this.SatDeliveryField = value;
                    this.RaisePropertyChanged("SatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatPickup {
            get {
                return this.SatPickupField;
            }
            set {
                if ((this.SatPickupField.Equals(value) != true)) {
                    this.SatPickupField = value;
                    this.RaisePropertyChanged("SatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAlert {
            get {
                return this.ServAlertField;
            }
            set {
                if ((this.ServAlertField.Equals(value) != true)) {
                    this.ServAlertField = value;
                    this.RaisePropertyChanged("ServAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServAuthNum {
            get {
                return this.ServAuthNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ServAuthNumField, value) != true)) {
                    this.ServAuthNumField = value;
                    this.RaisePropertyChanged("ServAuthNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServDeliveryDate {
            get {
                return this.ServDeliveryDateField;
            }
            set {
                if ((this.ServDeliveryDateField.Equals(value) != true)) {
                    this.ServDeliveryDateField = value;
                    this.RaisePropertyChanged("ServDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServHomeDel {
            get {
                return this.ServHomeDelField;
            }
            set {
                if ((this.ServHomeDelField.Equals(value) != true)) {
                    this.ServHomeDelField = value;
                    this.RaisePropertyChanged("ServHomeDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServInstruct {
            get {
                return this.ServInstructField;
            }
            set {
                if ((object.ReferenceEquals(this.ServInstructField, value) != true)) {
                    this.ServInstructField = value;
                    this.RaisePropertyChanged("ServInstruct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServPhone {
            get {
                return this.ServPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServPhoneField, value) != true)) {
                    this.ServPhoneField = value;
                    this.RaisePropertyChanged("ServPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef1 {
            get {
                return this.ServRef1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef1Field, value) != true)) {
                    this.ServRef1Field = value;
                    this.RaisePropertyChanged("ServRef1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef2 {
            get {
                return this.ServRef2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef2Field, value) != true)) {
                    this.ServRef2Field = value;
                    this.RaisePropertyChanged("ServRef2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef3 {
            get {
                return this.ServRef3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef3Field, value) != true)) {
                    this.ServRef3Field = value;
                    this.RaisePropertyChanged("ServRef3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef4 {
            get {
                return this.ServRef4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef4Field, value) != true)) {
                    this.ServRef4Field = value;
                    this.RaisePropertyChanged("ServRef4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef5 {
            get {
                return this.ServRef5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef5Field, value) != true)) {
                    this.ServRef5Field = value;
                    this.RaisePropertyChanged("ServRef5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServRelease {
            get {
                return this.ServReleaseField;
            }
            set {
                if ((this.ServReleaseField.Equals(value) != true)) {
                    this.ServReleaseField = value;
                    this.RaisePropertyChanged("ServRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSignature {
            get {
                return this.ServSignatureField;
            }
            set {
                if ((this.ServSignatureField.Equals(value) != true)) {
                    this.ServSignatureField = value;
                    this.RaisePropertyChanged("ServSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipExprtDeclartn {
            get {
                return this.ShipExprtDeclartnField;
            }
            set {
                if ((this.ShipExprtDeclartnField.Equals(value) != true)) {
                    this.ShipExprtDeclartnField = value;
                    this.RaisePropertyChanged("ShipExprtDeclartn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaDescription {
            get {
                return this.ShipViaDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaDescriptionField, value) != true)) {
                    this.ShipViaDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaWebDesc {
            get {
                return this.ShipViaWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaWebDescField, value) != true)) {
                    this.ShipViaWebDescField = value;
                    this.RaisePropertyChanged("ShipViaWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TATaxAuthorityDescription {
            get {
                return this.TATaxAuthorityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TATaxAuthorityDescriptionField, value) != true)) {
                    this.TATaxAuthorityDescriptionField = value;
                    this.RaisePropertyChanged("TATaxAuthorityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxAuthorityCode {
            get {
                return this.TaxAuthorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxAuthorityCodeField, value) != true)) {
                    this.TaxAuthorityCodeField = value;
                    this.RaisePropertyChanged("TaxAuthorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegReason {
            get {
                return this.TaxRegReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegReasonField, value) != true)) {
                    this.TaxRegReasonField = value;
                    this.RaisePropertyChanged("TaxRegReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionDescription {
            get {
                return this.TaxRegionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionDescriptionField, value) != true)) {
                    this.TaxRegionDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerrSelectFlag {
            get {
                return this.TerrSelectFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.TerrSelectFlagField, value) != true)) {
                    this.TerrSelectFlagField = value;
                    this.RaisePropertyChanged("TerrSelectFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritoryID {
            get {
                return this.TerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryIDField, value) != true)) {
                    this.TerritoryIDField = value;
                    this.RaisePropertyChanged("TerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritorySelect {
            get {
                return this.TerritorySelectField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritorySelectField, value) != true)) {
                    this.TerritorySelectField = value;
                    this.RaisePropertyChanged("TerritorySelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritorySelectDescription {
            get {
                return this.TerritorySelectDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritorySelectDescriptionField, value) != true)) {
                    this.TerritorySelectDescriptionField = value;
                    this.RaisePropertyChanged("TerritorySelectDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritoryTerritoryDesc {
            get {
                return this.TerritoryTerritoryDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryTerritoryDescField, value) != true)) {
                    this.TerritoryTerritoryDescField = value;
                    this.RaisePropertyChanged("TerritoryTerritoryDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradingPartnerName {
            get {
                return this.TradingPartnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TradingPartnerNameField, value) != true)) {
                    this.TradingPartnerNameField = value;
                    this.RaisePropertyChanged("TradingPartnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVMemo {
            get {
                return this.UPSQVMemoField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVMemoField, value) != true)) {
                    this.UPSQVMemoField = value;
                    this.RaisePropertyChanged("UPSQVMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVShipFromName {
            get {
                return this.UPSQVShipFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVShipFromNameField, value) != true)) {
                    this.UPSQVShipFromNameField = value;
                    this.RaisePropertyChanged("UPSQVShipFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UPSQuantumView {
            get {
                return this.UPSQuantumViewField;
            }
            set {
                if ((this.UPSQuantumViewField.Equals(value) != true)) {
                    this.UPSQuantumViewField = value;
                    this.RaisePropertyChanged("UPSQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WIWebShipTo {
            get {
                return this.WIWebShipToField;
            }
            set {
                if ((this.WIWebShipToField.Equals(value) != true)) {
                    this.WIWebShipToField = value;
                    this.RaisePropertyChanged("WIWebShipTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZIP {
            get {
                return this.ZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ZIPField, value) != true)) {
                    this.ZIPField = value;
                    this.RaisePropertyChanged("ZIP");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipToAttchRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToDiscPriceLstRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipToDiscPriceLstRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToDiscPriceLstRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceListListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToDiscPriceLstRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCode {
            get {
                return this.ListCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCodeField, value) != true)) {
                    this.ListCodeField = value;
                    this.RaisePropertyChanged("ListCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListEndDate {
            get {
                return this.PriceListEndDateField;
            }
            set {
                if ((this.PriceListEndDateField.Equals(value) != true)) {
                    this.PriceListEndDateField = value;
                    this.RaisePropertyChanged("PriceListEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceListListDescription {
            get {
                return this.PriceListListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceListListDescriptionField, value) != true)) {
                    this.PriceListListDescriptionField = value;
                    this.RaisePropertyChanged("PriceListListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListStartDate {
            get {
                return this.PriceListStartDateField;
            }
            set {
                if ((this.PriceListStartDateField.Equals(value) != true)) {
                    this.PriceListStartDateField = value;
                    this.RaisePropertyChanged("PriceListStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToLabExpRateRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipToLabExpRateRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToLabExpRateRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RateMultiplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToLabExpRateRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseCode {
            get {
                return this.ExpenseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseCodeField, value) != true)) {
                    this.ExpenseCodeField = value;
                    this.RaisePropertyChanged("ExpenseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedRate {
            get {
                return this.FixedRateField;
            }
            set {
                if ((this.FixedRateField.Equals(value) != true)) {
                    this.FixedRateField = value;
                    this.RaisePropertyChanged("FixedRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RateMultiplier {
            get {
                return this.RateMultiplierField;
            }
            set {
                if ((this.RateMultiplierField.Equals(value) != true)) {
                    this.RateMultiplierField = value;
                    this.RaisePropertyChanged("RateMultiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RateType {
            get {
                return this.RateTypeField;
            }
            set {
                if ((this.RateTypeField.Equals(value) != true)) {
                    this.RateTypeField = value;
                    this.RaisePropertyChanged("RateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToShipToNum {
            get {
                return this.ShipToShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToShipToNumField, value) != true)) {
                    this.ShipToShipToNumField = value;
                    this.RaisePropertyChanged("ShipToShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToMFBillRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipToMFBillRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToMFBillRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayBTCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToMFBillRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayAccount {
            get {
                return this.PayAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PayAccountField, value) != true)) {
                    this.PayAccountField = value;
                    this.RaisePropertyChanged("PayAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress1 {
            get {
                return this.PayBTAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress1Field, value) != true)) {
                    this.PayBTAddress1Field = value;
                    this.RaisePropertyChanged("PayBTAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress2 {
            get {
                return this.PayBTAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress2Field, value) != true)) {
                    this.PayBTAddress2Field = value;
                    this.RaisePropertyChanged("PayBTAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress3 {
            get {
                return this.PayBTAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress3Field, value) != true)) {
                    this.PayBTAddress3Field = value;
                    this.RaisePropertyChanged("PayBTAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCity {
            get {
                return this.PayBTCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCityField, value) != true)) {
                    this.PayBTCityField = value;
                    this.RaisePropertyChanged("PayBTCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCountry {
            get {
                return this.PayBTCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCountryField, value) != true)) {
                    this.PayBTCountryField = value;
                    this.RaisePropertyChanged("PayBTCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayBTCountryNum {
            get {
                return this.PayBTCountryNumField;
            }
            set {
                if ((this.PayBTCountryNumField.Equals(value) != true)) {
                    this.PayBTCountryNumField = value;
                    this.RaisePropertyChanged("PayBTCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTFlag {
            get {
                return this.PayBTFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTFlagField, value) != true)) {
                    this.PayBTFlagField = value;
                    this.RaisePropertyChanged("PayBTFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTPhone {
            get {
                return this.PayBTPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTPhoneField, value) != true)) {
                    this.PayBTPhoneField = value;
                    this.RaisePropertyChanged("PayBTPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTState {
            get {
                return this.PayBTStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTStateField, value) != true)) {
                    this.PayBTStateField = value;
                    this.RaisePropertyChanged("PayBTState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTZip {
            get {
                return this.PayBTZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTZipField, value) != true)) {
                    this.PayBTZipField = value;
                    this.RaisePropertyChanged("PayBTZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayTypeDesc {
            get {
                return this.PayTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PayTypeDescField, value) != true)) {
                    this.PayTypeDescField = value;
                    this.RaisePropertyChanged("PayTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToPriceLstRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipToPriceLstRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToPriceLstRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceListListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceListStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToPriceLstRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListCode {
            get {
                return this.ListCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCodeField, value) != true)) {
                    this.ListCodeField = value;
                    this.RaisePropertyChanged("ListCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListEndDate {
            get {
                return this.PriceListEndDateField;
            }
            set {
                if ((this.PriceListEndDateField.Equals(value) != true)) {
                    this.PriceListEndDateField = value;
                    this.RaisePropertyChanged("PriceListEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceListListDescription {
            get {
                return this.PriceListListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceListListDescriptionField, value) != true)) {
                    this.PriceListListDescriptionField = value;
                    this.RaisePropertyChanged("PriceListListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceListStartDate {
            get {
                return this.PriceListStartDateField;
            }
            set {
                if ((this.PriceListStartDateField.Equals(value) != true)) {
                    this.PriceListStartDateField = value;
                    this.RaisePropertyChanged("PriceListStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToRestrictionRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipToRestrictionRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToRestrictionRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToRestrictionRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionTypeDescription {
            get {
                return this.RestrictionTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionTypeDescriptionField, value) != true)) {
                    this.RestrictionTypeDescriptionField = value;
                    this.RaisePropertyChanged("RestrictionTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionTypeID {
            get {
                return this.RestrictionTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionTypeIDField, value) != true)) {
                    this.RestrictionTypeIDField = value;
                    this.RaisePropertyChanged("RestrictionTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToSrchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipToSrchRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToSrchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToSrchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToID {
            get {
                return this.ShipToIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToIDField, value) != true)) {
                    this.ShipToIDField = value;
                    this.RaisePropertyChanged("ShipToID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToUPSEmlRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipToUPSEmlRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ShipToUPSEmlRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeliveryNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FailureNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipmentNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UPSQVSeqField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ShipToUPSEmlRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeliveryNotify {
            get {
                return this.DeliveryNotifyField;
            }
            set {
                if ((this.DeliveryNotifyField.Equals(value) != true)) {
                    this.DeliveryNotifyField = value;
                    this.RaisePropertyChanged("DeliveryNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableQuantumView {
            get {
                return this.EnableQuantumViewField;
            }
            set {
                if ((this.EnableQuantumViewField.Equals(value) != true)) {
                    this.EnableQuantumViewField = value;
                    this.RaisePropertyChanged("EnableQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FailureNotify {
            get {
                return this.FailureNotifyField;
            }
            set {
                if ((this.FailureNotifyField.Equals(value) != true)) {
                    this.FailureNotifyField = value;
                    this.RaisePropertyChanged("FailureNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipmentNotify {
            get {
                return this.ShipmentNotifyField;
            }
            set {
                if ((this.ShipmentNotifyField.Equals(value) != true)) {
                    this.ShipmentNotifyField = value;
                    this.RaisePropertyChanged("ShipmentNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UPSQVSeq {
            get {
                return this.UPSQVSeqField;
            }
            set {
                if ((this.UPSQVSeqField.Equals(value) != true)) {
                    this.UPSQVSeqField = value;
                    this.RaisePropertyChanged("UPSQVSeq");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxExemptRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class TaxExemptRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.TaxExemptRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedToFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesTRCDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesTaxDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxTextDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.TaxExemptRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveFrom {
            get {
                return this.EffectiveFromField;
            }
            set {
                if ((this.EffectiveFromField.Equals(value) != true)) {
                    this.EffectiveFromField = value;
                    this.RaisePropertyChanged("EffectiveFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveTo {
            get {
                return this.EffectiveToField;
            }
            set {
                if ((this.EffectiveToField.Equals(value) != true)) {
                    this.EffectiveToField = value;
                    this.RaisePropertyChanged("EffectiveTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key1 {
            get {
                return this.Key1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key1Field, value) != true)) {
                    this.Key1Field = value;
                    this.RaisePropertyChanged("Key1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key2 {
            get {
                return this.Key2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key2Field, value) != true)) {
                    this.Key2Field = value;
                    this.RaisePropertyChanged("Key2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedToFile {
            get {
                return this.RelatedToFileField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedToFileField, value) != true)) {
                    this.RelatedToFileField = value;
                    this.RaisePropertyChanged("RelatedToFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesTRCDescription {
            get {
                return this.SalesTRCDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesTRCDescriptionField, value) != true)) {
                    this.SalesTRCDescriptionField = value;
                    this.RaisePropertyChanged("SalesTRCDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesTaxDescription {
            get {
                return this.SalesTaxDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesTaxDescriptionField, value) != true)) {
                    this.SalesTaxDescriptionField = value;
                    this.RaisePropertyChanged("SalesTaxDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxTextDescription {
            get {
                return this.TaxTextDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxTextDescriptionField, value) != true)) {
                    this.TaxTextDescriptionField = value;
                    this.RaisePropertyChanged("TaxTextDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCAddressRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ETCAddressRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ACWPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierRouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierRouteDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ETCAddressRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FipsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidPostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidRegionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ACWPercentage {
            get {
                return this.ACWPercentageField;
            }
            set {
                if ((this.ACWPercentageField.Equals(value) != true)) {
                    this.ACWPercentageField = value;
                    this.RaisePropertyChanged("ACWPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSource {
            get {
                return this.AddrSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceField, value) != true)) {
                    this.AddrSourceField = value;
                    this.RaisePropertyChanged("AddrSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSourceID {
            get {
                return this.AddrSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceIDField, value) != true)) {
                    this.AddrSourceIDField = value;
                    this.RaisePropertyChanged("AddrSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressCode {
            get {
                return this.AddressCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressCodeField, value) != true)) {
                    this.AddressCodeField = value;
                    this.RaisePropertyChanged("AddressCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeField, value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressTypeDesc {
            get {
                return this.AddressTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeDescField, value) != true)) {
                    this.AddressTypeDescField = value;
                    this.RaisePropertyChanged("AddressTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierRoute {
            get {
                return this.CarrierRouteField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierRouteField, value) != true)) {
                    this.CarrierRouteField = value;
                    this.RaisePropertyChanged("CarrierRoute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierRouteDesc {
            get {
                return this.CarrierRouteDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierRouteDescField, value) != true)) {
                    this.CarrierRouteDescField = value;
                    this.RaisePropertyChanged("CarrierRouteDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ETCAddressRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryNum {
            get {
                return this.CountryNumField;
            }
            set {
                if ((this.CountryNumField.Equals(value) != true)) {
                    this.CountryNumField = value;
                    this.RaisePropertyChanged("CountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FipsCode {
            get {
                return this.FipsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FipsCodeField, value) != true)) {
                    this.FipsCodeField = value;
                    this.RaisePropertyChanged("FipsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line1 {
            get {
                return this.Line1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line1Field, value) != true)) {
                    this.Line1Field = value;
                    this.RaisePropertyChanged("Line1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line2 {
            get {
                return this.Line2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line2Field, value) != true)) {
                    this.Line2Field = value;
                    this.RaisePropertyChanged("Line2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line3 {
            get {
                return this.Line3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line3Field, value) != true)) {
                    this.Line3Field = value;
                    this.RaisePropertyChanged("Line3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCountry {
            get {
                return this.OTSCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCountryField, value) != true)) {
                    this.OTSCountryField = value;
                    this.RaisePropertyChanged("OTSCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostNet {
            get {
                return this.PostNetField;
            }
            set {
                if ((object.ReferenceEquals(this.PostNetField, value) != true)) {
                    this.PostNetField = value;
                    this.RaisePropertyChanged("PostNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestID {
            get {
                return this.RequestIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIDField, value) != true)) {
                    this.RequestIDField = value;
                    this.RaisePropertyChanged("RequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultCodeField, value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultSeq {
            get {
                return this.ResultSeqField;
            }
            set {
                if ((this.ResultSeqField.Equals(value) != true)) {
                    this.ResultSeqField = value;
                    this.RaisePropertyChanged("ResultSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateAddr {
            get {
                return this.UpdateAddrField;
            }
            set {
                if ((this.UpdateAddrField.Equals(value) != true)) {
                    this.UpdateAddrField = value;
                    this.RaisePropertyChanged("UpdateAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateAllowed {
            get {
                return this.UpdateAllowedField;
            }
            set {
                if ((this.UpdateAllowedField.Equals(value) != true)) {
                    this.UpdateAllowedField = value;
                    this.RaisePropertyChanged("UpdateAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidCity {
            get {
                return this.ValidCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidCityField, value) != true)) {
                    this.ValidCityField = value;
                    this.RaisePropertyChanged("ValidCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidCountry {
            get {
                return this.ValidCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidCountryField, value) != true)) {
                    this.ValidCountryField = value;
                    this.RaisePropertyChanged("ValidCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine1 {
            get {
                return this.ValidLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine1Field, value) != true)) {
                    this.ValidLine1Field = value;
                    this.RaisePropertyChanged("ValidLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine2 {
            get {
                return this.ValidLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine2Field, value) != true)) {
                    this.ValidLine2Field = value;
                    this.RaisePropertyChanged("ValidLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine3 {
            get {
                return this.ValidLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine3Field, value) != true)) {
                    this.ValidLine3Field = value;
                    this.RaisePropertyChanged("ValidLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine4 {
            get {
                return this.ValidLine4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine4Field, value) != true)) {
                    this.ValidLine4Field = value;
                    this.RaisePropertyChanged("ValidLine4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidPostalCode {
            get {
                return this.ValidPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidPostalCodeField, value) != true)) {
                    this.ValidPostalCodeField = value;
                    this.RaisePropertyChanged("ValidPostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidRegion {
            get {
                return this.ValidRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidRegionField, value) != true)) {
                    this.ValidRegionField = value;
                    this.RaisePropertyChanged("ValidRegion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCMessageRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ETCMessageRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.ETCMessageRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelplinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefersToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSource {
            get {
                return this.AddrSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceField, value) != true)) {
                    this.AddrSourceField = value;
                    this.RaisePropertyChanged("AddrSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSourceID {
            get {
                return this.AddrSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceIDField, value) != true)) {
                    this.AddrSourceIDField = value;
                    this.RaisePropertyChanged("AddrSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.ETCMessageRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Helplink {
            get {
                return this.HelplinkField;
            }
            set {
                if ((object.ReferenceEquals(this.HelplinkField, value) != true)) {
                    this.HelplinkField = value;
                    this.RaisePropertyChanged("Helplink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefersTo {
            get {
                return this.RefersToField;
            }
            set {
                if ((object.ReferenceEquals(this.RefersToField, value) != true)) {
                    this.RefersToField = value;
                    this.RaisePropertyChanged("RefersTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestID {
            get {
                return this.RequestIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIDField, value) != true)) {
                    this.RequestIDField = value;
                    this.RaisePropertyChanged("RequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((object.ReferenceEquals(this.SeverityField, value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillToRefsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class BillToRefsRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.BillToRefsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RefCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCustomerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.BillToRefsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCustID {
            get {
                return this.RefCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCustIDField, value) != true)) {
                    this.RefCustIDField = value;
                    this.RaisePropertyChanged("RefCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RefCustNum {
            get {
                return this.RefCustNumField;
            }
            set {
                if ((this.RefCustNumField.Equals(value) != true)) {
                    this.RefCustNumField = value;
                    this.RaisePropertyChanged("RefCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCustomerName {
            get {
                return this.RefCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCustomerNameField, value) != true)) {
                    this.RefCustomerNameField = value;
                    this.RaisePropertyChanged("RefCustomerName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbCustBillToRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class GlbCustBillToRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTLegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.GlbCustBillToRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultBillToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbBTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkBTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgRegCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTLegalName {
            get {
                return this.BTLegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTLegalNameField, value) != true)) {
                    this.BTLegalNameField = value;
                    this.RaisePropertyChanged("BTLegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustBillToRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultBillTo {
            get {
                return this.DefaultBillToField;
            }
            set {
                if ((this.DefaultBillToField.Equals(value) != true)) {
                    this.DefaultBillToField = value;
                    this.RaisePropertyChanged("DefaultBillTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbBTCustNum {
            get {
                return this.GlbBTCustNumField;
            }
            set {
                if ((this.GlbBTCustNumField.Equals(value) != true)) {
                    this.GlbBTCustNumField = value;
                    this.RaisePropertyChanged("GlbBTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbCustNum {
            get {
                return this.GlbCustNumField;
            }
            set {
                if ((this.GlbCustNumField.Equals(value) != true)) {
                    this.GlbCustNumField = value;
                    this.RaisePropertyChanged("GlbCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoiceAddress {
            get {
                return this.InvoiceAddressField;
            }
            set {
                if ((this.InvoiceAddressField.Equals(value) != true)) {
                    this.InvoiceAddressField = value;
                    this.RaisePropertyChanged("InvoiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkBTCustNum {
            get {
                return this.LinkBTCustNumField;
            }
            set {
                if ((this.LinkBTCustNumField.Equals(value) != true)) {
                    this.LinkBTCustNumField = value;
                    this.RaisePropertyChanged("LinkBTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgRegCode {
            get {
                return this.OrgRegCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgRegCodeField, value) != true)) {
                    this.OrgRegCodeField = value;
                    this.RaisePropertyChanged("OrgRegCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankCode {
            get {
                return this.OurBankCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankCodeField, value) != true)) {
                    this.OurBankCodeField = value;
                    this.RaisePropertyChanged("OurBankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegReason {
            get {
                return this.TaxRegReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegReasonField, value) != true)) {
                    this.TaxRegReasonField = value;
                    this.RaisePropertyChanged("TaxRegReason");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbCustomerRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class GlbCustomerRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGAFIPResponsibilityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGBillToProvinceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGGrossIncomeTaxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGIDDocTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGIDDocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGProvinceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGUseGoodDefaultMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ARCreditTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARInvoiceAdjITCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARInvoiceITCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcctRefNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcrossNatAccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddlHdlgFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddressValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllocPriorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowAltBillToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowShipTo3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AnnualRevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoGenPromNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTFormatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BorderCrossingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool COIsOneTimeCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COOneTimeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CertOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckConfirmCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckDateCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckDuplicatePOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckUpdateCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChrgAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CollectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CollectionsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.GlbCustomerRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommercialInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidateLinesPerPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidateSOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContBillDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditCardOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreditClearDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditClearTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditClearUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreditHoldDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditHoldSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditIncludeOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditIncludePIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditMemoITCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreditReviewDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CustPILimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustPartOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustPricingSchemaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEOrgTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCollectionPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandAddActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandAddLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandAutoAcceptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCancelActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandCancelLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandChangeActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandChangeDateActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandChangeDateLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandChangeLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckCUMMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckCUMMActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckCfgActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForPartActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForRevActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForRunOutPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForRunOutPartActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCloseNoMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCloseRejSkdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandDateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandDayOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandDeliveryDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandNewLineActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandNewLineLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandQtyChangeActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandQtyChangeLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandSplitSchedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandUnitPriceDiffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandUnitPriceDiffActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandUseSysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DirectDebitingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscountQualifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayCustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DmdCheckPartialShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DmdCheckShipActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocGlobalCreditLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocGlobalPILimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DueDateCriteriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDICodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EDITestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDITranslatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EInvCompanyIDAttrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ERSOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ETCAddrChgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EarlyBufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityUseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EstDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcFromValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalCRMGlbCustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalCRMGlbCustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExternalCRMLastSyncField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalCRMSyncRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalDeliveryNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FFCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FinChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbNACreditIsShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNACreditSharedPrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbNAParentCreditIsUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAParentCreditPrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNAParentsCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlbNASharedCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalCredIncOrdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalCredIncPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlobalCreditLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GlobalPILimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazmatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICTraderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INCSTNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INPANNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IndividualPackIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntrntlShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvPerPackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvcOrderCmpDfltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LateBufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LetterOfInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkPortNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXMunicipioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MYIndustryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagedVendIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManagedVendNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkUpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCashRecITCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NACreditIsShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NACreditPreferenceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NACreditSharedPrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NACreditUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAOwnCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NAParentCreditIsUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAParentCreditPrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NAParentsCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NARlsClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NASharedCreditUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStdPkgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotifyEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfEmployeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSSaveAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSmartStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OldCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OneInvPerPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHoldForReviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgRegCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurSupplierCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideCarrierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideRlsClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnershipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PBTermsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PECollectionAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PEGoodsContributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteePhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeTaxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEIdentityDocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PENoAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PENotFoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PEWithholdAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PICreditTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PMUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParamCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PendingTerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PeriodicBillingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimBConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimPConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimSConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintAckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintLabelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintStatementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RACodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RebateFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RebateVendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReminderCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResaleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservePriorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RfqAttachAllowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SICCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SOCreditTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServAuthNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServHomeDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServInstructField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServPODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipExprtDeclartnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToTerrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingQualifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SkippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SyncToExternalCRMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string THBranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIRegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxAuthorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaxRoundRuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TerritoryLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ThirdPLCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickerLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickerSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradingPartnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVEmailTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVShipFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UPSQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidPayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidShipToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidSoldToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerbalConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGAFIPResponsibilityCode {
            get {
                return this.AGAFIPResponsibilityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGAFIPResponsibilityCodeField, value) != true)) {
                    this.AGAFIPResponsibilityCodeField = value;
                    this.RaisePropertyChanged("AGAFIPResponsibilityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGBillToProvinceCode {
            get {
                return this.AGBillToProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGBillToProvinceCodeField, value) != true)) {
                    this.AGBillToProvinceCodeField = value;
                    this.RaisePropertyChanged("AGBillToProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGGrossIncomeTaxID {
            get {
                return this.AGGrossIncomeTaxIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AGGrossIncomeTaxIDField, value) != true)) {
                    this.AGGrossIncomeTaxIDField = value;
                    this.RaisePropertyChanged("AGGrossIncomeTaxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGIDDocTypeCode {
            get {
                return this.AGIDDocTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGIDDocTypeCodeField, value) != true)) {
                    this.AGIDDocTypeCodeField = value;
                    this.RaisePropertyChanged("AGIDDocTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGIDDocumentNumber {
            get {
                return this.AGIDDocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AGIDDocumentNumberField, value) != true)) {
                    this.AGIDDocumentNumberField = value;
                    this.RaisePropertyChanged("AGIDDocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGProvinceCode {
            get {
                return this.AGProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGProvinceCodeField, value) != true)) {
                    this.AGProvinceCodeField = value;
                    this.RaisePropertyChanged("AGProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGUseGoodDefaultMark {
            get {
                return this.AGUseGoodDefaultMarkField;
            }
            set {
                if ((this.AGUseGoodDefaultMarkField.Equals(value) != true)) {
                    this.AGUseGoodDefaultMarkField = value;
                    this.RaisePropertyChanged("AGUseGoodDefaultMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ARCreditTotal {
            get {
                return this.ARCreditTotalField;
            }
            set {
                if ((this.ARCreditTotalField.Equals(value) != true)) {
                    this.ARCreditTotalField = value;
                    this.RaisePropertyChanged("ARCreditTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARInvoiceAdjITCode {
            get {
                return this.ARInvoiceAdjITCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvoiceAdjITCodeField, value) != true)) {
                    this.ARInvoiceAdjITCodeField = value;
                    this.RaisePropertyChanged("ARInvoiceAdjITCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARInvoiceITCode {
            get {
                return this.ARInvoiceITCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvoiceITCodeField, value) != true)) {
                    this.ARInvoiceITCodeField = value;
                    this.RaisePropertyChanged("ARInvoiceITCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcctRefNumber {
            get {
                return this.AcctRefNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AcctRefNumberField, value) != true)) {
                    this.AcctRefNumberField = value;
                    this.RaisePropertyChanged("AcctRefNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AcrossNatAcc {
            get {
                return this.AcrossNatAccField;
            }
            set {
                if ((this.AcrossNatAccField.Equals(value) != true)) {
                    this.AcrossNatAccField = value;
                    this.RaisePropertyChanged("AcrossNatAcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddlHdlgFlag {
            get {
                return this.AddlHdlgFlagField;
            }
            set {
                if ((this.AddlHdlgFlagField.Equals(value) != true)) {
                    this.AddlHdlgFlagField = value;
                    this.RaisePropertyChanged("AddlHdlgFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddressVal {
            get {
                return this.AddressValField;
            }
            set {
                if ((this.AddressValField.Equals(value) != true)) {
                    this.AddressValField = value;
                    this.RaisePropertyChanged("AddressVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllocPriorityCode {
            get {
                return this.AllocPriorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AllocPriorityCodeField, value) != true)) {
                    this.AllocPriorityCodeField = value;
                    this.RaisePropertyChanged("AllocPriorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAltBillTo {
            get {
                return this.AllowAltBillToField;
            }
            set {
                if ((this.AllowAltBillToField.Equals(value) != true)) {
                    this.AllowAltBillToField = value;
                    this.RaisePropertyChanged("AllowAltBillTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowOTS {
            get {
                return this.AllowOTSField;
            }
            set {
                if ((this.AllowOTSField.Equals(value) != true)) {
                    this.AllowOTSField = value;
                    this.RaisePropertyChanged("AllowOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowShipTo3 {
            get {
                return this.AllowShipTo3Field;
            }
            set {
                if ((this.AllowShipTo3Field.Equals(value) != true)) {
                    this.AllowShipTo3Field = value;
                    this.RaisePropertyChanged("AllowShipTo3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AnnualRevenue {
            get {
                return this.AnnualRevenueField;
            }
            set {
                if ((this.AnnualRevenueField.Equals(value) != true)) {
                    this.AnnualRevenueField = value;
                    this.RaisePropertyChanged("AnnualRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyChrg {
            get {
                return this.ApplyChrgField;
            }
            set {
                if ((this.ApplyChrgField.Equals(value) != true)) {
                    this.ApplyChrgField = value;
                    this.RaisePropertyChanged("ApplyChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoGenPromNotes {
            get {
                return this.AutoGenPromNotesField;
            }
            set {
                if ((this.AutoGenPromNotesField.Equals(value) != true)) {
                    this.AutoGenPromNotesField = value;
                    this.RaisePropertyChanged("AutoGenPromNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddress1 {
            get {
                return this.BTAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddress1Field, value) != true)) {
                    this.BTAddress1Field = value;
                    this.RaisePropertyChanged("BTAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddress2 {
            get {
                return this.BTAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddress2Field, value) != true)) {
                    this.BTAddress2Field = value;
                    this.RaisePropertyChanged("BTAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddress3 {
            get {
                return this.BTAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddress3Field, value) != true)) {
                    this.BTAddress3Field = value;
                    this.RaisePropertyChanged("BTAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCity {
            get {
                return this.BTCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCityField, value) != true)) {
                    this.BTCityField = value;
                    this.RaisePropertyChanged("BTCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCountry {
            get {
                return this.BTCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCountryField, value) != true)) {
                    this.BTCountryField = value;
                    this.RaisePropertyChanged("BTCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCountryNum {
            get {
                return this.BTCountryNumField;
            }
            set {
                if ((this.BTCountryNumField.Equals(value) != true)) {
                    this.BTCountryNumField = value;
                    this.RaisePropertyChanged("BTCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTFaxNum {
            get {
                return this.BTFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTFaxNumField, value) != true)) {
                    this.BTFaxNumField = value;
                    this.RaisePropertyChanged("BTFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTFormatStr {
            get {
                return this.BTFormatStrField;
            }
            set {
                if ((object.ReferenceEquals(this.BTFormatStrField, value) != true)) {
                    this.BTFormatStrField = value;
                    this.RaisePropertyChanged("BTFormatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTName {
            get {
                return this.BTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTNameField, value) != true)) {
                    this.BTNameField = value;
                    this.RaisePropertyChanged("BTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTPhoneNum {
            get {
                return this.BTPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTPhoneNumField, value) != true)) {
                    this.BTPhoneNumField = value;
                    this.RaisePropertyChanged("BTPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTState {
            get {
                return this.BTStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BTStateField, value) != true)) {
                    this.BTStateField = value;
                    this.RaisePropertyChanged("BTState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTZip {
            get {
                return this.BTZipField;
            }
            set {
                if ((object.ReferenceEquals(this.BTZipField, value) != true)) {
                    this.BTZipField = value;
                    this.RaisePropertyChanged("BTZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillDay {
            get {
                return this.BillDayField;
            }
            set {
                if ((this.BillDayField.Equals(value) != true)) {
                    this.BillDayField = value;
                    this.RaisePropertyChanged("BillDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFrequency {
            get {
                return this.BillFrequencyField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFrequencyField, value) != true)) {
                    this.BillFrequencyField = value;
                    this.RaisePropertyChanged("BillFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderCrossing {
            get {
                return this.BorderCrossingField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderCrossingField, value) != true)) {
                    this.BorderCrossingField = value;
                    this.RaisePropertyChanged("BorderCrossing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COD {
            get {
                return this.CODField;
            }
            set {
                if ((this.CODField.Equals(value) != true)) {
                    this.CODField = value;
                    this.RaisePropertyChanged("COD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFreight {
            get {
                return this.CODFreightField;
            }
            set {
                if ((this.CODFreightField.Equals(value) != true)) {
                    this.CODFreightField = value;
                    this.RaisePropertyChanged("CODFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COIsOneTimeCust {
            get {
                return this.COIsOneTimeCustField;
            }
            set {
                if ((this.COIsOneTimeCustField.Equals(value) != true)) {
                    this.COIsOneTimeCustField = value;
                    this.RaisePropertyChanged("COIsOneTimeCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COOneTimeID {
            get {
                return this.COOneTimeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COOneTimeIDField, value) != true)) {
                    this.COOneTimeIDField = value;
                    this.RaisePropertyChanged("COOneTimeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CertOfOrigin {
            get {
                return this.CertOfOriginField;
            }
            set {
                if ((this.CertOfOriginField.Equals(value) != true)) {
                    this.CertOfOriginField = value;
                    this.RaisePropertyChanged("CertOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeCode {
            get {
                return this.ChargeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeCodeField, value) != true)) {
                    this.ChargeCodeField = value;
                    this.RaisePropertyChanged("ChargeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckConfirmCapPromise {
            get {
                return this.CheckConfirmCapPromiseField;
            }
            set {
                if ((this.CheckConfirmCapPromiseField.Equals(value) != true)) {
                    this.CheckConfirmCapPromiseField = value;
                    this.RaisePropertyChanged("CheckConfirmCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckDateCapPromise {
            get {
                return this.CheckDateCapPromiseField;
            }
            set {
                if ((this.CheckDateCapPromiseField.Equals(value) != true)) {
                    this.CheckDateCapPromiseField = value;
                    this.RaisePropertyChanged("CheckDateCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckDuplicatePO {
            get {
                return this.CheckDuplicatePOField;
            }
            set {
                if ((this.CheckDuplicatePOField.Equals(value) != true)) {
                    this.CheckDuplicatePOField = value;
                    this.RaisePropertyChanged("CheckDuplicatePO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckUpdateCapPromise {
            get {
                return this.CheckUpdateCapPromiseField;
            }
            set {
                if ((this.CheckUpdateCapPromiseField.Equals(value) != true)) {
                    this.CheckUpdateCapPromiseField = value;
                    this.RaisePropertyChanged("CheckUpdateCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChrgAmount {
            get {
                return this.ChrgAmountField;
            }
            set {
                if ((this.ChrgAmountField.Equals(value) != true)) {
                    this.ChrgAmountField = value;
                    this.RaisePropertyChanged("ChrgAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Collections {
            get {
                return this.CollectionsField;
            }
            set {
                if ((this.CollectionsField.Equals(value) != true)) {
                    this.CollectionsField = value;
                    this.RaisePropertyChanged("Collections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CollectionsDate {
            get {
                return this.CollectionsDateField;
            }
            set {
                if ((this.CollectionsDateField.Equals(value) != true)) {
                    this.CollectionsDateField = value;
                    this.RaisePropertyChanged("CollectionsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommercialInvoice {
            get {
                return this.CommercialInvoiceField;
            }
            set {
                if ((this.CommercialInvoiceField.Equals(value) != true)) {
                    this.CommercialInvoiceField = value;
                    this.RaisePropertyChanged("CommercialInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidateLinesPerPart {
            get {
                return this.ConsolidateLinesPerPartField;
            }
            set {
                if ((this.ConsolidateLinesPerPartField.Equals(value) != true)) {
                    this.ConsolidateLinesPerPartField = value;
                    this.RaisePropertyChanged("ConsolidateLinesPerPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidateSO {
            get {
                return this.ConsolidateSOField;
            }
            set {
                if ((this.ConsolidateSOField.Equals(value) != true)) {
                    this.ConsolidateSOField = value;
                    this.RaisePropertyChanged("ConsolidateSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContBillDay {
            get {
                return this.ContBillDayField;
            }
            set {
                if ((this.ContBillDayField.Equals(value) != true)) {
                    this.ContBillDayField = value;
                    this.RaisePropertyChanged("ContBillDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryNum {
            get {
                return this.CountryNumField;
            }
            set {
                if ((this.CountryNumField.Equals(value) != true)) {
                    this.CountryNumField = value;
                    this.RaisePropertyChanged("CountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditCardOrder {
            get {
                return this.CreditCardOrderField;
            }
            set {
                if ((this.CreditCardOrderField.Equals(value) != true)) {
                    this.CreditCardOrderField = value;
                    this.RaisePropertyChanged("CreditCardOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreditClearDate {
            get {
                return this.CreditClearDateField;
            }
            set {
                if ((this.CreditClearDateField.Equals(value) != true)) {
                    this.CreditClearDateField = value;
                    this.RaisePropertyChanged("CreditClearDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditClearTime {
            get {
                return this.CreditClearTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditClearTimeField, value) != true)) {
                    this.CreditClearTimeField = value;
                    this.RaisePropertyChanged("CreditClearTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditClearUserID {
            get {
                return this.CreditClearUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditClearUserIDField, value) != true)) {
                    this.CreditClearUserIDField = value;
                    this.RaisePropertyChanged("CreditClearUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditDays {
            get {
                return this.CreditDaysField;
            }
            set {
                if ((this.CreditDaysField.Equals(value) != true)) {
                    this.CreditDaysField = value;
                    this.RaisePropertyChanged("CreditDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditHold {
            get {
                return this.CreditHoldField;
            }
            set {
                if ((this.CreditHoldField.Equals(value) != true)) {
                    this.CreditHoldField = value;
                    this.RaisePropertyChanged("CreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreditHoldDate {
            get {
                return this.CreditHoldDateField;
            }
            set {
                if ((this.CreditHoldDateField.Equals(value) != true)) {
                    this.CreditHoldDateField = value;
                    this.RaisePropertyChanged("CreditHoldDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditHoldSource {
            get {
                return this.CreditHoldSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditHoldSourceField, value) != true)) {
                    this.CreditHoldSourceField = value;
                    this.RaisePropertyChanged("CreditHoldSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditIncludeOrders {
            get {
                return this.CreditIncludeOrdersField;
            }
            set {
                if ((this.CreditIncludeOrdersField.Equals(value) != true)) {
                    this.CreditIncludeOrdersField = value;
                    this.RaisePropertyChanged("CreditIncludeOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditIncludePI {
            get {
                return this.CreditIncludePIField;
            }
            set {
                if ((this.CreditIncludePIField.Equals(value) != true)) {
                    this.CreditIncludePIField = value;
                    this.RaisePropertyChanged("CreditIncludePI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditLimit {
            get {
                return this.CreditLimitField;
            }
            set {
                if ((this.CreditLimitField.Equals(value) != true)) {
                    this.CreditLimitField = value;
                    this.RaisePropertyChanged("CreditLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditMemoITCode {
            get {
                return this.CreditMemoITCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditMemoITCodeField, value) != true)) {
                    this.CreditMemoITCodeField = value;
                    this.RaisePropertyChanged("CreditMemoITCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreditReviewDate {
            get {
                return this.CreditReviewDateField;
            }
            set {
                if ((this.CreditReviewDateField.Equals(value) != true)) {
                    this.CreditReviewDateField = value;
                    this.RaisePropertyChanged("CreditReviewDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CustPILimit {
            get {
                return this.CustPILimitField;
            }
            set {
                if ((this.CustPILimitField.Equals(value) != true)) {
                    this.CustPILimitField = value;
                    this.RaisePropertyChanged("CustPILimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustPartOpts {
            get {
                return this.CustPartOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustPartOptsField, value) != true)) {
                    this.CustPartOptsField = value;
                    this.RaisePropertyChanged("CustPartOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustPricingSchema {
            get {
                return this.CustPricingSchemaField;
            }
            set {
                if ((object.ReferenceEquals(this.CustPricingSchemaField, value) != true)) {
                    this.CustPricingSchemaField = value;
                    this.RaisePropertyChanged("CustPricingSchema");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustURL {
            get {
                return this.CustURLField;
            }
            set {
                if ((object.ReferenceEquals(this.CustURLField, value) != true)) {
                    this.CustURLField = value;
                    this.RaisePropertyChanged("CustURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEOrgType {
            get {
                return this.DEOrgTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DEOrgTypeField, value) != true)) {
                    this.DEOrgTypeField = value;
                    this.RaisePropertyChanged("DEOrgType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCollectionPosted {
            get {
                return this.DateCollectionPostedField;
            }
            set {
                if ((this.DateCollectionPostedField.Equals(value) != true)) {
                    this.DateCollectionPostedField = value;
                    this.RaisePropertyChanged("DateCollectionPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredIns {
            get {
                return this.DeclaredInsField;
            }
            set {
                if ((this.DeclaredInsField.Equals(value) != true)) {
                    this.DeclaredInsField = value;
                    this.RaisePropertyChanged("DeclaredIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultFOB {
            get {
                return this.DefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultFOBField, value) != true)) {
                    this.DefaultFOBField = value;
                    this.RaisePropertyChanged("DefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeferredRev {
            get {
                return this.DeferredRevField;
            }
            set {
                if ((this.DeferredRevField.Equals(value) != true)) {
                    this.DeferredRevField = value;
                    this.RaisePropertyChanged("DeferredRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryConf {
            get {
                return this.DeliveryConfField;
            }
            set {
                if ((this.DeliveryConfField.Equals(value) != true)) {
                    this.DeliveryConfField = value;
                    this.RaisePropertyChanged("DeliveryConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandAddAction {
            get {
                return this.DemandAddActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandAddActionField, value) != true)) {
                    this.DemandAddActionField = value;
                    this.RaisePropertyChanged("DemandAddAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandAddLeadTime {
            get {
                return this.DemandAddLeadTimeField;
            }
            set {
                if ((this.DemandAddLeadTimeField.Equals(value) != true)) {
                    this.DemandAddLeadTimeField = value;
                    this.RaisePropertyChanged("DemandAddLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandAutoAccept {
            get {
                return this.DemandAutoAcceptField;
            }
            set {
                if ((this.DemandAutoAcceptField.Equals(value) != true)) {
                    this.DemandAutoAcceptField = value;
                    this.RaisePropertyChanged("DemandAutoAccept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCancelAction {
            get {
                return this.DemandCancelActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCancelActionField, value) != true)) {
                    this.DemandCancelActionField = value;
                    this.RaisePropertyChanged("DemandCancelAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandCancelLeadTime {
            get {
                return this.DemandCancelLeadTimeField;
            }
            set {
                if ((this.DemandCancelLeadTimeField.Equals(value) != true)) {
                    this.DemandCancelLeadTimeField = value;
                    this.RaisePropertyChanged("DemandCancelLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseAction {
            get {
                return this.DemandCapPromiseActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseActionField, value) != true)) {
                    this.DemandCapPromiseActionField = value;
                    this.RaisePropertyChanged("DemandCapPromiseAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseDate {
            get {
                return this.DemandCapPromiseDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseDateField, value) != true)) {
                    this.DemandCapPromiseDateField = value;
                    this.RaisePropertyChanged("DemandCapPromiseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseUpdate {
            get {
                return this.DemandCapPromiseUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseUpdateField, value) != true)) {
                    this.DemandCapPromiseUpdateField = value;
                    this.RaisePropertyChanged("DemandCapPromiseUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandChangeAction {
            get {
                return this.DemandChangeActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandChangeActionField, value) != true)) {
                    this.DemandChangeActionField = value;
                    this.RaisePropertyChanged("DemandChangeAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandChangeDateAction {
            get {
                return this.DemandChangeDateActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandChangeDateActionField, value) != true)) {
                    this.DemandChangeDateActionField = value;
                    this.RaisePropertyChanged("DemandChangeDateAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandChangeDateLeadTime {
            get {
                return this.DemandChangeDateLeadTimeField;
            }
            set {
                if ((this.DemandChangeDateLeadTimeField.Equals(value) != true)) {
                    this.DemandChangeDateLeadTimeField = value;
                    this.RaisePropertyChanged("DemandChangeDateLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandChangeLeadTime {
            get {
                return this.DemandChangeLeadTimeField;
            }
            set {
                if ((this.DemandChangeLeadTimeField.Equals(value) != true)) {
                    this.DemandChangeLeadTimeField = value;
                    this.RaisePropertyChanged("DemandChangeLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckCUMM {
            get {
                return this.DemandCheckCUMMField;
            }
            set {
                if ((this.DemandCheckCUMMField.Equals(value) != true)) {
                    this.DemandCheckCUMMField = value;
                    this.RaisePropertyChanged("DemandCheckCUMM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckCUMMAction {
            get {
                return this.DemandCheckCUMMActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckCUMMActionField, value) != true)) {
                    this.DemandCheckCUMMActionField = value;
                    this.RaisePropertyChanged("DemandCheckCUMMAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckCfgAction {
            get {
                return this.DemandCheckCfgActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckCfgActionField, value) != true)) {
                    this.DemandCheckCfgActionField = value;
                    this.RaisePropertyChanged("DemandCheckCfgAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckConfig {
            get {
                return this.DemandCheckConfigField;
            }
            set {
                if ((this.DemandCheckConfigField.Equals(value) != true)) {
                    this.DemandCheckConfigField = value;
                    this.RaisePropertyChanged("DemandCheckConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForPart {
            get {
                return this.DemandCheckForPartField;
            }
            set {
                if ((this.DemandCheckForPartField.Equals(value) != true)) {
                    this.DemandCheckForPartField = value;
                    this.RaisePropertyChanged("DemandCheckForPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForPartAction {
            get {
                return this.DemandCheckForPartActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForPartActionField, value) != true)) {
                    this.DemandCheckForPartActionField = value;
                    this.RaisePropertyChanged("DemandCheckForPartAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForRev {
            get {
                return this.DemandCheckForRevField;
            }
            set {
                if ((this.DemandCheckForRevField.Equals(value) != true)) {
                    this.DemandCheckForRevField = value;
                    this.RaisePropertyChanged("DemandCheckForRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForRevAction {
            get {
                return this.DemandCheckForRevActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForRevActionField, value) != true)) {
                    this.DemandCheckForRevActionField = value;
                    this.RaisePropertyChanged("DemandCheckForRevAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForRunOutPart {
            get {
                return this.DemandCheckForRunOutPartField;
            }
            set {
                if ((this.DemandCheckForRunOutPartField.Equals(value) != true)) {
                    this.DemandCheckForRunOutPartField = value;
                    this.RaisePropertyChanged("DemandCheckForRunOutPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForRunOutPartAction {
            get {
                return this.DemandCheckForRunOutPartActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForRunOutPartActionField, value) != true)) {
                    this.DemandCheckForRunOutPartActionField = value;
                    this.RaisePropertyChanged("DemandCheckForRunOutPartAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCloseNoMatch {
            get {
                return this.DemandCloseNoMatchField;
            }
            set {
                if ((this.DemandCloseNoMatchField.Equals(value) != true)) {
                    this.DemandCloseNoMatchField = value;
                    this.RaisePropertyChanged("DemandCloseNoMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCloseRejSkd {
            get {
                return this.DemandCloseRejSkdField;
            }
            set {
                if ((this.DemandCloseRejSkdField.Equals(value) != true)) {
                    this.DemandCloseRejSkdField = value;
                    this.RaisePropertyChanged("DemandCloseRejSkd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandDateType {
            get {
                return this.DemandDateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandDateTypeField, value) != true)) {
                    this.DemandDateTypeField = value;
                    this.RaisePropertyChanged("DemandDateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandDayOfWeek {
            get {
                return this.DemandDayOfWeekField;
            }
            set {
                if ((this.DemandDayOfWeekField.Equals(value) != true)) {
                    this.DemandDayOfWeekField = value;
                    this.RaisePropertyChanged("DemandDayOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandDeliveryDays {
            get {
                return this.DemandDeliveryDaysField;
            }
            set {
                if ((this.DemandDeliveryDaysField.Equals(value) != true)) {
                    this.DemandDeliveryDaysField = value;
                    this.RaisePropertyChanged("DemandDeliveryDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandNewLineAction {
            get {
                return this.DemandNewLineActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandNewLineActionField, value) != true)) {
                    this.DemandNewLineActionField = value;
                    this.RaisePropertyChanged("DemandNewLineAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandNewLineLeadTime {
            get {
                return this.DemandNewLineLeadTimeField;
            }
            set {
                if ((this.DemandNewLineLeadTimeField.Equals(value) != true)) {
                    this.DemandNewLineLeadTimeField = value;
                    this.RaisePropertyChanged("DemandNewLineLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandPricing {
            get {
                return this.DemandPricingField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandPricingField, value) != true)) {
                    this.DemandPricingField = value;
                    this.RaisePropertyChanged("DemandPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandQtyChangeAction {
            get {
                return this.DemandQtyChangeActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandQtyChangeActionField, value) != true)) {
                    this.DemandQtyChangeActionField = value;
                    this.RaisePropertyChanged("DemandQtyChangeAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandQtyChangeLeadTime {
            get {
                return this.DemandQtyChangeLeadTimeField;
            }
            set {
                if ((this.DemandQtyChangeLeadTimeField.Equals(value) != true)) {
                    this.DemandQtyChangeLeadTimeField = value;
                    this.RaisePropertyChanged("DemandQtyChangeLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandSplitSched {
            get {
                return this.DemandSplitSchedField;
            }
            set {
                if ((this.DemandSplitSchedField.Equals(value) != true)) {
                    this.DemandSplitSchedField = value;
                    this.RaisePropertyChanged("DemandSplitSched");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandUnitPriceDiff {
            get {
                return this.DemandUnitPriceDiffField;
            }
            set {
                if ((this.DemandUnitPriceDiffField.Equals(value) != true)) {
                    this.DemandUnitPriceDiffField = value;
                    this.RaisePropertyChanged("DemandUnitPriceDiff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandUnitPriceDiffAction {
            get {
                return this.DemandUnitPriceDiffActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandUnitPriceDiffActionField, value) != true)) {
                    this.DemandUnitPriceDiffActionField = value;
                    this.RaisePropertyChanged("DemandUnitPriceDiffAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandUseSysDate {
            get {
                return this.DemandUseSysDateField;
            }
            set {
                if ((this.DemandUseSysDateField.Equals(value) != true)) {
                    this.DemandUseSysDateField = value;
                    this.RaisePropertyChanged("DemandUseSysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DirectDebiting {
            get {
                return this.DirectDebitingField;
            }
            set {
                if ((this.DirectDebitingField.Equals(value) != true)) {
                    this.DirectDebitingField = value;
                    this.RaisePropertyChanged("DirectDebiting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountPercent {
            get {
                return this.DiscountPercentField;
            }
            set {
                if ((this.DiscountPercentField.Equals(value) != true)) {
                    this.DiscountPercentField = value;
                    this.RaisePropertyChanged("DiscountPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscountQualifier {
            get {
                return this.DiscountQualifierField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscountQualifierField, value) != true)) {
                    this.DiscountQualifierField = value;
                    this.RaisePropertyChanged("DiscountQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayCustomerType {
            get {
                return this.DisplayCustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayCustomerTypeField, value) != true)) {
                    this.DisplayCustomerTypeField = value;
                    this.RaisePropertyChanged("DisplayCustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayHold {
            get {
                return this.DisplayHoldField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayHoldField, value) != true)) {
                    this.DisplayHoldField = value;
                    this.RaisePropertyChanged("DisplayHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DmdCheckPartialShip {
            get {
                return this.DmdCheckPartialShipField;
            }
            set {
                if ((this.DmdCheckPartialShipField.Equals(value) != true)) {
                    this.DmdCheckPartialShipField = value;
                    this.RaisePropertyChanged("DmdCheckPartialShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DmdCheckShipAction {
            get {
                return this.DmdCheckShipActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DmdCheckShipActionField, value) != true)) {
                    this.DmdCheckShipActionField = value;
                    this.RaisePropertyChanged("DmdCheckShipAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocGlobalCreditLimit {
            get {
                return this.DocGlobalCreditLimitField;
            }
            set {
                if ((this.DocGlobalCreditLimitField.Equals(value) != true)) {
                    this.DocGlobalCreditLimitField = value;
                    this.RaisePropertyChanged("DocGlobalCreditLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocGlobalPILimit {
            get {
                return this.DocGlobalPILimitField;
            }
            set {
                if ((this.DocGlobalPILimitField.Equals(value) != true)) {
                    this.DocGlobalPILimitField = value;
                    this.RaisePropertyChanged("DocGlobalPILimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocOnly {
            get {
                return this.DocOnlyField;
            }
            set {
                if ((this.DocOnlyField.Equals(value) != true)) {
                    this.DocOnlyField = value;
                    this.RaisePropertyChanged("DocOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DueDateCriteria {
            get {
                return this.DueDateCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DueDateCriteriaField, value) != true)) {
                    this.DueDateCriteriaField = value;
                    this.RaisePropertyChanged("DueDateCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EAddress {
            get {
                return this.EAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EAddressField, value) != true)) {
                    this.EAddressField = value;
                    this.RaisePropertyChanged("EAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCType {
            get {
                return this.ECCTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCTypeField, value) != true)) {
                    this.ECCTypeField = value;
                    this.RaisePropertyChanged("ECCType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDICode {
            get {
                return this.EDICodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EDICodeField, value) != true)) {
                    this.EDICodeField = value;
                    this.RaisePropertyChanged("EDICode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EDITest {
            get {
                return this.EDITestField;
            }
            set {
                if ((this.EDITestField.Equals(value) != true)) {
                    this.EDITestField = value;
                    this.RaisePropertyChanged("EDITest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITranslator {
            get {
                return this.EDITranslatorField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITranslatorField, value) != true)) {
                    this.EDITranslatorField = value;
                    this.RaisePropertyChanged("EDITranslator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EInvCompanyIDAttr {
            get {
                return this.EInvCompanyIDAttrField;
            }
            set {
                if ((object.ReferenceEquals(this.EInvCompanyIDAttrField, value) != true)) {
                    this.EInvCompanyIDAttrField = value;
                    this.RaisePropertyChanged("EInvCompanyIDAttr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EInvoice {
            get {
                return this.EInvoiceField;
            }
            set {
                if ((this.EInvoiceField.Equals(value) != true)) {
                    this.EInvoiceField = value;
                    this.RaisePropertyChanged("EInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMailAddress {
            get {
                return this.EMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailAddressField, value) != true)) {
                    this.EMailAddressField = value;
                    this.RaisePropertyChanged("EMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ERSOrder {
            get {
                return this.ERSOrderField;
            }
            set {
                if ((this.ERSOrderField.Equals(value) != true)) {
                    this.ERSOrderField = value;
                    this.RaisePropertyChanged("ERSOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ETCAddrChg {
            get {
                return this.ETCAddrChgField;
            }
            set {
                if ((this.ETCAddrChgField.Equals(value) != true)) {
                    this.ETCAddrChgField = value;
                    this.RaisePropertyChanged("ETCAddrChg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EarlyBuffer {
            get {
                return this.EarlyBufferField;
            }
            set {
                if ((this.EarlyBufferField.Equals(value) != true)) {
                    this.EarlyBufferField = value;
                    this.RaisePropertyChanged("EarlyBuffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityUseCode {
            get {
                return this.EntityUseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityUseCodeField, value) != true)) {
                    this.EntityUseCodeField = value;
                    this.RaisePropertyChanged("EntityUseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EstDate {
            get {
                return this.EstDateField;
            }
            set {
                if ((this.EstDateField.Equals(value) != true)) {
                    this.EstDateField = value;
                    this.RaisePropertyChanged("EstDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcFromVal {
            get {
                return this.ExcFromValField;
            }
            set {
                if ((this.ExcFromValField.Equals(value) != true)) {
                    this.ExcFromValField = value;
                    this.RaisePropertyChanged("ExcFromVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtID {
            get {
                return this.ExtIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtIDField, value) != true)) {
                    this.ExtIDField = value;
                    this.RaisePropertyChanged("ExtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalCRMGlbCustomerID {
            get {
                return this.ExternalCRMGlbCustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalCRMGlbCustomerIDField, value) != true)) {
                    this.ExternalCRMGlbCustomerIDField = value;
                    this.RaisePropertyChanged("ExternalCRMGlbCustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalCRMGlbCustomerType {
            get {
                return this.ExternalCRMGlbCustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalCRMGlbCustomerTypeField, value) != true)) {
                    this.ExternalCRMGlbCustomerTypeField = value;
                    this.RaisePropertyChanged("ExternalCRMGlbCustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExternalCRMLastSync {
            get {
                return this.ExternalCRMLastSyncField;
            }
            set {
                if ((this.ExternalCRMLastSyncField.Equals(value) != true)) {
                    this.ExternalCRMLastSyncField = value;
                    this.RaisePropertyChanged("ExternalCRMLastSync");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalCRMSyncRequired {
            get {
                return this.ExternalCRMSyncRequiredField;
            }
            set {
                if ((this.ExternalCRMSyncRequiredField.Equals(value) != true)) {
                    this.ExternalCRMSyncRequiredField = value;
                    this.RaisePropertyChanged("ExternalCRMSyncRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalDeliveryNote {
            get {
                return this.ExternalDeliveryNoteField;
            }
            set {
                if ((this.ExternalDeliveryNoteField.Equals(value) != true)) {
                    this.ExternalDeliveryNoteField = value;
                    this.RaisePropertyChanged("ExternalDeliveryNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress1 {
            get {
                return this.FFAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress1Field, value) != true)) {
                    this.FFAddress1Field = value;
                    this.RaisePropertyChanged("FFAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress2 {
            get {
                return this.FFAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress2Field, value) != true)) {
                    this.FFAddress2Field = value;
                    this.RaisePropertyChanged("FFAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress3 {
            get {
                return this.FFAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress3Field, value) != true)) {
                    this.FFAddress3Field = value;
                    this.RaisePropertyChanged("FFAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCity {
            get {
                return this.FFCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCityField, value) != true)) {
                    this.FFCityField = value;
                    this.RaisePropertyChanged("FFCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCompName {
            get {
                return this.FFCompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCompNameField, value) != true)) {
                    this.FFCompNameField = value;
                    this.RaisePropertyChanged("FFCompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFContact {
            get {
                return this.FFContactField;
            }
            set {
                if ((object.ReferenceEquals(this.FFContactField, value) != true)) {
                    this.FFContactField = value;
                    this.RaisePropertyChanged("FFContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCountry {
            get {
                return this.FFCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCountryField, value) != true)) {
                    this.FFCountryField = value;
                    this.RaisePropertyChanged("FFCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FFCountryNum {
            get {
                return this.FFCountryNumField;
            }
            set {
                if ((this.FFCountryNumField.Equals(value) != true)) {
                    this.FFCountryNumField = value;
                    this.RaisePropertyChanged("FFCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFID {
            get {
                return this.FFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FFIDField, value) != true)) {
                    this.FFIDField = value;
                    this.RaisePropertyChanged("FFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFPhoneNum {
            get {
                return this.FFPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FFPhoneNumField, value) != true)) {
                    this.FFPhoneNumField = value;
                    this.RaisePropertyChanged("FFPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFState {
            get {
                return this.FFStateField;
            }
            set {
                if ((object.ReferenceEquals(this.FFStateField, value) != true)) {
                    this.FFStateField = value;
                    this.RaisePropertyChanged("FFState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFZip {
            get {
                return this.FFZipField;
            }
            set {
                if ((object.ReferenceEquals(this.FFZipField, value) != true)) {
                    this.FFZipField = value;
                    this.RaisePropertyChanged("FFZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNum {
            get {
                return this.FaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumField, value) != true)) {
                    this.FaxNumField = value;
                    this.RaisePropertyChanged("FaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FinCharges {
            get {
                return this.FinChargesField;
            }
            set {
                if ((this.FinChargesField.Equals(value) != true)) {
                    this.FinChargesField = value;
                    this.RaisePropertyChanged("FinCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatStr {
            get {
                return this.FormatStrField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatStrField, value) != true)) {
                    this.FormatStrField = value;
                    this.RaisePropertyChanged("FormatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCustID {
            get {
                return this.GlbCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCustIDField, value) != true)) {
                    this.GlbCustIDField = value;
                    this.RaisePropertyChanged("GlbCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbCustNum {
            get {
                return this.GlbCustNumField;
            }
            set {
                if ((this.GlbCustNumField.Equals(value) != true)) {
                    this.GlbCustNumField = value;
                    this.RaisePropertyChanged("GlbCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbNACreditIsShare {
            get {
                return this.GlbNACreditIsShareField;
            }
            set {
                if ((this.GlbNACreditIsShareField.Equals(value) != true)) {
                    this.GlbNACreditIsShareField = value;
                    this.RaisePropertyChanged("GlbNACreditIsShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNACreditSharedPrc {
            get {
                return this.GlbNACreditSharedPrcField;
            }
            set {
                if ((this.GlbNACreditSharedPrcField.Equals(value) != true)) {
                    this.GlbNACreditSharedPrcField = value;
                    this.RaisePropertyChanged("GlbNACreditSharedPrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbNAParentCreditIsUsed {
            get {
                return this.GlbNAParentCreditIsUsedField;
            }
            set {
                if ((this.GlbNAParentCreditIsUsedField.Equals(value) != true)) {
                    this.GlbNAParentCreditIsUsedField = value;
                    this.RaisePropertyChanged("GlbNAParentCreditIsUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAParentCreditPrc {
            get {
                return this.GlbNAParentCreditPrcField;
            }
            set {
                if ((this.GlbNAParentCreditPrcField.Equals(value) != true)) {
                    this.GlbNAParentCreditPrcField = value;
                    this.RaisePropertyChanged("GlbNAParentCreditPrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNAParentsCreditUsed {
            get {
                return this.GlbNAParentsCreditUsedField;
            }
            set {
                if ((this.GlbNAParentsCreditUsedField.Equals(value) != true)) {
                    this.GlbNAParentsCreditUsedField = value;
                    this.RaisePropertyChanged("GlbNAParentsCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlbNASharedCreditUsed {
            get {
                return this.GlbNASharedCreditUsedField;
            }
            set {
                if ((this.GlbNASharedCreditUsedField.Equals(value) != true)) {
                    this.GlbNASharedCreditUsedField = value;
                    this.RaisePropertyChanged("GlbNASharedCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalCredIncOrd {
            get {
                return this.GlobalCredIncOrdField;
            }
            set {
                if ((this.GlobalCredIncOrdField.Equals(value) != true)) {
                    this.GlobalCredIncOrdField = value;
                    this.RaisePropertyChanged("GlobalCredIncOrd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalCredIncPI {
            get {
                return this.GlobalCredIncPIField;
            }
            set {
                if ((this.GlobalCredIncPIField.Equals(value) != true)) {
                    this.GlobalCredIncPIField = value;
                    this.RaisePropertyChanged("GlobalCredIncPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCreditHold {
            get {
                return this.GlobalCreditHoldField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCreditHoldField, value) != true)) {
                    this.GlobalCreditHoldField = value;
                    this.RaisePropertyChanged("GlobalCreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlobalCreditLimit {
            get {
                return this.GlobalCreditLimitField;
            }
            set {
                if ((this.GlobalCreditLimitField.Equals(value) != true)) {
                    this.GlobalCreditLimitField = value;
                    this.RaisePropertyChanged("GlobalCreditLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalCurrencyCode {
            get {
                return this.GlobalCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCurrencyCodeField, value) != true)) {
                    this.GlobalCurrencyCodeField = value;
                    this.RaisePropertyChanged("GlobalCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalCust {
            get {
                return this.GlobalCustField;
            }
            set {
                if ((this.GlobalCustField.Equals(value) != true)) {
                    this.GlobalCustField = value;
                    this.RaisePropertyChanged("GlobalCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GlobalPILimit {
            get {
                return this.GlobalPILimitField;
            }
            set {
                if ((this.GlobalPILimitField.Equals(value) != true)) {
                    this.GlobalPILimitField = value;
                    this.RaisePropertyChanged("GlobalPILimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundType {
            get {
                return this.GroundTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundTypeField, value) != true)) {
                    this.GroundTypeField = value;
                    this.RaisePropertyChanged("GroundType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasBank {
            get {
                return this.HasBankField;
            }
            set {
                if ((this.HasBankField.Equals(value) != true)) {
                    this.HasBankField = value;
                    this.RaisePropertyChanged("HasBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hazmat {
            get {
                return this.HazmatField;
            }
            set {
                if ((this.HazmatField.Equals(value) != true)) {
                    this.HazmatField = value;
                    this.RaisePropertyChanged("Hazmat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICCode {
            get {
                return this.ICCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ICCodeField, value) != true)) {
                    this.ICCodeField = value;
                    this.RaisePropertyChanged("ICCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICCust {
            get {
                return this.ICCustField;
            }
            set {
                if ((this.ICCustField.Equals(value) != true)) {
                    this.ICCustField = value;
                    this.RaisePropertyChanged("ICCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICTrader {
            get {
                return this.ICTraderField;
            }
            set {
                if ((this.ICTraderField.Equals(value) != true)) {
                    this.ICTraderField = value;
                    this.RaisePropertyChanged("ICTrader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INCSTNumber {
            get {
                return this.INCSTNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.INCSTNumberField, value) != true)) {
                    this.INCSTNumberField = value;
                    this.RaisePropertyChanged("INCSTNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INPANNumber {
            get {
                return this.INPANNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.INPANNumberField, value) != true)) {
                    this.INPANNumberField = value;
                    this.RaisePropertyChanged("INPANNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IndividualPackIDs {
            get {
                return this.IndividualPackIDsField;
            }
            set {
                if ((this.IndividualPackIDsField.Equals(value) != true)) {
                    this.IndividualPackIDsField = value;
                    this.RaisePropertyChanged("IndividualPackIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntrntlShip {
            get {
                return this.IntrntlShipField;
            }
            set {
                if ((this.IntrntlShipField.Equals(value) != true)) {
                    this.IntrntlShipField = value;
                    this.RaisePropertyChanged("IntrntlShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvPerPackLine {
            get {
                return this.InvPerPackLineField;
            }
            set {
                if ((this.InvPerPackLineField.Equals(value) != true)) {
                    this.InvPerPackLineField = value;
                    this.RaisePropertyChanged("InvPerPackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvcOrderCmpDflt {
            get {
                return this.InvcOrderCmpDfltField;
            }
            set {
                if ((this.InvcOrderCmpDfltField.Equals(value) != true)) {
                    this.InvcOrderCmpDfltField = value;
                    this.RaisePropertyChanged("InvcOrderCmpDflt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LangNameID {
            get {
                return this.LangNameIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LangNameIDField, value) != true)) {
                    this.LangNameIDField = value;
                    this.RaisePropertyChanged("LangNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LateBuffer {
            get {
                return this.LateBufferField;
            }
            set {
                if ((this.LateBufferField.Equals(value) != true)) {
                    this.LateBufferField = value;
                    this.RaisePropertyChanged("LateBuffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalName {
            get {
                return this.LegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNameField, value) != true)) {
                    this.LegalNameField = value;
                    this.RaisePropertyChanged("LegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LetterOfInstr {
            get {
                return this.LetterOfInstrField;
            }
            set {
                if ((this.LetterOfInstrField.Equals(value) != true)) {
                    this.LetterOfInstrField = value;
                    this.RaisePropertyChanged("LetterOfInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkCustID {
            get {
                return this.LinkCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkCustIDField, value) != true)) {
                    this.LinkCustIDField = value;
                    this.RaisePropertyChanged("LinkCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkPortNum {
            get {
                return this.LinkPortNumField;
            }
            set {
                if ((this.LinkPortNumField.Equals(value) != true)) {
                    this.LinkPortNumField = value;
                    this.RaisePropertyChanged("LinkPortNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXAccountNumber {
            get {
                return this.MXAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MXAccountNumberField, value) != true)) {
                    this.MXAccountNumberField = value;
                    this.RaisePropertyChanged("MXAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXMunicipio {
            get {
                return this.MXMunicipioField;
            }
            set {
                if ((object.ReferenceEquals(this.MXMunicipioField, value) != true)) {
                    this.MXMunicipioField = value;
                    this.RaisePropertyChanged("MXMunicipio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MYIndustryCode {
            get {
                return this.MYIndustryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MYIndustryCodeField, value) != true)) {
                    this.MYIndustryCodeField = value;
                    this.RaisePropertyChanged("MYIndustryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagedVendID {
            get {
                return this.ManagedVendIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagedVendIDField, value) != true)) {
                    this.ManagedVendIDField = value;
                    this.RaisePropertyChanged("ManagedVendID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManagedVendNum {
            get {
                return this.ManagedVendNumField;
            }
            set {
                if ((this.ManagedVendNumField.Equals(value) != true)) {
                    this.ManagedVendNumField = value;
                    this.RaisePropertyChanged("ManagedVendNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkUpID {
            get {
                return this.MarkUpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkUpIDField, value) != true)) {
                    this.MarkUpIDField = value;
                    this.RaisePropertyChanged("MarkUpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCashRecITCode {
            get {
                return this.MiscCashRecITCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCashRecITCodeField, value) != true)) {
                    this.MiscCashRecITCodeField = value;
                    this.RaisePropertyChanged("MiscCashRecITCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NACreditIsShare {
            get {
                return this.NACreditIsShareField;
            }
            set {
                if ((this.NACreditIsShareField.Equals(value) != true)) {
                    this.NACreditIsShareField = value;
                    this.RaisePropertyChanged("NACreditIsShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NACreditPreferenceList {
            get {
                return this.NACreditPreferenceListField;
            }
            set {
                if ((object.ReferenceEquals(this.NACreditPreferenceListField, value) != true)) {
                    this.NACreditPreferenceListField = value;
                    this.RaisePropertyChanged("NACreditPreferenceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NACreditSharedPrc {
            get {
                return this.NACreditSharedPrcField;
            }
            set {
                if ((this.NACreditSharedPrcField.Equals(value) != true)) {
                    this.NACreditSharedPrcField = value;
                    this.RaisePropertyChanged("NACreditSharedPrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NACreditUpdate {
            get {
                return this.NACreditUpdateField;
            }
            set {
                if ((this.NACreditUpdateField.Equals(value) != true)) {
                    this.NACreditUpdateField = value;
                    this.RaisePropertyChanged("NACreditUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAOwnCreditUsed {
            get {
                return this.NAOwnCreditUsedField;
            }
            set {
                if ((this.NAOwnCreditUsedField.Equals(value) != true)) {
                    this.NAOwnCreditUsedField = value;
                    this.RaisePropertyChanged("NAOwnCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NAParentCreditIsUsed {
            get {
                return this.NAParentCreditIsUsedField;
            }
            set {
                if ((this.NAParentCreditIsUsedField.Equals(value) != true)) {
                    this.NAParentCreditIsUsedField = value;
                    this.RaisePropertyChanged("NAParentCreditIsUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAParentCreditPrc {
            get {
                return this.NAParentCreditPrcField;
            }
            set {
                if ((this.NAParentCreditPrcField.Equals(value) != true)) {
                    this.NAParentCreditPrcField = value;
                    this.RaisePropertyChanged("NAParentCreditPrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NAParentsCreditUsed {
            get {
                return this.NAParentsCreditUsedField;
            }
            set {
                if ((this.NAParentsCreditUsedField.Equals(value) != true)) {
                    this.NAParentsCreditUsedField = value;
                    this.RaisePropertyChanged("NAParentsCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NARlsClassCode {
            get {
                return this.NARlsClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NARlsClassCodeField, value) != true)) {
                    this.NARlsClassCodeField = value;
                    this.RaisePropertyChanged("NARlsClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NASharedCreditUsed {
            get {
                return this.NASharedCreditUsedField;
            }
            set {
                if ((this.NASharedCreditUsedField.Equals(value) != true)) {
                    this.NASharedCreditUsedField = value;
                    this.RaisePropertyChanged("NASharedCreditUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoContact {
            get {
                return this.NoContactField;
            }
            set {
                if ((this.NoContactField.Equals(value) != true)) {
                    this.NoContactField = value;
                    this.RaisePropertyChanged("NoContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStdPkg {
            get {
                return this.NonStdPkgField;
            }
            set {
                if ((this.NonStdPkgField.Equals(value) != true)) {
                    this.NonStdPkgField = value;
                    this.RaisePropertyChanged("NonStdPkg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyEMail {
            get {
                return this.NotifyEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyEMailField, value) != true)) {
                    this.NotifyEMailField = value;
                    this.RaisePropertyChanged("NotifyEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyFlag {
            get {
                return this.NotifyFlagField;
            }
            set {
                if ((this.NotifyFlagField.Equals(value) != true)) {
                    this.NotifyFlagField = value;
                    this.RaisePropertyChanged("NotifyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfEmployees {
            get {
                return this.NumberOfEmployeesField;
            }
            set {
                if ((this.NumberOfEmployeesField.Equals(value) != true)) {
                    this.NumberOfEmployeesField = value;
                    this.RaisePropertyChanged("NumberOfEmployees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSSaveAs {
            get {
                return this.OTSSaveAsField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSSaveAsField, value) != true)) {
                    this.OTSSaveAsField = value;
                    this.RaisePropertyChanged("OTSSaveAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSmartString {
            get {
                return this.OTSmartStringField;
            }
            set {
                if ((this.OTSmartStringField.Equals(value) != true)) {
                    this.OTSmartStringField = value;
                    this.RaisePropertyChanged("OTSmartString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldCompany {
            get {
                return this.OldCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.OldCompanyField, value) != true)) {
                    this.OldCompanyField = value;
                    this.RaisePropertyChanged("OldCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldCustID {
            get {
                return this.OldCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OldCustIDField, value) != true)) {
                    this.OldCustIDField = value;
                    this.RaisePropertyChanged("OldCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OldCustNum {
            get {
                return this.OldCustNumField;
            }
            set {
                if ((this.OldCustNumField.Equals(value) != true)) {
                    this.OldCustNumField = value;
                    this.RaisePropertyChanged("OldCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OneInvPerPS {
            get {
                return this.OneInvPerPSField;
            }
            set {
                if ((this.OneInvPerPSField.Equals(value) != true)) {
                    this.OneInvPerPSField = value;
                    this.RaisePropertyChanged("OneInvPerPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHoldForReview {
            get {
                return this.OrderHoldForReviewField;
            }
            set {
                if ((this.OrderHoldForReviewField.Equals(value) != true)) {
                    this.OrderHoldForReviewField = value;
                    this.RaisePropertyChanged("OrderHoldForReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgRegCode {
            get {
                return this.OrgRegCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgRegCodeField, value) != true)) {
                    this.OrgRegCodeField = value;
                    this.RaisePropertyChanged("OrgRegCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankCode {
            get {
                return this.OurBankCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankCodeField, value) != true)) {
                    this.OurBankCodeField = value;
                    this.RaisePropertyChanged("OurBankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurSupplierCode {
            get {
                return this.OurSupplierCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurSupplierCodeField, value) != true)) {
                    this.OurSupplierCodeField = value;
                    this.RaisePropertyChanged("OurSupplierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideCarrier {
            get {
                return this.OverrideCarrierField;
            }
            set {
                if ((this.OverrideCarrierField.Equals(value) != true)) {
                    this.OverrideCarrierField = value;
                    this.RaisePropertyChanged("OverrideCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideRlsClass {
            get {
                return this.OverrideRlsClassField;
            }
            set {
                if ((this.OverrideRlsClassField.Equals(value) != true)) {
                    this.OverrideRlsClassField = value;
                    this.RaisePropertyChanged("OverrideRlsClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideService {
            get {
                return this.OverrideServiceField;
            }
            set {
                if ((this.OverrideServiceField.Equals(value) != true)) {
                    this.OverrideServiceField = value;
                    this.RaisePropertyChanged("OverrideService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ownership {
            get {
                return this.OwnershipField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnershipField, value) != true)) {
                    this.OwnershipField = value;
                    this.RaisePropertyChanged("Ownership");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PBTerms {
            get {
                return this.PBTermsField;
            }
            set {
                if ((this.PBTermsField.Equals(value) != true)) {
                    this.PBTermsField = value;
                    this.RaisePropertyChanged("PBTerms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PECollectionAgent {
            get {
                return this.PECollectionAgentField;
            }
            set {
                if ((this.PECollectionAgentField.Equals(value) != true)) {
                    this.PECollectionAgentField = value;
                    this.RaisePropertyChanged("PECollectionAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEDocumentID {
            get {
                return this.PEDocumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEDocumentIDField, value) != true)) {
                    this.PEDocumentIDField = value;
                    this.RaisePropertyChanged("PEDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PEGoodsContributor {
            get {
                return this.PEGoodsContributorField;
            }
            set {
                if ((this.PEGoodsContributorField.Equals(value) != true)) {
                    this.PEGoodsContributorField = value;
                    this.RaisePropertyChanged("PEGoodsContributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeAddress1 {
            get {
                return this.PEGuaranteeAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeAddress1Field, value) != true)) {
                    this.PEGuaranteeAddress1Field = value;
                    this.RaisePropertyChanged("PEGuaranteeAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeAddress2 {
            get {
                return this.PEGuaranteeAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeAddress2Field, value) != true)) {
                    this.PEGuaranteeAddress2Field = value;
                    this.RaisePropertyChanged("PEGuaranteeAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeAddress3 {
            get {
                return this.PEGuaranteeAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeAddress3Field, value) != true)) {
                    this.PEGuaranteeAddress3Field = value;
                    this.RaisePropertyChanged("PEGuaranteeAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeCity {
            get {
                return this.PEGuaranteeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeCityField, value) != true)) {
                    this.PEGuaranteeCityField = value;
                    this.RaisePropertyChanged("PEGuaranteeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeCountry {
            get {
                return this.PEGuaranteeCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeCountryField, value) != true)) {
                    this.PEGuaranteeCountryField = value;
                    this.RaisePropertyChanged("PEGuaranteeCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeName {
            get {
                return this.PEGuaranteeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeNameField, value) != true)) {
                    this.PEGuaranteeNameField = value;
                    this.RaisePropertyChanged("PEGuaranteeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteePhoneNum {
            get {
                return this.PEGuaranteePhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteePhoneNumField, value) != true)) {
                    this.PEGuaranteePhoneNumField = value;
                    this.RaisePropertyChanged("PEGuaranteePhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeState {
            get {
                return this.PEGuaranteeStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeStateField, value) != true)) {
                    this.PEGuaranteeStateField = value;
                    this.RaisePropertyChanged("PEGuaranteeState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeTaxID {
            get {
                return this.PEGuaranteeTaxIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeTaxIDField, value) != true)) {
                    this.PEGuaranteeTaxIDField = value;
                    this.RaisePropertyChanged("PEGuaranteeTaxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeZip {
            get {
                return this.PEGuaranteeZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeZipField, value) != true)) {
                    this.PEGuaranteeZipField = value;
                    this.RaisePropertyChanged("PEGuaranteeZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEIdentityDocType {
            get {
                return this.PEIdentityDocTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PEIdentityDocTypeField, value) != true)) {
                    this.PEIdentityDocTypeField = value;
                    this.RaisePropertyChanged("PEIdentityDocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PENoAddress {
            get {
                return this.PENoAddressField;
            }
            set {
                if ((this.PENoAddressField.Equals(value) != true)) {
                    this.PENoAddressField = value;
                    this.RaisePropertyChanged("PENoAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PENotFound {
            get {
                return this.PENotFoundField;
            }
            set {
                if ((this.PENotFoundField.Equals(value) != true)) {
                    this.PENotFoundField = value;
                    this.RaisePropertyChanged("PENotFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PEWithholdAgent {
            get {
                return this.PEWithholdAgentField;
            }
            set {
                if ((this.PEWithholdAgentField.Equals(value) != true)) {
                    this.PEWithholdAgentField = value;
                    this.RaisePropertyChanged("PEWithholdAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PICreditTotal {
            get {
                return this.PICreditTotalField;
            }
            set {
                if ((this.PICreditTotalField.Equals(value) != true)) {
                    this.PICreditTotalField = value;
                    this.RaisePropertyChanged("PICreditTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PMUID {
            get {
                return this.PMUIDField;
            }
            set {
                if ((this.PMUIDField.Equals(value) != true)) {
                    this.PMUIDField = value;
                    this.RaisePropertyChanged("PMUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParamCode {
            get {
                return this.ParamCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamCodeField, value) != true)) {
                    this.ParamCodeField = value;
                    this.RaisePropertyChanged("ParamCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentCustNum {
            get {
                return this.ParentCustNumField;
            }
            set {
                if ((this.ParentCustNumField.Equals(value) != true)) {
                    this.ParentCustNumField = value;
                    this.RaisePropertyChanged("ParentCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartPayment {
            get {
                return this.PartPaymentField;
            }
            set {
                if ((this.PartPaymentField.Equals(value) != true)) {
                    this.PartPaymentField = value;
                    this.RaisePropertyChanged("PartPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PendingTerritoryID {
            get {
                return this.PendingTerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PendingTerritoryIDField, value) != true)) {
                    this.PendingTerritoryIDField = value;
                    this.RaisePropertyChanged("PendingTerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PeriodicBilling {
            get {
                return this.PeriodicBillingField;
            }
            set {
                if ((this.PeriodicBillingField.Equals(value) != true)) {
                    this.PeriodicBillingField = value;
                    this.RaisePropertyChanged("PeriodicBilling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodicityCode {
            get {
                return this.PeriodicityCodeField;
            }
            set {
                if ((this.PeriodicityCodeField.Equals(value) != true)) {
                    this.PeriodicityCodeField = value;
                    this.RaisePropertyChanged("PeriodicityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNum {
            get {
                return this.PhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumField, value) != true)) {
                    this.PhoneNumField = value;
                    this.RaisePropertyChanged("PhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredBank {
            get {
                return this.PreferredBankField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredBankField, value) != true)) {
                    this.PreferredBankField = value;
                    this.RaisePropertyChanged("PreferredBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceTolerance {
            get {
                return this.PriceToleranceField;
            }
            set {
                if ((this.PriceToleranceField.Equals(value) != true)) {
                    this.PriceToleranceField = value;
                    this.RaisePropertyChanged("PriceTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimBCon {
            get {
                return this.PrimBConField;
            }
            set {
                if ((this.PrimBConField.Equals(value) != true)) {
                    this.PrimBConField = value;
                    this.RaisePropertyChanged("PrimBCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimPCon {
            get {
                return this.PrimPConField;
            }
            set {
                if ((this.PrimPConField.Equals(value) != true)) {
                    this.PrimPConField = value;
                    this.RaisePropertyChanged("PrimPCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimSCon {
            get {
                return this.PrimSConField;
            }
            set {
                if ((this.PrimSConField.Equals(value) != true)) {
                    this.PrimSConField = value;
                    this.RaisePropertyChanged("PrimSCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintAck {
            get {
                return this.PrintAckField;
            }
            set {
                if ((this.PrintAckField.Equals(value) != true)) {
                    this.PrintAckField = value;
                    this.RaisePropertyChanged("PrintAck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintLabels {
            get {
                return this.PrintLabelsField;
            }
            set {
                if ((this.PrintLabelsField.Equals(value) != true)) {
                    this.PrintLabelsField = value;
                    this.RaisePropertyChanged("PrintLabels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintStatements {
            get {
                return this.PrintStatementsField;
            }
            set {
                if ((this.PrintStatementsField.Equals(value) != true)) {
                    this.PrintStatementsField = value;
                    this.RaisePropertyChanged("PrintStatements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RACode {
            get {
                return this.RACodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RACodeField, value) != true)) {
                    this.RACodeField = value;
                    this.RaisePropertyChanged("RACode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RebateForm {
            get {
                return this.RebateFormField;
            }
            set {
                if ((object.ReferenceEquals(this.RebateFormField, value) != true)) {
                    this.RebateFormField = value;
                    this.RaisePropertyChanged("RebateForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RebateVendorNum {
            get {
                return this.RebateVendorNumField;
            }
            set {
                if ((this.RebateVendorNumField.Equals(value) != true)) {
                    this.RebateVendorNumField = value;
                    this.RaisePropertyChanged("RebateVendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNotes {
            get {
                return this.RefNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNotesField, value) != true)) {
                    this.RefNotesField = value;
                    this.RaisePropertyChanged("RefNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationCode {
            get {
                return this.RegistrationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationCodeField, value) != true)) {
                    this.RegistrationCodeField = value;
                    this.RaisePropertyChanged("RegistrationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReminderCode {
            get {
                return this.ReminderCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReminderCodeField, value) != true)) {
                    this.ReminderCodeField = value;
                    this.RaisePropertyChanged("ReminderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResDelivery {
            get {
                return this.ResDeliveryField;
            }
            set {
                if ((this.ResDeliveryField.Equals(value) != true)) {
                    this.ResDeliveryField = value;
                    this.RaisePropertyChanged("ResDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResaleID {
            get {
                return this.ResaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResaleIDField, value) != true)) {
                    this.ResaleIDField = value;
                    this.RaisePropertyChanged("ResaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReservePriorityCode {
            get {
                return this.ReservePriorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservePriorityCodeField, value) != true)) {
                    this.ReservePriorityCodeField = value;
                    this.RaisePropertyChanged("ReservePriorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RfqAttachAllow {
            get {
                return this.RfqAttachAllowField;
            }
            set {
                if ((this.RfqAttachAllowField.Equals(value) != true)) {
                    this.RfqAttachAllowField = value;
                    this.RaisePropertyChanged("RfqAttachAllow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SICCode {
            get {
                return this.SICCodeField;
            }
            set {
                if ((this.SICCodeField.Equals(value) != true)) {
                    this.SICCodeField = value;
                    this.RaisePropertyChanged("SICCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SOCreditTotal {
            get {
                return this.SOCreditTotalField;
            }
            set {
                if ((this.SOCreditTotalField.Equals(value) != true)) {
                    this.SOCreditTotalField = value;
                    this.RaisePropertyChanged("SOCreditTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode {
            get {
                return this.SalesRepCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCodeField, value) != true)) {
                    this.SalesRepCodeField = value;
                    this.RaisePropertyChanged("SalesRepCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatDelivery {
            get {
                return this.SatDeliveryField;
            }
            set {
                if ((this.SatDeliveryField.Equals(value) != true)) {
                    this.SatDeliveryField = value;
                    this.RaisePropertyChanged("SatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatPickup {
            get {
                return this.SatPickupField;
            }
            set {
                if ((this.SatPickupField.Equals(value) != true)) {
                    this.SatPickupField = value;
                    this.RaisePropertyChanged("SatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAOD {
            get {
                return this.ServAODField;
            }
            set {
                if ((this.ServAODField.Equals(value) != true)) {
                    this.ServAODField = value;
                    this.RaisePropertyChanged("ServAOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAlert {
            get {
                return this.ServAlertField;
            }
            set {
                if ((this.ServAlertField.Equals(value) != true)) {
                    this.ServAlertField = value;
                    this.RaisePropertyChanged("ServAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServAuthNum {
            get {
                return this.ServAuthNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ServAuthNumField, value) != true)) {
                    this.ServAuthNumField = value;
                    this.RaisePropertyChanged("ServAuthNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServDeliveryDate {
            get {
                return this.ServDeliveryDateField;
            }
            set {
                if ((this.ServDeliveryDateField.Equals(value) != true)) {
                    this.ServDeliveryDateField = value;
                    this.RaisePropertyChanged("ServDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServHomeDel {
            get {
                return this.ServHomeDelField;
            }
            set {
                if ((this.ServHomeDelField.Equals(value) != true)) {
                    this.ServHomeDelField = value;
                    this.RaisePropertyChanged("ServHomeDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServInstruct {
            get {
                return this.ServInstructField;
            }
            set {
                if ((object.ReferenceEquals(this.ServInstructField, value) != true)) {
                    this.ServInstructField = value;
                    this.RaisePropertyChanged("ServInstruct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServPOD {
            get {
                return this.ServPODField;
            }
            set {
                if ((this.ServPODField.Equals(value) != true)) {
                    this.ServPODField = value;
                    this.RaisePropertyChanged("ServPOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServPhone {
            get {
                return this.ServPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServPhoneField, value) != true)) {
                    this.ServPhoneField = value;
                    this.RaisePropertyChanged("ServPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef1 {
            get {
                return this.ServRef1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef1Field, value) != true)) {
                    this.ServRef1Field = value;
                    this.RaisePropertyChanged("ServRef1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef2 {
            get {
                return this.ServRef2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef2Field, value) != true)) {
                    this.ServRef2Field = value;
                    this.RaisePropertyChanged("ServRef2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef3 {
            get {
                return this.ServRef3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef3Field, value) != true)) {
                    this.ServRef3Field = value;
                    this.RaisePropertyChanged("ServRef3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef4 {
            get {
                return this.ServRef4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef4Field, value) != true)) {
                    this.ServRef4Field = value;
                    this.RaisePropertyChanged("ServRef4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef5 {
            get {
                return this.ServRef5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef5Field, value) != true)) {
                    this.ServRef5Field = value;
                    this.RaisePropertyChanged("ServRef5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServRelease {
            get {
                return this.ServReleaseField;
            }
            set {
                if ((this.ServReleaseField.Equals(value) != true)) {
                    this.ServReleaseField = value;
                    this.RaisePropertyChanged("ServRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatDelivery {
            get {
                return this.ServSatDeliveryField;
            }
            set {
                if ((this.ServSatDeliveryField.Equals(value) != true)) {
                    this.ServSatDeliveryField = value;
                    this.RaisePropertyChanged("ServSatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatPickup {
            get {
                return this.ServSatPickupField;
            }
            set {
                if ((this.ServSatPickupField.Equals(value) != true)) {
                    this.ServSatPickupField = value;
                    this.RaisePropertyChanged("ServSatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSignature {
            get {
                return this.ServSignatureField;
            }
            set {
                if ((this.ServSignatureField.Equals(value) != true)) {
                    this.ServSignatureField = value;
                    this.RaisePropertyChanged("ServSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipExprtDeclartn {
            get {
                return this.ShipExprtDeclartnField;
            }
            set {
                if ((this.ShipExprtDeclartnField.Equals(value) != true)) {
                    this.ShipExprtDeclartnField = value;
                    this.RaisePropertyChanged("ShipExprtDeclartn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToTerrList {
            get {
                return this.ShipToTerrListField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToTerrListField, value) != true)) {
                    this.ShipToTerrListField = value;
                    this.RaisePropertyChanged("ShipToTerrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingQualifier {
            get {
                return this.ShippingQualifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingQualifierField, value) != true)) {
                    this.ShippingQualifierField = value;
                    this.RaisePropertyChanged("ShippingQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Skipped {
            get {
                return this.SkippedField;
            }
            set {
                if ((this.SkippedField.Equals(value) != true)) {
                    this.SkippedField = value;
                    this.RaisePropertyChanged("Skipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SyncToExternalCRM {
            get {
                return this.SyncToExternalCRMField;
            }
            set {
                if ((this.SyncToExternalCRMField.Equals(value) != true)) {
                    this.SyncToExternalCRMField = value;
                    this.RaisePropertyChanged("SyncToExternalCRM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string THBranchID {
            get {
                return this.THBranchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.THBranchIDField, value) != true)) {
                    this.THBranchIDField = value;
                    this.RaisePropertyChanged("THBranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIRegNum {
            get {
                return this.TWGUIRegNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIRegNumField, value) != true)) {
                    this.TWGUIRegNumField = value;
                    this.RaisePropertyChanged("TWGUIRegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxAuthorityCode {
            get {
                return this.TaxAuthorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxAuthorityCodeField, value) != true)) {
                    this.TaxAuthorityCodeField = value;
                    this.RaisePropertyChanged("TaxAuthorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxMethod {
            get {
                return this.TaxMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxMethodField, value) != true)) {
                    this.TaxMethodField = value;
                    this.RaisePropertyChanged("TaxMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegReason {
            get {
                return this.TaxRegReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegReasonField, value) != true)) {
                    this.TaxRegReasonField = value;
                    this.RaisePropertyChanged("TaxRegReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaxRoundRule {
            get {
                return this.TaxRoundRuleField;
            }
            set {
                if ((this.TaxRoundRuleField.Equals(value) != true)) {
                    this.TaxRoundRuleField = value;
                    this.RaisePropertyChanged("TaxRoundRule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCode {
            get {
                return this.TermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeField, value) != true)) {
                    this.TermsCodeField = value;
                    this.RaisePropertyChanged("TermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritoryID {
            get {
                return this.TerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryIDField, value) != true)) {
                    this.TerritoryIDField = value;
                    this.RaisePropertyChanged("TerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TerritoryLock {
            get {
                return this.TerritoryLockField;
            }
            set {
                if ((this.TerritoryLockField.Equals(value) != true)) {
                    this.TerritoryLockField = value;
                    this.RaisePropertyChanged("TerritoryLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ThirdPLCust {
            get {
                return this.ThirdPLCustField;
            }
            set {
                if ((this.ThirdPLCustField.Equals(value) != true)) {
                    this.ThirdPLCustField = value;
                    this.RaisePropertyChanged("ThirdPLCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TickerLocation {
            get {
                return this.TickerLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerLocationField, value) != true)) {
                    this.TickerLocationField = value;
                    this.RaisePropertyChanged("TickerLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TickerSymbol {
            get {
                return this.TickerSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerSymbolField, value) != true)) {
                    this.TickerSymbolField = value;
                    this.RaisePropertyChanged("TickerSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradingPartnerName {
            get {
                return this.TradingPartnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TradingPartnerNameField, value) != true)) {
                    this.TradingPartnerNameField = value;
                    this.RaisePropertyChanged("TradingPartnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVEmailType {
            get {
                return this.UPSQVEmailTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVEmailTypeField, value) != true)) {
                    this.UPSQVEmailTypeField = value;
                    this.RaisePropertyChanged("UPSQVEmailType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVMemo {
            get {
                return this.UPSQVMemoField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVMemoField, value) != true)) {
                    this.UPSQVMemoField = value;
                    this.RaisePropertyChanged("UPSQVMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVShipFromName {
            get {
                return this.UPSQVShipFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVShipFromNameField, value) != true)) {
                    this.UPSQVShipFromNameField = value;
                    this.RaisePropertyChanged("UPSQVShipFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UPSQuantumView {
            get {
                return this.UPSQuantumViewField;
            }
            set {
                if ((this.UPSQuantumViewField.Equals(value) != true)) {
                    this.UPSQuantumViewField = value;
                    this.RaisePropertyChanged("UPSQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidPayer {
            get {
                return this.ValidPayerField;
            }
            set {
                if ((this.ValidPayerField.Equals(value) != true)) {
                    this.ValidPayerField = value;
                    this.RaisePropertyChanged("ValidPayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidShipTo {
            get {
                return this.ValidShipToField;
            }
            set {
                if ((this.ValidShipToField.Equals(value) != true)) {
                    this.ValidShipToField = value;
                    this.RaisePropertyChanged("ValidShipTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidSoldTo {
            get {
                return this.ValidSoldToField;
            }
            set {
                if ((this.ValidSoldToField.Equals(value) != true)) {
                    this.ValidSoldToField = value;
                    this.RaisePropertyChanged("ValidSoldTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerbalConf {
            get {
                return this.VerbalConfField;
            }
            set {
                if ((this.VerbalConfField.Equals(value) != true)) {
                    this.VerbalConfField = value;
                    this.RaisePropertyChanged("VerbalConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebCustomer {
            get {
                return this.WebCustomerField;
            }
            set {
                if ((this.WebCustomerField.Equals(value) != true)) {
                    this.WebCustomerField = value;
                    this.RaisePropertyChanged("WebCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbShipToRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class GlbShipToRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddlHdlgFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddressValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BorderCrossingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CertOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckConfirmCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckDateCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckUpdateCapPromiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChrgAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.GlbShipToRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommercialInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConCompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsigneeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreatedByEDIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandAddActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandAddLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandAutoAcceptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCancelActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandCancelLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCapPromiseUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandChangeActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandChangeDateActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandChangeDateLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandChangeLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckCfgActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForPartActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForRevActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckForRunOutPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckForRunOutPartActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCheckPartialShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandCheckShipActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandCloseRejSkdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandDateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandDayOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandDeliveryDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandNewLineActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandNewLineLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandQtyChangeActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandQtyChangeLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandUnitPriceDiffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandUnitPriceDiffActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandUseCustomerValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandUseSysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDICodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDIShipNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ETCAddrChgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EarlyBufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityUseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcFromValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FFCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazardousShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazmatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INExciseRegNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INSTRegistrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INVATNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IndividualPackIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntrntlShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAlternateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LateBufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LetterOfInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStdPkgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotifyEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSmartStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OldCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgRegCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideCarrierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PendingTerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimSConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResaleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SICCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServAuthNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServHomeDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServInstructField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServPODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipExprtDeclartnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SkippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxAuthorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritorySelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradingPartnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVEmailTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVShipFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UPSQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerbalConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZIPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddlHdlgFlag {
            get {
                return this.AddlHdlgFlagField;
            }
            set {
                if ((this.AddlHdlgFlagField.Equals(value) != true)) {
                    this.AddlHdlgFlagField = value;
                    this.RaisePropertyChanged("AddlHdlgFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddressVal {
            get {
                return this.AddressValField;
            }
            set {
                if ((this.AddressValField.Equals(value) != true)) {
                    this.AddressValField = value;
                    this.RaisePropertyChanged("AddressVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyChrg {
            get {
                return this.ApplyChrgField;
            }
            set {
                if ((this.ApplyChrgField.Equals(value) != true)) {
                    this.ApplyChrgField = value;
                    this.RaisePropertyChanged("ApplyChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderCrossing {
            get {
                return this.BorderCrossingField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderCrossingField, value) != true)) {
                    this.BorderCrossingField = value;
                    this.RaisePropertyChanged("BorderCrossing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COD {
            get {
                return this.CODField;
            }
            set {
                if ((this.CODField.Equals(value) != true)) {
                    this.CODField = value;
                    this.RaisePropertyChanged("COD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFreight {
            get {
                return this.CODFreightField;
            }
            set {
                if ((this.CODFreightField.Equals(value) != true)) {
                    this.CODFreightField = value;
                    this.RaisePropertyChanged("CODFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CertOfOrigin {
            get {
                return this.CertOfOriginField;
            }
            set {
                if ((this.CertOfOriginField.Equals(value) != true)) {
                    this.CertOfOriginField = value;
                    this.RaisePropertyChanged("CertOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckConfirmCapPromise {
            get {
                return this.CheckConfirmCapPromiseField;
            }
            set {
                if ((this.CheckConfirmCapPromiseField.Equals(value) != true)) {
                    this.CheckConfirmCapPromiseField = value;
                    this.RaisePropertyChanged("CheckConfirmCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckDateCapPromise {
            get {
                return this.CheckDateCapPromiseField;
            }
            set {
                if ((this.CheckDateCapPromiseField.Equals(value) != true)) {
                    this.CheckDateCapPromiseField = value;
                    this.RaisePropertyChanged("CheckDateCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckUpdateCapPromise {
            get {
                return this.CheckUpdateCapPromiseField;
            }
            set {
                if ((this.CheckUpdateCapPromiseField.Equals(value) != true)) {
                    this.CheckUpdateCapPromiseField = value;
                    this.RaisePropertyChanged("CheckUpdateCapPromise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChrgAmount {
            get {
                return this.ChrgAmountField;
            }
            set {
                if ((this.ChrgAmountField.Equals(value) != true)) {
                    this.ChrgAmountField = value;
                    this.RaisePropertyChanged("ChrgAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.GlbShipToRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommercialInvoice {
            get {
                return this.CommercialInvoiceField;
            }
            set {
                if ((this.CommercialInvoiceField.Equals(value) != true)) {
                    this.CommercialInvoiceField = value;
                    this.RaisePropertyChanged("CommercialInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConAddress1 {
            get {
                return this.ConAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ConAddress1Field, value) != true)) {
                    this.ConAddress1Field = value;
                    this.RaisePropertyChanged("ConAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConAddress2 {
            get {
                return this.ConAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ConAddress2Field, value) != true)) {
                    this.ConAddress2Field = value;
                    this.RaisePropertyChanged("ConAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConCity {
            get {
                return this.ConCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ConCityField, value) != true)) {
                    this.ConCityField = value;
                    this.RaisePropertyChanged("ConCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConCompName {
            get {
                return this.ConCompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConCompNameField, value) != true)) {
                    this.ConCompNameField = value;
                    this.RaisePropertyChanged("ConCompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConContact {
            get {
                return this.ConContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ConContactField, value) != true)) {
                    this.ConContactField = value;
                    this.RaisePropertyChanged("ConContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConCountry {
            get {
                return this.ConCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ConCountryField, value) != true)) {
                    this.ConCountryField = value;
                    this.RaisePropertyChanged("ConCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConPhoneNum {
            get {
                return this.ConPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ConPhoneNumField, value) != true)) {
                    this.ConPhoneNumField = value;
                    this.RaisePropertyChanged("ConPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConState {
            get {
                return this.ConStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ConStateField, value) != true)) {
                    this.ConStateField = value;
                    this.RaisePropertyChanged("ConState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConZip {
            get {
                return this.ConZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ConZipField, value) != true)) {
                    this.ConZipField = value;
                    this.RaisePropertyChanged("ConZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsigneeID {
            get {
                return this.ConsigneeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsigneeIDField, value) != true)) {
                    this.ConsigneeIDField = value;
                    this.RaisePropertyChanged("ConsigneeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryNum {
            get {
                return this.CountryNumField;
            }
            set {
                if ((this.CountryNumField.Equals(value) != true)) {
                    this.CountryNumField = value;
                    this.RaisePropertyChanged("CountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreatedByEDI {
            get {
                return this.CreatedByEDIField;
            }
            set {
                if ((this.CreatedByEDIField.Equals(value) != true)) {
                    this.CreatedByEDIField = value;
                    this.RaisePropertyChanged("CreatedByEDI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredIns {
            get {
                return this.DeclaredInsField;
            }
            set {
                if ((this.DeclaredInsField.Equals(value) != true)) {
                    this.DeclaredInsField = value;
                    this.RaisePropertyChanged("DeclaredIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryConf {
            get {
                return this.DeliveryConfField;
            }
            set {
                if ((this.DeliveryConfField.Equals(value) != true)) {
                    this.DeliveryConfField = value;
                    this.RaisePropertyChanged("DeliveryConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandAddAction {
            get {
                return this.DemandAddActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandAddActionField, value) != true)) {
                    this.DemandAddActionField = value;
                    this.RaisePropertyChanged("DemandAddAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandAddLeadTime {
            get {
                return this.DemandAddLeadTimeField;
            }
            set {
                if ((this.DemandAddLeadTimeField.Equals(value) != true)) {
                    this.DemandAddLeadTimeField = value;
                    this.RaisePropertyChanged("DemandAddLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandAutoAccept {
            get {
                return this.DemandAutoAcceptField;
            }
            set {
                if ((this.DemandAutoAcceptField.Equals(value) != true)) {
                    this.DemandAutoAcceptField = value;
                    this.RaisePropertyChanged("DemandAutoAccept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCancelAction {
            get {
                return this.DemandCancelActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCancelActionField, value) != true)) {
                    this.DemandCancelActionField = value;
                    this.RaisePropertyChanged("DemandCancelAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandCancelLeadTime {
            get {
                return this.DemandCancelLeadTimeField;
            }
            set {
                if ((this.DemandCancelLeadTimeField.Equals(value) != true)) {
                    this.DemandCancelLeadTimeField = value;
                    this.RaisePropertyChanged("DemandCancelLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseAction {
            get {
                return this.DemandCapPromiseActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseActionField, value) != true)) {
                    this.DemandCapPromiseActionField = value;
                    this.RaisePropertyChanged("DemandCapPromiseAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseDate {
            get {
                return this.DemandCapPromiseDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseDateField, value) != true)) {
                    this.DemandCapPromiseDateField = value;
                    this.RaisePropertyChanged("DemandCapPromiseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCapPromiseUpdate {
            get {
                return this.DemandCapPromiseUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCapPromiseUpdateField, value) != true)) {
                    this.DemandCapPromiseUpdateField = value;
                    this.RaisePropertyChanged("DemandCapPromiseUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandChangeAction {
            get {
                return this.DemandChangeActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandChangeActionField, value) != true)) {
                    this.DemandChangeActionField = value;
                    this.RaisePropertyChanged("DemandChangeAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandChangeDateAction {
            get {
                return this.DemandChangeDateActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandChangeDateActionField, value) != true)) {
                    this.DemandChangeDateActionField = value;
                    this.RaisePropertyChanged("DemandChangeDateAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandChangeDateLeadTime {
            get {
                return this.DemandChangeDateLeadTimeField;
            }
            set {
                if ((this.DemandChangeDateLeadTimeField.Equals(value) != true)) {
                    this.DemandChangeDateLeadTimeField = value;
                    this.RaisePropertyChanged("DemandChangeDateLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandChangeLeadTime {
            get {
                return this.DemandChangeLeadTimeField;
            }
            set {
                if ((this.DemandChangeLeadTimeField.Equals(value) != true)) {
                    this.DemandChangeLeadTimeField = value;
                    this.RaisePropertyChanged("DemandChangeLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckCfgAction {
            get {
                return this.DemandCheckCfgActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckCfgActionField, value) != true)) {
                    this.DemandCheckCfgActionField = value;
                    this.RaisePropertyChanged("DemandCheckCfgAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckConfig {
            get {
                return this.DemandCheckConfigField;
            }
            set {
                if ((this.DemandCheckConfigField.Equals(value) != true)) {
                    this.DemandCheckConfigField = value;
                    this.RaisePropertyChanged("DemandCheckConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForPart {
            get {
                return this.DemandCheckForPartField;
            }
            set {
                if ((this.DemandCheckForPartField.Equals(value) != true)) {
                    this.DemandCheckForPartField = value;
                    this.RaisePropertyChanged("DemandCheckForPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForPartAction {
            get {
                return this.DemandCheckForPartActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForPartActionField, value) != true)) {
                    this.DemandCheckForPartActionField = value;
                    this.RaisePropertyChanged("DemandCheckForPartAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForRev {
            get {
                return this.DemandCheckForRevField;
            }
            set {
                if ((this.DemandCheckForRevField.Equals(value) != true)) {
                    this.DemandCheckForRevField = value;
                    this.RaisePropertyChanged("DemandCheckForRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForRevAction {
            get {
                return this.DemandCheckForRevActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForRevActionField, value) != true)) {
                    this.DemandCheckForRevActionField = value;
                    this.RaisePropertyChanged("DemandCheckForRevAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckForRunOutPart {
            get {
                return this.DemandCheckForRunOutPartField;
            }
            set {
                if ((this.DemandCheckForRunOutPartField.Equals(value) != true)) {
                    this.DemandCheckForRunOutPartField = value;
                    this.RaisePropertyChanged("DemandCheckForRunOutPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckForRunOutPartAction {
            get {
                return this.DemandCheckForRunOutPartActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckForRunOutPartActionField, value) != true)) {
                    this.DemandCheckForRunOutPartActionField = value;
                    this.RaisePropertyChanged("DemandCheckForRunOutPartAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCheckPartialShip {
            get {
                return this.DemandCheckPartialShipField;
            }
            set {
                if ((this.DemandCheckPartialShipField.Equals(value) != true)) {
                    this.DemandCheckPartialShipField = value;
                    this.RaisePropertyChanged("DemandCheckPartialShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandCheckShipAction {
            get {
                return this.DemandCheckShipActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandCheckShipActionField, value) != true)) {
                    this.DemandCheckShipActionField = value;
                    this.RaisePropertyChanged("DemandCheckShipAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandCloseRejSkd {
            get {
                return this.DemandCloseRejSkdField;
            }
            set {
                if ((this.DemandCloseRejSkdField.Equals(value) != true)) {
                    this.DemandCloseRejSkdField = value;
                    this.RaisePropertyChanged("DemandCloseRejSkd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandDateType {
            get {
                return this.DemandDateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandDateTypeField, value) != true)) {
                    this.DemandDateTypeField = value;
                    this.RaisePropertyChanged("DemandDateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandDayOfWeek {
            get {
                return this.DemandDayOfWeekField;
            }
            set {
                if ((this.DemandDayOfWeekField.Equals(value) != true)) {
                    this.DemandDayOfWeekField = value;
                    this.RaisePropertyChanged("DemandDayOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandDeliveryDays {
            get {
                return this.DemandDeliveryDaysField;
            }
            set {
                if ((this.DemandDeliveryDaysField.Equals(value) != true)) {
                    this.DemandDeliveryDaysField = value;
                    this.RaisePropertyChanged("DemandDeliveryDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandNewLineAction {
            get {
                return this.DemandNewLineActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandNewLineActionField, value) != true)) {
                    this.DemandNewLineActionField = value;
                    this.RaisePropertyChanged("DemandNewLineAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandNewLineLeadTime {
            get {
                return this.DemandNewLineLeadTimeField;
            }
            set {
                if ((this.DemandNewLineLeadTimeField.Equals(value) != true)) {
                    this.DemandNewLineLeadTimeField = value;
                    this.RaisePropertyChanged("DemandNewLineLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandPricing {
            get {
                return this.DemandPricingField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandPricingField, value) != true)) {
                    this.DemandPricingField = value;
                    this.RaisePropertyChanged("DemandPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandQtyChangeAction {
            get {
                return this.DemandQtyChangeActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandQtyChangeActionField, value) != true)) {
                    this.DemandQtyChangeActionField = value;
                    this.RaisePropertyChanged("DemandQtyChangeAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandQtyChangeLeadTime {
            get {
                return this.DemandQtyChangeLeadTimeField;
            }
            set {
                if ((this.DemandQtyChangeLeadTimeField.Equals(value) != true)) {
                    this.DemandQtyChangeLeadTimeField = value;
                    this.RaisePropertyChanged("DemandQtyChangeLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandUnitPriceDiff {
            get {
                return this.DemandUnitPriceDiffField;
            }
            set {
                if ((this.DemandUnitPriceDiffField.Equals(value) != true)) {
                    this.DemandUnitPriceDiffField = value;
                    this.RaisePropertyChanged("DemandUnitPriceDiff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandUnitPriceDiffAction {
            get {
                return this.DemandUnitPriceDiffActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandUnitPriceDiffActionField, value) != true)) {
                    this.DemandUnitPriceDiffActionField = value;
                    this.RaisePropertyChanged("DemandUnitPriceDiffAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandUseCustomerValues {
            get {
                return this.DemandUseCustomerValuesField;
            }
            set {
                if ((this.DemandUseCustomerValuesField.Equals(value) != true)) {
                    this.DemandUseCustomerValuesField = value;
                    this.RaisePropertyChanged("DemandUseCustomerValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandUseSysDate {
            get {
                return this.DemandUseSysDateField;
            }
            set {
                if ((this.DemandUseSysDateField.Equals(value) != true)) {
                    this.DemandUseSysDateField = value;
                    this.RaisePropertyChanged("DemandUseSysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocOnly {
            get {
                return this.DocOnlyField;
            }
            set {
                if ((this.DocOnlyField.Equals(value) != true)) {
                    this.DocOnlyField = value;
                    this.RaisePropertyChanged("DocOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDICode {
            get {
                return this.EDICodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EDICodeField, value) != true)) {
                    this.EDICodeField = value;
                    this.RaisePropertyChanged("EDICode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDIShipNum {
            get {
                return this.EDIShipNumField;
            }
            set {
                if ((object.ReferenceEquals(this.EDIShipNumField, value) != true)) {
                    this.EDIShipNumField = value;
                    this.RaisePropertyChanged("EDIShipNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMailAddress {
            get {
                return this.EMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailAddressField, value) != true)) {
                    this.EMailAddressField = value;
                    this.RaisePropertyChanged("EMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ETCAddrChg {
            get {
                return this.ETCAddrChgField;
            }
            set {
                if ((this.ETCAddrChgField.Equals(value) != true)) {
                    this.ETCAddrChgField = value;
                    this.RaisePropertyChanged("ETCAddrChg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EarlyBuffer {
            get {
                return this.EarlyBufferField;
            }
            set {
                if ((this.EarlyBufferField.Equals(value) != true)) {
                    this.EarlyBufferField = value;
                    this.RaisePropertyChanged("EarlyBuffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityUseCode {
            get {
                return this.EntityUseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityUseCodeField, value) != true)) {
                    this.EntityUseCodeField = value;
                    this.RaisePropertyChanged("EntityUseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcFromVal {
            get {
                return this.ExcFromValField;
            }
            set {
                if ((this.ExcFromValField.Equals(value) != true)) {
                    this.ExcFromValField = value;
                    this.RaisePropertyChanged("ExcFromVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress1 {
            get {
                return this.FFAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress1Field, value) != true)) {
                    this.FFAddress1Field = value;
                    this.RaisePropertyChanged("FFAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress2 {
            get {
                return this.FFAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress2Field, value) != true)) {
                    this.FFAddress2Field = value;
                    this.RaisePropertyChanged("FFAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress3 {
            get {
                return this.FFAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress3Field, value) != true)) {
                    this.FFAddress3Field = value;
                    this.RaisePropertyChanged("FFAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCity {
            get {
                return this.FFCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCityField, value) != true)) {
                    this.FFCityField = value;
                    this.RaisePropertyChanged("FFCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCompName {
            get {
                return this.FFCompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCompNameField, value) != true)) {
                    this.FFCompNameField = value;
                    this.RaisePropertyChanged("FFCompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFContact {
            get {
                return this.FFContactField;
            }
            set {
                if ((object.ReferenceEquals(this.FFContactField, value) != true)) {
                    this.FFContactField = value;
                    this.RaisePropertyChanged("FFContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCountry {
            get {
                return this.FFCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCountryField, value) != true)) {
                    this.FFCountryField = value;
                    this.RaisePropertyChanged("FFCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FFCountryNum {
            get {
                return this.FFCountryNumField;
            }
            set {
                if ((this.FFCountryNumField.Equals(value) != true)) {
                    this.FFCountryNumField = value;
                    this.RaisePropertyChanged("FFCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFID {
            get {
                return this.FFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FFIDField, value) != true)) {
                    this.FFIDField = value;
                    this.RaisePropertyChanged("FFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFPhoneNum {
            get {
                return this.FFPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FFPhoneNumField, value) != true)) {
                    this.FFPhoneNumField = value;
                    this.RaisePropertyChanged("FFPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFState {
            get {
                return this.FFStateField;
            }
            set {
                if ((object.ReferenceEquals(this.FFStateField, value) != true)) {
                    this.FFStateField = value;
                    this.RaisePropertyChanged("FFState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFZip {
            get {
                return this.FFZipField;
            }
            set {
                if ((object.ReferenceEquals(this.FFZipField, value) != true)) {
                    this.FFZipField = value;
                    this.RaisePropertyChanged("FFZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNum {
            get {
                return this.FaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumField, value) != true)) {
                    this.FaxNumField = value;
                    this.RaisePropertyChanged("FaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatStr {
            get {
                return this.FormatStrField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatStrField, value) != true)) {
                    this.FormatStrField = value;
                    this.RaisePropertyChanged("FormatStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbCustNum {
            get {
                return this.GlbCustNumField;
            }
            set {
                if ((this.GlbCustNumField.Equals(value) != true)) {
                    this.GlbCustNumField = value;
                    this.RaisePropertyChanged("GlbCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbShipToNum {
            get {
                return this.GlbShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbShipToNumField, value) != true)) {
                    this.GlbShipToNumField = value;
                    this.RaisePropertyChanged("GlbShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundType {
            get {
                return this.GroundTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundTypeField, value) != true)) {
                    this.GroundTypeField = value;
                    this.RaisePropertyChanged("GroundType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HazardousShipment {
            get {
                return this.HazardousShipmentField;
            }
            set {
                if ((this.HazardousShipmentField.Equals(value) != true)) {
                    this.HazardousShipmentField = value;
                    this.RaisePropertyChanged("HazardousShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hazmat {
            get {
                return this.HazmatField;
            }
            set {
                if ((this.HazmatField.Equals(value) != true)) {
                    this.HazmatField = value;
                    this.RaisePropertyChanged("Hazmat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICCode {
            get {
                return this.ICCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ICCodeField, value) != true)) {
                    this.ICCodeField = value;
                    this.RaisePropertyChanged("ICCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INExciseRegNumber {
            get {
                return this.INExciseRegNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.INExciseRegNumberField, value) != true)) {
                    this.INExciseRegNumberField = value;
                    this.RaisePropertyChanged("INExciseRegNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INSTRegistration {
            get {
                return this.INSTRegistrationField;
            }
            set {
                if ((object.ReferenceEquals(this.INSTRegistrationField, value) != true)) {
                    this.INSTRegistrationField = value;
                    this.RaisePropertyChanged("INSTRegistration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INVATNumber {
            get {
                return this.INVATNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.INVATNumberField, value) != true)) {
                    this.INVATNumberField = value;
                    this.RaisePropertyChanged("INVATNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IndividualPackIDs {
            get {
                return this.IndividualPackIDsField;
            }
            set {
                if ((this.IndividualPackIDsField.Equals(value) != true)) {
                    this.IndividualPackIDsField = value;
                    this.RaisePropertyChanged("IndividualPackIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntrntlShip {
            get {
                return this.IntrntlShipField;
            }
            set {
                if ((this.IntrntlShipField.Equals(value) != true)) {
                    this.IntrntlShipField = value;
                    this.RaisePropertyChanged("IntrntlShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlternate {
            get {
                return this.IsAlternateField;
            }
            set {
                if ((this.IsAlternateField.Equals(value) != true)) {
                    this.IsAlternateField = value;
                    this.RaisePropertyChanged("IsAlternate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LangNameID {
            get {
                return this.LangNameIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LangNameIDField, value) != true)) {
                    this.LangNameIDField = value;
                    this.RaisePropertyChanged("LangNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LateBuffer {
            get {
                return this.LateBufferField;
            }
            set {
                if ((this.LateBufferField.Equals(value) != true)) {
                    this.LateBufferField = value;
                    this.RaisePropertyChanged("LateBuffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalName {
            get {
                return this.LegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNameField, value) != true)) {
                    this.LegalNameField = value;
                    this.RaisePropertyChanged("LegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LetterOfInstr {
            get {
                return this.LetterOfInstrField;
            }
            set {
                if ((this.LetterOfInstrField.Equals(value) != true)) {
                    this.LetterOfInstrField = value;
                    this.RaisePropertyChanged("LetterOfInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkShipToNum {
            get {
                return this.LinkShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkShipToNumField, value) != true)) {
                    this.LinkShipToNumField = value;
                    this.RaisePropertyChanged("LinkShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterCustNum {
            get {
                return this.MasterCustNumField;
            }
            set {
                if ((this.MasterCustNumField.Equals(value) != true)) {
                    this.MasterCustNumField = value;
                    this.RaisePropertyChanged("MasterCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterShipToNum {
            get {
                return this.MasterShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterShipToNumField, value) != true)) {
                    this.MasterShipToNumField = value;
                    this.RaisePropertyChanged("MasterShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStdPkg {
            get {
                return this.NonStdPkgField;
            }
            set {
                if ((this.NonStdPkgField.Equals(value) != true)) {
                    this.NonStdPkgField = value;
                    this.RaisePropertyChanged("NonStdPkg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyEMail {
            get {
                return this.NotifyEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyEMailField, value) != true)) {
                    this.NotifyEMailField = value;
                    this.RaisePropertyChanged("NotifyEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyFlag {
            get {
                return this.NotifyFlagField;
            }
            set {
                if ((this.NotifyFlagField.Equals(value) != true)) {
                    this.NotifyFlagField = value;
                    this.RaisePropertyChanged("NotifyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSmartString {
            get {
                return this.OTSmartStringField;
            }
            set {
                if ((this.OTSmartStringField.Equals(value) != true)) {
                    this.OTSmartStringField = value;
                    this.RaisePropertyChanged("OTSmartString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldCompany {
            get {
                return this.OldCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.OldCompanyField, value) != true)) {
                    this.OldCompanyField = value;
                    this.RaisePropertyChanged("OldCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OldCustNum {
            get {
                return this.OldCustNumField;
            }
            set {
                if ((this.OldCustNumField.Equals(value) != true)) {
                    this.OldCustNumField = value;
                    this.RaisePropertyChanged("OldCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldShipToNum {
            get {
                return this.OldShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OldShipToNumField, value) != true)) {
                    this.OldShipToNumField = value;
                    this.RaisePropertyChanged("OldShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgRegCode {
            get {
                return this.OrgRegCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgRegCodeField, value) != true)) {
                    this.OrgRegCodeField = value;
                    this.RaisePropertyChanged("OrgRegCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideCarrier {
            get {
                return this.OverrideCarrierField;
            }
            set {
                if ((this.OverrideCarrierField.Equals(value) != true)) {
                    this.OverrideCarrierField = value;
                    this.RaisePropertyChanged("OverrideCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideService {
            get {
                return this.OverrideServiceField;
            }
            set {
                if ((this.OverrideServiceField.Equals(value) != true)) {
                    this.OverrideServiceField = value;
                    this.RaisePropertyChanged("OverrideService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PendingTerritoryID {
            get {
                return this.PendingTerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PendingTerritoryIDField, value) != true)) {
                    this.PendingTerritoryIDField = value;
                    this.RaisePropertyChanged("PendingTerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodicityCode {
            get {
                return this.PeriodicityCodeField;
            }
            set {
                if ((this.PeriodicityCodeField.Equals(value) != true)) {
                    this.PeriodicityCodeField = value;
                    this.RaisePropertyChanged("PeriodicityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNum {
            get {
                return this.PhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumField, value) != true)) {
                    this.PhoneNumField = value;
                    this.RaisePropertyChanged("PhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceTolerance {
            get {
                return this.PriceToleranceField;
            }
            set {
                if ((this.PriceToleranceField.Equals(value) != true)) {
                    this.PriceToleranceField = value;
                    this.RaisePropertyChanged("PriceTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimSCon {
            get {
                return this.PrimSConField;
            }
            set {
                if ((this.PrimSConField.Equals(value) != true)) {
                    this.PrimSConField = value;
                    this.RaisePropertyChanged("PrimSCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNotes {
            get {
                return this.RefNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNotesField, value) != true)) {
                    this.RefNotesField = value;
                    this.RaisePropertyChanged("RefNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResDelivery {
            get {
                return this.ResDeliveryField;
            }
            set {
                if ((this.ResDeliveryField.Equals(value) != true)) {
                    this.ResDeliveryField = value;
                    this.RaisePropertyChanged("ResDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResaleID {
            get {
                return this.ResaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResaleIDField, value) != true)) {
                    this.ResaleIDField = value;
                    this.RaisePropertyChanged("ResaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SICCode {
            get {
                return this.SICCodeField;
            }
            set {
                if ((this.SICCodeField.Equals(value) != true)) {
                    this.SICCodeField = value;
                    this.RaisePropertyChanged("SICCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode {
            get {
                return this.SalesRepCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCodeField, value) != true)) {
                    this.SalesRepCodeField = value;
                    this.RaisePropertyChanged("SalesRepCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatDelivery {
            get {
                return this.SatDeliveryField;
            }
            set {
                if ((this.SatDeliveryField.Equals(value) != true)) {
                    this.SatDeliveryField = value;
                    this.RaisePropertyChanged("SatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatPickup {
            get {
                return this.SatPickupField;
            }
            set {
                if ((this.SatPickupField.Equals(value) != true)) {
                    this.SatPickupField = value;
                    this.RaisePropertyChanged("SatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAOD {
            get {
                return this.ServAODField;
            }
            set {
                if ((this.ServAODField.Equals(value) != true)) {
                    this.ServAODField = value;
                    this.RaisePropertyChanged("ServAOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAlert {
            get {
                return this.ServAlertField;
            }
            set {
                if ((this.ServAlertField.Equals(value) != true)) {
                    this.ServAlertField = value;
                    this.RaisePropertyChanged("ServAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServAuthNum {
            get {
                return this.ServAuthNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ServAuthNumField, value) != true)) {
                    this.ServAuthNumField = value;
                    this.RaisePropertyChanged("ServAuthNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServDeliveryDate {
            get {
                return this.ServDeliveryDateField;
            }
            set {
                if ((this.ServDeliveryDateField.Equals(value) != true)) {
                    this.ServDeliveryDateField = value;
                    this.RaisePropertyChanged("ServDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServHomeDel {
            get {
                return this.ServHomeDelField;
            }
            set {
                if ((this.ServHomeDelField.Equals(value) != true)) {
                    this.ServHomeDelField = value;
                    this.RaisePropertyChanged("ServHomeDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServInstruct {
            get {
                return this.ServInstructField;
            }
            set {
                if ((object.ReferenceEquals(this.ServInstructField, value) != true)) {
                    this.ServInstructField = value;
                    this.RaisePropertyChanged("ServInstruct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServPOD {
            get {
                return this.ServPODField;
            }
            set {
                if ((this.ServPODField.Equals(value) != true)) {
                    this.ServPODField = value;
                    this.RaisePropertyChanged("ServPOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServPhone {
            get {
                return this.ServPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServPhoneField, value) != true)) {
                    this.ServPhoneField = value;
                    this.RaisePropertyChanged("ServPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef1 {
            get {
                return this.ServRef1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef1Field, value) != true)) {
                    this.ServRef1Field = value;
                    this.RaisePropertyChanged("ServRef1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef2 {
            get {
                return this.ServRef2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef2Field, value) != true)) {
                    this.ServRef2Field = value;
                    this.RaisePropertyChanged("ServRef2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef3 {
            get {
                return this.ServRef3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef3Field, value) != true)) {
                    this.ServRef3Field = value;
                    this.RaisePropertyChanged("ServRef3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef4 {
            get {
                return this.ServRef4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef4Field, value) != true)) {
                    this.ServRef4Field = value;
                    this.RaisePropertyChanged("ServRef4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef5 {
            get {
                return this.ServRef5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef5Field, value) != true)) {
                    this.ServRef5Field = value;
                    this.RaisePropertyChanged("ServRef5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServRelease {
            get {
                return this.ServReleaseField;
            }
            set {
                if ((this.ServReleaseField.Equals(value) != true)) {
                    this.ServReleaseField = value;
                    this.RaisePropertyChanged("ServRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatDelivery {
            get {
                return this.ServSatDeliveryField;
            }
            set {
                if ((this.ServSatDeliveryField.Equals(value) != true)) {
                    this.ServSatDeliveryField = value;
                    this.RaisePropertyChanged("ServSatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatPickup {
            get {
                return this.ServSatPickupField;
            }
            set {
                if ((this.ServSatPickupField.Equals(value) != true)) {
                    this.ServSatPickupField = value;
                    this.RaisePropertyChanged("ServSatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSignature {
            get {
                return this.ServSignatureField;
            }
            set {
                if ((this.ServSignatureField.Equals(value) != true)) {
                    this.ServSignatureField = value;
                    this.RaisePropertyChanged("ServSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipExprtDeclartn {
            get {
                return this.ShipExprtDeclartnField;
            }
            set {
                if ((this.ShipExprtDeclartnField.Equals(value) != true)) {
                    this.ShipExprtDeclartnField = value;
                    this.RaisePropertyChanged("ShipExprtDeclartn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Skipped {
            get {
                return this.SkippedField;
            }
            set {
                if ((this.SkippedField.Equals(value) != true)) {
                    this.SkippedField = value;
                    this.RaisePropertyChanged("Skipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxAuthorityCode {
            get {
                return this.TaxAuthorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxAuthorityCodeField, value) != true)) {
                    this.TaxAuthorityCodeField = value;
                    this.RaisePropertyChanged("TaxAuthorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegReason {
            get {
                return this.TaxRegReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegReasonField, value) != true)) {
                    this.TaxRegReasonField = value;
                    this.RaisePropertyChanged("TaxRegReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritoryID {
            get {
                return this.TerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryIDField, value) != true)) {
                    this.TerritoryIDField = value;
                    this.RaisePropertyChanged("TerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritorySelect {
            get {
                return this.TerritorySelectField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritorySelectField, value) != true)) {
                    this.TerritorySelectField = value;
                    this.RaisePropertyChanged("TerritorySelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradingPartnerName {
            get {
                return this.TradingPartnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TradingPartnerNameField, value) != true)) {
                    this.TradingPartnerNameField = value;
                    this.RaisePropertyChanged("TradingPartnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVEmailType {
            get {
                return this.UPSQVEmailTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVEmailTypeField, value) != true)) {
                    this.UPSQVEmailTypeField = value;
                    this.RaisePropertyChanged("UPSQVEmailType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVMemo {
            get {
                return this.UPSQVMemoField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVMemoField, value) != true)) {
                    this.UPSQVMemoField = value;
                    this.RaisePropertyChanged("UPSQVMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVShipFromName {
            get {
                return this.UPSQVShipFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVShipFromNameField, value) != true)) {
                    this.UPSQVShipFromNameField = value;
                    this.RaisePropertyChanged("UPSQVShipFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UPSQuantumView {
            get {
                return this.UPSQuantumViewField;
            }
            set {
                if ((this.UPSQuantumViewField.Equals(value) != true)) {
                    this.UPSQuantumViewField = value;
                    this.RaisePropertyChanged("UPSQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerbalConf {
            get {
                return this.VerbalConfField;
            }
            set {
                if ((this.VerbalConfField.Equals(value) != true)) {
                    this.VerbalConfField = value;
                    this.RaisePropertyChanged("VerbalConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZIP {
            get {
                return this.ZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ZIPField, value) != true)) {
                    this.ZIPField = value;
                    this.RaisePropertyChanged("ZIP");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : EpicorConsole.Epicor.CustomerSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustBankRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustBankRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankName = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctNumber = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankIdentifier = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimaryBank = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NameOnAccount = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address1 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address2 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address3 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostalCode = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankBranchCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IBANCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PMUID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalName = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgreeRef = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorrespAccount = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgreeExpDate = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalBIC = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankPersonCode = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowAsAltRemitToBank = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPersonName = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPersonName2 = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPersonName3 = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPersonName4 = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPersonName5 = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankRegionType = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryName = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXCURP = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankBranchCodeDescBankBranchCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankBranchCodeDescDescription = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodSummarizePerCustomer = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodType = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodName = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 45,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustomerListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zip = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryTerritoryDesc = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustGrupGroupDesc = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHold = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerType = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoContact = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowShipTo3 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPartOpts = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasBank = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 24,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustBillToRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustBillToRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultBillTo = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceAddress = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegReason = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgRegCode = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTLegalName = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddress1 = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddress2 = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddress3 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddrList = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCity = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTConPrc = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTContactName = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCountry = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTFaxNum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTPhoneNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTState = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTZip = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbLink = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbFlag = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCreditHold = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 35,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustChildRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustChildRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentName = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentCustNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustDfltDocTypeRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustDfltDocTypeRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceType = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvcTypeTranDoc = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeDescription = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustICRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustICRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICTypeID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Primary = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBTName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICCodeDescription = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICTypeDescription = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustLabExpRateRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustLabExpRateRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateMultiplier = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedRate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBTName = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustMFBillRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustMFBillRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTFlag = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayTypeDesc = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayAccount = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress1 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress2 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress3 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCity = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTState = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTZip = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountry = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountryNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTPhone = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 18,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustMandateRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustMandateRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MandateType = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MandateReference = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidFrom = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidTo = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorAddress1 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorAddress2 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorAddress3 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorCity = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorZip = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorCountryNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorRefPartyName = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditorRefPartyID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtorName = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtorAddress1 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtorAddress2 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtorAddress3 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtorCity = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtorZip = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtorCountryNum = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtorRefPartyName = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtorRefPartyID = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignedPlace = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignedBy = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignedDate = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UndContractID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedBy = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedDate = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintedBy = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintedDate = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstUseDate = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastUseDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentType = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MandateStatus = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctDescription = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctBankName = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctLegalName = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctIBANCode = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctBankIdentifier = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustBankIBANCode = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustBankBankIdentifier = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MandateCanBeDeleted = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MandateReferenceExt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 52,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustRestrictionRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustRestrictionRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictionTypeID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictionTypeDescription = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustUPSEmailRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustUPSEmailRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailAddress = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipmentNotify = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailureNotify = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryNotify = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableQuantumView = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomCrdPoolRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustomCrdPoolRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CrdPoolCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditUsed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditAvailable = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalNA = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustomerRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address1 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address2 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address3 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zip = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResaleID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintStatements = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintLabels = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintAck = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinCharges = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHold = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupCode = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscountPercent = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimPCon = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimBCon = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimSCon = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstDate = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FaxNum = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExempt = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarkUpID = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillDay = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneInvPerPS = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultFOB = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditIncludeOrders = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditReviewDate = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHoldDate = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHoldSource = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditClearUserID = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditClearDate = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditClearTime = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDICode = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNum = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LangNameID = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BorderCrossing = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FormatStr = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTName = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddress1 = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddress2 = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddress3 = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCity = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTState = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTZip = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCountryNum = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCountry = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTPhoneNum = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTFaxNum = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTFormatStr = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentCustNum = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICCust = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContBillDay = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EMailAddress = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippingQualifier = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocPriorityCode = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReservePriorityCode = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkPortNum = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebCustomer = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerType = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoContact = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryLock = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustURL = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingTerritoryID = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtID = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidateSO = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillFrequency = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditIncludePI = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCust = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICTrader = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAuthorityCode = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalDeliveryNote = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCredIncOrd = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCredIncPI = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCurrencyCode = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalID = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCreditHold = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckDuplicatePO = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLimit = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPILimit = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCreditLimit = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalPILimit = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocGlobalCreditLimit = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocGlobalPILimit = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RfqAttachAllow = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscountQualifier = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowAltBillTo = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDeliveryDays = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDateType = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAddLeadTime = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAddAction = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeLeadTime = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeAction = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCancelLeadTime = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCancelAction = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandNewLineLeadTime = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandNewLineAction = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQtyChangeLeadTime = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQtyChangeAction = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeDateLeadTime = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeDateAction = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradingPartnerName = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResDelivery = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatDelivery = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatPickup = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hazmat = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOnly = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefNotes = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyChrg = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChrgAmount = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COD = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFreight = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroundType = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyFlag = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyEMail = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredIns = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicityCode = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSignature = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAlert = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServHomeDel = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryType = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServDeliveryDate = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPhone = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServInstruct = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRelease = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAuthNum = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef1 = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef2 = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef3 = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef4 = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef5 = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EarlyBuffer = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LateBuffer = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUnitPriceDiff = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUnitPriceDiffAction = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcFromVal = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressVal = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RebateVendorNum = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RebateForm = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditCardOrder = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForPart = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForPartAction = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeCode = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualPackIDs = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntrntlShip = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertOfOrigin = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialInvoice = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipExprtDeclartn = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LetterOfInstr = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFID = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCompName = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress1 = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress2 = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress3 = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCity = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFState = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFZip = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountry = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountryNum = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFPhoneNum = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStdPkg = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryConf = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddlHdlgFlag = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQuantumView = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVShipFromName = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVMemo = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVEmailType = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFContact = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETCAddrChg = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRoundRule = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxMethod = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidPayer = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidSoldTo = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidShipTo = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideRlsClass = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcrossNatAcc = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAParentCreditIsUsed = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NACreditIsShare = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NACreditPreferenceList = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAParentCreditPrc = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NACreditSharedPrc = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowOTS = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThirdPLCust = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagedVendID = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagedVendNum = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NARlsClassCode = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DirectDebiting = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReminderCode = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAParentCreditIsUsed = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNACreditIsShare = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAParentCreditPrc = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNACreditSharedPrc = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowShipTo3 = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaveAs = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPartOpts = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasBank = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PMUID = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRev = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHoldForReview = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRevAction = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToTerrList = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcctRefNumber = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARInvoiceITCode = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditMemoITCode = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCashRecITCode = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalName = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARInvoiceAdjITCode = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegReason = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvPerPackLine = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgRegCode = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCloseRejSkd = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankCode = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCloseNoMatch = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DmdCheckPartialShip = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DmdCheckShipAction = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckCUMM = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckCUMMAction = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandPricing = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceTolerance = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreferredBank = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckDateCapPromise = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckConfirmCapPromise = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckUpdateCapPromise = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseDate = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseAction = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseUpdate = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicBilling = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDateCriteria = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PBTerms = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERSOrder = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandSplitSched = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSmartString = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredRev = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RACode = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckConfig = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckCfgAction = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowAsAltRemitTo = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FederalID = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIApplication = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WICustomer = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIShippingCosts = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQBookPCFinishing = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQBookPCPaper = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQBookPCPress = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQBookPCPlates = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Variations = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OversPct = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UndersPct = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultLOQstyle = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultOrderAcknowledgement = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultPackSlip = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultOversPricing = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQPrepressStyle = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSR = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQBookCaFinishing = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQBookCapaper = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQBookCaPress = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQBookCatPlates = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOQVariations = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultInvoicestyle = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AEPLOQType = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessCust = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THBranchID = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPricingSchema = 284,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParamCode = 285,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGAFIPResponsibilityCode = 286,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGBillToProvinceCode = 287,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGGrossIncomeTaxID = 288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGIDDocTypeCode = 289,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGIDDocumentNumber = 290,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGProvinceCode = 291,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGUseGoodDefaultMark = 292,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Collections = 293,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionsDate = 294,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateCollectionPosted = 295,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXMunicipio = 296,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEIdentityDocType = 297,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDocumentID = 298,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGoodsContributor = 299,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEWithholdAgent = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PECollectionAgent = 301,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PENotFound = 302,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PENoAddress = 303,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityUseCode = 304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvcOrderCmpDflt = 305,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EInvoice = 306,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RegistrationCode = 307,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EAddress = 308,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRunOutPart = 309,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRunOutPartAction = 310,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EInvCompanyIDAttr = 311,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INCSTNumber = 312,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INPANNumber = 313,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COOneTimeID = 314,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COIsOneTimeCust = 315,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEOrgType = 316,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeName = 317,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeAddress1 = 318,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeAddress2 = 319,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeAddress3 = 320,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeCity = 321,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeState = 322,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeZip = 323,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeCountry = 324,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteePhoneNum = 325,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeTaxID = 326,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurSupplierCode = 327,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCType = 328,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MYIndustryCode = 329,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyncToExternalCRM = 330,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMCustomerID = 331,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMCustomerType = 332,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMLastSync = 333,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMSyncRequired = 334,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ownership = 335,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Industry = 336,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnnualRevenue = 337,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfEmployees = 338,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TickerLocation = 339,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TickerSymbol = 340,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rating = 341,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIRegNum = 342,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXAccountNumber = 343,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidateLinesPerPart = 344,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACATOtherCare = 345,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACATRespCareType = 346,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACATRespCareTypeDesc = 347,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrList = 348,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvancedLaborRate = 349,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyHoldToOrders = 350,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttrCodeList = 351,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrCode = 352,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillDayDesc = 353,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillFreqDescription = 354,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddrList = 355,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTLegalName = 356,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeCodeDesc = 357,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustTypeDescription = 358,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscQualDescription = 359,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspBTFormatStr = 360,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspFormatStr = 361,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspRlsClass = 362,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableGlobalCust = 363,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableGlobalLock = 364,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCoExist = 365,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FxdGlbOrdCredit = 366,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FxdGlbPICredit = 367,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FxdOrderCredit = 368,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FxdPICredit = 369,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FxdTotOrders = 370,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FxdTotPI = 371,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbFlag = 372,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbLink = 373,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAChildCrdAvail = 374,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAOwnCreditAvail = 375,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAOwnCreditUsedDsp = 376,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAParentCrdAvail = 377,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAParentsCreditUsedDsp = 378,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAPoolCrdAvail = 379,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAPoolCreditUsed = 380,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNASharedCreditUsedDsp = 381,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntegrationFlag = 382,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListCode = 383,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBAnnualHomeCap = 384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBAnnualPartPenCap = 385,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBAnnualResiCap = 386,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBAnnualSelfFndCap = 387,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBAsAtDate = 388,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBAssetAssess = 389,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBLifeTimeCap = 390,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBMeansTestAmt = 391,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBMeansTestFeeAmt = 392,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLLBPrevEntryDate = 393,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAChildCrdAvail = 394,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NACreditCust = 395,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NACreditUpdated = 396,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAOwnCreditAvail = 397,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAOwnCreditUsedDsp = 398,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAParentCrdAvail = 399,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAParentsCreditUsedDsp = 400,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAPoolCrdAvail = 401,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAPoolCreditUsed = 402,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NASharedCreditUsedDsp = 403,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NATotalCreditAvail = 404,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NATotalCreditUsed = 405,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentCustID = 406,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentName = 407,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicityDesc = 408,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicityList = 409,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PIFlag = 410,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReminderGroupDesc = 411,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchIDs = 412,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendShipment = 413,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippingQualifierDesc = 414,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotGlbInvoiceCredit = 415,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotGlbOpenCredit = 416,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotGlbOrderCredit = 417,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotGlbPICredit = 418,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotInvoiceCredit = 419,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotLCCredit = 420,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotLCCumInvoices = 421,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotLCInvoiceBal = 422,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotLCOpenOrders = 423,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotLCUsed = 424,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotOpenCredit = 425,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotOpenInvoices = 426,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotOpenInvoicesLC = 427,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotOpenLC = 428,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotOpenOrderLC = 429,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotOpenOrders = 430,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotOpenPI = 431,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotOrderCredit = 432,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotPICredit = 433,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACATCommCare = 434,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COASegReferences = 435,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXCURP = 436,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 437,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGAFIPResponsibilityDescription = 438,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGBillToProvinceDescription = 439,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGIDDocTypeCUITMark = 440,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGIDDocTypeDescription = 441,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGProvinceDescription = 442,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrName = 443,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrencyID = 444,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrSymbol = 445,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrDesc = 446,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyDocumentDesc = 447,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustGrupGroupDesc = 448,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryTypeDescription = 449,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOBDescription = 450,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCurrencyCurrSymbol = 451,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCurrencyCurrDesc = 452,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCurrencyDocumentDesc = 453,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCurrencyCurrencyID = 454,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCurrencyCurrName = 455,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LanguageDescription = 456,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarkUpDescription = 457,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodSummarizePerCustomer = 458,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodType = 459,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodName = 460,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreferredBankBankName = 461,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreferredBankDescription = 462,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RASchedCdRADesc = 463,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReservePriDescription = 464,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName = 465,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaWebDesc = 466,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaDescription = 467,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TATaxAuthorityDescription = 468,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionDescription = 469,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsDescription = 470,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryTerritoryDesc = 471,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 472,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 473,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustomerAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDiscPriceLstRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustomerDiscPriceLstRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListListDescription = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListEndDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListStartDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDocsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustomerDocsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentName = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltTradingPartnerName = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TestRecord = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseCustomerDefaults = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckForPart = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseCustPart = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutBoundDocReq = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MapID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcceptType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDirection = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutboundDocName = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteCurrentReleases = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsePartUPC = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutboundManual = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutboundAutomatic = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIPartValidation = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartOptionAvailList = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartOptionSelList = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartOptionSelectedList = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBTName = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 30,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDocsSHRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustomerDocsSHRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentName = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltTradingPartnerName = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TestRecord = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseCustomerDefaults = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckForPart = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseCustPart = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutBoundDocReq = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MapID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcceptType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDirection = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutboundDocName = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteCurrentReleases = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsePartUPC = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutboundManual = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutboundAutomatic = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIPartValidation = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartOptionAvailList = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartOptionSelList = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartOptionSelectedList = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 27,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerFSPriceListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustomerFSPriceListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListListDescription = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListEndDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListStartDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerPriceLstRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustomerPriceLstRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListListDescription = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListEndDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListStartDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityGLCRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EntityGLCRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelatedToFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key1 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key2 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key3 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key4 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key5 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key6 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLControlType = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLControlCode = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessEntity = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompanyID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsExternalCompany = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalEntityGLC = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankFeeID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallCode = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassCode = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCode = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeductionID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseCode = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtSystemID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromPlant = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeadNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCDept = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayTypeID = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PerConName = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PIStatus = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchCode = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCode = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonType = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesCatID = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shift = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxTblID = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToPlant = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferMethod = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeID = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseTypeCode = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsFiltered = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OprTypeCode = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashDeskID = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TIN = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReclassCodeID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLCntrlDescription = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLCntrlTypeDescription = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 67,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbCustCredRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum GlbCustCredRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompName = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocARTotal = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocSOTotal = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPITotal = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTotal = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOTotal = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PITotal = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorMsg = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentCustNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCurrencyCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalInvoices = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalOrders = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalPayIns = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAParentsCreditUsed = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NASharedCreditUsed = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAOwnCreditUsed = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAParentsCreditUsed = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNASharedCreditUsed = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAPoolCreditUsed = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAPoolCreditUsed = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAOwnCreditUsed = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAExceedLimit = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAExceedLimit = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARLOCTotal = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocARLOCTotal = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 35,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MangCustRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum MangCustRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCity = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumTermsCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCurrencyCode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress2 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCountry = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress3 = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumDefaultFOB = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress1 = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumVendorID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumZIP = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumState = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 22,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NAMemberRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum NAMemberRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RlsClassCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopCustNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopCustID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tiered = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopCustName = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PECustWhldHistRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PECustWhldHistRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecordSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GoodContributor = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithholdingAgent = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionAgent = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAddress = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartnerRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartnerNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartnerType = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsActive = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartnerID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspSearchID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipToRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address1 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address2 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address3 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZIP = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResaleID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimSCon = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FaxNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExempt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIShipNum = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LangNameID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BorderCrossing = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FormatStr = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EMailAddress = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritorySelect = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingTerritoryID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedByEDI = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAuthorityCode = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDICode = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDeliveryDays = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDateType = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAddLeadTime = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAddAction = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeLeadTime = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeAction = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCancelLeadTime = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCancelAction = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandNewLineLeadTime = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandNewLineAction = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQtyChangeLeadTime = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQtyChangeAction = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeDateLeadTime = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeDateAction = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradingPartnerName = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResDelivery = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatDelivery = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatPickup = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hazmat = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOnly = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefNotes = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyChrg = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChrgAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COD = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFreight = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroundType = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyFlag = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyEMail = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredIns = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicityCode = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSignature = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAlert = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServHomeDel = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryType = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServDeliveryDate = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPhone = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServInstruct = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRelease = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAuthNum = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef1 = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialInvoice = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef2 = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipExprtDeclartn = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef3 = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertOfOrigin = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef4 = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LetterOfInstr = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef5 = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazardousShipment = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideCarrier = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntrntlShip = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideService = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUseCustomerValues = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegReason = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EarlyBuffer = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgRegCode = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LateBuffer = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUnitPriceDiff = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUnitPriceDiffAction = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcFromVal = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressVal = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForPart = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForPartAction = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFID = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress1 = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress2 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCity = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFState = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFZip = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountry = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFContact = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCompName = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFPhoneNum = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualPackIDs = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountryNum = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStdPkg = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryConf = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddlHdlgFlag = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQuantumView = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVShipFromName = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVMemo = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress3 = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETCAddrChg = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsAlternate = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterCustNum = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterShipToNum = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRev = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRevAction = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckPartialShip = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckShipAction = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCloseRejSkd = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandPricing = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceTolerance = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckDateCapPromise = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckConfirmCapPromise = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckUpdateCapPromise = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseDate = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseAction = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseUpdate = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSmartString = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalName = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckConfig = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckCfgAction = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIWebShipTo = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGApartment = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGExtraStreetNumber = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGFloor = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGGrossIncomeTaxID = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGLocationCode = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGNeighborhood = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGProvinceCode = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGStreet = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGStreetNumber = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityUseCode = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRunOutPart = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRunOutPartAction = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INExciseRegNumber = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVATNumber = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRegistration = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicityList = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimaryShipTo = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritorySelectDescription = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerrSelectFlag = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrList = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COASegReferences = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactName = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspFormatStr = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbFlag = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbLink = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntegrationFlag = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicityDesc = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXCURP = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXFederalID = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXMunicipio = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGLocationDescription = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGProvinceDescription = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryTypeDescription = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LanguageDescription = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterCustIDBTName = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterCustIDCustID = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterCustIDName = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaWebDesc = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaDescription = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TATaxAuthorityDescription = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionDescription = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryTerritoryDesc = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 193,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipToAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToDiscPriceLstRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipToDiscPriceLstRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListStartDate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListEndDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListListDescription = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToLabExpRateRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipToLabExpRateRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateMultiplier = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedRate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToShipToNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToMFBillRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipToMFBillRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTFlag = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayTypeDesc = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayAccount = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress1 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress2 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress3 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCity = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTState = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTZip = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountry = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountryNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTPhone = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 19,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToPriceLstRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipToPriceLstRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListListDescription = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListStartDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListEndDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToRestrictionRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipToRestrictionRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictionTypeID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictionTypeDescription = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToSrchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipToSrchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipToUPSEmlRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipToUPSEmlRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailAddress = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipmentNotify = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailureNotify = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryNotify = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableQuantumView = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxExemptRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum TaxExemptRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelatedToFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key1 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key2 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EffectiveFrom = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EffectiveTo = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesTaxDescription = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesTRCDescription = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxTextDescription = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 23,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCAddressRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ETCAddressRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line1 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line2 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line3 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostalCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Region = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSource = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSourceID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateAddr = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateAllowed = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressType = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarrierRoute = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidCity = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidCountry = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        County = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FipsCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine1 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine2 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine3 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine4 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidPostalCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostNet = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidRegion = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultCode = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultSeq = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarrierRouteDesc = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeDesc = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCountry = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACWPercentage = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 39,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCMessageRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ETCMessageRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Details = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Helplink = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefersTo = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Severity = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Source = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Summary = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSource = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSourceID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillToRefsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum BillToRefsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCustNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCustID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCustomerName = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbCustBillToRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum GlbCustBillToRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCustNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbBTCustNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultBillTo = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceAddress = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTLegalName = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgRegCode = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegReason = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkBTCustNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 21,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbCustomerRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum GlbCustomerRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCustID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCustNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address1 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address2 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address3 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zip = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResaleID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintStatements = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintLabels = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintAck = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinCharges = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHold = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupCode = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscountPercent = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimPCon = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimBCon = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimSCon = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstDate = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FaxNum = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExempt = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarkUpID = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillDay = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneInvPerPS = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultFOB = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditIncludeOrders = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditReviewDate = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHoldDate = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHoldSource = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditClearUserID = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditClearDate = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditClearTime = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDICode = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDITest = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDITranslator = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNum = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LangNameID = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BorderCrossing = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FormatStr = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTName = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddress1 = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddress2 = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddress3 = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCity = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTState = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTZip = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCountryNum = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCountry = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTPhoneNum = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTFaxNum = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTFormatStr = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentCustNum = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICCust = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContBillDay = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EMailAddress = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippingQualifier = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocPriorityCode = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkPortNum = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebCustomer = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerType = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoContact = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryLock = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustURL = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingTerritoryID = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtID = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidateSO = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillFrequency = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditIncludePI = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCust = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICTrader = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCredIncOrd = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCredIncPI = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCurrencyCode = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCreditHold = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldCompany = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldCustNum = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldCustID = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAuthorityCode = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalDeliveryNote = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalID = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckDuplicatePO = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLimit = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPILimit = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalCreditLimit = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalPILimit = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocGlobalCreditLimit = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocGlobalPILimit = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RfqAttachAllow = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscountQualifier = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Skipped = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowAltBillTo = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyChrg = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChrgAmount = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COD = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFreight = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredIns = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAddAction = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAddLeadTime = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAutoAccept = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCancelAction = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCancelLeadTime = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeAction = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeDateAction = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeDateLeadTime = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeLeadTime = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDateType = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDayOfWeek = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDeliveryDays = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandNewLineAction = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandNewLineLeadTime = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQtyChangeAction = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQtyChangeLeadTime = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUseSysDate = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOnly = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroundType = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hazmat = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyEMail = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyFlag = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefNotes = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResDelivery = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatDelivery = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatPickup = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradingPartnerName = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerbalConf = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicityCode = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryType = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAlert = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAOD = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAuthNum = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServDeliveryDate = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServHomeDel = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServInstruct = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPhone = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPOD = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef1 = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef2 = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef3 = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef4 = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef5 = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRelease = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatDelivery = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatPickup = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSignature = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditDays = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EarlyBuffer = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LateBuffer = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideCarrier = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideService = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUnitPriceDiff = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUnitPriceDiffAction = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressVal = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcFromVal = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RebateForm = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RebateVendorNum = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditCardOrder = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForPart = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForPartAction = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeCode = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddlHdlgFlag = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertOfOrigin = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialInvoice = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryConf = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETCAddrChg = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress1 = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress2 = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress3 = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCity = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCompName = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFContact = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountry = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountryNum = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFID = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFPhoneNum = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFState = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFZip = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualPackIDs = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntrntlShip = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LetterOfInstr = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStdPkg = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipExprtDeclartn = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQuantumView = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVEmailType = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVMemo = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVShipFromName = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARCreditTotal = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PICreditTotal = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOCreditTotal = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxMethod = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRoundRule = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcrossNatAcc = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NACreditIsShare = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NACreditPreferenceList = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NACreditSharedPrc = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAParentCreditIsUsed = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAParentCreditPrc = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideRlsClass = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidPayer = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidShipTo = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidSoldTo = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowOTS = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagedVendID = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagedVendNum = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThirdPLCust = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NARlsClassCode = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoGenPromNotes = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DirectDebiting = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPayment = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReservePriorityCode = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAParentsCreditUsed = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NASharedCreditUsed = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAOwnCreditUsed = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNACreditIsShare = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNACreditSharedPrc = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAParentCreditIsUsed = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAParentCreditPrc = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNAParentsCreditUsed = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbNASharedCreditUsed = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReminderCode = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowShipTo3 = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NACreditUpdate = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaveAs = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPartOpts = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasBank = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PMUID = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRev = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRevAction = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHoldForReview = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToTerrList = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcctRefNumber = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARInvoiceAdjITCode = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARInvoiceITCode = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditMemoITCode = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCashRecITCode = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckCUMM = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckCUMMAction = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCloseNoMatch = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCloseRejSkd = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandPricing = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DmdCheckPartialShip = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DmdCheckShipAction = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvPerPackLine = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalName = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgRegCode = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankCode = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceTolerance = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegReason = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckConfirmCapPromise = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckDateCapPromise = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckUpdateCapPromise = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseAction = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseDate = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseUpdate = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandSplitSched = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDateCriteria = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERSOrder = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PBTerms = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicBilling = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreferredBank = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SICCode = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICCode = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSmartString = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredRev = 284,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RACode = 285,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckCfgAction = 286,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckConfig = 287,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 289,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THBranchID = 290,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPricingSchema = 291,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParamCode = 292,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGAFIPResponsibilityCode = 293,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGBillToProvinceCode = 294,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGGrossIncomeTaxID = 295,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGIDDocTypeCode = 296,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGIDDocumentNumber = 297,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGProvinceCode = 298,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGUseGoodDefaultMark = 299,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Collections = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionsDate = 301,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateCollectionPosted = 302,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXMunicipio = 303,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEIdentityDocType = 304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDocumentID = 305,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGoodsContributor = 306,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEWithholdAgent = 307,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PECollectionAgent = 308,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PENotFound = 309,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PENoAddress = 310,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityUseCode = 311,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvcOrderCmpDflt = 312,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EInvoice = 313,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RegistrationCode = 314,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EAddress = 315,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRunOutPart = 316,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRunOutPartAction = 317,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EInvCompanyIDAttr = 318,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INCSTNumber = 319,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INPANNumber = 320,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COOneTimeID = 321,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COIsOneTimeCust = 322,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEOrgType = 323,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeName = 324,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeAddress1 = 325,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeAddress2 = 326,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeAddress3 = 327,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeCity = 328,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeState = 329,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeZip = 330,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeCountry = 331,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteePhoneNum = 332,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeTaxID = 333,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurSupplierCode = 334,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCType = 335,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MYIndustryCode = 336,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyncToExternalCRM = 337,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMGlbCustomerID = 338,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMGlbCustomerType = 339,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMLastSync = 340,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMSyncRequired = 341,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ownership = 342,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Industry = 343,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnnualRevenue = 344,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfEmployees = 345,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TickerLocation = 346,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TickerSymbol = 347,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rating = 348,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIRegNum = 349,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXAccountNumber = 350,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidateLinesPerPart = 351,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayHold = 352,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkCustID = 353,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayCustomerType = 354,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 355,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 356,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 357,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbShipToRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum GlbShipToRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address1 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address2 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address3 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZIP = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResaleID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritoryID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimSCon = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FaxNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExempt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIShipNum = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LangNameID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BorderCrossing = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FormatStr = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EMailAddress = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerritorySelect = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingTerritoryID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedByEDI = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAuthorityCode = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCustNum = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDICode = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbShipToNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldCompany = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldCustNum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldShipToNum = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Skipped = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyChrg = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChrgAmount = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COD = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFreight = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredIns = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAddAction = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAddLeadTime = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandAutoAccept = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCancelAction = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCancelLeadTime = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeAction = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeDateAction = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeDateLeadTime = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandChangeLeadTime = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDateType = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDayOfWeek = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDeliveryDays = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandNewLineAction = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandNewLineLeadTime = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQtyChangeAction = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQtyChangeLeadTime = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUseSysDate = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOnly = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroundType = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hazmat = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyEMail = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyFlag = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefNotes = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResDelivery = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatDelivery = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatPickup = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradingPartnerName = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerbalConf = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicityCode = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryType = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAlert = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAOD = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAuthNum = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServDeliveryDate = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServHomeDel = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServInstruct = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPhone = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPOD = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef1 = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef2 = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef3 = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef4 = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef5 = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRelease = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatDelivery = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatPickup = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSignature = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUseCustomerValues = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EarlyBuffer = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LateBuffer = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideCarrier = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideService = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUnitPriceDiff = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandUnitPriceDiffAction = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressVal = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcFromVal = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertOfOrigin = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialInvoice = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConAddress1 = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConAddress2 = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConCity = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConCompName = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConContact = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConCountry = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConPhoneNum = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsigneeID = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConState = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConZip = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForPart = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForPartAction = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress1 = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress2 = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCity = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCompName = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFContact = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountry = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFID = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFPhoneNum = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFState = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFZip = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazardousShipment = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntrntlShip = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LetterOfInstr = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipExprtDeclartn = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddlHdlgFlag = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryConf = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETCAddrChg = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress3 = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountryNum = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualPackIDs = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStdPkg = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQuantumView = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVEmailType = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVMemo = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVShipFromName = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsAlternate = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterCustNum = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterShipToNum = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRev = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRevAction = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckPartialShip = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckShipAction = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCloseRejSkd = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandPricing = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgRegCode = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceTolerance = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegReason = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckConfirmCapPromise = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckDateCapPromise = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckUpdateCapPromise = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseAction = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseDate = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCapPromiseUpdate = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SICCode = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICCode = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSmartString = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalName = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckCfgAction = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckConfig = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityUseCode = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRunOutPart = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandCheckForRunOutPartAction = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INExciseRegNumber = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVATNumber = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSTRegistration = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkShipToNum = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 181,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ETCAddressTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ETCAddressRow")]
    [System.SerializableAttribute()]
    public class ETCAddressTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ETCAddressRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ETCMessageTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ETCMessageRow")]
    [System.SerializableAttribute()]
    public class ETCMessageTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.ETCMessageRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BillToRefsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="BillToRefsRow")]
    [System.SerializableAttribute()]
    public class BillToRefsTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.BillToRefsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="GlbCustBillToTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="GlbCustBillToRow")]
    [System.SerializableAttribute()]
    public class GlbCustBillToTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.GlbCustBillToRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="GlbCustomerTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="GlbCustomerRow")]
    [System.SerializableAttribute()]
    public class GlbCustomerTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.GlbCustomerRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="GlbShipToTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="GlbShipToRow")]
    [System.SerializableAttribute()]
    public class GlbShipToTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.GlbShipToRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<EpicorConsole.Epicor.CustomerSvc.BOUpdErrorRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:Customer", ConfigurationName="Epicor.CustomerSvc.CustomerSvcContract")]
    public interface CustomerSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetListResponse GetList(EpicorConsole.Epicor.CustomerSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.CustomerSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetRows", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetRowsResponse GetRows(EpicorConsole.Epicor.CustomerSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetRows", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.CustomerSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBySysRowID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBySysRowID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/Update", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.UpdateResponse Update(EpicorConsole.Epicor.CustomerSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/Update", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.CustomerSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/UpdateExt", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.UpdateExtResponse UpdateExt(EpicorConsole.Epicor.CustomerSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/UpdateExt", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.CustomerSvc.UpdateExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerGlobalFields", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerGlobalFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerGlobalFieldsEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCustomerGlobalFields(int CustNum, bool GlobalLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerGlobalFields", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerGlobalFieldsResponse")]
        System.Threading.Tasks.Task<string> GetCustomerGlobalFieldsAsync(int CustNum, bool GlobalLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetShipToGlobalFields", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetShipToGlobalFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetShipToGlobalFieldsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetShipToGlobalFields(int CustNum, string ShiptoNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetShipToGlobalFields", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetShipToGlobalFieldsResponse")]
        System.Threading.Tasks.Task<string> GetShipToGlobalFieldsAsync(int CustNum, string ShiptoNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustBillToGlobalFields", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustBillToGlobalFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCustBillToGlobalFieldsEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCustBillToGlobalFields(int CustNum, int BTCustNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustBillToGlobalFields", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustBillToGlobalFieldsResponse")]
        System.Threading.Tasks.Task<string> GetCustBillToGlobalFieldsAsync(int CustNum, int BTCustNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/AllowCustomerDetailUpdate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/AllowCustomerDetailUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/AllowCustomerDetailUpdateEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void AllowCustomerDetailUpdate();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/AllowCustomerDetailUpdate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/AllowCustomerDetailUpdateResponse")]
        System.Threading.Tasks.Task AllowCustomerDetailUpdateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustDfltInvoiceType", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeCustDfltInvoiceTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustDfltInvoiceTypeEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeResponse ChangeCustDfltInvoiceType(EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustDfltInvoiceType", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeCustDfltInvoiceTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeResponse> ChangeCustDfltInvoiceTypeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerChargeCode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerChargeCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerChargeCodeEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeResponse ChangeCustomerChargeCode(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerChargeCode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerChargeCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeResponse> ChangeCustomerChargeCodeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerFinCharges", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerFinChargesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerFinChargesEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesResponse ChangeCustomerFinCharges(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerFinCharges", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerFinChargesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesResponse> ChangeCustomerFinChargesAsync(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerReminderGroup", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerReminderGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerReminderGroupEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupResponse ChangeCustomerReminderGroup(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerReminderGroup", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeCustomerReminderGroupResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupResponse> ChangeCustomerReminderGroupAsync(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeDeferredRev", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeDeferredRevResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChangeDeferredRevEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevResponse ChangeDeferredRev(EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeDeferredRev", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeDeferredRevResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevResponse> ChangeDeferredRevAsync(EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeAGIDDocTypeCode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeAGIDDocTypeCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChangeAGIDDocTypeCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeResponse ChangeAGIDDocTypeCode(EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeAGIDDocTypeCode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeAGIDDocTypeCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeResponse> ChangeAGIDDocTypeCodeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeListCode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeListCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChangeListCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChangeListCodeResponse ChangeListCode(EpicorConsole.Epicor.CustomerSvc.ChangeListCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeListCode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeListCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeListCodeResponse> ChangeListCodeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeListCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeMandateReference", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeMandateReferenceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChangeMandateReferenceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceResponse ChangeMandateReference(EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeMandateReference", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeMandateReferenceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceResponse> ChangeMandateReferenceAsync(EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ModifySearchIDs", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ModifySearchIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ModifySearchIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsResponse ModifySearchIDs(EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ModifySearchIDs", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ModifySearchIDsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsResponse> ModifySearchIDsAsync(EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeRACode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeRACodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChangeRACodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChangeRACodeResponse ChangeRACode(EpicorConsole.Epicor.CustomerSvc.ChangeRACodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChangeRACode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChangeRACodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeRACodeResponse> ChangeRACodeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeRACodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckCreditHold", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckCreditHoldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/CheckCreditHoldEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="vMessage")]
        string CheckCreditHold(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckCreditHold", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckCreditHoldResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="vMessage")]
        System.Threading.Tasks.Task<string> CheckCreditHoldAsync(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckDupCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckDupCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/CheckDupCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerListTableset CheckDupCustomer(string vName, string custId, System.Guid vRowid, string vAddress1, string vZip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckDupCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckDupCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerListTableset> CheckDupCustomerAsync(string vName, string custId, System.Guid vRowid, string vAddress1, string vZip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckEFFieldLength", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckEFFieldLengthResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/CheckEFFieldLengthEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="vMessage")]
        string CheckEFFieldLength(int vCustNum, string vCustType, string vName, string vAddress1, string vAddress2, string vAddress3, string vCity, string vState, string vBTName, string vBTAddress1, string vBTAddress2, string vBTAddress3, string vBTCity, string vBTState);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckEFFieldLength", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckEFFieldLengthResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="vMessage")]
        System.Threading.Tasks.Task<string> CheckEFFieldLengthAsync(int vCustNum, string vCustType, string vName, string vAddress1, string vAddress2, string vAddress3, string vCity, string vState, string vBTName, string vBTAddress1, string vBTAddress2, string vBTAddress3, string vBTCity, string vBTState);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckRUC", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckRUCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/CheckRUCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CheckRUCResponse CheckRUC(EpicorConsole.Epicor.CustomerSvc.CheckRUCRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckRUC", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckRUCResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CheckRUCResponse> CheckRUCAsync(EpicorConsole.Epicor.CustomerSvc.CheckRUCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckVATFormat", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckVATFormatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/CheckVATFormatEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CheckVATFormatResponse CheckVATFormat(EpicorConsole.Epicor.CustomerSvc.CheckVATFormatRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckVATFormat", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckVATFormatResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CheckVATFormatResponse> CheckVATFormatAsync(EpicorConsole.Epicor.CustomerSvc.CheckVATFormatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChgBTCountry", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChgBTCountryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChgBTCountryEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChgBTCountryResponse ChgBTCountry(EpicorConsole.Epicor.CustomerSvc.ChgBTCountryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChgBTCountry", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChgBTCountryResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChgBTCountryResponse> ChgBTCountryAsync(EpicorConsole.Epicor.CustomerSvc.ChgBTCountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChgCountry", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChgCountryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChgCountryEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChgCountryResponse ChgCountry(EpicorConsole.Epicor.CustomerSvc.ChgCountryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChgCountry", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChgCountryResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChgCountryResponse> ChgCountryAsync(EpicorConsole.Epicor.CustomerSvc.ChgCountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChgGlobalCust", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChgGlobalCustResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChgGlobalCustEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustResponse ChgGlobalCust(EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChgGlobalCust", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChgGlobalCustResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustResponse> ChgGlobalCustAsync(EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChgICTrader", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChgICTraderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ChgICTraderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ChgICTraderResponse ChgICTrader(EpicorConsole.Epicor.CustomerSvc.ChgICTraderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ChgICTrader", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ChgICTraderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChgICTraderResponse> ChgICTraderAsync(EpicorConsole.Epicor.CustomerSvc.ChgICTraderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/DeleteBTAddress", ReplyAction="Erp:BO:Customer/CustomerSvcContract/DeleteBTAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/DeleteBTAddressEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressResponse DeleteBTAddress(EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/DeleteBTAddress", ReplyAction="Erp:BO:Customer/CustomerSvcContract/DeleteBTAddressResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressResponse> DeleteBTAddressAsync(EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ETCAfterAddrVal", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ETCAfterAddrValResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ETCAfterAddrValEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValResponse ETCAfterAddrVal(EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ETCAfterAddrVal", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ETCAfterAddrValResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValResponse> ETCAfterAddrValAsync(EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ETCValidateAddress", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ETCValidateAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ETCValidateAddressEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressResponse ETCValidateAddress(EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ETCValidateAddress", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ETCValidateAddressResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressResponse> ETCValidateAddressAsync(EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GenerateMandateReference", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GenerateMandateReferenceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GenerateMandateReferenceEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="mandateReference")]
        string GenerateMandateReference(int custNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GenerateMandateReference", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GenerateMandateReferenceResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="mandateReference")]
        System.Threading.Tasks.Task<string> GenerateMandateReferenceAsync(int custNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetAddrElementList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetAddrElementListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetAddrElementListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="addrElementList")]
        string GetAddrElementList();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetAddrElementList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetAddrElementListResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="addrElementList")]
        System.Threading.Tasks.Task<string> GetAddrElementListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetAllShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetAllShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetAllShipToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetAllShipToResponse GetAllShipTo(EpicorConsole.Epicor.CustomerSvc.GetAllShipToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetAllShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetAllShipToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetAllShipToResponse> GetAllShipToAsync(EpicorConsole.Epicor.CustomerSvc.GetAllShipToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetAltShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetAltShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetAltShipToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetAltShipTo(string CustID, string ShipToNum, int MasterCustNum, string MasterShipToNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetAltShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetAltShipToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetAltShipToAsync(string CustID, string ShipToNum, int MasterCustNum, string MasterShipToNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBankAccountList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBankAccountListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetBankAccountListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opBankAccountList")]
        string GetBankAccountList();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBankAccountList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBankAccountListResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opBankAccountList")]
        System.Threading.Tasks.Task<string> GetBankAccountListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBillDayList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBillDayListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetBillDayListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="billDayList")]
        string GetBillDayList(string billFreq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBillDayList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBillDayListResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="billDayList")]
        System.Threading.Tasks.Task<string> GetBillDayListAsync(string billFreq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBillToRefs", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBillToRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetBillToRefsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.BillToRefsTableset GetBillToRefs(string CustID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetBillToRefs", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetBillToRefsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.BillToRefsTableset> GetBillToRefsAsync(string CustID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetByCustID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetByCustIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetByCustIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetByCustID(string custID, bool withShipTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetByCustID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetByCustIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetByCustIDAsync(string custID, bool withShipTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCompanyDataForMandate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCompanyDataForMandateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCompanyDataForMandateEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateResponse GetCompanyDataForMandate(EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCompanyDataForMandate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCompanyDataForMandateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateResponse> GetCompanyDataForMandateAsync(EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustBillToForLink", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustBillToForLinkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCustBillToForLinkEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetCustBillToForLink(string CustID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustBillToForLink", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustBillToForLinkResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetCustBillToForLinkAsync(string CustID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetCustomer(string CustID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetCustomerAsync(string CustID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerDataForMandate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerDataForMandateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerDataForMandateEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateResponse GetCustomerDataForMandate(EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerDataForMandate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerDataForMandateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateResponse> GetCustomerDataForMandateAsync(EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerForLink", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerForLinkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerForLinkEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetCustomerForLink(string CustID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerForLink", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerForLinkResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetCustomerForLinkAsync(string CustID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerTerritory", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerTerritoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerTerritoryEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryResponse GetCustomerTerritory(EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerTerritory", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerTerritoryResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryResponse> GetCustomerTerritoryAsync(EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetDisabledFields", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetDisabledFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetDisabledFieldsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="FieldList")]
        string GetDisabledFields();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetDisabledFields", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetDisabledFieldsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="FieldList")]
        System.Threading.Tasks.Task<string> GetDisabledFieldsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetGlbCustomerList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetGlbCustomerListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetGlbCustomerListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset GetGlbCustomerList(string GlbCustNumList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetGlbCustomerList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetGlbCustomerListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset> GetGlbCustomerListAsync(string GlbCustNumList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetListCustom", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetListCustomResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetListCustomEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetListCustomResponse GetListCustom(EpicorConsole.Epicor.CustomerSvc.GetListCustomRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetListCustom", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetListCustomResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetListCustomResponse> GetListCustomAsync(EpicorConsole.Epicor.CustomerSvc.GetListCustomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetListFromSelectedKeys", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetListFromSelectedKeysResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetListFromSelectedKeysEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysResponse GetListFromSelectedKeys(EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetListFromSelectedKeys", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetListFromSelectedKeysResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysResponse> GetListFromSelectedKeysAsync(EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewAltShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewAltShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewAltShipToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetNewAltShipTo(string CustID, string ShipToNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewAltShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewAltShipToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetNewAltShipToAsync(string CustID, string ShipToNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetParentCustInfo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetParentCustInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetParentCustInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoResponse GetParentCustInfo(EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetParentCustInfo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetParentCustInfoResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoResponse> GetParentCustInfoAsync(EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetShipToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetShipTo(string CustID, string ShipToNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetShipToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetShipToAsync(string CustID, string ShipToNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetShipToForLink", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetShipToForLinkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetShipToForLinkEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetShipToForLink(string CustID, string ShipToNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetShipToForLink", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetShipToForLinkResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetShipToForLinkAsync(string CustID, string ShipToNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetShipToTerritory", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetShipToTerritoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetShipToTerritoryEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryResponse GetShipToTerritory(EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetShipToTerritory", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetShipToTerritoryResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryResponse> GetShipToTerritoryAsync(EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GlbCustomersExist", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GlbCustomersExistResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GlbCustomersExistEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="glbCustomersExist")]
        bool GlbCustomersExist();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GlbCustomersExist", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GlbCustomersExistResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="glbCustomersExist")]
        System.Threading.Tasks.Task<bool> GlbCustomersExistAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustBillTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustBillToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustBillToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToResponse LinkGlbCustBillTo(EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustBillTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustBillToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToResponse> LinkGlbCustBillToAsync(EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerResponse LinkGlbCustomer(EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/LinkGlbCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerResponse> LinkGlbCustomerAsync(EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/LinkGlbShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/LinkGlbShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/LinkGlbShipToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToResponse LinkGlbShipTo(EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/LinkGlbShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/LinkGlbShipToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToResponse> LinkGlbShipToAsync(EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/MoveOnePosition", ReplyAction="Erp:BO:Customer/CustomerSvcContract/MoveOnePositionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/MoveOnePositionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset MoveOnePosition(int custNum, string shipToNum, int seqNum, string moveDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/MoveOnePosition", ReplyAction="Erp:BO:Customer/CustomerSvcContract/MoveOnePositionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> MoveOnePositionAsync(int custNum, string shipToNum, int seqNum, string moveDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/MoveOnePositionDisc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/MoveOnePositionDiscResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/MoveOnePositionDiscEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset MoveOnePositionDisc(int custNum, string shipToNum, int seqNum, string moveDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/MoveOnePositionDisc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/MoveOnePositionDiscResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> MoveOnePositionDiscAsync(int custNum, string shipToNum, int seqNum, string moveDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeAltShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeAltShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeAltShipToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToResponse OnChangeAltShipTo(EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeAltShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeAltShipToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToResponse> OnChangeAltShipToAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCreditCardOrder", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeCreditCardOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCreditCardOrderEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderResponse OnChangeCreditCardOrder(EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCreditCardOrder", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeCreditCardOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderResponse> OnChangeCreditCardOrderAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCustBankPayMethod", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeCustBankPayMethodResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCustBankPayMethodEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodResponse OnChangeCustBankPayMethod(EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCustBankPayMethod", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeCustBankPayMethodResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodResponse> OnChangeCustBankPayMethodAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCustICPrimary", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeCustICPrimaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCustICPrimaryEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryResponse OnChangeCustICPrimary(EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCustICPrimary", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeCustICPrimaryResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryResponse> OnChangeCustICPrimaryAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCustomerTaxRegion", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeCustomerTaxRegionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCustomerTaxRegionEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionResponse OnChangeCustomerTaxRegion(EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeCustomerTaxRegion", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeCustomerTaxRegionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionResponse> OnChangeCustomerTaxRegionAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofAltBT", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeofAltBTResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofAltBTEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTResponse OnChangeofAltBT(EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofAltBT", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeofAltBTResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTResponse> OnChangeofAltBTAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofBankAccount", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeofBankAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofBankAccountEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountResponse OnChangeofBankAccount(EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofBankAccount", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeofBankAccountResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountResponse> OnChangeofBankAccountAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofCustomerAddr", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeofCustomerAddrResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofCustomerAddrEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrResponse OnChangeofCustomerAddr(EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofCustomerAddr", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeofCustomerAddrResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrResponse> OnChangeofCustomerAddrAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofShipToAddr", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeofShipToAddrResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofShipToAddrEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrResponse OnChangeofShipToAddr(EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeofShipToAddr", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeofShipToAddrResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrResponse> OnChangeofShipToAddrAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeShipToTaxRegion", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeShipToTaxRegionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeShipToTaxRegionEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionResponse OnChangeShipToTaxRegion(EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeShipToTaxRegion", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeShipToTaxRegionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionResponse> OnChangeShipToTaxRegionAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeVendorID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeVendorIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnChangeVendorIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDResponse OnChangeVendorID(EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnChangeVendorID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnChangeVendorIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDResponse> OnChangeVendorIDAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnMandateBankAccountChanging", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnMandateBankAccountChangingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnMandateBankAccountChangingEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void OnMandateBankAccountChanging(string bankAccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnMandateBankAccountChanging", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnMandateBankAccountChangingResponse")]
        System.Threading.Tasks.Task OnMandateBankAccountChangingAsync(string bankAccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnMandateDateChanging", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnMandateDateChangingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnMandateDateChangingEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void OnMandateDateChanging(System.Nullable<System.DateTime> dDateFrom, System.Nullable<System.DateTime> dDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnMandateDateChanging", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnMandateDateChangingResponse")]
        System.Threading.Tasks.Task OnMandateDateChangingAsync(System.Nullable<System.DateTime> dDateFrom, System.Nullable<System.DateTime> dDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnMandateSignedDateChanging", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnMandateSignedDateChangingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnMandateSignedDateChangingEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void OnMandateSignedDateChanging(System.Nullable<System.DateTime> signredDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnMandateSignedDateChanging", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnMandateSignedDateChangingResponse")]
        System.Threading.Tasks.Task OnMandateSignedDateChangingAsync(System.Nullable<System.DateTime> signredDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnMandateStatusChanging", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnMandateStatusChangingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/OnMandateStatusChangingEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void OnMandateStatusChanging(int custNum, string mandateReference, string paymentType, string mandateStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/OnMandateStatusChanging", ReplyAction="Erp:BO:Customer/CustomerSvcContract/OnMandateStatusChangingResponse")]
        System.Threading.Tasks.Task OnMandateStatusChangingAsync(int custNum, string mandateReference, string paymentType, string mandateStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustBillTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustBillToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustBillToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToResponse PreLinkGlbCustBillTo(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustBillTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustBillToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToResponse> PreLinkGlbCustBillToAsync(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerResponse PreLinkGlbCustomer(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerResponse> PreLinkGlbCustomerAsync(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbShipToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToResponse PreLinkGlbShipTo(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/PreLinkGlbShipToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToResponse> PreLinkGlbShipToAsync(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ResetShipToIntl", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ResetShipToIntlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ResetShipToIntlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlResponse ResetShipToIntl(EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ResetShipToIntl", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ResetShipToIntlResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlResponse> ResetShipToIntlAsync(EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/SetUPSQVEnable", ReplyAction="Erp:BO:Customer/CustomerSvcContract/SetUPSQVEnableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/SetUPSQVEnableEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableResponse SetUPSQVEnable(EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/SetUPSQVEnable", ReplyAction="Erp:BO:Customer/CustomerSvcContract/SetUPSQVEnableResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableResponse> SetUPSQVEnableAsync(EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ShipToETCAfterAddrVal", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ShipToETCAfterAddrValResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ShipToETCAfterAddrValEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValResponse ShipToETCAfterAddrVal(EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ShipToETCAfterAddrVal", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ShipToETCAfterAddrValResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValResponse> ShipToETCAfterAddrValAsync(EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ShipToETCValAddr", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ShipToETCValAddrResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ShipToETCValAddrEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrResponse ShipToETCValAddr(EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ShipToETCValAddr", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ShipToETCValAddrResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrResponse> ShipToETCValAddrAsync(EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ShipToTerrSelectChange", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ShipToTerrSelectChangeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ShipToTerrSelectChangeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeResponse ShipToTerrSelectChange(EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ShipToTerrSelectChange", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ShipToTerrSelectChangeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeResponse> ShipToTerrSelectChangeAsync(EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/SkipGlbCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/SkipGlbCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/SkipGlbCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerResponse SkipGlbCustomer(EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/SkipGlbCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/SkipGlbCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerResponse> SkipGlbCustomerAsync(EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/UnlinkGlbCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UnlinkGlbCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/UnlinkGlbCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerResponse UnlinkGlbCustomer(EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/UnlinkGlbCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UnlinkGlbCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerResponse> UnlinkGlbCustomerAsync(EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/UpdateCreditTotals", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UpdateCreditTotalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/UpdateCreditTotalsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsResponse UpdateCreditTotals(EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/UpdateCreditTotals", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UpdateCreditTotalsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsResponse> UpdateCreditTotalsAsync(EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/UpdateGlobalLimits", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UpdateGlobalLimitsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/UpdateGlobalLimitsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsResponse UpdateGlobalLimits(EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/UpdateGlobalLimits", ReplyAction="Erp:BO:Customer/CustomerSvcContract/UpdateGlobalLimitsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsResponse> UpdateGlobalLimitsAsync(EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateCountry", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateCountryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ValidateCountryEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ValidateCountry(int ipProposedCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateCountry", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateCountryResponse")]
        System.Threading.Tasks.Task ValidateCountryAsync(int ipProposedCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateNAParentCreditPrc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateNAParentCreditPrcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ValidateNAParentCreditPrcEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool ValidateNAParentCreditPrc(decimal parentCreditPrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateNAParentCreditPrc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateNAParentCreditPrcResponse")]
        System.Threading.Tasks.Task<bool> ValidateNAParentCreditPrcAsync(decimal parentCreditPrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateNACreditSharedPrc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateNACreditSharedPrcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ValidateNACreditSharedPrcEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool ValidateNACreditSharedPrc(decimal creditSharedPrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateNACreditSharedPrc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateNACreditSharedPrcResponse")]
        System.Threading.Tasks.Task<bool> ValidateNACreditSharedPrcAsync(decimal creditSharedPrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNAParentCreditPrc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNAParentCreditPrcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNAParentCreditPrcEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool ValidateGlbNAParentCreditPrc(decimal parentCreditPrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNAParentCreditPrc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNAParentCreditPrcResponse")]
        System.Threading.Tasks.Task<bool> ValidateGlbNAParentCreditPrcAsync(decimal parentCreditPrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNACreditSharedPrc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNACreditSharedPrcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNACreditSharedPrcEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool ValidateGlbNACreditSharedPrc(decimal creditSharedPrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNACreditSharedPrc", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidateGlbNACreditSharedPrcResponse")]
        System.Threading.Tasks.Task<bool> ValidateGlbNACreditSharedPrcAsync(decimal creditSharedPrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidatePayBTFlag", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidatePayBTFlagResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/ValidatePayBTFlagEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ValidatePayBTFlag(string ipPayBTFlag, bool ipValCust, bool ipValShipTo, int ipCustNum, string ipShipTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/ValidatePayBTFlag", ReplyAction="Erp:BO:Customer/CustomerSvcContract/ValidatePayBTFlagResponse")]
        System.Threading.Tasks.Task ValidatePayBTFlagAsync(string ipPayBTFlag, bool ipValCust, bool ipValShipTo, int ipCustNum, string ipShipTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetTerms", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetTermsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetTermsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetTerms(string _terms);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetTerms", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetTermsResponse")]
        System.Threading.Tasks.Task<string> GetTermsAsync(string _terms);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/IsLocal", ReplyAction="Erp:BO:Customer/CustomerSvcContract/IsLocalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/IsLocalEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opResult")]
        bool IsLocal(int ipCountryNum, int ipBTCountryNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/IsLocal", ReplyAction="Erp:BO:Customer/CustomerSvcContract/IsLocalResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opResult")]
        System.Threading.Tasks.Task<bool> IsLocalAsync(int ipCountryNum, int ipBTCountryNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCodeDescList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCodeDescListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCodeDescList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/StorePartner", ReplyAction="Erp:BO:Customer/CustomerSvcContract/StorePartnerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/StorePartnerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool StorePartner(int ipPartnerNum, string ipSearchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/StorePartner", ReplyAction="Erp:BO:Customer/CustomerSvcContract/StorePartnerResponse")]
        System.Threading.Tasks.Task<bool> StorePartnerAsync(int ipPartnerNum, string ipSearchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerCountryISOCode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerCountryISOCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerCountryISOCodeEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCustomerCountryISOCode(int custNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetCustomerCountryISOCode", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetCustomerCountryISOCodeResponse")]
        System.Threading.Tasks.Task<string> GetCustomerCountryISOCodeAsync(int custNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetExternalCRMIntegrationIsEnabled", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetExternalCRMIntegrationIsEnabledResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetExternalCRMIntegrationIsEnabledEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool GetExternalCRMIntegrationIsEnabled();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetExternalCRMIntegrationIsEnabled", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetExternalCRMIntegrationIsEnabledResponse")]
        System.Threading.Tasks.Task<bool> GetExternalCRMIntegrationIsEnabledAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckCustCntWithExternalCRMEnabled", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckCustCntWithExternalCRMEnabledResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/CheckCustCntWithExternalCRMEnabledEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool CheckCustCntWithExternalCRMEnabled(int custNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/CheckCustCntWithExternalCRMEnabled", ReplyAction="Erp:BO:Customer/CustomerSvcContract/CheckCustCntWithExternalCRMEnabledResponse")]
        System.Threading.Tasks.Task<bool> CheckCustCntWithExternalCRMEnabledAsync(int custNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/SetOrdersCreditOverride", ReplyAction="Erp:BO:Customer/CustomerSvcContract/SetOrdersCreditOverrideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/SetOrdersCreditOverrideEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void SetOrdersCreditOverride(int btcustNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/SetOrdersCreditOverride", ReplyAction="Erp:BO:Customer/CustomerSvcContract/SetOrdersCreditOverrideResponse")]
        System.Threading.Tasks.Task SetOrdersCreditOverrideAsync(int btcustNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerResponse GetNewCustomer(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomer", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerResponse> GetNewCustomerAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerAttch", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchResponse GetNewCustomerAttch(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerAttch", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchResponse> GetNewCustomerAttchAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewPartner", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewPartnerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewPartnerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewPartnerResponse GetNewPartner(EpicorConsole.Epicor.CustomerSvc.GetNewPartnerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewPartner", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewPartnerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewPartnerResponse> GetNewPartnerAsync(EpicorConsole.Epicor.CustomerSvc.GetNewPartnerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustBillTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustBillToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustBillToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToResponse GetNewCustBillTo(EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustBillTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustBillToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToResponse> GetNewCustBillToAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustBank", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustBankResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustBankEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustBankResponse GetNewCustBank(EpicorConsole.Epicor.CustomerSvc.GetNewCustBankRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustBank", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustBankResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustBankResponse> GetNewCustBankAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustBankRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustChild", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustChildResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustChildEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustChildResponse GetNewCustChild(EpicorConsole.Epicor.CustomerSvc.GetNewCustChildRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustChild", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustChildResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustChildResponse> GetNewCustChildAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustChildRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustDfltDocType", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustDfltDocTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustDfltDocTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeResponse GetNewCustDfltDocType(EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustDfltDocType", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustDfltDocTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeResponse> GetNewCustDfltDocTypeAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustIC", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustICResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustICEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustICResponse GetNewCustIC(EpicorConsole.Epicor.CustomerSvc.GetNewCustICRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustIC", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustICResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustICResponse> GetNewCustICAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustICRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustLabExpRate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustLabExpRateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustLabExpRateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateResponse GetNewCustLabExpRate(EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustLabExpRate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustLabExpRateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateResponse> GetNewCustLabExpRateAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustMandate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustMandateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustMandateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateResponse GetNewCustMandate(EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustMandate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustMandateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateResponse> GetNewCustMandateAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocs", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsResponse GetNewCustomerDocs(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocs", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsResponse> GetNewCustomerDocsAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustRestriction", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustRestrictionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustRestrictionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionResponse GetNewCustRestriction(EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustRestriction", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustRestrictionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionResponse> GetNewCustRestrictionAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustUPSEmail", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustUPSEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustUPSEmailEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailResponse GetNewCustUPSEmail(EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustUPSEmail", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustUPSEmailResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailResponse> GetNewCustUPSEmailAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDiscPriceLst", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDiscPriceLstResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDiscPriceLstEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstResponse GetNewCustomerDiscPriceLst(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDiscPriceLst", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDiscPriceLstResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstResponse> GetNewCustomerDiscPriceLstAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerFSPriceList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerFSPriceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerFSPriceListEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListResponse GetNewCustomerFSPriceList(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerFSPriceList", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerFSPriceListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListResponse> GetNewCustomerFSPriceListAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewGlbCustCred", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewGlbCustCredResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewGlbCustCredEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredResponse GetNewGlbCustCred(EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewGlbCustCred", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewGlbCustCredResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredResponse> GetNewGlbCustCredAsync(EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToResponse GetNewShipTo(EpicorConsole.Epicor.CustomerSvc.GetNewShipToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipTo", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToResponse> GetNewShipToAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToAttch", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchResponse GetNewShipToAttch(EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToAttch", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchResponse> GetNewShipToAttchAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToRestriction", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToRestrictionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToRestrictionEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionResponse GetNewShipToRestriction(EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToRestriction", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToRestrictionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionResponse> GetNewShipToRestrictionAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToLabExpRate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToLabExpRateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToLabExpRateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateResponse GetNewShipToLabExpRate(EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToLabExpRate", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToLabExpRateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateResponse> GetNewShipToLabExpRateAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocsSH", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocsSHResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocsSHEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHResponse GetNewCustomerDocsSH(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocsSH", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerDocsSHResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHResponse> GetNewCustomerDocsSHAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToDiscPriceLst", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToDiscPriceLstResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToDiscPriceLstEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstResponse GetNewShipToDiscPriceLst(EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToDiscPriceLst", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToDiscPriceLstResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstResponse> GetNewShipToDiscPriceLstAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToMFBill", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToMFBillResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToMFBillEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillResponse GetNewShipToMFBill(EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToMFBill", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToMFBillResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillResponse> GetNewShipToMFBillAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToPriceLst", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToPriceLstResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToPriceLstEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstResponse GetNewShipToPriceLst(EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToPriceLst", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToPriceLstResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstResponse> GetNewShipToPriceLstAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToUPSEml", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToUPSEmlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToUPSEmlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlResponse GetNewShipToUPSEml(EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewShipToUPSEml", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewShipToUPSEmlResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlResponse> GetNewShipToUPSEmlAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustMFBill", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustMFBillResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustMFBillEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillResponse GetNewCustMFBill(EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustMFBill", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustMFBillResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillResponse> GetNewCustMFBillAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewMangCust", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewMangCustResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewMangCustEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewMangCustResponse GetNewMangCust(EpicorConsole.Epicor.CustomerSvc.GetNewMangCustRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewMangCust", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewMangCustResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewMangCustResponse> GetNewMangCustAsync(EpicorConsole.Epicor.CustomerSvc.GetNewMangCustRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerPriceLst", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerPriceLstResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerPriceLstEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstResponse GetNewCustomerPriceLst(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerPriceLst", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewCustomerPriceLstResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstResponse> GetNewCustomerPriceLstAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewEntityGLC", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewEntityGLCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewEntityGLCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCResponse GetNewEntityGLC(EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewEntityGLC", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewEntityGLCResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCResponse> GetNewEntityGLCAsync(EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewTaxExempt", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewTaxExemptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetNewTaxExemptEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptResponse GetNewTaxExempt(EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetNewTaxExempt", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetNewTaxExemptResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptResponse> GetNewTaxExemptAsync(EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/DeleteByID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(int custNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/DeleteByID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(int custNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetByID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.CustomerSvc.EpicorFaultDetail), Action="Erp:BO:Customer/CustomerSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetByID(int custNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Customer/CustomerSvcContract/GetByID", ReplyAction="Erp:BO:Customer/CustomerSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetByIDAsync(int custNum);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicorConsole.Epicor.CustomerSvc.CustomerListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string whereClauseCustomer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string whereClauseCustomerAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string whereClauseCustomCrdPool;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string whereClausePartner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=4)]
        public string whereClauseCustBillTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=5)]
        public string whereClauseCustBank;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=6)]
        public string whereClauseCustChild;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=7)]
        public string whereClauseCustDfltDocType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=8)]
        public string whereClauseCustIC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=9)]
        public string whereClauseCustLabExpRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=10)]
        public string whereClauseCustMandate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=11)]
        public string whereClauseCustomerDocs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=12)]
        public string whereClauseCustRestriction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=13)]
        public string whereClauseCustUPSEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=14)]
        public string whereClauseCustomerDiscPriceLst;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=15)]
        public string whereClauseCustomerFSPriceList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=16)]
        public string whereClauseGlbCustCred;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=17)]
        public string whereClauseNAMember;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=18)]
        public string whereClausePECustWhldHist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=19)]
        public string whereClauseShipTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=20)]
        public string whereClauseShipToAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=21)]
        public string whereClauseShipToRestriction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=22)]
        public string whereClauseShipToLabExpRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=23)]
        public string whereClauseCustomerDocsSH;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=24)]
        public string whereClauseShipToDiscPriceLst;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=25)]
        public string whereClauseShipToMFBill;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=26)]
        public string whereClauseShipToPriceLst;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=27)]
        public string whereClauseShipToUPSEml;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=28)]
        public string whereClauseCustMFBill;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=29)]
        public string whereClauseMangCust;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=30)]
        public string whereClauseShipToSrch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=31)]
        public string whereClauseCustomerPriceLst;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=32)]
        public string whereClauseEntityGLC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=33)]
        public string whereClauseTaxExempt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=34)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=35)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(
                    string whereClauseCustomer, 
                    string whereClauseCustomerAttch, 
                    string whereClauseCustomCrdPool, 
                    string whereClausePartner, 
                    string whereClauseCustBillTo, 
                    string whereClauseCustBank, 
                    string whereClauseCustChild, 
                    string whereClauseCustDfltDocType, 
                    string whereClauseCustIC, 
                    string whereClauseCustLabExpRate, 
                    string whereClauseCustMandate, 
                    string whereClauseCustomerDocs, 
                    string whereClauseCustRestriction, 
                    string whereClauseCustUPSEmail, 
                    string whereClauseCustomerDiscPriceLst, 
                    string whereClauseCustomerFSPriceList, 
                    string whereClauseGlbCustCred, 
                    string whereClauseNAMember, 
                    string whereClausePECustWhldHist, 
                    string whereClauseShipTo, 
                    string whereClauseShipToAttch, 
                    string whereClauseShipToRestriction, 
                    string whereClauseShipToLabExpRate, 
                    string whereClauseCustomerDocsSH, 
                    string whereClauseShipToDiscPriceLst, 
                    string whereClauseShipToMFBill, 
                    string whereClauseShipToPriceLst, 
                    string whereClauseShipToUPSEml, 
                    string whereClauseCustMFBill, 
                    string whereClauseMangCust, 
                    string whereClauseShipToSrch, 
                    string whereClauseCustomerPriceLst, 
                    string whereClauseEntityGLC, 
                    string whereClauseTaxExempt, 
                    int pageSize, 
                    int absolutePage) {
            this.whereClauseCustomer = whereClauseCustomer;
            this.whereClauseCustomerAttch = whereClauseCustomerAttch;
            this.whereClauseCustomCrdPool = whereClauseCustomCrdPool;
            this.whereClausePartner = whereClausePartner;
            this.whereClauseCustBillTo = whereClauseCustBillTo;
            this.whereClauseCustBank = whereClauseCustBank;
            this.whereClauseCustChild = whereClauseCustChild;
            this.whereClauseCustDfltDocType = whereClauseCustDfltDocType;
            this.whereClauseCustIC = whereClauseCustIC;
            this.whereClauseCustLabExpRate = whereClauseCustLabExpRate;
            this.whereClauseCustMandate = whereClauseCustMandate;
            this.whereClauseCustomerDocs = whereClauseCustomerDocs;
            this.whereClauseCustRestriction = whereClauseCustRestriction;
            this.whereClauseCustUPSEmail = whereClauseCustUPSEmail;
            this.whereClauseCustomerDiscPriceLst = whereClauseCustomerDiscPriceLst;
            this.whereClauseCustomerFSPriceList = whereClauseCustomerFSPriceList;
            this.whereClauseGlbCustCred = whereClauseGlbCustCred;
            this.whereClauseNAMember = whereClauseNAMember;
            this.whereClausePECustWhldHist = whereClausePECustWhldHist;
            this.whereClauseShipTo = whereClauseShipTo;
            this.whereClauseShipToAttch = whereClauseShipToAttch;
            this.whereClauseShipToRestriction = whereClauseShipToRestriction;
            this.whereClauseShipToLabExpRate = whereClauseShipToLabExpRate;
            this.whereClauseCustomerDocsSH = whereClauseCustomerDocsSH;
            this.whereClauseShipToDiscPriceLst = whereClauseShipToDiscPriceLst;
            this.whereClauseShipToMFBill = whereClauseShipToMFBill;
            this.whereClauseShipToPriceLst = whereClauseShipToPriceLst;
            this.whereClauseShipToUPSEml = whereClauseShipToUPSEml;
            this.whereClauseCustMFBill = whereClauseCustMFBill;
            this.whereClauseMangCust = whereClauseMangCust;
            this.whereClauseShipToSrch = whereClauseShipToSrch;
            this.whereClauseCustomerPriceLst = whereClauseCustomerPriceLst;
            this.whereClauseEntityGLC = whereClauseEntityGLC;
            this.whereClauseTaxExempt = whereClauseTaxExempt;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.UpdExtCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(EpicorConsole.Epicor.CustomerSvc.UpdExtCustomerTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.UpdExtCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(EpicorConsole.Epicor.CustomerSvc.BOUpdErrorTableset UpdateExtResult, EpicorConsole.Epicor.CustomerSvc.UpdExtCustomerTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustDfltInvoiceType", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeCustDfltInvoiceTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string ipInvoiceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeCustDfltInvoiceTypeRequest() {
        }
        
        public ChangeCustDfltInvoiceTypeRequest(string ipInvoiceType, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ipInvoiceType = ipInvoiceType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustDfltInvoiceTypeResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeCustDfltInvoiceTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeCustDfltInvoiceTypeResponse() {
        }
        
        public ChangeCustDfltInvoiceTypeResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustomerChargeCode", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeCustomerChargeCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string ipChargeCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeCustomerChargeCodeRequest() {
        }
        
        public ChangeCustomerChargeCodeRequest(string ipChargeCode, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ipChargeCode = ipChargeCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustomerChargeCodeResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeCustomerChargeCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeCustomerChargeCodeResponse() {
        }
        
        public ChangeCustomerChargeCodeResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustomerFinCharges", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeCustomerFinChargesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public bool ipFinCharges;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeCustomerFinChargesRequest() {
        }
        
        public ChangeCustomerFinChargesRequest(bool ipFinCharges, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ipFinCharges = ipFinCharges;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustomerFinChargesResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeCustomerFinChargesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeCustomerFinChargesResponse() {
        }
        
        public ChangeCustomerFinChargesResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustomerReminderGroup", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeCustomerReminderGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string ipReminderCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeCustomerReminderGroupRequest() {
        }
        
        public ChangeCustomerReminderGroupRequest(string ipReminderCode, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ipReminderCode = ipReminderCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustomerReminderGroupResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeCustomerReminderGroupResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeCustomerReminderGroupResponse() {
        }
        
        public ChangeCustomerReminderGroupResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDeferredRev", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeDeferredRevRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public bool ipDeferredRev;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeDeferredRevRequest() {
        }
        
        public ChangeDeferredRevRequest(bool ipDeferredRev, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ipDeferredRev = ipDeferredRev;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDeferredRevResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeDeferredRevResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeDeferredRevResponse() {
        }
        
        public ChangeDeferredRevResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeAGIDDocTypeCode", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeAGIDDocTypeCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string agIDDocTypeCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeAGIDDocTypeCodeRequest() {
        }
        
        public ChangeAGIDDocTypeCodeRequest(string agIDDocTypeCode, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.agIDDocTypeCode = agIDDocTypeCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeAGIDDocTypeCodeResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeAGIDDocTypeCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeAGIDDocTypeCodeResponse() {
        }
        
        public ChangeAGIDDocTypeCodeResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeListCode", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeListCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string listCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeListCodeRequest() {
        }
        
        public ChangeListCodeRequest(string listCode, string tableName, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.listCode = listCode;
            this.tableName = tableName;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeListCodeResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeListCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeListCodeResponse() {
        }
        
        public ChangeListCodeResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMandateReference", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeMandateReferenceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeMandateReferenceRequest() {
        }
        
        public ChangeMandateReferenceRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMandateReferenceResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeMandateReferenceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeMandateReferenceResponse() {
        }
        
        public ChangeMandateReferenceResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifySearchIDs", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ModifySearchIDsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ModifySearchIDsRequest() {
        }
        
        public ModifySearchIDsRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifySearchIDsResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ModifySearchIDsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ModifySearchIDsResponse() {
        }
        
        public ModifySearchIDsResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRACode", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeRACodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string ipRACode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeRACodeRequest() {
        }
        
        public ChangeRACodeRequest(string ipRACode, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ipRACode = ipRACode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRACodeResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChangeRACodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChangeRACodeResponse() {
        }
        
        public ChangeRACodeResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckRUC", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class CheckRUCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public CheckRUCRequest() {
        }
        
        public CheckRUCRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckRUCResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class CheckRUCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string opMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public CheckRUCResponse() {
        }
        
        public CheckRUCResponse(string opMessage, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.opMessage = opMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckVATFormat", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class CheckVATFormatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public CheckVATFormatRequest() {
        }
        
        public CheckVATFormatRequest(string tableName, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.tableName = tableName;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckVATFormatResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class CheckVATFormatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public bool CheckVATFormatResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string opMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public CheckVATFormatResponse() {
        }
        
        public CheckVATFormatResponse(bool CheckVATFormatResult, string opMessage, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.CheckVATFormatResult = CheckVATFormatResult;
            this.opMessage = opMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChgBTCountry", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChgBTCountryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChgBTCountryRequest() {
        }
        
        public ChgBTCountryRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChgBTCountryResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChgBTCountryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChgBTCountryResponse() {
        }
        
        public ChgBTCountryResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChgCountry", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChgCountryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string tableName;
        
        public ChgCountryRequest() {
        }
        
        public ChgCountryRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string tableName) {
            this.ds = ds;
            this.tableName = tableName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChgCountryResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChgCountryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChgCountryResponse() {
        }
        
        public ChgCountryResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChgGlobalCust", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChgGlobalCustRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public bool ProposedGlobalCust;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChgGlobalCustRequest() {
        }
        
        public ChgGlobalCustRequest(bool ProposedGlobalCust, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ProposedGlobalCust = ProposedGlobalCust;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChgGlobalCustResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChgGlobalCustResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChgGlobalCustResponse() {
        }
        
        public ChgGlobalCustResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChgICTrader", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChgICTraderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public bool ProposedICTrader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChgICTraderRequest() {
        }
        
        public ChgICTraderRequest(bool ProposedICTrader, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ProposedICTrader = ProposedICTrader;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChgICTraderResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ChgICTraderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ChgICTraderResponse() {
        }
        
        public ChgICTraderResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteBTAddress", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class DeleteBTAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public DeleteBTAddressRequest() {
        }
        
        public DeleteBTAddressRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteBTAddressResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class DeleteBTAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public DeleteBTAddressResponse() {
        }
        
        public DeleteBTAddressResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ETCAfterAddrVal", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ETCAfterAddrValRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ds1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public int CustNum;
        
        public ETCAfterAddrValRequest() {
        }
        
        public ETCAfterAddrValRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ds1, int CustNum) {
            this.ds = ds;
            this.ds1 = ds1;
            this.CustNum = CustNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ETCAfterAddrValResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ETCAfterAddrValResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ETCAfterAddrValResponse() {
        }
        
        public ETCAfterAddrValResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ETCValidateAddress", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ETCValidateAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public int CustNum;
        
        public ETCValidateAddressRequest() {
        }
        
        public ETCValidateAddressRequest(int CustNum) {
            this.CustNum = CustNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ETCValidateAddressResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ETCValidateAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ETCValidateAddressResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public bool StatusFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public bool ErrorFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string ErrorMsg;
        
        public ETCValidateAddressResponse() {
        }
        
        public ETCValidateAddressResponse(EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ETCValidateAddressResult, bool StatusFlag, bool ErrorFlag, string ErrorMsg) {
            this.ETCValidateAddressResult = ETCValidateAddressResult;
            this.StatusFlag = StatusFlag;
            this.ErrorFlag = ErrorFlag;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllShipTo", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetAllShipToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetAllShipToRequest() {
        }
        
        public GetAllShipToRequest(int custNum, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.custNum = custNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllShipToResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetAllShipToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetAllShipToResponse() {
        }
        
        public GetAllShipToResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDataForMandate", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetCompanyDataForMandateRequest {
        
        public GetCompanyDataForMandateRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompanyDataForMandateResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetCompanyDataForMandateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string address1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string address2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string address3;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=4)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=5)]
        public string zip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=6)]
        public int countrynum;
        
        public GetCompanyDataForMandateResponse() {
        }
        
        public GetCompanyDataForMandateResponse(string name, string address1, string address2, string address3, string city, string zip, int countrynum) {
            this.name = name;
            this.address1 = address1;
            this.address2 = address2;
            this.address3 = address3;
            this.city = city;
            this.zip = zip;
            this.countrynum = countrynum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerDataForMandate", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetCustomerDataForMandateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public int custnum;
        
        public GetCustomerDataForMandateRequest() {
        }
        
        public GetCustomerDataForMandateRequest(int custnum) {
            this.custnum = custnum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerDataForMandateResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetCustomerDataForMandateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string address1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string address2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string address3;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=4)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=5)]
        public string zip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=6)]
        public int countrynum;
        
        public GetCustomerDataForMandateResponse() {
        }
        
        public GetCustomerDataForMandateResponse(string name, string address1, string address2, string address3, string city, string zip, int countrynum) {
            this.name = name;
            this.address1 = address1;
            this.address2 = address2;
            this.address3 = address3;
            this.city = city;
            this.zip = zip;
            this.countrynum = countrynum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerTerritory", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetCustomerTerritoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetCustomerTerritoryRequest() {
        }
        
        public GetCustomerTerritoryRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerTerritoryResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetCustomerTerritoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetCustomerTerritoryResponse() {
        }
        
        public GetCustomerTerritoryResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListCustom", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetListCustomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public int absolutePage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string customClause;
        
        public GetListCustomRequest() {
        }
        
        public GetListCustomRequest(string whereClause, int pageSize, int absolutePage, string customClause) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
            this.customClause = customClause;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListCustomResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetListCustomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerListTableset GetListCustomResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public bool morePages;
        
        public GetListCustomResponse() {
        }
        
        public GetListCustomResponse(EpicorConsole.Epicor.CustomerSvc.CustomerListTableset GetListCustomResult, bool morePages) {
            this.GetListCustomResult = GetListCustomResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListFromSelectedKeys", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetListFromSelectedKeysRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerListTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public int absolutePage;
        
        public GetListFromSelectedKeysRequest() {
        }
        
        public GetListFromSelectedKeysRequest(EpicorConsole.Epicor.CustomerSvc.CustomerListTableset ds, int pageSize, int absolutePage) {
            this.ds = ds;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListFromSelectedKeysResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetListFromSelectedKeysResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerListTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public bool morePages;
        
        public GetListFromSelectedKeysResponse() {
        }
        
        public GetListFromSelectedKeysResponse(EpicorConsole.Epicor.CustomerSvc.CustomerListTableset ds, bool morePages) {
            this.ds = ds;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetParentCustInfo", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetParentCustInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string parentCustID;
        
        public GetParentCustInfoRequest() {
        }
        
        public GetParentCustInfoRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string parentCustID) {
            this.ds = ds;
            this.custNum = custNum;
            this.parentCustID = parentCustID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetParentCustInfoResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetParentCustInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetParentCustInfoResponse() {
        }
        
        public GetParentCustInfoResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipToTerritory", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetShipToTerritoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetShipToTerritoryRequest() {
        }
        
        public GetShipToTerritoryRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipToTerritoryResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetShipToTerritoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetShipToTerritoryResponse() {
        }
        
        public GetShipToTerritoryResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LinkGlbCustBillTo", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class LinkGlbCustBillToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int glbCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1;
        
        public LinkGlbCustBillToRequest() {
        }
        
        public LinkGlbCustBillToRequest(string glbCompany, int glbCustNum, EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1) {
            this.glbCompany = glbCompany;
            this.glbCustNum = glbCustNum;
            this.ds = ds;
            this.ds1 = ds1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LinkGlbCustBillToResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class LinkGlbCustBillToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string warnMsg;
        
        public LinkGlbCustBillToResponse() {
        }
        
        public LinkGlbCustBillToResponse(EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1, string warnMsg) {
            this.ds = ds;
            this.ds1 = ds1;
            this.warnMsg = warnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LinkGlbCustomer", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class LinkGlbCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int glbCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1;
        
        public LinkGlbCustomerRequest() {
        }
        
        public LinkGlbCustomerRequest(string glbCompany, int glbCustNum, EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1) {
            this.glbCompany = glbCompany;
            this.glbCustNum = glbCustNum;
            this.ds = ds;
            this.ds1 = ds1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LinkGlbCustomerResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class LinkGlbCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1;
        
        public LinkGlbCustomerResponse() {
        }
        
        public LinkGlbCustomerResponse(EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1) {
            this.ds = ds;
            this.ds1 = ds1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LinkGlbShipTo", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class LinkGlbShipToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int glbCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string glbShipToNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=4)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1;
        
        public LinkGlbShipToRequest() {
        }
        
        public LinkGlbShipToRequest(string glbCompany, int glbCustNum, string glbShipToNum, EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1) {
            this.glbCompany = glbCompany;
            this.glbCustNum = glbCustNum;
            this.glbShipToNum = glbShipToNum;
            this.ds = ds;
            this.ds1 = ds1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LinkGlbShipToResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class LinkGlbShipToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1;
        
        public LinkGlbShipToResponse() {
        }
        
        public LinkGlbShipToResponse(EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1) {
            this.ds = ds;
            this.ds1 = ds1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAltShipTo", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeAltShipToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string iProposedMasterCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string iProposedMasterShipToNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeAltShipToRequest() {
        }
        
        public OnChangeAltShipToRequest(string iProposedMasterCustID, string iProposedMasterShipToNum, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.iProposedMasterCustID = iProposedMasterCustID;
            this.iProposedMasterShipToNum = iProposedMasterShipToNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAltShipToResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeAltShipToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeAltShipToResponse() {
        }
        
        public OnChangeAltShipToResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCreditCardOrder", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeCreditCardOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public bool ipCreditCardOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeCreditCardOrderRequest() {
        }
        
        public OnChangeCreditCardOrderRequest(bool ipCreditCardOrder, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ipCreditCardOrder = ipCreditCardOrder;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCreditCardOrderResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeCreditCardOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeCreditCardOrderResponse() {
        }
        
        public OnChangeCreditCardOrderResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCustBankPayMethod", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeCustBankPayMethodRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int iProposedPMUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string iProposedBankID;
        
        public OnChangeCustBankPayMethodRequest() {
        }
        
        public OnChangeCustBankPayMethodRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int iProposedPMUID, string iProposedBankID) {
            this.ds = ds;
            this.iProposedPMUID = iProposedPMUID;
            this.iProposedBankID = iProposedBankID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCustBankPayMethodResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeCustBankPayMethodResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeCustBankPayMethodResponse() {
        }
        
        public OnChangeCustBankPayMethodResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCustICPrimary", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeCustICPrimaryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public bool iProposedPrimary;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string iProposedICCode;
        
        public OnChangeCustICPrimaryRequest() {
        }
        
        public OnChangeCustICPrimaryRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, bool iProposedPrimary, string iProposedICCode) {
            this.ds = ds;
            this.iProposedPrimary = iProposedPrimary;
            this.iProposedICCode = iProposedICCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCustICPrimaryResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeCustICPrimaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeCustICPrimaryResponse() {
        }
        
        public OnChangeCustICPrimaryResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCustomerTaxRegion", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeCustomerTaxRegionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string iProposedTaxRgnCode;
        
        public OnChangeCustomerTaxRegionRequest() {
        }
        
        public OnChangeCustomerTaxRegionRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string iProposedTaxRgnCode) {
            this.ds = ds;
            this.iProposedTaxRgnCode = iProposedTaxRgnCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCustomerTaxRegionResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeCustomerTaxRegionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeCustomerTaxRegionResponse() {
        }
        
        public OnChangeCustomerTaxRegionResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofAltBT", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeofAltBTRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string CustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeofAltBTRequest() {
        }
        
        public OnChangeofAltBTRequest(string CustID, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.CustID = CustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofAltBTResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeofAltBTResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeofAltBTResponse() {
        }
        
        public OnChangeofAltBTResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofBankAccount", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeofBankAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string bankAcctID;
        
        public OnChangeofBankAccountRequest() {
        }
        
        public OnChangeofBankAccountRequest(string bankAcctID) {
            this.bankAcctID = bankAcctID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofBankAccountResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeofBankAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string bankAcctDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string bankName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string legalName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string ibanCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=4)]
        public string bankIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=5)]
        public string creditorID;
        
        public OnChangeofBankAccountResponse() {
        }
        
        public OnChangeofBankAccountResponse(string bankAcctDescription, string bankName, string legalName, string ibanCode, string bankIdentifier, string creditorID) {
            this.bankAcctDescription = bankAcctDescription;
            this.bankName = bankName;
            this.legalName = legalName;
            this.ibanCode = ibanCode;
            this.bankIdentifier = bankIdentifier;
            this.creditorID = creditorID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofCustomerAddr", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeofCustomerAddrRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int CustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string ProposedVal;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string AddrField;
        
        public OnChangeofCustomerAddrRequest() {
        }
        
        public OnChangeofCustomerAddrRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int CustNum, string ProposedVal, string AddrField) {
            this.ds = ds;
            this.CustNum = CustNum;
            this.ProposedVal = ProposedVal;
            this.AddrField = AddrField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofCustomerAddrResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeofCustomerAddrResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeofCustomerAddrResponse() {
        }
        
        public OnChangeofCustomerAddrResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofShipToAddr", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeofShipToAddrRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int CustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string ShipToNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string ProposedVal;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=4)]
        public string AddrField;
        
        public OnChangeofShipToAddrRequest() {
        }
        
        public OnChangeofShipToAddrRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int CustNum, string ShipToNum, string ProposedVal, string AddrField) {
            this.ds = ds;
            this.CustNum = CustNum;
            this.ShipToNum = ShipToNum;
            this.ProposedVal = ProposedVal;
            this.AddrField = AddrField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofShipToAddrResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeofShipToAddrResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeofShipToAddrResponse() {
        }
        
        public OnChangeofShipToAddrResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeShipToTaxRegion", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeShipToTaxRegionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string iProposedTaxRgnCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public int iCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string iShipToNum;
        
        public OnChangeShipToTaxRegionRequest() {
        }
        
        public OnChangeShipToTaxRegionRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string iProposedTaxRgnCode, int iCustNum, string iShipToNum) {
            this.ds = ds;
            this.iProposedTaxRgnCode = iProposedTaxRgnCode;
            this.iCustNum = iCustNum;
            this.iShipToNum = iShipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeShipToTaxRegionResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeShipToTaxRegionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeShipToTaxRegionResponse() {
        }
        
        public OnChangeShipToTaxRegionResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeVendorID", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeVendorIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string iProposedVendorID;
        
        public OnChangeVendorIDRequest() {
        }
        
        public OnChangeVendorIDRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string iProposedVendorID) {
            this.ds = ds;
            this.iProposedVendorID = iProposedVendorID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeVendorIDResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class OnChangeVendorIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public OnChangeVendorIDResponse() {
        }
        
        public OnChangeVendorIDResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreLinkGlbCustBillTo", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class PreLinkGlbCustBillToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int glbCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        public PreLinkGlbCustBillToRequest() {
        }
        
        public PreLinkGlbCustBillToRequest(string glbCompany, int glbCustNum, EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            this.glbCompany = glbCompany;
            this.glbCustNum = glbCustNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreLinkGlbCustBillToResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class PreLinkGlbCustBillToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string vMessage;
        
        public PreLinkGlbCustBillToResponse() {
        }
        
        public PreLinkGlbCustBillToResponse(EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, string vMessage) {
            this.ds = ds;
            this.vMessage = vMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreLinkGlbCustomer", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class PreLinkGlbCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int glbCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        public PreLinkGlbCustomerRequest() {
        }
        
        public PreLinkGlbCustomerRequest(string glbCompany, int glbCustNum, EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            this.glbCompany = glbCompany;
            this.glbCustNum = glbCustNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreLinkGlbCustomerResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class PreLinkGlbCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string vMessage;
        
        public PreLinkGlbCustomerResponse() {
        }
        
        public PreLinkGlbCustomerResponse(EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, string vMessage) {
            this.ds = ds;
            this.vMessage = vMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreLinkGlbShipTo", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class PreLinkGlbShipToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int glbCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string glbShipToNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        public PreLinkGlbShipToRequest() {
        }
        
        public PreLinkGlbShipToRequest(string glbCompany, int glbCustNum, string glbShipToNum, EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            this.glbCompany = glbCompany;
            this.glbCustNum = glbCustNum;
            this.glbShipToNum = glbShipToNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreLinkGlbShipToResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class PreLinkGlbShipToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string vMessage;
        
        public PreLinkGlbShipToResponse() {
        }
        
        public PreLinkGlbShipToResponse(EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, string vMessage) {
            this.ds = ds;
            this.vMessage = vMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetShipToIntl", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ResetShipToIntlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ResetShipToIntlRequest() {
        }
        
        public ResetShipToIntlRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetShipToIntlResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ResetShipToIntlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ResetShipToIntlResponse() {
        }
        
        public ResetShipToIntlResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUPSQVEnable", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class SetUPSQVEnableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public bool ipQVEnable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public bool ipUpdCustUPS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public bool ipUPDShipToUPS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public SetUPSQVEnableRequest() {
        }
        
        public SetUPSQVEnableRequest(bool ipQVEnable, bool ipUpdCustUPS, bool ipUPDShipToUPS, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ipQVEnable = ipQVEnable;
            this.ipUpdCustUPS = ipUpdCustUPS;
            this.ipUPDShipToUPS = ipUPDShipToUPS;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUPSQVEnableResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class SetUPSQVEnableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public SetUPSQVEnableResponse() {
        }
        
        public SetUPSQVEnableResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShipToETCAfterAddrVal", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ShipToETCAfterAddrValRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public int ipCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string ipShipToNum;
        
        public ShipToETCAfterAddrValRequest() {
        }
        
        public ShipToETCAfterAddrValRequest(EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ds, EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1, int ipCustNum, string ipShipToNum) {
            this.ds = ds;
            this.ds1 = ds1;
            this.ipCustNum = ipCustNum;
            this.ipShipToNum = ipShipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShipToETCAfterAddrValResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ShipToETCAfterAddrValResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1;
        
        public ShipToETCAfterAddrValResponse() {
        }
        
        public ShipToETCAfterAddrValResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1) {
            this.ds1 = ds1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShipToETCValAddr", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ShipToETCValAddrRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public int CustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string ShipToNum;
        
        public ShipToETCValAddrRequest() {
        }
        
        public ShipToETCValAddrRequest(int CustNum, string ShipToNum) {
            this.CustNum = CustNum;
            this.ShipToNum = ShipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShipToETCValAddrResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ShipToETCValAddrResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ShipToETCValAddrResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public bool StatusFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public bool ErrorFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string ErrorMsg;
        
        public ShipToETCValAddrResponse() {
        }
        
        public ShipToETCValAddrResponse(EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ShipToETCValAddrResult, bool StatusFlag, bool ErrorFlag, string ErrorMsg) {
            this.ShipToETCValAddrResult = ShipToETCValAddrResult;
            this.StatusFlag = StatusFlag;
            this.ErrorFlag = ErrorFlag;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShipToTerrSelectChange", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ShipToTerrSelectChangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ShipToTerrSelectChangeRequest() {
        }
        
        public ShipToTerrSelectChangeRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShipToTerrSelectChangeResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class ShipToTerrSelectChangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public ShipToTerrSelectChangeResponse() {
        }
        
        public ShipToTerrSelectChangeResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipGlbCustomer", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class SkipGlbCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int glbCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        public SkipGlbCustomerRequest() {
        }
        
        public SkipGlbCustomerRequest(string glbCompany, int glbCustNum, EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            this.glbCompany = glbCompany;
            this.glbCustNum = glbCustNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipGlbCustomerResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class SkipGlbCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        public SkipGlbCustomerResponse() {
        }
        
        public SkipGlbCustomerResponse(EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UnlinkGlbCustomer", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UnlinkGlbCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int glbCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        public UnlinkGlbCustomerRequest() {
        }
        
        public UnlinkGlbCustomerRequest(string glbCompany, int glbCustNum, EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            this.glbCompany = glbCompany;
            this.glbCustNum = glbCustNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UnlinkGlbCustomerResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UnlinkGlbCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset UnlinkGlbCustomerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds;
        
        public UnlinkGlbCustomerResponse() {
        }
        
        public UnlinkGlbCustomerResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset UnlinkGlbCustomerResult, EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            this.UnlinkGlbCustomerResult = UnlinkGlbCustomerResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCreditTotals", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UpdateCreditTotalsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public UpdateCreditTotalsRequest() {
        }
        
        public UpdateCreditTotalsRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCreditTotalsResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UpdateCreditTotalsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public UpdateCreditTotalsResponse() {
        }
        
        public UpdateCreditTotalsResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateGlobalLimits", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UpdateGlobalLimitsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public UpdateGlobalLimitsRequest() {
        }
        
        public UpdateGlobalLimitsRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateGlobalLimitsResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class UpdateGlobalLimitsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public UpdateGlobalLimitsResponse() {
        }
        
        public UpdateGlobalLimitsResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomer", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustomerRequest() {
        }
        
        public GetNewCustomerRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustomerResponse() {
        }
        
        public GetNewCustomerResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerAttch", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewCustomerAttchRequest() {
        }
        
        public GetNewCustomerAttchRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerAttchResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustomerAttchResponse() {
        }
        
        public GetNewCustomerAttchResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartner", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewPartnerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int partnerNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public int partnerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string partnerID;
        
        public GetNewPartnerRequest() {
        }
        
        public GetNewPartnerRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int partnerNum, int partnerType, string partnerID) {
            this.ds = ds;
            this.partnerNum = partnerNum;
            this.partnerType = partnerType;
            this.partnerID = partnerID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartnerResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewPartnerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewPartnerResponse() {
        }
        
        public GetNewPartnerResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustBillTo", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustBillToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewCustBillToRequest() {
        }
        
        public GetNewCustBillToRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustBillToResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustBillToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustBillToResponse() {
        }
        
        public GetNewCustBillToResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustBank", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustBankRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewCustBankRequest() {
        }
        
        public GetNewCustBankRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustBankResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustBankResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustBankResponse() {
        }
        
        public GetNewCustBankResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustChild", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustChildRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustChildRequest() {
        }
        
        public GetNewCustChildRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustChildResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustChildResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustChildResponse() {
        }
        
        public GetNewCustChildResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustDfltDocType", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustDfltDocTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewCustDfltDocTypeRequest() {
        }
        
        public GetNewCustDfltDocTypeRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustDfltDocTypeResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustDfltDocTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustDfltDocTypeResponse() {
        }
        
        public GetNewCustDfltDocTypeResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustIC", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustICRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string icTypeID;
        
        public GetNewCustICRequest() {
        }
        
        public GetNewCustICRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum, string icTypeID) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
            this.icTypeID = icTypeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustICResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustICResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustICResponse() {
        }
        
        public GetNewCustICResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustLabExpRate", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustLabExpRateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewCustLabExpRateRequest() {
        }
        
        public GetNewCustLabExpRateRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustLabExpRateResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustLabExpRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustLabExpRateResponse() {
        }
        
        public GetNewCustLabExpRateResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustMandate", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustMandateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string mandateType;
        
        public GetNewCustMandateRequest() {
        }
        
        public GetNewCustMandateRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string mandateType) {
            this.ds = ds;
            this.custNum = custNum;
            this.mandateType = mandateType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustMandateResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustMandateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustMandateResponse() {
        }
        
        public GetNewCustMandateResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerDocs", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerDocsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewCustomerDocsRequest() {
        }
        
        public GetNewCustomerDocsRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerDocsResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerDocsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustomerDocsResponse() {
        }
        
        public GetNewCustomerDocsResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustRestriction", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustRestrictionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewCustRestrictionRequest() {
        }
        
        public GetNewCustRestrictionRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustRestrictionResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustRestrictionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustRestrictionResponse() {
        }
        
        public GetNewCustRestrictionResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustUPSEmail", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustUPSEmailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewCustUPSEmailRequest() {
        }
        
        public GetNewCustUPSEmailRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustUPSEmailResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustUPSEmailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustUPSEmailResponse() {
        }
        
        public GetNewCustUPSEmailResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerDiscPriceLst", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerDiscPriceLstRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewCustomerDiscPriceLstRequest() {
        }
        
        public GetNewCustomerDiscPriceLstRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerDiscPriceLstResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerDiscPriceLstResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustomerDiscPriceLstResponse() {
        }
        
        public GetNewCustomerDiscPriceLstResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerFSPriceList", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerFSPriceListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewCustomerFSPriceListRequest() {
        }
        
        public GetNewCustomerFSPriceListRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerFSPriceListResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerFSPriceListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustomerFSPriceListResponse() {
        }
        
        public GetNewCustomerFSPriceListResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewGlbCustCred", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewGlbCustCredRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewGlbCustCredRequest() {
        }
        
        public GetNewGlbCustCredRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewGlbCustCredResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewGlbCustCredResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewGlbCustCredResponse() {
        }
        
        public GetNewGlbCustCredResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipTo", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewShipToRequest() {
        }
        
        public GetNewShipToRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewShipToResponse() {
        }
        
        public GetNewShipToResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToAttch", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewShipToAttchRequest() {
        }
        
        public GetNewShipToAttchRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToAttchResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewShipToAttchResponse() {
        }
        
        public GetNewShipToAttchResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToRestriction", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToRestrictionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewShipToRestrictionRequest() {
        }
        
        public GetNewShipToRestrictionRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToRestrictionResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToRestrictionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewShipToRestrictionResponse() {
        }
        
        public GetNewShipToRestrictionResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToLabExpRate", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToLabExpRateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewShipToLabExpRateRequest() {
        }
        
        public GetNewShipToLabExpRateRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToLabExpRateResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToLabExpRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewShipToLabExpRateResponse() {
        }
        
        public GetNewShipToLabExpRateResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerDocsSH", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerDocsSHRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewCustomerDocsSHRequest() {
        }
        
        public GetNewCustomerDocsSHRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerDocsSHResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerDocsSHResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustomerDocsSHResponse() {
        }
        
        public GetNewCustomerDocsSHResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToDiscPriceLst", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToDiscPriceLstRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewShipToDiscPriceLstRequest() {
        }
        
        public GetNewShipToDiscPriceLstRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToDiscPriceLstResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToDiscPriceLstResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewShipToDiscPriceLstResponse() {
        }
        
        public GetNewShipToDiscPriceLstResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToMFBill", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToMFBillRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewShipToMFBillRequest() {
        }
        
        public GetNewShipToMFBillRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToMFBillResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToMFBillResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewShipToMFBillResponse() {
        }
        
        public GetNewShipToMFBillResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToPriceLst", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToPriceLstRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewShipToPriceLstRequest() {
        }
        
        public GetNewShipToPriceLstRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToPriceLstResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToPriceLstResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewShipToPriceLstResponse() {
        }
        
        public GetNewShipToPriceLstResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToUPSEml", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToUPSEmlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewShipToUPSEmlRequest() {
        }
        
        public GetNewShipToUPSEmlRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipToUPSEmlResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewShipToUPSEmlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewShipToUPSEmlResponse() {
        }
        
        public GetNewShipToUPSEmlResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustMFBill", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustMFBillRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewCustMFBillRequest() {
        }
        
        public GetNewCustMFBillRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustMFBillResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustMFBillResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustMFBillResponse() {
        }
        
        public GetNewCustMFBillResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewMangCust", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewMangCustRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        public GetNewMangCustRequest() {
        }
        
        public GetNewMangCustRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            this.ds = ds;
            this.custNum = custNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewMangCustResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewMangCustResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewMangCustResponse() {
        }
        
        public GetNewMangCustResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerPriceLst", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerPriceLstRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public int custNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string shipToNum;
        
        public GetNewCustomerPriceLstRequest() {
        }
        
        public GetNewCustomerPriceLstRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            this.ds = ds;
            this.custNum = custNum;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCustomerPriceLstResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewCustomerPriceLstResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewCustomerPriceLstResponse() {
        }
        
        public GetNewCustomerPriceLstResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEntityGLC", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewEntityGLCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string relatedToFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string key1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string key2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=4)]
        public string key3;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=5)]
        public string key4;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=6)]
        public string key5;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=7)]
        public string key6;
        
        public GetNewEntityGLCRequest() {
        }
        
        public GetNewEntityGLCRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string relatedToFile, string key1, string key2, string key3, string key4, string key5, string key6) {
            this.ds = ds;
            this.relatedToFile = relatedToFile;
            this.key1 = key1;
            this.key2 = key2;
            this.key3 = key3;
            this.key4 = key4;
            this.key5 = key5;
            this.key6 = key6;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEntityGLCResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewEntityGLCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewEntityGLCResponse() {
        }
        
        public GetNewEntityGLCResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewTaxExempt", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewTaxExemptRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=1)]
        public string relatedToFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=2)]
        public string key1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=3)]
        public string key2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=4)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=5)]
        public string rateCode;
        
        public GetNewTaxExemptRequest() {
        }
        
        public GetNewTaxExemptRequest(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string relatedToFile, string key1, string key2, string taxCode, string rateCode) {
            this.ds = ds;
            this.relatedToFile = relatedToFile;
            this.key1 = key1;
            this.key2 = key2;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewTaxExemptResponse", WrapperNamespace="Erp:BO:Customer", IsWrapped=true)]
    public partial class GetNewTaxExemptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Customer", Order=0)]
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds;
        
        public GetNewTaxExemptResponse() {
        }
        
        public GetNewTaxExemptResponse(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CustomerSvcContractChannel : EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerSvcContractClient : System.ServiceModel.ClientBase<EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract>, EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract {
        
        public CustomerSvcContractClient() {
        }
        
        public CustomerSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetListResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetList(EpicorConsole.Epicor.CustomerSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.CustomerSvc.GetListRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.CustomerSvc.GetListResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.CustomerSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetRowsResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetRows(EpicorConsole.Epicor.CustomerSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetRows(
                    string whereClauseCustomer, 
                    string whereClauseCustomerAttch, 
                    string whereClauseCustomCrdPool, 
                    string whereClausePartner, 
                    string whereClauseCustBillTo, 
                    string whereClauseCustBank, 
                    string whereClauseCustChild, 
                    string whereClauseCustDfltDocType, 
                    string whereClauseCustIC, 
                    string whereClauseCustLabExpRate, 
                    string whereClauseCustMandate, 
                    string whereClauseCustomerDocs, 
                    string whereClauseCustRestriction, 
                    string whereClauseCustUPSEmail, 
                    string whereClauseCustomerDiscPriceLst, 
                    string whereClauseCustomerFSPriceList, 
                    string whereClauseGlbCustCred, 
                    string whereClauseNAMember, 
                    string whereClausePECustWhldHist, 
                    string whereClauseShipTo, 
                    string whereClauseShipToAttch, 
                    string whereClauseShipToRestriction, 
                    string whereClauseShipToLabExpRate, 
                    string whereClauseCustomerDocsSH, 
                    string whereClauseShipToDiscPriceLst, 
                    string whereClauseShipToMFBill, 
                    string whereClauseShipToPriceLst, 
                    string whereClauseShipToUPSEml, 
                    string whereClauseCustMFBill, 
                    string whereClauseMangCust, 
                    string whereClauseShipToSrch, 
                    string whereClauseCustomerPriceLst, 
                    string whereClauseEntityGLC, 
                    string whereClauseTaxExempt, 
                    int pageSize, 
                    int absolutePage, 
                    out bool morePages) {
            EpicorConsole.Epicor.CustomerSvc.GetRowsRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetRowsRequest();
            inValue.whereClauseCustomer = whereClauseCustomer;
            inValue.whereClauseCustomerAttch = whereClauseCustomerAttch;
            inValue.whereClauseCustomCrdPool = whereClauseCustomCrdPool;
            inValue.whereClausePartner = whereClausePartner;
            inValue.whereClauseCustBillTo = whereClauseCustBillTo;
            inValue.whereClauseCustBank = whereClauseCustBank;
            inValue.whereClauseCustChild = whereClauseCustChild;
            inValue.whereClauseCustDfltDocType = whereClauseCustDfltDocType;
            inValue.whereClauseCustIC = whereClauseCustIC;
            inValue.whereClauseCustLabExpRate = whereClauseCustLabExpRate;
            inValue.whereClauseCustMandate = whereClauseCustMandate;
            inValue.whereClauseCustomerDocs = whereClauseCustomerDocs;
            inValue.whereClauseCustRestriction = whereClauseCustRestriction;
            inValue.whereClauseCustUPSEmail = whereClauseCustUPSEmail;
            inValue.whereClauseCustomerDiscPriceLst = whereClauseCustomerDiscPriceLst;
            inValue.whereClauseCustomerFSPriceList = whereClauseCustomerFSPriceList;
            inValue.whereClauseGlbCustCred = whereClauseGlbCustCred;
            inValue.whereClauseNAMember = whereClauseNAMember;
            inValue.whereClausePECustWhldHist = whereClausePECustWhldHist;
            inValue.whereClauseShipTo = whereClauseShipTo;
            inValue.whereClauseShipToAttch = whereClauseShipToAttch;
            inValue.whereClauseShipToRestriction = whereClauseShipToRestriction;
            inValue.whereClauseShipToLabExpRate = whereClauseShipToLabExpRate;
            inValue.whereClauseCustomerDocsSH = whereClauseCustomerDocsSH;
            inValue.whereClauseShipToDiscPriceLst = whereClauseShipToDiscPriceLst;
            inValue.whereClauseShipToMFBill = whereClauseShipToMFBill;
            inValue.whereClauseShipToPriceLst = whereClauseShipToPriceLst;
            inValue.whereClauseShipToUPSEml = whereClauseShipToUPSEml;
            inValue.whereClauseCustMFBill = whereClauseCustMFBill;
            inValue.whereClauseMangCust = whereClauseMangCust;
            inValue.whereClauseShipToSrch = whereClauseShipToSrch;
            inValue.whereClauseCustomerPriceLst = whereClauseCustomerPriceLst;
            inValue.whereClauseEntityGLC = whereClauseEntityGLC;
            inValue.whereClauseTaxExempt = whereClauseTaxExempt;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.CustomerSvc.GetRowsResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.CustomerSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.UpdateResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.Update(EpicorConsole.Epicor.CustomerSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.UpdateRequest inValue = new EpicorConsole.Epicor.CustomerSvc.UpdateRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.UpdateResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.CustomerSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.UpdateExtResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.UpdateExt(EpicorConsole.Epicor.CustomerSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.BOUpdErrorTableset UpdateExt(ref EpicorConsole.Epicor.CustomerSvc.UpdExtCustomerTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            EpicorConsole.Epicor.CustomerSvc.UpdateExtRequest inValue = new EpicorConsole.Epicor.CustomerSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            EpicorConsole.Epicor.CustomerSvc.UpdateExtResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.CustomerSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
        
        public string GetCustomerGlobalFields(int CustNum, bool GlobalLock) {
            return base.Channel.GetCustomerGlobalFields(CustNum, GlobalLock);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerGlobalFieldsAsync(int CustNum, bool GlobalLock) {
            return base.Channel.GetCustomerGlobalFieldsAsync(CustNum, GlobalLock);
        }
        
        public string GetShipToGlobalFields(int CustNum, string ShiptoNum) {
            return base.Channel.GetShipToGlobalFields(CustNum, ShiptoNum);
        }
        
        public System.Threading.Tasks.Task<string> GetShipToGlobalFieldsAsync(int CustNum, string ShiptoNum) {
            return base.Channel.GetShipToGlobalFieldsAsync(CustNum, ShiptoNum);
        }
        
        public string GetCustBillToGlobalFields(int CustNum, int BTCustNum) {
            return base.Channel.GetCustBillToGlobalFields(CustNum, BTCustNum);
        }
        
        public System.Threading.Tasks.Task<string> GetCustBillToGlobalFieldsAsync(int CustNum, int BTCustNum) {
            return base.Channel.GetCustBillToGlobalFieldsAsync(CustNum, BTCustNum);
        }
        
        public void AllowCustomerDetailUpdate() {
            base.Channel.AllowCustomerDetailUpdate();
        }
        
        public System.Threading.Tasks.Task AllowCustomerDetailUpdateAsync() {
            return base.Channel.AllowCustomerDetailUpdateAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChangeCustDfltInvoiceType(EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeRequest request) {
            return base.Channel.ChangeCustDfltInvoiceType(request);
        }
        
        public void ChangeCustDfltInvoiceType(string ipInvoiceType, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeRequest();
            inValue.ipInvoiceType = ipInvoiceType;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChangeCustDfltInvoiceType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeResponse> ChangeCustDfltInvoiceTypeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeCustDfltInvoiceTypeRequest request) {
            return base.Channel.ChangeCustDfltInvoiceTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChangeCustomerChargeCode(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeRequest request) {
            return base.Channel.ChangeCustomerChargeCode(request);
        }
        
        public void ChangeCustomerChargeCode(string ipChargeCode, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeRequest();
            inValue.ipChargeCode = ipChargeCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChangeCustomerChargeCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeResponse> ChangeCustomerChargeCodeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerChargeCodeRequest request) {
            return base.Channel.ChangeCustomerChargeCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChangeCustomerFinCharges(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesRequest request) {
            return base.Channel.ChangeCustomerFinCharges(request);
        }
        
        public void ChangeCustomerFinCharges(bool ipFinCharges, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesRequest();
            inValue.ipFinCharges = ipFinCharges;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChangeCustomerFinCharges(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesResponse> ChangeCustomerFinChargesAsync(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerFinChargesRequest request) {
            return base.Channel.ChangeCustomerFinChargesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChangeCustomerReminderGroup(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupRequest request) {
            return base.Channel.ChangeCustomerReminderGroup(request);
        }
        
        public void ChangeCustomerReminderGroup(string ipReminderCode, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupRequest();
            inValue.ipReminderCode = ipReminderCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChangeCustomerReminderGroup(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupResponse> ChangeCustomerReminderGroupAsync(EpicorConsole.Epicor.CustomerSvc.ChangeCustomerReminderGroupRequest request) {
            return base.Channel.ChangeCustomerReminderGroupAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChangeDeferredRev(EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevRequest request) {
            return base.Channel.ChangeDeferredRev(request);
        }
        
        public void ChangeDeferredRev(bool ipDeferredRev, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevRequest();
            inValue.ipDeferredRev = ipDeferredRev;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChangeDeferredRev(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevResponse> ChangeDeferredRevAsync(EpicorConsole.Epicor.CustomerSvc.ChangeDeferredRevRequest request) {
            return base.Channel.ChangeDeferredRevAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChangeAGIDDocTypeCode(EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeRequest request) {
            return base.Channel.ChangeAGIDDocTypeCode(request);
        }
        
        public void ChangeAGIDDocTypeCode(string agIDDocTypeCode, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeRequest();
            inValue.agIDDocTypeCode = agIDDocTypeCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChangeAGIDDocTypeCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeResponse> ChangeAGIDDocTypeCodeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeAGIDDocTypeCodeRequest request) {
            return base.Channel.ChangeAGIDDocTypeCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChangeListCodeResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChangeListCode(EpicorConsole.Epicor.CustomerSvc.ChangeListCodeRequest request) {
            return base.Channel.ChangeListCode(request);
        }
        
        public void ChangeListCode(string listCode, string tableName, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChangeListCodeRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChangeListCodeRequest();
            inValue.listCode = listCode;
            inValue.tableName = tableName;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChangeListCodeResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChangeListCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeListCodeResponse> ChangeListCodeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeListCodeRequest request) {
            return base.Channel.ChangeListCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChangeMandateReference(EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceRequest request) {
            return base.Channel.ChangeMandateReference(request);
        }
        
        public void ChangeMandateReference(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChangeMandateReference(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceResponse> ChangeMandateReferenceAsync(EpicorConsole.Epicor.CustomerSvc.ChangeMandateReferenceRequest request) {
            return base.Channel.ChangeMandateReferenceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ModifySearchIDs(EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsRequest request) {
            return base.Channel.ModifySearchIDs(request);
        }
        
        public void ModifySearchIDs(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ModifySearchIDs(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsResponse> ModifySearchIDsAsync(EpicorConsole.Epicor.CustomerSvc.ModifySearchIDsRequest request) {
            return base.Channel.ModifySearchIDsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChangeRACodeResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChangeRACode(EpicorConsole.Epicor.CustomerSvc.ChangeRACodeRequest request) {
            return base.Channel.ChangeRACode(request);
        }
        
        public void ChangeRACode(string ipRACode, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChangeRACodeRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChangeRACodeRequest();
            inValue.ipRACode = ipRACode;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChangeRACodeResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChangeRACode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChangeRACodeResponse> ChangeRACodeAsync(EpicorConsole.Epicor.CustomerSvc.ChangeRACodeRequest request) {
            return base.Channel.ChangeRACodeAsync(request);
        }
        
        public string CheckCreditHold(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            return base.Channel.CheckCreditHold(ds);
        }
        
        public System.Threading.Tasks.Task<string> CheckCreditHoldAsync(EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            return base.Channel.CheckCreditHoldAsync(ds);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerListTableset CheckDupCustomer(string vName, string custId, System.Guid vRowid, string vAddress1, string vZip) {
            return base.Channel.CheckDupCustomer(vName, custId, vRowid, vAddress1, vZip);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerListTableset> CheckDupCustomerAsync(string vName, string custId, System.Guid vRowid, string vAddress1, string vZip) {
            return base.Channel.CheckDupCustomerAsync(vName, custId, vRowid, vAddress1, vZip);
        }
        
        public string CheckEFFieldLength(int vCustNum, string vCustType, string vName, string vAddress1, string vAddress2, string vAddress3, string vCity, string vState, string vBTName, string vBTAddress1, string vBTAddress2, string vBTAddress3, string vBTCity, string vBTState) {
            return base.Channel.CheckEFFieldLength(vCustNum, vCustType, vName, vAddress1, vAddress2, vAddress3, vCity, vState, vBTName, vBTAddress1, vBTAddress2, vBTAddress3, vBTCity, vBTState);
        }
        
        public System.Threading.Tasks.Task<string> CheckEFFieldLengthAsync(int vCustNum, string vCustType, string vName, string vAddress1, string vAddress2, string vAddress3, string vCity, string vState, string vBTName, string vBTAddress1, string vBTAddress2, string vBTAddress3, string vBTCity, string vBTState) {
            return base.Channel.CheckEFFieldLengthAsync(vCustNum, vCustType, vName, vAddress1, vAddress2, vAddress3, vCity, vState, vBTName, vBTAddress1, vBTAddress2, vBTAddress3, vBTCity, vBTState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.CheckRUCResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.CheckRUC(EpicorConsole.Epicor.CustomerSvc.CheckRUCRequest request) {
            return base.Channel.CheckRUC(request);
        }
        
        public string CheckRUC(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.CheckRUCRequest inValue = new EpicorConsole.Epicor.CustomerSvc.CheckRUCRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.CheckRUCResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).CheckRUC(inValue);
            ds = retVal.ds;
            return retVal.opMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CheckRUCResponse> CheckRUCAsync(EpicorConsole.Epicor.CustomerSvc.CheckRUCRequest request) {
            return base.Channel.CheckRUCAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.CheckVATFormatResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.CheckVATFormat(EpicorConsole.Epicor.CustomerSvc.CheckVATFormatRequest request) {
            return base.Channel.CheckVATFormat(request);
        }
        
        public bool CheckVATFormat(string tableName, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, out string opMessage) {
            EpicorConsole.Epicor.CustomerSvc.CheckVATFormatRequest inValue = new EpicorConsole.Epicor.CustomerSvc.CheckVATFormatRequest();
            inValue.tableName = tableName;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.CheckVATFormatResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).CheckVATFormat(inValue);
            opMessage = retVal.opMessage;
            ds = retVal.ds;
            return retVal.CheckVATFormatResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CheckVATFormatResponse> CheckVATFormatAsync(EpicorConsole.Epicor.CustomerSvc.CheckVATFormatRequest request) {
            return base.Channel.CheckVATFormatAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChgBTCountryResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChgBTCountry(EpicorConsole.Epicor.CustomerSvc.ChgBTCountryRequest request) {
            return base.Channel.ChgBTCountry(request);
        }
        
        public void ChgBTCountry(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChgBTCountryRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChgBTCountryRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChgBTCountryResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChgBTCountry(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChgBTCountryResponse> ChgBTCountryAsync(EpicorConsole.Epicor.CustomerSvc.ChgBTCountryRequest request) {
            return base.Channel.ChgBTCountryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChgCountryResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChgCountry(EpicorConsole.Epicor.CustomerSvc.ChgCountryRequest request) {
            return base.Channel.ChgCountry(request);
        }
        
        public void ChgCountry(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string tableName) {
            EpicorConsole.Epicor.CustomerSvc.ChgCountryRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChgCountryRequest();
            inValue.ds = ds;
            inValue.tableName = tableName;
            EpicorConsole.Epicor.CustomerSvc.ChgCountryResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChgCountry(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChgCountryResponse> ChgCountryAsync(EpicorConsole.Epicor.CustomerSvc.ChgCountryRequest request) {
            return base.Channel.ChgCountryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChgGlobalCust(EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustRequest request) {
            return base.Channel.ChgGlobalCust(request);
        }
        
        public void ChgGlobalCust(bool ProposedGlobalCust, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustRequest();
            inValue.ProposedGlobalCust = ProposedGlobalCust;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChgGlobalCust(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustResponse> ChgGlobalCustAsync(EpicorConsole.Epicor.CustomerSvc.ChgGlobalCustRequest request) {
            return base.Channel.ChgGlobalCustAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ChgICTraderResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ChgICTrader(EpicorConsole.Epicor.CustomerSvc.ChgICTraderRequest request) {
            return base.Channel.ChgICTrader(request);
        }
        
        public void ChgICTrader(bool ProposedICTrader, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ChgICTraderRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ChgICTraderRequest();
            inValue.ProposedICTrader = ProposedICTrader;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ChgICTraderResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ChgICTrader(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ChgICTraderResponse> ChgICTraderAsync(EpicorConsole.Epicor.CustomerSvc.ChgICTraderRequest request) {
            return base.Channel.ChgICTraderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.DeleteBTAddress(EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressRequest request) {
            return base.Channel.DeleteBTAddress(request);
        }
        
        public void DeleteBTAddress(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressRequest inValue = new EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).DeleteBTAddress(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressResponse> DeleteBTAddressAsync(EpicorConsole.Epicor.CustomerSvc.DeleteBTAddressRequest request) {
            return base.Channel.DeleteBTAddressAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ETCAfterAddrVal(EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValRequest request) {
            return base.Channel.ETCAfterAddrVal(request);
        }
        
        public void ETCAfterAddrVal(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ds1, int CustNum) {
            EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValRequest();
            inValue.ds = ds;
            inValue.ds1 = ds1;
            inValue.CustNum = CustNum;
            EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ETCAfterAddrVal(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValResponse> ETCAfterAddrValAsync(EpicorConsole.Epicor.CustomerSvc.ETCAfterAddrValRequest request) {
            return base.Channel.ETCAfterAddrValAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ETCValidateAddress(EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressRequest request) {
            return base.Channel.ETCValidateAddress(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ETCValidateAddress(int CustNum, out bool StatusFlag, out bool ErrorFlag, out string ErrorMsg) {
            EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressRequest();
            inValue.CustNum = CustNum;
            EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ETCValidateAddress(inValue);
            StatusFlag = retVal.StatusFlag;
            ErrorFlag = retVal.ErrorFlag;
            ErrorMsg = retVal.ErrorMsg;
            return retVal.ETCValidateAddressResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressResponse> ETCValidateAddressAsync(EpicorConsole.Epicor.CustomerSvc.ETCValidateAddressRequest request) {
            return base.Channel.ETCValidateAddressAsync(request);
        }
        
        public string GenerateMandateReference(int custNum) {
            return base.Channel.GenerateMandateReference(custNum);
        }
        
        public System.Threading.Tasks.Task<string> GenerateMandateReferenceAsync(int custNum) {
            return base.Channel.GenerateMandateReferenceAsync(custNum);
        }
        
        public string GetAddrElementList() {
            return base.Channel.GetAddrElementList();
        }
        
        public System.Threading.Tasks.Task<string> GetAddrElementListAsync() {
            return base.Channel.GetAddrElementListAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetAllShipToResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetAllShipTo(EpicorConsole.Epicor.CustomerSvc.GetAllShipToRequest request) {
            return base.Channel.GetAllShipTo(request);
        }
        
        public void GetAllShipTo(int custNum, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.GetAllShipToRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetAllShipToRequest();
            inValue.custNum = custNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.GetAllShipToResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetAllShipTo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetAllShipToResponse> GetAllShipToAsync(EpicorConsole.Epicor.CustomerSvc.GetAllShipToRequest request) {
            return base.Channel.GetAllShipToAsync(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetAltShipTo(string CustID, string ShipToNum, int MasterCustNum, string MasterShipToNum) {
            return base.Channel.GetAltShipTo(CustID, ShipToNum, MasterCustNum, MasterShipToNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetAltShipToAsync(string CustID, string ShipToNum, int MasterCustNum, string MasterShipToNum) {
            return base.Channel.GetAltShipToAsync(CustID, ShipToNum, MasterCustNum, MasterShipToNum);
        }
        
        public string GetBankAccountList() {
            return base.Channel.GetBankAccountList();
        }
        
        public System.Threading.Tasks.Task<string> GetBankAccountListAsync() {
            return base.Channel.GetBankAccountListAsync();
        }
        
        public string GetBillDayList(string billFreq) {
            return base.Channel.GetBillDayList(billFreq);
        }
        
        public System.Threading.Tasks.Task<string> GetBillDayListAsync(string billFreq) {
            return base.Channel.GetBillDayListAsync(billFreq);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.BillToRefsTableset GetBillToRefs(string CustID) {
            return base.Channel.GetBillToRefs(CustID);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.BillToRefsTableset> GetBillToRefsAsync(string CustID) {
            return base.Channel.GetBillToRefsAsync(CustID);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetByCustID(string custID, bool withShipTo) {
            return base.Channel.GetByCustID(custID, withShipTo);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetByCustIDAsync(string custID, bool withShipTo) {
            return base.Channel.GetByCustIDAsync(custID, withShipTo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetCompanyDataForMandate(EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateRequest request) {
            return base.Channel.GetCompanyDataForMandate(request);
        }
        
        public string GetCompanyDataForMandate(out string address1, out string address2, out string address3, out string city, out string zip, out int countrynum) {
            EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateRequest();
            EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetCompanyDataForMandate(inValue);
            address1 = retVal.address1;
            address2 = retVal.address2;
            address3 = retVal.address3;
            city = retVal.city;
            zip = retVal.zip;
            countrynum = retVal.countrynum;
            return retVal.name;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateResponse> GetCompanyDataForMandateAsync(EpicorConsole.Epicor.CustomerSvc.GetCompanyDataForMandateRequest request) {
            return base.Channel.GetCompanyDataForMandateAsync(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetCustBillToForLink(string CustID) {
            return base.Channel.GetCustBillToForLink(CustID);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetCustBillToForLinkAsync(string CustID) {
            return base.Channel.GetCustBillToForLinkAsync(CustID);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetCustomer(string CustID) {
            return base.Channel.GetCustomer(CustID);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetCustomerAsync(string CustID) {
            return base.Channel.GetCustomerAsync(CustID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetCustomerDataForMandate(EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateRequest request) {
            return base.Channel.GetCustomerDataForMandate(request);
        }
        
        public string GetCustomerDataForMandate(int custnum, out string address1, out string address2, out string address3, out string city, out string zip, out int countrynum) {
            EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateRequest();
            inValue.custnum = custnum;
            EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetCustomerDataForMandate(inValue);
            address1 = retVal.address1;
            address2 = retVal.address2;
            address3 = retVal.address3;
            city = retVal.city;
            zip = retVal.zip;
            countrynum = retVal.countrynum;
            return retVal.name;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateResponse> GetCustomerDataForMandateAsync(EpicorConsole.Epicor.CustomerSvc.GetCustomerDataForMandateRequest request) {
            return base.Channel.GetCustomerDataForMandateAsync(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetCustomerForLink(string CustID) {
            return base.Channel.GetCustomerForLink(CustID);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetCustomerForLinkAsync(string CustID) {
            return base.Channel.GetCustomerForLinkAsync(CustID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetCustomerTerritory(EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryRequest request) {
            return base.Channel.GetCustomerTerritory(request);
        }
        
        public void GetCustomerTerritory(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetCustomerTerritory(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryResponse> GetCustomerTerritoryAsync(EpicorConsole.Epicor.CustomerSvc.GetCustomerTerritoryRequest request) {
            return base.Channel.GetCustomerTerritoryAsync(request);
        }
        
        public string GetDisabledFields() {
            return base.Channel.GetDisabledFields();
        }
        
        public System.Threading.Tasks.Task<string> GetDisabledFieldsAsync() {
            return base.Channel.GetDisabledFieldsAsync();
        }
        
        public EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset GetGlbCustomerList(string GlbCustNumList) {
            return base.Channel.GetGlbCustomerList(GlbCustNumList);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset> GetGlbCustomerListAsync(string GlbCustNumList) {
            return base.Channel.GetGlbCustomerListAsync(GlbCustNumList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetListCustomResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetListCustom(EpicorConsole.Epicor.CustomerSvc.GetListCustomRequest request) {
            return base.Channel.GetListCustom(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerListTableset GetListCustom(string whereClause, int pageSize, int absolutePage, string customClause, out bool morePages) {
            EpicorConsole.Epicor.CustomerSvc.GetListCustomRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetListCustomRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            inValue.customClause = customClause;
            EpicorConsole.Epicor.CustomerSvc.GetListCustomResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetListCustom(inValue);
            morePages = retVal.morePages;
            return retVal.GetListCustomResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetListCustomResponse> GetListCustomAsync(EpicorConsole.Epicor.CustomerSvc.GetListCustomRequest request) {
            return base.Channel.GetListCustomAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetListFromSelectedKeys(EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysRequest request) {
            return base.Channel.GetListFromSelectedKeys(request);
        }
        
        public bool GetListFromSelectedKeys(ref EpicorConsole.Epicor.CustomerSvc.CustomerListTableset ds, int pageSize, int absolutePage) {
            EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysRequest();
            inValue.ds = ds;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetListFromSelectedKeys(inValue);
            ds = retVal.ds;
            return retVal.morePages;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysResponse> GetListFromSelectedKeysAsync(EpicorConsole.Epicor.CustomerSvc.GetListFromSelectedKeysRequest request) {
            return base.Channel.GetListFromSelectedKeysAsync(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetNewAltShipTo(string CustID, string ShipToNum) {
            return base.Channel.GetNewAltShipTo(CustID, ShipToNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetNewAltShipToAsync(string CustID, string ShipToNum) {
            return base.Channel.GetNewAltShipToAsync(CustID, ShipToNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetParentCustInfo(EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoRequest request) {
            return base.Channel.GetParentCustInfo(request);
        }
        
        public void GetParentCustInfo(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string parentCustID) {
            EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.parentCustID = parentCustID;
            EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetParentCustInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoResponse> GetParentCustInfoAsync(EpicorConsole.Epicor.CustomerSvc.GetParentCustInfoRequest request) {
            return base.Channel.GetParentCustInfoAsync(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetShipTo(string CustID, string ShipToNum) {
            return base.Channel.GetShipTo(CustID, ShipToNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetShipToAsync(string CustID, string ShipToNum) {
            return base.Channel.GetShipToAsync(CustID, ShipToNum);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetShipToForLink(string CustID, string ShipToNum) {
            return base.Channel.GetShipToForLink(CustID, ShipToNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetShipToForLinkAsync(string CustID, string ShipToNum) {
            return base.Channel.GetShipToForLinkAsync(CustID, ShipToNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetShipToTerritory(EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryRequest request) {
            return base.Channel.GetShipToTerritory(request);
        }
        
        public void GetShipToTerritory(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetShipToTerritory(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryResponse> GetShipToTerritoryAsync(EpicorConsole.Epicor.CustomerSvc.GetShipToTerritoryRequest request) {
            return base.Channel.GetShipToTerritoryAsync(request);
        }
        
        public bool GlbCustomersExist() {
            return base.Channel.GlbCustomersExist();
        }
        
        public System.Threading.Tasks.Task<bool> GlbCustomersExistAsync() {
            return base.Channel.GlbCustomersExistAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.LinkGlbCustBillTo(EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToRequest request) {
            return base.Channel.LinkGlbCustBillTo(request);
        }
        
        public string LinkGlbCustBillTo(string glbCompany, int glbCustNum, ref EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1) {
            EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToRequest inValue = new EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbCustNum = glbCustNum;
            inValue.ds = ds;
            inValue.ds1 = ds1;
            EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).LinkGlbCustBillTo(inValue);
            ds = retVal.ds;
            ds1 = retVal.ds1;
            return retVal.warnMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToResponse> LinkGlbCustBillToAsync(EpicorConsole.Epicor.CustomerSvc.LinkGlbCustBillToRequest request) {
            return base.Channel.LinkGlbCustBillToAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.LinkGlbCustomer(EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerRequest request) {
            return base.Channel.LinkGlbCustomer(request);
        }
        
        public void LinkGlbCustomer(string glbCompany, int glbCustNum, ref EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1) {
            EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerRequest inValue = new EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbCustNum = glbCustNum;
            inValue.ds = ds;
            inValue.ds1 = ds1;
            EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).LinkGlbCustomer(inValue);
            ds = retVal.ds;
            ds1 = retVal.ds1;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerResponse> LinkGlbCustomerAsync(EpicorConsole.Epicor.CustomerSvc.LinkGlbCustomerRequest request) {
            return base.Channel.LinkGlbCustomerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.LinkGlbShipTo(EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToRequest request) {
            return base.Channel.LinkGlbShipTo(request);
        }
        
        public void LinkGlbShipTo(string glbCompany, int glbCustNum, string glbShipToNum, ref EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1) {
            EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToRequest inValue = new EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbCustNum = glbCustNum;
            inValue.glbShipToNum = glbShipToNum;
            inValue.ds = ds;
            inValue.ds1 = ds1;
            EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).LinkGlbShipTo(inValue);
            ds = retVal.ds;
            ds1 = retVal.ds1;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToResponse> LinkGlbShipToAsync(EpicorConsole.Epicor.CustomerSvc.LinkGlbShipToRequest request) {
            return base.Channel.LinkGlbShipToAsync(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset MoveOnePosition(int custNum, string shipToNum, int seqNum, string moveDir) {
            return base.Channel.MoveOnePosition(custNum, shipToNum, seqNum, moveDir);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> MoveOnePositionAsync(int custNum, string shipToNum, int seqNum, string moveDir) {
            return base.Channel.MoveOnePositionAsync(custNum, shipToNum, seqNum, moveDir);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset MoveOnePositionDisc(int custNum, string shipToNum, int seqNum, string moveDir) {
            return base.Channel.MoveOnePositionDisc(custNum, shipToNum, seqNum, moveDir);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> MoveOnePositionDiscAsync(int custNum, string shipToNum, int seqNum, string moveDir) {
            return base.Channel.MoveOnePositionDiscAsync(custNum, shipToNum, seqNum, moveDir);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeAltShipTo(EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToRequest request) {
            return base.Channel.OnChangeAltShipTo(request);
        }
        
        public void OnChangeAltShipTo(string iProposedMasterCustID, string iProposedMasterShipToNum, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToRequest();
            inValue.iProposedMasterCustID = iProposedMasterCustID;
            inValue.iProposedMasterShipToNum = iProposedMasterShipToNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeAltShipTo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToResponse> OnChangeAltShipToAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeAltShipToRequest request) {
            return base.Channel.OnChangeAltShipToAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeCreditCardOrder(EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderRequest request) {
            return base.Channel.OnChangeCreditCardOrder(request);
        }
        
        public void OnChangeCreditCardOrder(bool ipCreditCardOrder, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderRequest();
            inValue.ipCreditCardOrder = ipCreditCardOrder;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeCreditCardOrder(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderResponse> OnChangeCreditCardOrderAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeCreditCardOrderRequest request) {
            return base.Channel.OnChangeCreditCardOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeCustBankPayMethod(EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodRequest request) {
            return base.Channel.OnChangeCustBankPayMethod(request);
        }
        
        public void OnChangeCustBankPayMethod(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int iProposedPMUID, string iProposedBankID) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodRequest();
            inValue.ds = ds;
            inValue.iProposedPMUID = iProposedPMUID;
            inValue.iProposedBankID = iProposedBankID;
            EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeCustBankPayMethod(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodResponse> OnChangeCustBankPayMethodAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeCustBankPayMethodRequest request) {
            return base.Channel.OnChangeCustBankPayMethodAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeCustICPrimary(EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryRequest request) {
            return base.Channel.OnChangeCustICPrimary(request);
        }
        
        public void OnChangeCustICPrimary(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, bool iProposedPrimary, string iProposedICCode) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryRequest();
            inValue.ds = ds;
            inValue.iProposedPrimary = iProposedPrimary;
            inValue.iProposedICCode = iProposedICCode;
            EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeCustICPrimary(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryResponse> OnChangeCustICPrimaryAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeCustICPrimaryRequest request) {
            return base.Channel.OnChangeCustICPrimaryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeCustomerTaxRegion(EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionRequest request) {
            return base.Channel.OnChangeCustomerTaxRegion(request);
        }
        
        public void OnChangeCustomerTaxRegion(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string iProposedTaxRgnCode) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionRequest();
            inValue.ds = ds;
            inValue.iProposedTaxRgnCode = iProposedTaxRgnCode;
            EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeCustomerTaxRegion(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionResponse> OnChangeCustomerTaxRegionAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeCustomerTaxRegionRequest request) {
            return base.Channel.OnChangeCustomerTaxRegionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeofAltBT(EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTRequest request) {
            return base.Channel.OnChangeofAltBT(request);
        }
        
        public void OnChangeofAltBT(string CustID, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTRequest();
            inValue.CustID = CustID;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeofAltBT(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTResponse> OnChangeofAltBTAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeofAltBTRequest request) {
            return base.Channel.OnChangeofAltBTAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeofBankAccount(EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountRequest request) {
            return base.Channel.OnChangeofBankAccount(request);
        }
        
        public string OnChangeofBankAccount(string bankAcctID, out string bankName, out string legalName, out string ibanCode, out string bankIdentifier, out string creditorID) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountRequest();
            inValue.bankAcctID = bankAcctID;
            EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeofBankAccount(inValue);
            bankName = retVal.bankName;
            legalName = retVal.legalName;
            ibanCode = retVal.ibanCode;
            bankIdentifier = retVal.bankIdentifier;
            creditorID = retVal.creditorID;
            return retVal.bankAcctDescription;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountResponse> OnChangeofBankAccountAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeofBankAccountRequest request) {
            return base.Channel.OnChangeofBankAccountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeofCustomerAddr(EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrRequest request) {
            return base.Channel.OnChangeofCustomerAddr(request);
        }
        
        public void OnChangeofCustomerAddr(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int CustNum, string ProposedVal, string AddrField) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrRequest();
            inValue.ds = ds;
            inValue.CustNum = CustNum;
            inValue.ProposedVal = ProposedVal;
            inValue.AddrField = AddrField;
            EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeofCustomerAddr(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrResponse> OnChangeofCustomerAddrAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeofCustomerAddrRequest request) {
            return base.Channel.OnChangeofCustomerAddrAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeofShipToAddr(EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrRequest request) {
            return base.Channel.OnChangeofShipToAddr(request);
        }
        
        public void OnChangeofShipToAddr(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int CustNum, string ShipToNum, string ProposedVal, string AddrField) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrRequest();
            inValue.ds = ds;
            inValue.CustNum = CustNum;
            inValue.ShipToNum = ShipToNum;
            inValue.ProposedVal = ProposedVal;
            inValue.AddrField = AddrField;
            EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeofShipToAddr(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrResponse> OnChangeofShipToAddrAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeofShipToAddrRequest request) {
            return base.Channel.OnChangeofShipToAddrAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeShipToTaxRegion(EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionRequest request) {
            return base.Channel.OnChangeShipToTaxRegion(request);
        }
        
        public void OnChangeShipToTaxRegion(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string iProposedTaxRgnCode, int iCustNum, string iShipToNum) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionRequest();
            inValue.ds = ds;
            inValue.iProposedTaxRgnCode = iProposedTaxRgnCode;
            inValue.iCustNum = iCustNum;
            inValue.iShipToNum = iShipToNum;
            EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeShipToTaxRegion(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionResponse> OnChangeShipToTaxRegionAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeShipToTaxRegionRequest request) {
            return base.Channel.OnChangeShipToTaxRegionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.OnChangeVendorID(EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDRequest request) {
            return base.Channel.OnChangeVendorID(request);
        }
        
        public void OnChangeVendorID(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string iProposedVendorID) {
            EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDRequest inValue = new EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDRequest();
            inValue.ds = ds;
            inValue.iProposedVendorID = iProposedVendorID;
            EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).OnChangeVendorID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDResponse> OnChangeVendorIDAsync(EpicorConsole.Epicor.CustomerSvc.OnChangeVendorIDRequest request) {
            return base.Channel.OnChangeVendorIDAsync(request);
        }
        
        public void OnMandateBankAccountChanging(string bankAccountID) {
            base.Channel.OnMandateBankAccountChanging(bankAccountID);
        }
        
        public System.Threading.Tasks.Task OnMandateBankAccountChangingAsync(string bankAccountID) {
            return base.Channel.OnMandateBankAccountChangingAsync(bankAccountID);
        }
        
        public void OnMandateDateChanging(System.Nullable<System.DateTime> dDateFrom, System.Nullable<System.DateTime> dDateTo) {
            base.Channel.OnMandateDateChanging(dDateFrom, dDateTo);
        }
        
        public System.Threading.Tasks.Task OnMandateDateChangingAsync(System.Nullable<System.DateTime> dDateFrom, System.Nullable<System.DateTime> dDateTo) {
            return base.Channel.OnMandateDateChangingAsync(dDateFrom, dDateTo);
        }
        
        public void OnMandateSignedDateChanging(System.Nullable<System.DateTime> signredDate) {
            base.Channel.OnMandateSignedDateChanging(signredDate);
        }
        
        public System.Threading.Tasks.Task OnMandateSignedDateChangingAsync(System.Nullable<System.DateTime> signredDate) {
            return base.Channel.OnMandateSignedDateChangingAsync(signredDate);
        }
        
        public void OnMandateStatusChanging(int custNum, string mandateReference, string paymentType, string mandateStatus) {
            base.Channel.OnMandateStatusChanging(custNum, mandateReference, paymentType, mandateStatus);
        }
        
        public System.Threading.Tasks.Task OnMandateStatusChangingAsync(int custNum, string mandateReference, string paymentType, string mandateStatus) {
            return base.Channel.OnMandateStatusChangingAsync(custNum, mandateReference, paymentType, mandateStatus);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.PreLinkGlbCustBillTo(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToRequest request) {
            return base.Channel.PreLinkGlbCustBillTo(request);
        }
        
        public string PreLinkGlbCustBillTo(string glbCompany, int glbCustNum, ref EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToRequest inValue = new EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbCustNum = glbCustNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).PreLinkGlbCustBillTo(inValue);
            ds = retVal.ds;
            return retVal.vMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToResponse> PreLinkGlbCustBillToAsync(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustBillToRequest request) {
            return base.Channel.PreLinkGlbCustBillToAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.PreLinkGlbCustomer(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerRequest request) {
            return base.Channel.PreLinkGlbCustomer(request);
        }
        
        public string PreLinkGlbCustomer(string glbCompany, int glbCustNum, ref EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerRequest inValue = new EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbCustNum = glbCustNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).PreLinkGlbCustomer(inValue);
            ds = retVal.ds;
            return retVal.vMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerResponse> PreLinkGlbCustomerAsync(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbCustomerRequest request) {
            return base.Channel.PreLinkGlbCustomerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.PreLinkGlbShipTo(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToRequest request) {
            return base.Channel.PreLinkGlbShipTo(request);
        }
        
        public string PreLinkGlbShipTo(string glbCompany, int glbCustNum, string glbShipToNum, ref EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToRequest inValue = new EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbCustNum = glbCustNum;
            inValue.glbShipToNum = glbShipToNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).PreLinkGlbShipTo(inValue);
            ds = retVal.ds;
            return retVal.vMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToResponse> PreLinkGlbShipToAsync(EpicorConsole.Epicor.CustomerSvc.PreLinkGlbShipToRequest request) {
            return base.Channel.PreLinkGlbShipToAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ResetShipToIntl(EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlRequest request) {
            return base.Channel.ResetShipToIntl(request);
        }
        
        public void ResetShipToIntl(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ResetShipToIntl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlResponse> ResetShipToIntlAsync(EpicorConsole.Epicor.CustomerSvc.ResetShipToIntlRequest request) {
            return base.Channel.ResetShipToIntlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.SetUPSQVEnable(EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableRequest request) {
            return base.Channel.SetUPSQVEnable(request);
        }
        
        public void SetUPSQVEnable(bool ipQVEnable, bool ipUpdCustUPS, bool ipUPDShipToUPS, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableRequest inValue = new EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableRequest();
            inValue.ipQVEnable = ipQVEnable;
            inValue.ipUpdCustUPS = ipUpdCustUPS;
            inValue.ipUPDShipToUPS = ipUPDShipToUPS;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).SetUPSQVEnable(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableResponse> SetUPSQVEnableAsync(EpicorConsole.Epicor.CustomerSvc.SetUPSQVEnableRequest request) {
            return base.Channel.SetUPSQVEnableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ShipToETCAfterAddrVal(EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValRequest request) {
            return base.Channel.ShipToETCAfterAddrVal(request);
        }
        
        public void ShipToETCAfterAddrVal(EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ds, ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds1, int ipCustNum, string ipShipToNum) {
            EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValRequest();
            inValue.ds = ds;
            inValue.ds1 = ds1;
            inValue.ipCustNum = ipCustNum;
            inValue.ipShipToNum = ipShipToNum;
            EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ShipToETCAfterAddrVal(inValue);
            ds1 = retVal.ds1;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValResponse> ShipToETCAfterAddrValAsync(EpicorConsole.Epicor.CustomerSvc.ShipToETCAfterAddrValRequest request) {
            return base.Channel.ShipToETCAfterAddrValAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ShipToETCValAddr(EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrRequest request) {
            return base.Channel.ShipToETCValAddr(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.ETCAddrValidationTableset ShipToETCValAddr(int CustNum, string ShipToNum, out bool StatusFlag, out bool ErrorFlag, out string ErrorMsg) {
            EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrRequest();
            inValue.CustNum = CustNum;
            inValue.ShipToNum = ShipToNum;
            EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ShipToETCValAddr(inValue);
            StatusFlag = retVal.StatusFlag;
            ErrorFlag = retVal.ErrorFlag;
            ErrorMsg = retVal.ErrorMsg;
            return retVal.ShipToETCValAddrResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrResponse> ShipToETCValAddrAsync(EpicorConsole.Epicor.CustomerSvc.ShipToETCValAddrRequest request) {
            return base.Channel.ShipToETCValAddrAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.ShipToTerrSelectChange(EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeRequest request) {
            return base.Channel.ShipToTerrSelectChange(request);
        }
        
        public void ShipToTerrSelectChange(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeRequest inValue = new EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).ShipToTerrSelectChange(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeResponse> ShipToTerrSelectChangeAsync(EpicorConsole.Epicor.CustomerSvc.ShipToTerrSelectChangeRequest request) {
            return base.Channel.ShipToTerrSelectChangeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.SkipGlbCustomer(EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerRequest request) {
            return base.Channel.SkipGlbCustomer(request);
        }
        
        public void SkipGlbCustomer(string glbCompany, int glbCustNum, ref EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerRequest inValue = new EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbCustNum = glbCustNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).SkipGlbCustomer(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerResponse> SkipGlbCustomerAsync(EpicorConsole.Epicor.CustomerSvc.SkipGlbCustomerRequest request) {
            return base.Channel.SkipGlbCustomerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.UnlinkGlbCustomer(EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerRequest request) {
            return base.Channel.UnlinkGlbCustomer(request);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset UnlinkGlbCustomer(string glbCompany, int glbCustNum, ref EpicorConsole.Epicor.CustomerSvc.GlbCustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerRequest inValue = new EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbCustNum = glbCustNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).UnlinkGlbCustomer(inValue);
            ds = retVal.ds;
            return retVal.UnlinkGlbCustomerResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerResponse> UnlinkGlbCustomerAsync(EpicorConsole.Epicor.CustomerSvc.UnlinkGlbCustomerRequest request) {
            return base.Channel.UnlinkGlbCustomerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.UpdateCreditTotals(EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsRequest request) {
            return base.Channel.UpdateCreditTotals(request);
        }
        
        public void UpdateCreditTotals(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsRequest inValue = new EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).UpdateCreditTotals(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsResponse> UpdateCreditTotalsAsync(EpicorConsole.Epicor.CustomerSvc.UpdateCreditTotalsRequest request) {
            return base.Channel.UpdateCreditTotalsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.UpdateGlobalLimits(EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsRequest request) {
            return base.Channel.UpdateGlobalLimits(request);
        }
        
        public void UpdateGlobalLimits(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsRequest inValue = new EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).UpdateGlobalLimits(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsResponse> UpdateGlobalLimitsAsync(EpicorConsole.Epicor.CustomerSvc.UpdateGlobalLimitsRequest request) {
            return base.Channel.UpdateGlobalLimitsAsync(request);
        }
        
        public void ValidateCountry(int ipProposedCountry) {
            base.Channel.ValidateCountry(ipProposedCountry);
        }
        
        public System.Threading.Tasks.Task ValidateCountryAsync(int ipProposedCountry) {
            return base.Channel.ValidateCountryAsync(ipProposedCountry);
        }
        
        public bool ValidateNAParentCreditPrc(decimal parentCreditPrc) {
            return base.Channel.ValidateNAParentCreditPrc(parentCreditPrc);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateNAParentCreditPrcAsync(decimal parentCreditPrc) {
            return base.Channel.ValidateNAParentCreditPrcAsync(parentCreditPrc);
        }
        
        public bool ValidateNACreditSharedPrc(decimal creditSharedPrc) {
            return base.Channel.ValidateNACreditSharedPrc(creditSharedPrc);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateNACreditSharedPrcAsync(decimal creditSharedPrc) {
            return base.Channel.ValidateNACreditSharedPrcAsync(creditSharedPrc);
        }
        
        public bool ValidateGlbNAParentCreditPrc(decimal parentCreditPrc) {
            return base.Channel.ValidateGlbNAParentCreditPrc(parentCreditPrc);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateGlbNAParentCreditPrcAsync(decimal parentCreditPrc) {
            return base.Channel.ValidateGlbNAParentCreditPrcAsync(parentCreditPrc);
        }
        
        public bool ValidateGlbNACreditSharedPrc(decimal creditSharedPrc) {
            return base.Channel.ValidateGlbNACreditSharedPrc(creditSharedPrc);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateGlbNACreditSharedPrcAsync(decimal creditSharedPrc) {
            return base.Channel.ValidateGlbNACreditSharedPrcAsync(creditSharedPrc);
        }
        
        public void ValidatePayBTFlag(string ipPayBTFlag, bool ipValCust, bool ipValShipTo, int ipCustNum, string ipShipTo) {
            base.Channel.ValidatePayBTFlag(ipPayBTFlag, ipValCust, ipValShipTo, ipCustNum, ipShipTo);
        }
        
        public System.Threading.Tasks.Task ValidatePayBTFlagAsync(string ipPayBTFlag, bool ipValCust, bool ipValShipTo, int ipCustNum, string ipShipTo) {
            return base.Channel.ValidatePayBTFlagAsync(ipPayBTFlag, ipValCust, ipValShipTo, ipCustNum, ipShipTo);
        }
        
        public string GetTerms(string _terms) {
            return base.Channel.GetTerms(_terms);
        }
        
        public System.Threading.Tasks.Task<string> GetTermsAsync(string _terms) {
            return base.Channel.GetTermsAsync(_terms);
        }
        
        public bool IsLocal(int ipCountryNum, int ipBTCountryNum) {
            return base.Channel.IsLocal(ipCountryNum, ipBTCountryNum);
        }
        
        public System.Threading.Tasks.Task<bool> IsLocalAsync(int ipCountryNum, int ipBTCountryNum) {
            return base.Channel.IsLocalAsync(ipCountryNum, ipBTCountryNum);
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        public bool StorePartner(int ipPartnerNum, string ipSearchID) {
            return base.Channel.StorePartner(ipPartnerNum, ipSearchID);
        }
        
        public System.Threading.Tasks.Task<bool> StorePartnerAsync(int ipPartnerNum, string ipSearchID) {
            return base.Channel.StorePartnerAsync(ipPartnerNum, ipSearchID);
        }
        
        public string GetCustomerCountryISOCode(int custNum) {
            return base.Channel.GetCustomerCountryISOCode(custNum);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerCountryISOCodeAsync(int custNum) {
            return base.Channel.GetCustomerCountryISOCodeAsync(custNum);
        }
        
        public bool GetExternalCRMIntegrationIsEnabled() {
            return base.Channel.GetExternalCRMIntegrationIsEnabled();
        }
        
        public System.Threading.Tasks.Task<bool> GetExternalCRMIntegrationIsEnabledAsync() {
            return base.Channel.GetExternalCRMIntegrationIsEnabledAsync();
        }
        
        public bool CheckCustCntWithExternalCRMEnabled(int custNum) {
            return base.Channel.CheckCustCntWithExternalCRMEnabled(custNum);
        }
        
        public System.Threading.Tasks.Task<bool> CheckCustCntWithExternalCRMEnabledAsync(int custNum) {
            return base.Channel.CheckCustCntWithExternalCRMEnabledAsync(custNum);
        }
        
        public void SetOrdersCreditOverride(int btcustNum) {
            base.Channel.SetOrdersCreditOverride(btcustNum);
        }
        
        public System.Threading.Tasks.Task SetOrdersCreditOverrideAsync(int btcustNum) {
            return base.Channel.SetOrdersCreditOverrideAsync(btcustNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustomer(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerRequest request) {
            return base.Channel.GetNewCustomer(request);
        }
        
        public void GetNewCustomer(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustomerRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustomer(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerResponse> GetNewCustomerAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerRequest request) {
            return base.Channel.GetNewCustomerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustomerAttch(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchRequest request) {
            return base.Channel.GetNewCustomerAttch(request);
        }
        
        public void GetNewCustomerAttch(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustomerAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchResponse> GetNewCustomerAttchAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerAttchRequest request) {
            return base.Channel.GetNewCustomerAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewPartnerResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewPartner(EpicorConsole.Epicor.CustomerSvc.GetNewPartnerRequest request) {
            return base.Channel.GetNewPartner(request);
        }
        
        public void GetNewPartner(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int partnerNum, int partnerType, string partnerID) {
            EpicorConsole.Epicor.CustomerSvc.GetNewPartnerRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewPartnerRequest();
            inValue.ds = ds;
            inValue.partnerNum = partnerNum;
            inValue.partnerType = partnerType;
            inValue.partnerID = partnerID;
            EpicorConsole.Epicor.CustomerSvc.GetNewPartnerResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewPartner(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewPartnerResponse> GetNewPartnerAsync(EpicorConsole.Epicor.CustomerSvc.GetNewPartnerRequest request) {
            return base.Channel.GetNewPartnerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustBillTo(EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToRequest request) {
            return base.Channel.GetNewCustBillTo(request);
        }
        
        public void GetNewCustBillTo(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustBillTo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToResponse> GetNewCustBillToAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustBillToRequest request) {
            return base.Channel.GetNewCustBillToAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustBankResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustBank(EpicorConsole.Epicor.CustomerSvc.GetNewCustBankRequest request) {
            return base.Channel.GetNewCustBank(request);
        }
        
        public void GetNewCustBank(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustBankRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustBankRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustBankResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustBank(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustBankResponse> GetNewCustBankAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustBankRequest request) {
            return base.Channel.GetNewCustBankAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustChildResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustChild(EpicorConsole.Epicor.CustomerSvc.GetNewCustChildRequest request) {
            return base.Channel.GetNewCustChild(request);
        }
        
        public void GetNewCustChild(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustChildRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustChildRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustChildResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustChild(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustChildResponse> GetNewCustChildAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustChildRequest request) {
            return base.Channel.GetNewCustChildAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustDfltDocType(EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeRequest request) {
            return base.Channel.GetNewCustDfltDocType(request);
        }
        
        public void GetNewCustDfltDocType(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustDfltDocType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeResponse> GetNewCustDfltDocTypeAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustDfltDocTypeRequest request) {
            return base.Channel.GetNewCustDfltDocTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustICResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustIC(EpicorConsole.Epicor.CustomerSvc.GetNewCustICRequest request) {
            return base.Channel.GetNewCustIC(request);
        }
        
        public void GetNewCustIC(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum, string icTypeID) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustICRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustICRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            inValue.icTypeID = icTypeID;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustICResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustIC(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustICResponse> GetNewCustICAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustICRequest request) {
            return base.Channel.GetNewCustICAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustLabExpRate(EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateRequest request) {
            return base.Channel.GetNewCustLabExpRate(request);
        }
        
        public void GetNewCustLabExpRate(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustLabExpRate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateResponse> GetNewCustLabExpRateAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustLabExpRateRequest request) {
            return base.Channel.GetNewCustLabExpRateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustMandate(EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateRequest request) {
            return base.Channel.GetNewCustMandate(request);
        }
        
        public void GetNewCustMandate(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string mandateType) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.mandateType = mandateType;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustMandate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateResponse> GetNewCustMandateAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustMandateRequest request) {
            return base.Channel.GetNewCustMandateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustomerDocs(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsRequest request) {
            return base.Channel.GetNewCustomerDocs(request);
        }
        
        public void GetNewCustomerDocs(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustomerDocs(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsResponse> GetNewCustomerDocsAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsRequest request) {
            return base.Channel.GetNewCustomerDocsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustRestriction(EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionRequest request) {
            return base.Channel.GetNewCustRestriction(request);
        }
        
        public void GetNewCustRestriction(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustRestriction(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionResponse> GetNewCustRestrictionAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustRestrictionRequest request) {
            return base.Channel.GetNewCustRestrictionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustUPSEmail(EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailRequest request) {
            return base.Channel.GetNewCustUPSEmail(request);
        }
        
        public void GetNewCustUPSEmail(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustUPSEmail(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailResponse> GetNewCustUPSEmailAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustUPSEmailRequest request) {
            return base.Channel.GetNewCustUPSEmailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustomerDiscPriceLst(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstRequest request) {
            return base.Channel.GetNewCustomerDiscPriceLst(request);
        }
        
        public void GetNewCustomerDiscPriceLst(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustomerDiscPriceLst(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstResponse> GetNewCustomerDiscPriceLstAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDiscPriceLstRequest request) {
            return base.Channel.GetNewCustomerDiscPriceLstAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustomerFSPriceList(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListRequest request) {
            return base.Channel.GetNewCustomerFSPriceList(request);
        }
        
        public void GetNewCustomerFSPriceList(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustomerFSPriceList(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListResponse> GetNewCustomerFSPriceListAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerFSPriceListRequest request) {
            return base.Channel.GetNewCustomerFSPriceListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewGlbCustCred(EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredRequest request) {
            return base.Channel.GetNewGlbCustCred(request);
        }
        
        public void GetNewGlbCustCred(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewGlbCustCred(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredResponse> GetNewGlbCustCredAsync(EpicorConsole.Epicor.CustomerSvc.GetNewGlbCustCredRequest request) {
            return base.Channel.GetNewGlbCustCredAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewShipTo(EpicorConsole.Epicor.CustomerSvc.GetNewShipToRequest request) {
            return base.Channel.GetNewShipTo(request);
        }
        
        public void GetNewShipTo(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewShipToRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewShipTo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToResponse> GetNewShipToAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToRequest request) {
            return base.Channel.GetNewShipToAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewShipToAttch(EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchRequest request) {
            return base.Channel.GetNewShipToAttch(request);
        }
        
        public void GetNewShipToAttch(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewShipToAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchResponse> GetNewShipToAttchAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToAttchRequest request) {
            return base.Channel.GetNewShipToAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewShipToRestriction(EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionRequest request) {
            return base.Channel.GetNewShipToRestriction(request);
        }
        
        public void GetNewShipToRestriction(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewShipToRestriction(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionResponse> GetNewShipToRestrictionAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToRestrictionRequest request) {
            return base.Channel.GetNewShipToRestrictionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewShipToLabExpRate(EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateRequest request) {
            return base.Channel.GetNewShipToLabExpRate(request);
        }
        
        public void GetNewShipToLabExpRate(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewShipToLabExpRate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateResponse> GetNewShipToLabExpRateAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToLabExpRateRequest request) {
            return base.Channel.GetNewShipToLabExpRateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustomerDocsSH(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHRequest request) {
            return base.Channel.GetNewCustomerDocsSH(request);
        }
        
        public void GetNewCustomerDocsSH(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustomerDocsSH(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHResponse> GetNewCustomerDocsSHAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerDocsSHRequest request) {
            return base.Channel.GetNewCustomerDocsSHAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewShipToDiscPriceLst(EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstRequest request) {
            return base.Channel.GetNewShipToDiscPriceLst(request);
        }
        
        public void GetNewShipToDiscPriceLst(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewShipToDiscPriceLst(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstResponse> GetNewShipToDiscPriceLstAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToDiscPriceLstRequest request) {
            return base.Channel.GetNewShipToDiscPriceLstAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewShipToMFBill(EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillRequest request) {
            return base.Channel.GetNewShipToMFBill(request);
        }
        
        public void GetNewShipToMFBill(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewShipToMFBill(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillResponse> GetNewShipToMFBillAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToMFBillRequest request) {
            return base.Channel.GetNewShipToMFBillAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewShipToPriceLst(EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstRequest request) {
            return base.Channel.GetNewShipToPriceLst(request);
        }
        
        public void GetNewShipToPriceLst(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewShipToPriceLst(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstResponse> GetNewShipToPriceLstAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToPriceLstRequest request) {
            return base.Channel.GetNewShipToPriceLstAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewShipToUPSEml(EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlRequest request) {
            return base.Channel.GetNewShipToUPSEml(request);
        }
        
        public void GetNewShipToUPSEml(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewShipToUPSEml(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlResponse> GetNewShipToUPSEmlAsync(EpicorConsole.Epicor.CustomerSvc.GetNewShipToUPSEmlRequest request) {
            return base.Channel.GetNewShipToUPSEmlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustMFBill(EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillRequest request) {
            return base.Channel.GetNewCustMFBill(request);
        }
        
        public void GetNewCustMFBill(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustMFBill(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillResponse> GetNewCustMFBillAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustMFBillRequest request) {
            return base.Channel.GetNewCustMFBillAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewMangCustResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewMangCust(EpicorConsole.Epicor.CustomerSvc.GetNewMangCustRequest request) {
            return base.Channel.GetNewMangCust(request);
        }
        
        public void GetNewMangCust(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewMangCustRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewMangCustRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewMangCustResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewMangCust(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewMangCustResponse> GetNewMangCustAsync(EpicorConsole.Epicor.CustomerSvc.GetNewMangCustRequest request) {
            return base.Channel.GetNewMangCustAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewCustomerPriceLst(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstRequest request) {
            return base.Channel.GetNewCustomerPriceLst(request);
        }
        
        public void GetNewCustomerPriceLst(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, int custNum, string shipToNum) {
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstRequest();
            inValue.ds = ds;
            inValue.custNum = custNum;
            inValue.shipToNum = shipToNum;
            EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewCustomerPriceLst(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstResponse> GetNewCustomerPriceLstAsync(EpicorConsole.Epicor.CustomerSvc.GetNewCustomerPriceLstRequest request) {
            return base.Channel.GetNewCustomerPriceLstAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewEntityGLC(EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCRequest request) {
            return base.Channel.GetNewEntityGLC(request);
        }
        
        public void GetNewEntityGLC(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string relatedToFile, string key1, string key2, string key3, string key4, string key5, string key6) {
            EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCRequest();
            inValue.ds = ds;
            inValue.relatedToFile = relatedToFile;
            inValue.key1 = key1;
            inValue.key2 = key2;
            inValue.key3 = key3;
            inValue.key4 = key4;
            inValue.key5 = key5;
            inValue.key6 = key6;
            EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewEntityGLC(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCResponse> GetNewEntityGLCAsync(EpicorConsole.Epicor.CustomerSvc.GetNewEntityGLCRequest request) {
            return base.Channel.GetNewEntityGLCAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptResponse EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract.GetNewTaxExempt(EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptRequest request) {
            return base.Channel.GetNewTaxExempt(request);
        }
        
        public void GetNewTaxExempt(ref EpicorConsole.Epicor.CustomerSvc.CustomerTableset ds, string relatedToFile, string key1, string key2, string taxCode, string rateCode) {
            EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptRequest inValue = new EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptRequest();
            inValue.ds = ds;
            inValue.relatedToFile = relatedToFile;
            inValue.key1 = key1;
            inValue.key2 = key2;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptResponse retVal = ((EpicorConsole.Epicor.CustomerSvc.CustomerSvcContract)(this)).GetNewTaxExempt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptResponse> GetNewTaxExemptAsync(EpicorConsole.Epicor.CustomerSvc.GetNewTaxExemptRequest request) {
            return base.Channel.GetNewTaxExemptAsync(request);
        }
        
        public void DeleteByID(int custNum) {
            base.Channel.DeleteByID(custNum);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(int custNum) {
            return base.Channel.DeleteByIDAsync(custNum);
        }
        
        public EpicorConsole.Epicor.CustomerSvc.CustomerTableset GetByID(int custNum) {
            return base.Channel.GetByID(custNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.CustomerSvc.CustomerTableset> GetByIDAsync(int custNum) {
            return base.Channel.GetByIDAsync(custNum);
        }
    }
}
