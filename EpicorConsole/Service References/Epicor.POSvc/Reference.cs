//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicorConsole.Epicor.POSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.UpdExtPOTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PartSubsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POReceiptsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeaderListTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : EpicorConsole.Epicor.POSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POTableset : EpicorConsole.Epicor.POSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PODetailTable PODetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PODetailAttchTable PODetailAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PODetailInspTable PODetailInspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeadMiscTable POHeadMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeadMiscTaxTable POHeadMiscTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderTable POHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderAttchTable POHeaderAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderTaxTable POHeaderTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POMiscTable POMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POMiscTaxTable POMiscTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelTable PORelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelAttchTable PORelAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelTGLCTable PORelTGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelTaxTable PORelTaxField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PODetailTable PODetail {
            get {
                return this.PODetailField;
            }
            set {
                if ((object.ReferenceEquals(this.PODetailField, value) != true)) {
                    this.PODetailField = value;
                    this.RaisePropertyChanged("PODetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PODetailAttchTable PODetailAttch {
            get {
                return this.PODetailAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PODetailAttchField, value) != true)) {
                    this.PODetailAttchField = value;
                    this.RaisePropertyChanged("PODetailAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PODetailInspTable PODetailInsp {
            get {
                return this.PODetailInspField;
            }
            set {
                if ((object.ReferenceEquals(this.PODetailInspField, value) != true)) {
                    this.PODetailInspField = value;
                    this.RaisePropertyChanged("PODetailInsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeadMiscTable POHeadMisc {
            get {
                return this.POHeadMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeadMiscField, value) != true)) {
                    this.POHeadMiscField = value;
                    this.RaisePropertyChanged("POHeadMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeadMiscTaxTable POHeadMiscTax {
            get {
                return this.POHeadMiscTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeadMiscTaxField, value) != true)) {
                    this.POHeadMiscTaxField = value;
                    this.RaisePropertyChanged("POHeadMiscTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderTable POHeader {
            get {
                return this.POHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeaderField, value) != true)) {
                    this.POHeaderField = value;
                    this.RaisePropertyChanged("POHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderAttchTable POHeaderAttch {
            get {
                return this.POHeaderAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeaderAttchField, value) != true)) {
                    this.POHeaderAttchField = value;
                    this.RaisePropertyChanged("POHeaderAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderTaxTable POHeaderTax {
            get {
                return this.POHeaderTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeaderTaxField, value) != true)) {
                    this.POHeaderTaxField = value;
                    this.RaisePropertyChanged("POHeaderTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POMiscTable POMisc {
            get {
                return this.POMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.POMiscField, value) != true)) {
                    this.POMiscField = value;
                    this.RaisePropertyChanged("POMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POMiscTaxTable POMiscTax {
            get {
                return this.POMiscTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.POMiscTaxField, value) != true)) {
                    this.POMiscTaxField = value;
                    this.RaisePropertyChanged("POMiscTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelTable PORel {
            get {
                return this.PORelField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelField, value) != true)) {
                    this.PORelField = value;
                    this.RaisePropertyChanged("PORel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelAttchTable PORelAttch {
            get {
                return this.PORelAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelAttchField, value) != true)) {
                    this.PORelAttchField = value;
                    this.RaisePropertyChanged("PORelAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelTGLCTable PORelTGLC {
            get {
                return this.PORelTGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelTGLCField, value) != true)) {
                    this.PORelTGLCField = value;
                    this.RaisePropertyChanged("PORelTGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelTaxTable PORelTax {
            get {
                return this.PORelTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelTaxField, value) != true)) {
                    this.PORelTaxField = value;
                    this.RaisePropertyChanged("PORelTax");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtPOTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtPOTableset : EpicorConsole.Epicor.POSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PODetailTable PODetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PODetailAttchTable PODetailAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PODetailInspTable PODetailInspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeadMiscTable POHeadMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeadMiscTaxTable POHeadMiscTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderTable POHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderAttchTable POHeaderAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderTaxTable POHeaderTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POMiscTable POMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POMiscTaxTable POMiscTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelTable PORelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelAttchTable PORelAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelTGLCTable PORelTGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelTaxTable PORelTaxField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PODetailTable PODetail {
            get {
                return this.PODetailField;
            }
            set {
                if ((object.ReferenceEquals(this.PODetailField, value) != true)) {
                    this.PODetailField = value;
                    this.RaisePropertyChanged("PODetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PODetailAttchTable PODetailAttch {
            get {
                return this.PODetailAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PODetailAttchField, value) != true)) {
                    this.PODetailAttchField = value;
                    this.RaisePropertyChanged("PODetailAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PODetailInspTable PODetailInsp {
            get {
                return this.PODetailInspField;
            }
            set {
                if ((object.ReferenceEquals(this.PODetailInspField, value) != true)) {
                    this.PODetailInspField = value;
                    this.RaisePropertyChanged("PODetailInsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeadMiscTable POHeadMisc {
            get {
                return this.POHeadMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeadMiscField, value) != true)) {
                    this.POHeadMiscField = value;
                    this.RaisePropertyChanged("POHeadMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeadMiscTaxTable POHeadMiscTax {
            get {
                return this.POHeadMiscTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeadMiscTaxField, value) != true)) {
                    this.POHeadMiscTaxField = value;
                    this.RaisePropertyChanged("POHeadMiscTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderTable POHeader {
            get {
                return this.POHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeaderField, value) != true)) {
                    this.POHeaderField = value;
                    this.RaisePropertyChanged("POHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderAttchTable POHeaderAttch {
            get {
                return this.POHeaderAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeaderAttchField, value) != true)) {
                    this.POHeaderAttchField = value;
                    this.RaisePropertyChanged("POHeaderAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderTaxTable POHeaderTax {
            get {
                return this.POHeaderTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeaderTaxField, value) != true)) {
                    this.POHeaderTaxField = value;
                    this.RaisePropertyChanged("POHeaderTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POMiscTable POMisc {
            get {
                return this.POMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.POMiscField, value) != true)) {
                    this.POMiscField = value;
                    this.RaisePropertyChanged("POMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POMiscTaxTable POMiscTax {
            get {
                return this.POMiscTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.POMiscTaxField, value) != true)) {
                    this.POMiscTaxField = value;
                    this.RaisePropertyChanged("POMiscTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelTable PORel {
            get {
                return this.PORelField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelField, value) != true)) {
                    this.PORelField = value;
                    this.RaisePropertyChanged("PORel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelAttchTable PORelAttch {
            get {
                return this.PORelAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelAttchField, value) != true)) {
                    this.PORelAttchField = value;
                    this.RaisePropertyChanged("PORelAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelTGLCTable PORelTGLC {
            get {
                return this.PORelTGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelTGLCField, value) != true)) {
                    this.PORelTGLCField = value;
                    this.RaisePropertyChanged("PORelTGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelTaxTable PORelTax {
            get {
                return this.PORelTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelTaxField, value) != true)) {
                    this.PORelTaxField = value;
                    this.RaisePropertyChanged("PORelTax");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartSubsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartSubsTableset : EpicorConsole.Epicor.POSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PartSubsTable PartSubsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PartSubsTable PartSubs {
            get {
                return this.PartSubsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSubsField, value) != true)) {
                    this.PartSubsField = value;
                    this.RaisePropertyChanged("PartSubs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POReceiptsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POReceiptsTableset : EpicorConsole.Epicor.POSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POReceiptsTable POReceiptsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POReceiptsTable POReceipts {
            get {
                return this.POReceiptsField;
            }
            set {
                if ((object.ReferenceEquals(this.POReceiptsField, value) != true)) {
                    this.POReceiptsField = value;
                    this.RaisePropertyChanged("POReceipts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeaderListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POHeaderListTableset : EpicorConsole.Epicor.POSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderListTable POHeaderListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderListTable POHeaderList {
            get {
                return this.POHeaderListField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeaderListField, value) != true)) {
                    this.POHeaderListField = value;
                    this.RaisePropertyChanged("POHeaderList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POHeaderListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POHeaderListRow")]
    [System.SerializableAttribute()]
    public class POHeaderListTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.POHeaderListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.BOUpdErrorRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeaderListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PODetailRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PODetailAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PODetailInspRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeadMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeadMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeaderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeaderAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeaderTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PORelRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PORelAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PORelTGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PORelTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PartSubsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POReceiptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.BOUpdErrorRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeaderListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PODetailRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PODetailAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PODetailInspRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeadMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeadMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeaderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeaderAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POHeaderTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PORelRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PORelAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PORelTGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PORelTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.PartSubsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.POReceiptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.POSvc.BOUpdErrorRow))]
    public partial class IceRow : EpicorConsole.Epicor.POSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeaderListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POHeaderListRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApprovedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyerIDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalStatus {
            get {
                return this.ApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalStatusField, value) != true)) {
                    this.ApprovalStatusField = value;
                    this.RaisePropertyChanged("ApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Approve {
            get {
                return this.ApproveField;
            }
            set {
                if ((this.ApproveField.Equals(value) != true)) {
                    this.ApproveField = value;
                    this.RaisePropertyChanged("Approve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedByField, value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApprovedDate {
            get {
                return this.ApprovedDateField;
            }
            set {
                if ((this.ApprovedDateField.Equals(value) != true)) {
                    this.ApprovedDateField = value;
                    this.RaisePropertyChanged("ApprovedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyerID {
            get {
                return this.BuyerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyerIDField, value) != true)) {
                    this.BuyerIDField = value;
                    this.RaisePropertyChanged("BuyerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyerIDName {
            get {
                return this.BuyerIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyerIDNameField, value) != true)) {
                    this.BuyerIDNameField = value;
                    this.RaisePropertyChanged("BuyerIDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOB {
            get {
                return this.FOBField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBField, value) != true)) {
                    this.FOBField = value;
                    this.RaisePropertyChanged("FOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOBDescription {
            get {
                return this.FOBDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBDescriptionField, value) != true)) {
                    this.FOBDescriptionField = value;
                    this.RaisePropertyChanged("FOBDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenOrder {
            get {
                return this.OpenOrderField;
            }
            set {
                if ((this.OpenOrderField.Equals(value) != true)) {
                    this.OpenOrderField = value;
                    this.RaisePropertyChanged("OpenOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHeld {
            get {
                return this.OrderHeldField;
            }
            set {
                if ((this.OrderHeldField.Equals(value) != true)) {
                    this.OrderHeldField = value;
                    this.RaisePropertyChanged("OrderHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POType {
            get {
                return this.POTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.POTypeField, value) != true)) {
                    this.POTypeField = value;
                    this.RaisePropertyChanged("POType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToPrint {
            get {
                return this.ReadyToPrintField;
            }
            set {
                if ((this.ReadyToPrintField.Equals(value) != true)) {
                    this.ReadyToPrintField = value;
                    this.RaisePropertyChanged("ReadyToPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress1 {
            get {
                return this.ShipAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddress1Field, value) != true)) {
                    this.ShipAddress1Field = value;
                    this.RaisePropertyChanged("ShipAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress2 {
            get {
                return this.ShipAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddress2Field, value) != true)) {
                    this.ShipAddress2Field = value;
                    this.RaisePropertyChanged("ShipAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress3 {
            get {
                return this.ShipAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddress3Field, value) != true)) {
                    this.ShipAddress3Field = value;
                    this.RaisePropertyChanged("ShipAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipCity {
            get {
                return this.ShipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCityField, value) != true)) {
                    this.ShipCityField = value;
                    this.RaisePropertyChanged("ShipCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipCountry {
            get {
                return this.ShipCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCountryField, value) != true)) {
                    this.ShipCountryField = value;
                    this.RaisePropertyChanged("ShipCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipName {
            get {
                return this.ShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipNameField, value) != true)) {
                    this.ShipNameField = value;
                    this.RaisePropertyChanged("ShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipState {
            get {
                return this.ShipStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStateField, value) != true)) {
                    this.ShipStateField = value;
                    this.RaisePropertyChanged("ShipState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToConName {
            get {
                return this.ShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToConNameField, value) != true)) {
                    this.ShipToConNameField = value;
                    this.RaisePropertyChanged("ShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCode {
            get {
                return this.TermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeField, value) != true)) {
                    this.TermsCodeField = value;
                    this.RaisePropertyChanged("TermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCodeDescription {
            get {
                return this.TermsCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeDescriptionField, value) != true)) {
                    this.TermsCodeDescriptionField = value;
                    this.RaisePropertyChanged("TermsCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorVendorID {
            get {
                return this.VendorVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorVendorIDField, value) != true)) {
                    this.VendorVendorIDField = value;
                    this.RaisePropertyChanged("VendorVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidOrder {
            get {
                return this.VoidOrderField;
            }
            set {
                if ((this.VoidOrderField.Equals(value) != true)) {
                    this.VoidOrderField = value;
                    this.RaisePropertyChanged("VoidOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PODetailRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PODetailRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowPOReconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AskRefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTOOrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTOOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BaseQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseRevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CPFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalcAssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcDocInTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcDocTotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CalcDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcInTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalcJobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalcJobSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalcJobSeqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalcMangCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalcMangCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalcMangCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalcMfgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalcMfgPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcOurQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcPurchasingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalcPurchasingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcTotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalcTranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcVendQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PODetailRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ConfigBaseUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ConfigUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfiguredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConfirmDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmViaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidatedPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContractActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContractDocUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContractOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContractQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContractUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConvOverRideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostPerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostPerCodeContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateChgReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DelPoSugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisablePartRevBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispAcctDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispExpAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInAdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInContractUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMiscCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPricingUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableRcvInspectionReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpChartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpDivisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpGLDeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromPOSugChgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlPurchPurchDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InContractUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KeepRowsManualFactorTmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkToContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedSOConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MaintainPricingUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MfgNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgNumMfgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgPartOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MultiRelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoTaxRecalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonMasterPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrigCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideConversionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverridePriceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PCLinkRemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool POHeaderApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONUMCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PONUMInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PONUMOrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONUMShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONUMShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PORelOneOpenReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumChgReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartQtyBearingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrcChgReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriceBrkBTNSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricingQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricingUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QtyChgReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QtyOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RcvInspectionReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumChgReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RowsManualFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1CalcInTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1CalcTotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ContractUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InAdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InContractUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1MiscCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2CalcInTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2CalcTotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ContractUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InAdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InContractUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2MiscCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3CalcInTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3CalcTotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ContractUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InAdvancePayBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InContractUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3MiscCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SelCurrPricingUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SetCheveronField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipToSupplierDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmartStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmartStringProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubAvailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateRelRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateRelTaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendPurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPartOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal XOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int calcLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal calcMinOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string calcPartPUMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AdvancePayBal {
            get {
                return this.AdvancePayBalField;
            }
            set {
                if ((this.AdvancePayBalField.Equals(value) != true)) {
                    this.AdvancePayBalField = value;
                    this.RaisePropertyChanged("AdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPORecon {
            get {
                return this.AllowPOReconField;
            }
            set {
                if ((this.AllowPOReconField.Equals(value) != true)) {
                    this.AllowPOReconField = value;
                    this.RaisePropertyChanged("AllowPORecon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AskRefCode {
            get {
                return this.AskRefCodeField;
            }
            set {
                if ((this.AskRefCodeField.Equals(value) != true)) {
                    this.AskRefCodeField = value;
                    this.RaisePropertyChanged("AskRefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTOOrderLine {
            get {
                return this.BTOOrderLineField;
            }
            set {
                if ((this.BTOOrderLineField.Equals(value) != true)) {
                    this.BTOOrderLineField = value;
                    this.RaisePropertyChanged("BTOOrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTOOrderNum {
            get {
                return this.BTOOrderNumField;
            }
            set {
                if ((this.BTOOrderNumField.Equals(value) != true)) {
                    this.BTOOrderNumField = value;
                    this.RaisePropertyChanged("BTOOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasePartNum {
            get {
                return this.BasePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BasePartNumField, value) != true)) {
                    this.BasePartNumField = value;
                    this.RaisePropertyChanged("BasePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseQty {
            get {
                return this.BaseQtyField;
            }
            set {
                if ((this.BaseQtyField.Equals(value) != true)) {
                    this.BaseQtyField = value;
                    this.RaisePropertyChanged("BaseQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseRevisionNum {
            get {
                return this.BaseRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseRevisionNumField, value) != true)) {
                    this.BaseRevisionNumField = value;
                    this.RaisePropertyChanged("BaseRevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseUOM {
            get {
                return this.BaseUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUOMField, value) != true)) {
                    this.BaseUOMField = value;
                    this.RaisePropertyChanged("BaseUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CPFactor {
            get {
                return this.CPFactorField;
            }
            set {
                if ((this.CPFactorField.Equals(value) != true)) {
                    this.CPFactorField = value;
                    this.RaisePropertyChanged("CPFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalcAssemblySeq {
            get {
                return this.CalcAssemblySeqField;
            }
            set {
                if ((this.CalcAssemblySeqField.Equals(value) != true)) {
                    this.CalcAssemblySeqField = value;
                    this.RaisePropertyChanged("CalcAssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcDocInTaxAmt {
            get {
                return this.CalcDocInTaxAmtField;
            }
            set {
                if ((this.CalcDocInTaxAmtField.Equals(value) != true)) {
                    this.CalcDocInTaxAmtField = value;
                    this.RaisePropertyChanged("CalcDocInTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcDocTotalCost {
            get {
                return this.CalcDocTotalCostField;
            }
            set {
                if ((this.CalcDocTotalCostField.Equals(value) != true)) {
                    this.CalcDocTotalCostField = value;
                    this.RaisePropertyChanged("CalcDocTotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CalcDueDate {
            get {
                return this.CalcDueDateField;
            }
            set {
                if ((this.CalcDueDateField.Equals(value) != true)) {
                    this.CalcDueDateField = value;
                    this.RaisePropertyChanged("CalcDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcInTaxAmt {
            get {
                return this.CalcInTaxAmtField;
            }
            set {
                if ((this.CalcInTaxAmtField.Equals(value) != true)) {
                    this.CalcInTaxAmtField = value;
                    this.RaisePropertyChanged("CalcInTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcJobNum {
            get {
                return this.CalcJobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcJobNumField, value) != true)) {
                    this.CalcJobNumField = value;
                    this.RaisePropertyChanged("CalcJobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalcJobSeq {
            get {
                return this.CalcJobSeqField;
            }
            set {
                if ((this.CalcJobSeqField.Equals(value) != true)) {
                    this.CalcJobSeqField = value;
                    this.RaisePropertyChanged("CalcJobSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcJobSeqType {
            get {
                return this.CalcJobSeqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcJobSeqTypeField, value) != true)) {
                    this.CalcJobSeqTypeField = value;
                    this.RaisePropertyChanged("CalcJobSeqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcMangCustID {
            get {
                return this.CalcMangCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcMangCustIDField, value) != true)) {
                    this.CalcMangCustIDField = value;
                    this.RaisePropertyChanged("CalcMangCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcMangCustName {
            get {
                return this.CalcMangCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcMangCustNameField, value) != true)) {
                    this.CalcMangCustNameField = value;
                    this.RaisePropertyChanged("CalcMangCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalcMangCustNum {
            get {
                return this.CalcMangCustNumField;
            }
            set {
                if ((this.CalcMangCustNumField.Equals(value) != true)) {
                    this.CalcMangCustNumField = value;
                    this.RaisePropertyChanged("CalcMangCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcMfg {
            get {
                return this.CalcMfgField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcMfgField, value) != true)) {
                    this.CalcMfgField = value;
                    this.RaisePropertyChanged("CalcMfg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcMfgPart {
            get {
                return this.CalcMfgPartField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcMfgPartField, value) != true)) {
                    this.CalcMfgPartField = value;
                    this.RaisePropertyChanged("CalcMfgPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcOurQty {
            get {
                return this.CalcOurQtyField;
            }
            set {
                if ((this.CalcOurQtyField.Equals(value) != true)) {
                    this.CalcOurQtyField = value;
                    this.RaisePropertyChanged("CalcOurQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcPurchasingFactor {
            get {
                return this.CalcPurchasingFactorField;
            }
            set {
                if ((this.CalcPurchasingFactorField.Equals(value) != true)) {
                    this.CalcPurchasingFactorField = value;
                    this.RaisePropertyChanged("CalcPurchasingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcPurchasingFactorDirection {
            get {
                return this.CalcPurchasingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcPurchasingFactorDirectionField, value) != true)) {
                    this.CalcPurchasingFactorDirectionField = value;
                    this.RaisePropertyChanged("CalcPurchasingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcTotalCost {
            get {
                return this.CalcTotalCostField;
            }
            set {
                if ((this.CalcTotalCostField.Equals(value) != true)) {
                    this.CalcTotalCostField = value;
                    this.RaisePropertyChanged("CalcTotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalcTranType {
            get {
                return this.CalcTranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcTranTypeField, value) != true)) {
                    this.CalcTranTypeField = value;
                    this.RaisePropertyChanged("CalcTranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcVendQty {
            get {
                return this.CalcVendQtyField;
            }
            set {
                if ((this.CalcVendQtyField.Equals(value) != true)) {
                    this.CalcVendQtyField = value;
                    this.RaisePropertyChanged("CalcVendQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassDescription {
            get {
                return this.ClassDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassDescriptionField, value) != true)) {
                    this.ClassDescriptionField = value;
                    this.RaisePropertyChanged("ClassDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassIDField, value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PODetailRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ConfigBaseUnitCost {
            get {
                return this.ConfigBaseUnitCostField;
            }
            set {
                if ((this.ConfigBaseUnitCostField.Equals(value) != true)) {
                    this.ConfigBaseUnitCostField = value;
                    this.RaisePropertyChanged("ConfigBaseUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ConfigUnitCost {
            get {
                return this.ConfigUnitCostField;
            }
            set {
                if ((this.ConfigUnitCostField.Equals(value) != true)) {
                    this.ConfigUnitCostField = value;
                    this.RaisePropertyChanged("ConfigUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Configured {
            get {
                return this.ConfiguredField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfiguredField, value) != true)) {
                    this.ConfiguredField = value;
                    this.RaisePropertyChanged("Configured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConfirmDate {
            get {
                return this.ConfirmDateField;
            }
            set {
                if ((this.ConfirmDateField.Equals(value) != true)) {
                    this.ConfirmDateField = value;
                    this.RaisePropertyChanged("ConfirmDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmVia {
            get {
                return this.ConfirmViaField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmViaField, value) != true)) {
                    this.ConfirmViaField = value;
                    this.RaisePropertyChanged("ConfirmVia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Confirmed {
            get {
                return this.ConfirmedField;
            }
            set {
                if ((this.ConfirmedField.Equals(value) != true)) {
                    this.ConfirmedField = value;
                    this.RaisePropertyChanged("Confirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidatedPO {
            get {
                return this.ConsolidatedPOField;
            }
            set {
                if ((this.ConsolidatedPOField.Equals(value) != true)) {
                    this.ConsolidatedPOField = value;
                    this.RaisePropertyChanged("ConsolidatedPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContractActive {
            get {
                return this.ContractActiveField;
            }
            set {
                if ((this.ContractActiveField.Equals(value) != true)) {
                    this.ContractActiveField = value;
                    this.RaisePropertyChanged("ContractActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContractDocUnitCost {
            get {
                return this.ContractDocUnitCostField;
            }
            set {
                if ((this.ContractDocUnitCostField.Equals(value) != true)) {
                    this.ContractDocUnitCostField = value;
                    this.RaisePropertyChanged("ContractDocUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractIDField, value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContractOrder {
            get {
                return this.ContractOrderField;
            }
            set {
                if ((this.ContractOrderField.Equals(value) != true)) {
                    this.ContractOrderField = value;
                    this.RaisePropertyChanged("ContractOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContractQty {
            get {
                return this.ContractQtyField;
            }
            set {
                if ((this.ContractQtyField.Equals(value) != true)) {
                    this.ContractQtyField = value;
                    this.RaisePropertyChanged("ContractQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractQtyUOM {
            get {
                return this.ContractQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractQtyUOMField, value) != true)) {
                    this.ContractQtyUOMField = value;
                    this.RaisePropertyChanged("ContractQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContractUnitCost {
            get {
                return this.ContractUnitCostField;
            }
            set {
                if ((this.ContractUnitCostField.Equals(value) != true)) {
                    this.ContractUnitCostField = value;
                    this.RaisePropertyChanged("ContractUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConvOverRide {
            get {
                return this.ConvOverRideField;
            }
            set {
                if ((this.ConvOverRideField.Equals(value) != true)) {
                    this.ConvOverRideField = value;
                    this.RaisePropertyChanged("ConvOverRide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostPerCode {
            get {
                return this.CostPerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CostPerCodeField, value) != true)) {
                    this.CostPerCodeField = value;
                    this.RaisePropertyChanged("CostPerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostPerCodeContract {
            get {
                return this.CostPerCodeContractField;
            }
            set {
                if ((object.ReferenceEquals(this.CostPerCodeContractField, value) != true)) {
                    this.CostPerCodeContractField = value;
                    this.RaisePropertyChanged("CostPerCodeContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateChgReq {
            get {
                return this.DateChgReqField;
            }
            set {
                if ((this.DateChgReqField.Equals(value) != true)) {
                    this.DateChgReqField = value;
                    this.RaisePropertyChanged("DateChgReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DelPoSug {
            get {
                return this.DelPoSugField;
            }
            set {
                if ((this.DelPoSugField.Equals(value) != true)) {
                    this.DelPoSugField = value;
                    this.RaisePropertyChanged("DelPoSug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisablePartRevBtn {
            get {
                return this.DisablePartRevBtnField;
            }
            set {
                if ((this.DisablePartRevBtnField.Equals(value) != true)) {
                    this.DisablePartRevBtnField = value;
                    this.RaisePropertyChanged("DisablePartRevBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispAcctDescription {
            get {
                return this.DispAcctDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DispAcctDescriptionField, value) != true)) {
                    this.DispAcctDescriptionField = value;
                    this.RaisePropertyChanged("DispAcctDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispExpAccount {
            get {
                return this.DispExpAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DispExpAccountField, value) != true)) {
                    this.DispExpAccountField = value;
                    this.RaisePropertyChanged("DispExpAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAdvancePayBal {
            get {
                return this.DocAdvancePayBalField;
            }
            set {
                if ((this.DocAdvancePayBalField.Equals(value) != true)) {
                    this.DocAdvancePayBalField = value;
                    this.RaisePropertyChanged("DocAdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocExtCost {
            get {
                return this.DocExtCostField;
            }
            set {
                if ((this.DocExtCostField.Equals(value) != true)) {
                    this.DocExtCostField = value;
                    this.RaisePropertyChanged("DocExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInAdvancePayBal {
            get {
                return this.DocInAdvancePayBalField;
            }
            set {
                if ((this.DocInAdvancePayBalField.Equals(value) != true)) {
                    this.DocInAdvancePayBalField = value;
                    this.RaisePropertyChanged("DocInAdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInContractUnitCost {
            get {
                return this.DocInContractUnitCostField;
            }
            set {
                if ((this.DocInContractUnitCostField.Equals(value) != true)) {
                    this.DocInContractUnitCostField = value;
                    this.RaisePropertyChanged("DocInContractUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInUnitCost {
            get {
                return this.DocInUnitCostField;
            }
            set {
                if ((this.DocInUnitCostField.Equals(value) != true)) {
                    this.DocInUnitCostField = value;
                    this.RaisePropertyChanged("DocInUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMiscCost {
            get {
                return this.DocMiscCostField;
            }
            set {
                if ((this.DocMiscCostField.Equals(value) != true)) {
                    this.DocMiscCostField = value;
                    this.RaisePropertyChanged("DocMiscCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPricingUnitPrice {
            get {
                return this.DocPricingUnitPriceField;
            }
            set {
                if ((this.DocPricingUnitPriceField.Equals(value) != true)) {
                    this.DocPricingUnitPriceField = value;
                    this.RaisePropertyChanged("DocPricingUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrUnitCost {
            get {
                return this.DocScrUnitCostField;
            }
            set {
                if ((this.DocScrUnitCostField.Equals(value) != true)) {
                    this.DocScrUnitCostField = value;
                    this.RaisePropertyChanged("DocScrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnitCost {
            get {
                return this.DocUnitCostField;
            }
            set {
                if ((this.DocUnitCostField.Equals(value) != true)) {
                    this.DocUnitCostField = value;
                    this.RaisePropertyChanged("DocUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableRcvInspectionReq {
            get {
                return this.EnableRcvInspectionReqField;
            }
            set {
                if ((this.EnableRcvInspectionReqField.Equals(value) != true)) {
                    this.EnableRcvInspectionReqField = value;
                    this.RaisePropertyChanged("EnableRcvInspectionReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpChart {
            get {
                return this.ExpChartField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpChartField, value) != true)) {
                    this.ExpChartField = value;
                    this.RaisePropertyChanged("ExpChart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpDivision {
            get {
                return this.ExpDivisionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpDivisionField, value) != true)) {
                    this.ExpDivisionField = value;
                    this.RaisePropertyChanged("ExpDivision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpGLDept {
            get {
                return this.ExpGLDeptField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpGLDeptField, value) != true)) {
                    this.ExpGLDeptField = value;
                    this.RaisePropertyChanged("ExpGLDept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtCost {
            get {
                return this.ExtCostField;
            }
            set {
                if ((this.ExtCostField.Equals(value) != true)) {
                    this.ExtCostField = value;
                    this.RaisePropertyChanged("ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromPOSugChg {
            get {
                return this.FromPOSugChgField;
            }
            set {
                if ((this.FromPOSugChgField.Equals(value) != true)) {
                    this.FromPOSugChgField = value;
                    this.RaisePropertyChanged("FromPOSugChg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlPurchPurchDesc {
            get {
                return this.GlPurchPurchDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GlPurchPurchDescField, value) != true)) {
                    this.GlPurchPurchDescField = value;
                    this.RaisePropertyChanged("GlPurchPurchDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupSeq {
            get {
                return this.GroupSeqField;
            }
            set {
                if ((this.GroupSeqField.Equals(value) != true)) {
                    this.GroupSeqField = value;
                    this.RaisePropertyChanged("GroupSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAdvancePayBal {
            get {
                return this.InAdvancePayBalField;
            }
            set {
                if ((this.InAdvancePayBalField.Equals(value) != true)) {
                    this.InAdvancePayBalField = value;
                    this.RaisePropertyChanged("InAdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InContractUnitCost {
            get {
                return this.InContractUnitCostField;
            }
            set {
                if ((this.InContractUnitCostField.Equals(value) != true)) {
                    this.InContractUnitCostField = value;
                    this.RaisePropertyChanged("InContractUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InUnitCost {
            get {
                return this.InUnitCostField;
            }
            set {
                if ((this.InUnitCostField.Equals(value) != true)) {
                    this.InUnitCostField = value;
                    this.RaisePropertyChanged("InUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KeepRowsManualFactorTmp {
            get {
                return this.KeepRowsManualFactorTmpField;
            }
            set {
                if ((this.KeepRowsManualFactorTmpField.Equals(value) != true)) {
                    this.KeepRowsManualFactorTmpField = value;
                    this.RaisePropertyChanged("KeepRowsManualFactorTmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkToContract {
            get {
                return this.LinkToContractField;
            }
            set {
                if ((this.LinkToContractField.Equals(value) != true)) {
                    this.LinkToContractField = value;
                    this.RaisePropertyChanged("LinkToContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkedSOConfig {
            get {
                return this.LinkedSOConfigField;
            }
            set {
                if ((this.LinkedSOConfigField.Equals(value) != true)) {
                    this.LinkedSOConfigField = value;
                    this.RaisePropertyChanged("LinkedSOConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MaintainPricingUnits {
            get {
                return this.MaintainPricingUnitsField;
            }
            set {
                if ((this.MaintainPricingUnitsField.Equals(value) != true)) {
                    this.MaintainPricingUnitsField = value;
                    this.RaisePropertyChanged("MaintainPricingUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MfgNum {
            get {
                return this.MfgNumField;
            }
            set {
                if ((this.MfgNumField.Equals(value) != true)) {
                    this.MfgNumField = value;
                    this.RaisePropertyChanged("MfgNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgNumMfgID {
            get {
                return this.MfgNumMfgIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgNumMfgIDField, value) != true)) {
                    this.MfgNumMfgIDField = value;
                    this.RaisePropertyChanged("MfgNumMfgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgNumName {
            get {
                return this.MfgNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgNumNameField, value) != true)) {
                    this.MfgNumNameField = value;
                    this.RaisePropertyChanged("MfgNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgPartNum {
            get {
                return this.MfgPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgPartNumField, value) != true)) {
                    this.MfgPartNumField = value;
                    this.RaisePropertyChanged("MfgPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgPartOpts {
            get {
                return this.MfgPartOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgPartOptsField, value) != true)) {
                    this.MfgPartOptsField = value;
                    this.RaisePropertyChanged("MfgPartOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscCost {
            get {
                return this.MiscCostField;
            }
            set {
                if ((this.MiscCostField.Equals(value) != true)) {
                    this.MiscCostField = value;
                    this.RaisePropertyChanged("MiscCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MultiRel {
            get {
                return this.MultiRelField;
            }
            set {
                if ((this.MultiRelField.Equals(value) != true)) {
                    this.MultiRelField = value;
                    this.RaisePropertyChanged("MultiRel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoTaxRecalc {
            get {
                return this.NoTaxRecalcField;
            }
            set {
                if ((this.NoTaxRecalcField.Equals(value) != true)) {
                    this.NoTaxRecalcField = value;
                    this.RaisePropertyChanged("NoTaxRecalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonMasterPart {
            get {
                return this.NonMasterPartField;
            }
            set {
                if ((this.NonMasterPartField.Equals(value) != true)) {
                    this.NonMasterPartField = value;
                    this.RaisePropertyChanged("NonMasterPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpCode {
            get {
                return this.OpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OpCodeField, value) != true)) {
                    this.OpCodeField = value;
                    this.RaisePropertyChanged("OpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenLine {
            get {
                return this.OpenLineField;
            }
            set {
                if ((this.OpenLineField.Equals(value) != true)) {
                    this.OpenLineField = value;
                    this.RaisePropertyChanged("OpenLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrigComment {
            get {
                return this.OrigCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrigCommentField, value) != true)) {
                    this.OrigCommentField = value;
                    this.RaisePropertyChanged("OrigComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideConversion {
            get {
                return this.OverrideConversionField;
            }
            set {
                if ((this.OverrideConversionField.Equals(value) != true)) {
                    this.OverrideConversionField = value;
                    this.RaisePropertyChanged("OverrideConversion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverridePriceList {
            get {
                return this.OverridePriceListField;
            }
            set {
                if ((this.OverridePriceListField.Equals(value) != true)) {
                    this.OverridePriceListField = value;
                    this.RaisePropertyChanged("OverridePriceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PCLinkRemoved {
            get {
                return this.PCLinkRemovedField;
            }
            set {
                if ((this.PCLinkRemovedField.Equals(value) != true)) {
                    this.PCLinkRemovedField = value;
                    this.RaisePropertyChanged("PCLinkRemoved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool POHeaderApprove {
            get {
                return this.POHeaderApproveField;
            }
            set {
                if ((this.POHeaderApproveField.Equals(value) != true)) {
                    this.POHeaderApproveField = value;
                    this.RaisePropertyChanged("POHeaderApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONUM {
            get {
                return this.PONUMField;
            }
            set {
                if ((this.PONUMField.Equals(value) != true)) {
                    this.PONUMField = value;
                    this.RaisePropertyChanged("PONUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONUMCurrencyCode {
            get {
                return this.PONUMCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PONUMCurrencyCodeField, value) != true)) {
                    this.PONUMCurrencyCodeField = value;
                    this.RaisePropertyChanged("PONUMCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PONUMInPrice {
            get {
                return this.PONUMInPriceField;
            }
            set {
                if ((this.PONUMInPriceField.Equals(value) != true)) {
                    this.PONUMInPriceField = value;
                    this.RaisePropertyChanged("PONUMInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PONUMOrderDate {
            get {
                return this.PONUMOrderDateField;
            }
            set {
                if ((this.PONUMOrderDateField.Equals(value) != true)) {
                    this.PONUMOrderDateField = value;
                    this.RaisePropertyChanged("PONUMOrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONUMShipName {
            get {
                return this.PONUMShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONUMShipNameField, value) != true)) {
                    this.PONUMShipNameField = value;
                    this.RaisePropertyChanged("PONUMShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONUMShipToConName {
            get {
                return this.PONUMShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONUMShipToConNameField, value) != true)) {
                    this.PONUMShipToConNameField = value;
                    this.RaisePropertyChanged("PONUMShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PORelOneOpenRelease {
            get {
                return this.PORelOneOpenReleaseField;
            }
            set {
                if ((this.PORelOneOpenReleaseField.Equals(value) != true)) {
                    this.PORelOneOpenReleaseField = value;
                    this.RaisePropertyChanged("PORelOneOpenRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumChgReq {
            get {
                return this.PartNumChgReqField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumChgReqField, value) != true)) {
                    this.PartNumChgReqField = value;
                    this.RaisePropertyChanged("PartNumChgReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartQtyBearing {
            get {
                return this.PartQtyBearingField;
            }
            set {
                if ((this.PartQtyBearingField.Equals(value) != true)) {
                    this.PartQtyBearingField = value;
                    this.RaisePropertyChanged("PartQtyBearing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Per {
            get {
                return this.PerField;
            }
            set {
                if ((object.ReferenceEquals(this.PerField, value) != true)) {
                    this.PerField = value;
                    this.RaisePropertyChanged("Per");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PrcChgReq {
            get {
                return this.PrcChgReqField;
            }
            set {
                if ((this.PrcChgReqField.Equals(value) != true)) {
                    this.PrcChgReqField = value;
                    this.RaisePropertyChanged("PrcChgReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriceBrkBTNSensitive {
            get {
                return this.PriceBrkBTNSensitiveField;
            }
            set {
                if ((this.PriceBrkBTNSensitiveField.Equals(value) != true)) {
                    this.PriceBrkBTNSensitiveField = value;
                    this.RaisePropertyChanged("PriceBrkBTNSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricingQty {
            get {
                return this.PricingQtyField;
            }
            set {
                if ((this.PricingQtyField.Equals(value) != true)) {
                    this.PricingQtyField = value;
                    this.RaisePropertyChanged("PricingQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricingUnitPrice {
            get {
                return this.PricingUnitPriceField;
            }
            set {
                if ((this.PricingUnitPriceField.Equals(value) != true)) {
                    this.PricingUnitPriceField = value;
                    this.RaisePropertyChanged("PricingUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchCode {
            get {
                return this.PurchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchCodeField, value) != true)) {
                    this.PurchCodeField = value;
                    this.RaisePropertyChanged("PurchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QtyChgReq {
            get {
                return this.QtyChgReqField;
            }
            set {
                if ((this.QtyChgReqField.Equals(value) != true)) {
                    this.QtyChgReqField = value;
                    this.RaisePropertyChanged("QtyChgReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QtyOption {
            get {
                return this.QtyOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QtyOptionField, value) != true)) {
                    this.QtyOptionField = value;
                    this.RaisePropertyChanged("QtyOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RcvInspectionReq {
            get {
                return this.RcvInspectionReqField;
            }
            set {
                if ((this.RcvInspectionReqField.Equals(value) != true)) {
                    this.RcvInspectionReqField = value;
                    this.RaisePropertyChanged("RcvInspectionReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCodeDesc {
            get {
                return this.RefCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeDescField, value) != true)) {
                    this.RefCodeDescField = value;
                    this.RaisePropertyChanged("RefCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCodeStatus {
            get {
                return this.RefCodeStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeStatusField, value) != true)) {
                    this.RefCodeStatusField = value;
                    this.RaisePropertyChanged("RefCodeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceCode {
            get {
                return this.ReferenceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceCodeField, value) != true)) {
                    this.ReferenceCodeField = value;
                    this.RaisePropertyChanged("ReferenceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNumChgReq {
            get {
                return this.RevisionNumChgReqField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumChgReqField, value) != true)) {
                    this.RevisionNumChgReqField = value;
                    this.RaisePropertyChanged("RevisionNumChgReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RowsManualFactor {
            get {
                return this.RowsManualFactorField;
            }
            set {
                if ((this.RowsManualFactorField.Equals(value) != true)) {
                    this.RowsManualFactorField = value;
                    this.RaisePropertyChanged("RowsManualFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AdvancePayBal {
            get {
                return this.Rpt1AdvancePayBalField;
            }
            set {
                if ((this.Rpt1AdvancePayBalField.Equals(value) != true)) {
                    this.Rpt1AdvancePayBalField = value;
                    this.RaisePropertyChanged("Rpt1AdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1CalcInTaxAmt {
            get {
                return this.Rpt1CalcInTaxAmtField;
            }
            set {
                if ((this.Rpt1CalcInTaxAmtField.Equals(value) != true)) {
                    this.Rpt1CalcInTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1CalcInTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1CalcTotalCost {
            get {
                return this.Rpt1CalcTotalCostField;
            }
            set {
                if ((this.Rpt1CalcTotalCostField.Equals(value) != true)) {
                    this.Rpt1CalcTotalCostField = value;
                    this.RaisePropertyChanged("Rpt1CalcTotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ContractUnitCost {
            get {
                return this.Rpt1ContractUnitCostField;
            }
            set {
                if ((this.Rpt1ContractUnitCostField.Equals(value) != true)) {
                    this.Rpt1ContractUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1ContractUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ExtCost {
            get {
                return this.Rpt1ExtCostField;
            }
            set {
                if ((this.Rpt1ExtCostField.Equals(value) != true)) {
                    this.Rpt1ExtCostField = value;
                    this.RaisePropertyChanged("Rpt1ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InAdvancePayBal {
            get {
                return this.Rpt1InAdvancePayBalField;
            }
            set {
                if ((this.Rpt1InAdvancePayBalField.Equals(value) != true)) {
                    this.Rpt1InAdvancePayBalField = value;
                    this.RaisePropertyChanged("Rpt1InAdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InContractUnitCost {
            get {
                return this.Rpt1InContractUnitCostField;
            }
            set {
                if ((this.Rpt1InContractUnitCostField.Equals(value) != true)) {
                    this.Rpt1InContractUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1InContractUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InUnitCost {
            get {
                return this.Rpt1InUnitCostField;
            }
            set {
                if ((this.Rpt1InUnitCostField.Equals(value) != true)) {
                    this.Rpt1InUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1InUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1MiscCost {
            get {
                return this.Rpt1MiscCostField;
            }
            set {
                if ((this.Rpt1MiscCostField.Equals(value) != true)) {
                    this.Rpt1MiscCostField = value;
                    this.RaisePropertyChanged("Rpt1MiscCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrUnitCost {
            get {
                return this.Rpt1ScrUnitCostField;
            }
            set {
                if ((this.Rpt1ScrUnitCostField.Equals(value) != true)) {
                    this.Rpt1ScrUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1ScrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1UnitCost {
            get {
                return this.Rpt1UnitCostField;
            }
            set {
                if ((this.Rpt1UnitCostField.Equals(value) != true)) {
                    this.Rpt1UnitCostField = value;
                    this.RaisePropertyChanged("Rpt1UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AdvancePayBal {
            get {
                return this.Rpt2AdvancePayBalField;
            }
            set {
                if ((this.Rpt2AdvancePayBalField.Equals(value) != true)) {
                    this.Rpt2AdvancePayBalField = value;
                    this.RaisePropertyChanged("Rpt2AdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2CalcInTaxAmt {
            get {
                return this.Rpt2CalcInTaxAmtField;
            }
            set {
                if ((this.Rpt2CalcInTaxAmtField.Equals(value) != true)) {
                    this.Rpt2CalcInTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2CalcInTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2CalcTotalCost {
            get {
                return this.Rpt2CalcTotalCostField;
            }
            set {
                if ((this.Rpt2CalcTotalCostField.Equals(value) != true)) {
                    this.Rpt2CalcTotalCostField = value;
                    this.RaisePropertyChanged("Rpt2CalcTotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ContractUnitCost {
            get {
                return this.Rpt2ContractUnitCostField;
            }
            set {
                if ((this.Rpt2ContractUnitCostField.Equals(value) != true)) {
                    this.Rpt2ContractUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2ContractUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ExtCost {
            get {
                return this.Rpt2ExtCostField;
            }
            set {
                if ((this.Rpt2ExtCostField.Equals(value) != true)) {
                    this.Rpt2ExtCostField = value;
                    this.RaisePropertyChanged("Rpt2ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InAdvancePayBal {
            get {
                return this.Rpt2InAdvancePayBalField;
            }
            set {
                if ((this.Rpt2InAdvancePayBalField.Equals(value) != true)) {
                    this.Rpt2InAdvancePayBalField = value;
                    this.RaisePropertyChanged("Rpt2InAdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InContractUnitCost {
            get {
                return this.Rpt2InContractUnitCostField;
            }
            set {
                if ((this.Rpt2InContractUnitCostField.Equals(value) != true)) {
                    this.Rpt2InContractUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2InContractUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InUnitCost {
            get {
                return this.Rpt2InUnitCostField;
            }
            set {
                if ((this.Rpt2InUnitCostField.Equals(value) != true)) {
                    this.Rpt2InUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2InUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2MiscCost {
            get {
                return this.Rpt2MiscCostField;
            }
            set {
                if ((this.Rpt2MiscCostField.Equals(value) != true)) {
                    this.Rpt2MiscCostField = value;
                    this.RaisePropertyChanged("Rpt2MiscCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrUnitCost {
            get {
                return this.Rpt2ScrUnitCostField;
            }
            set {
                if ((this.Rpt2ScrUnitCostField.Equals(value) != true)) {
                    this.Rpt2ScrUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2ScrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2UnitCost {
            get {
                return this.Rpt2UnitCostField;
            }
            set {
                if ((this.Rpt2UnitCostField.Equals(value) != true)) {
                    this.Rpt2UnitCostField = value;
                    this.RaisePropertyChanged("Rpt2UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AdvancePayBal {
            get {
                return this.Rpt3AdvancePayBalField;
            }
            set {
                if ((this.Rpt3AdvancePayBalField.Equals(value) != true)) {
                    this.Rpt3AdvancePayBalField = value;
                    this.RaisePropertyChanged("Rpt3AdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3CalcInTaxAmt {
            get {
                return this.Rpt3CalcInTaxAmtField;
            }
            set {
                if ((this.Rpt3CalcInTaxAmtField.Equals(value) != true)) {
                    this.Rpt3CalcInTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3CalcInTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3CalcTotalCost {
            get {
                return this.Rpt3CalcTotalCostField;
            }
            set {
                if ((this.Rpt3CalcTotalCostField.Equals(value) != true)) {
                    this.Rpt3CalcTotalCostField = value;
                    this.RaisePropertyChanged("Rpt3CalcTotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ContractUnitCost {
            get {
                return this.Rpt3ContractUnitCostField;
            }
            set {
                if ((this.Rpt3ContractUnitCostField.Equals(value) != true)) {
                    this.Rpt3ContractUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3ContractUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ExtCost {
            get {
                return this.Rpt3ExtCostField;
            }
            set {
                if ((this.Rpt3ExtCostField.Equals(value) != true)) {
                    this.Rpt3ExtCostField = value;
                    this.RaisePropertyChanged("Rpt3ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InAdvancePayBal {
            get {
                return this.Rpt3InAdvancePayBalField;
            }
            set {
                if ((this.Rpt3InAdvancePayBalField.Equals(value) != true)) {
                    this.Rpt3InAdvancePayBalField = value;
                    this.RaisePropertyChanged("Rpt3InAdvancePayBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InContractUnitCost {
            get {
                return this.Rpt3InContractUnitCostField;
            }
            set {
                if ((this.Rpt3InContractUnitCostField.Equals(value) != true)) {
                    this.Rpt3InContractUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3InContractUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InUnitCost {
            get {
                return this.Rpt3InUnitCostField;
            }
            set {
                if ((this.Rpt3InUnitCostField.Equals(value) != true)) {
                    this.Rpt3InUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3InUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3MiscCost {
            get {
                return this.Rpt3MiscCostField;
            }
            set {
                if ((this.Rpt3MiscCostField.Equals(value) != true)) {
                    this.Rpt3MiscCostField = value;
                    this.RaisePropertyChanged("Rpt3MiscCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrUnitCost {
            get {
                return this.Rpt3ScrUnitCostField;
            }
            set {
                if ((this.Rpt3ScrUnitCostField.Equals(value) != true)) {
                    this.Rpt3ScrUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3ScrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3UnitCost {
            get {
                return this.Rpt3UnitCostField;
            }
            set {
                if ((this.Rpt3UnitCostField.Equals(value) != true)) {
                    this.Rpt3UnitCostField = value;
                    this.RaisePropertyChanged("Rpt3UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrUnitCost {
            get {
                return this.ScrUnitCostField;
            }
            set {
                if ((this.ScrUnitCostField.Equals(value) != true)) {
                    this.ScrUnitCostField = value;
                    this.RaisePropertyChanged("ScrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SelCurrPricingUnitPrice {
            get {
                return this.SelCurrPricingUnitPriceField;
            }
            set {
                if ((this.SelCurrPricingUnitPriceField.Equals(value) != true)) {
                    this.SelCurrPricingUnitPriceField = value;
                    this.RaisePropertyChanged("SelCurrPricingUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SetCheveron {
            get {
                return this.SetCheveronField;
            }
            set {
                if ((this.SetCheveronField.Equals(value) != true)) {
                    this.SetCheveronField = value;
                    this.RaisePropertyChanged("SetCheveron");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipToSupplierDate {
            get {
                return this.ShipToSupplierDateField;
            }
            set {
                if ((this.ShipToSupplierDateField.Equals(value) != true)) {
                    this.ShipToSupplierDateField = value;
                    this.RaisePropertyChanged("ShipToSupplierDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmartString {
            get {
                return this.SmartStringField;
            }
            set {
                if ((object.ReferenceEquals(this.SmartStringField, value) != true)) {
                    this.SmartStringField = value;
                    this.RaisePropertyChanged("SmartString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartStringProcessed {
            get {
                return this.SmartStringProcessedField;
            }
            set {
                if ((this.SmartStringProcessedField.Equals(value) != true)) {
                    this.SmartStringProcessedField = value;
                    this.RaisePropertyChanged("SmartStringProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubAvail {
            get {
                return this.SubAvailField;
            }
            set {
                if ((this.SubAvailField.Equals(value) != true)) {
                    this.SubAvailField = value;
                    this.RaisePropertyChanged("SubAvail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartNum {
            get {
                return this.SubPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartNumField, value) != true)) {
                    this.SubPartNumField = value;
                    this.RaisePropertyChanged("SubPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartOpts {
            get {
                return this.SubPartOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartOptsField, value) != true)) {
                    this.SubPartOptsField = value;
                    this.RaisePropertyChanged("SubPartOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartType {
            get {
                return this.SubPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartTypeField, value) != true)) {
                    this.SubPartTypeField = value;
                    this.RaisePropertyChanged("SubPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatIDDescription {
            get {
                return this.TaxCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDDescriptionField, value) != true)) {
                    this.TaxCatIDDescriptionField = value;
                    this.RaisePropertyChanged("TaxCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitCost {
            get {
                return this.UnitCostField;
            }
            set {
                if ((this.UnitCostField.Equals(value) != true)) {
                    this.UnitCostField = value;
                    this.RaisePropertyChanged("UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateRelRecords {
            get {
                return this.UpdateRelRecordsField;
            }
            set {
                if ((this.UpdateRelRecordsField.Equals(value) != true)) {
                    this.UpdateRelRecordsField = value;
                    this.RaisePropertyChanged("UpdateRelRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateRelTaxable {
            get {
                return this.UpdateRelTaxableField;
            }
            set {
                if ((this.UpdateRelTaxableField.Equals(value) != true)) {
                    this.UpdateRelTaxableField = value;
                    this.RaisePropertyChanged("UpdateRelTaxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VenPartNum {
            get {
                return this.VenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VenPartNumField, value) != true)) {
                    this.VenPartNumField = value;
                    this.RaisePropertyChanged("VenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendPurPoint {
            get {
                return this.VendPurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.VendPurPointField, value) != true)) {
                    this.VendPurPointField = value;
                    this.RaisePropertyChanged("VendPurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPartOpts {
            get {
                return this.VendorPartOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPartOptsField, value) != true)) {
                    this.VendorPartOptsField = value;
                    this.RaisePropertyChanged("VendorPartOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidLine {
            get {
                return this.VoidLineField;
            }
            set {
                if ((this.VoidLineField.Equals(value) != true)) {
                    this.VoidLineField = value;
                    this.RaisePropertyChanged("VoidLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal XOrderQty {
            get {
                return this.XOrderQtyField;
            }
            set {
                if ((this.XOrderQtyField.Equals(value) != true)) {
                    this.XOrderQtyField = value;
                    this.RaisePropertyChanged("XOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int calcLeadTime {
            get {
                return this.calcLeadTimeField;
            }
            set {
                if ((this.calcLeadTimeField.Equals(value) != true)) {
                    this.calcLeadTimeField = value;
                    this.RaisePropertyChanged("calcLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal calcMinOrderQty {
            get {
                return this.calcMinOrderQtyField;
            }
            set {
                if ((this.calcMinOrderQtyField.Equals(value) != true)) {
                    this.calcMinOrderQtyField = value;
                    this.RaisePropertyChanged("calcMinOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string calcPartPUM {
            get {
                return this.calcPartPUMField;
            }
            set {
                if ((object.ReferenceEquals(this.calcPartPUMField, value) != true)) {
                    this.calcPartPUMField = value;
                    this.RaisePropertyChanged("calcPartPUM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PODetailAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PODetailAttchRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PODetailAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PODetailAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONUM {
            get {
                return this.PONUMField;
            }
            set {
                if ((this.PONUMField.Equals(value) != true)) {
                    this.PONUMField = value;
                    this.RaisePropertyChanged("PONUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PODetailInspRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PODetailInspRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PODetailInspRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspPlanDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspPlanPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspPlanRevNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecHedDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecRevNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PODetailInspRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspPlanDescription {
            get {
                return this.InspPlanDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InspPlanDescriptionField, value) != true)) {
                    this.InspPlanDescriptionField = value;
                    this.RaisePropertyChanged("InspPlanDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspPlanPartNum {
            get {
                return this.InspPlanPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InspPlanPartNumField, value) != true)) {
                    this.InspPlanPartNumField = value;
                    this.RaisePropertyChanged("InspPlanPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspPlanRevNum {
            get {
                return this.InspPlanRevNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InspPlanRevNumField, value) != true)) {
                    this.InspPlanRevNumField = value;
                    this.RaisePropertyChanged("InspPlanRevNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONUM {
            get {
                return this.PONUMField;
            }
            set {
                if ((this.PONUMField.Equals(value) != true)) {
                    this.PONUMField = value;
                    this.RaisePropertyChanged("PONUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanSeq {
            get {
                return this.PlanSeqField;
            }
            set {
                if ((this.PlanSeqField.Equals(value) != true)) {
                    this.PlanSeqField = value;
                    this.RaisePropertyChanged("PlanSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecHedDescription {
            get {
                return this.SpecHedDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecHedDescriptionField, value) != true)) {
                    this.SpecHedDescriptionField = value;
                    this.RaisePropertyChanged("SpecHedDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecID {
            get {
                return this.SpecIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecIDField, value) != true)) {
                    this.SpecIDField = value;
                    this.RaisePropertyChanged("SpecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecRevNum {
            get {
                return this.SpecRevNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecRevNumField, value) != true)) {
                    this.SpecRevNumField = value;
                    this.RaisePropertyChanged("SpecRevNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeadMiscRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POHeadMiscRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeadMiscRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocCurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscCodeLCAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeLCCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeLCDisburseMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderSeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool POHeaderApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PONumInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeadMiscRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencySymbol {
            get {
                return this.CurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencySymbolField, value) != true)) {
                    this.CurrencySymbolField = value;
                    this.RaisePropertyChanged("CurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocCurrencySymbol {
            get {
                return this.DocCurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocCurrencySymbolField, value) != true)) {
                    this.DocCurrencySymbolField = value;
                    this.RaisePropertyChanged("DocCurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInInvoiceAmt {
            get {
                return this.DocInInvoiceAmtField;
            }
            set {
                if ((this.DocInInvoiceAmtField.Equals(value) != true)) {
                    this.DocInInvoiceAmtField = value;
                    this.RaisePropertyChanged("DocInInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInMiscAmt {
            get {
                return this.DocInMiscAmtField;
            }
            set {
                if ((this.DocInMiscAmtField.Equals(value) != true)) {
                    this.DocInMiscAmtField = value;
                    this.RaisePropertyChanged("DocInMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoicedAmt {
            get {
                return this.DocInvoicedAmtField;
            }
            set {
                if ((this.DocInvoicedAmtField.Equals(value) != true)) {
                    this.DocInvoicedAmtField = value;
                    this.RaisePropertyChanged("DocInvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMiscAmt {
            get {
                return this.DocMiscAmtField;
            }
            set {
                if ((this.DocMiscAmtField.Equals(value) != true)) {
                    this.DocMiscAmtField = value;
                    this.RaisePropertyChanged("DocMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InInvoiceAmt {
            get {
                return this.InInvoiceAmtField;
            }
            set {
                if ((this.InInvoiceAmtField.Equals(value) != true)) {
                    this.InInvoiceAmtField = value;
                    this.RaisePropertyChanged("InInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InMiscAmt {
            get {
                return this.InMiscAmtField;
            }
            set {
                if ((this.InMiscAmtField.Equals(value) != true)) {
                    this.InMiscAmtField = value;
                    this.RaisePropertyChanged("InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoicedAmt {
            get {
                return this.InvoicedAmtField;
            }
            set {
                if ((this.InvoicedAmtField.Equals(value) != true)) {
                    this.InvoicedAmtField = value;
                    this.RaisePropertyChanged("InvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscAmt {
            get {
                return this.MiscAmtField;
            }
            set {
                if ((this.MiscAmtField.Equals(value) != true)) {
                    this.MiscAmtField = value;
                    this.RaisePropertyChanged("MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeDescription {
            get {
                return this.MiscCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeDescriptionField, value) != true)) {
                    this.MiscCodeDescriptionField = value;
                    this.RaisePropertyChanged("MiscCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscCodeLCAmount {
            get {
                return this.MiscCodeLCAmountField;
            }
            set {
                if ((this.MiscCodeLCAmountField.Equals(value) != true)) {
                    this.MiscCodeLCAmountField = value;
                    this.RaisePropertyChanged("MiscCodeLCAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeLCCurrencyCode {
            get {
                return this.MiscCodeLCCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeLCCurrencyCodeField, value) != true)) {
                    this.MiscCodeLCCurrencyCodeField = value;
                    this.RaisePropertyChanged("MiscCodeLCCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeLCDisburseMethod {
            get {
                return this.MiscCodeLCDisburseMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeLCDisburseMethodField, value) != true)) {
                    this.MiscCodeLCDisburseMethodField = value;
                    this.RaisePropertyChanged("MiscCodeLCDisburseMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderSeqNum {
            get {
                return this.OrderSeqNumField;
            }
            set {
                if ((this.OrderSeqNumField.Equals(value) != true)) {
                    this.OrderSeqNumField = value;
                    this.RaisePropertyChanged("OrderSeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool POHeaderApprove {
            get {
                return this.POHeaderApproveField;
            }
            set {
                if ((this.POHeaderApproveField.Equals(value) != true)) {
                    this.POHeaderApproveField = value;
                    this.RaisePropertyChanged("POHeaderApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PONumInPrice {
            get {
                return this.PONumInPriceField;
            }
            set {
                if ((this.PONumInPriceField.Equals(value) != true)) {
                    this.PONumInPriceField = value;
                    this.RaisePropertyChanged("PONumInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONumShipName {
            get {
                return this.PONumShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumShipNameField, value) != true)) {
                    this.PONumShipNameField = value;
                    this.RaisePropertyChanged("PONumShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONumShipToConName {
            get {
                return this.PONumShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumShipToConNameField, value) != true)) {
                    this.PONumShipToConNameField = value;
                    this.RaisePropertyChanged("PONumShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InInvoiceAmt {
            get {
                return this.Rpt1InInvoiceAmtField;
            }
            set {
                if ((this.Rpt1InInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt1InInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt1InInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InMiscAmt {
            get {
                return this.Rpt1InMiscAmtField;
            }
            set {
                if ((this.Rpt1InMiscAmtField.Equals(value) != true)) {
                    this.Rpt1InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InvoicedAmt {
            get {
                return this.Rpt1InvoicedAmtField;
            }
            set {
                if ((this.Rpt1InvoicedAmtField.Equals(value) != true)) {
                    this.Rpt1InvoicedAmtField = value;
                    this.RaisePropertyChanged("Rpt1InvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1MiscAmt {
            get {
                return this.Rpt1MiscAmtField;
            }
            set {
                if ((this.Rpt1MiscAmtField.Equals(value) != true)) {
                    this.Rpt1MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrMiscAmt {
            get {
                return this.Rpt1ScrMiscAmtField;
            }
            set {
                if ((this.Rpt1ScrMiscAmtField.Equals(value) != true)) {
                    this.Rpt1ScrMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InInvoiceAmt {
            get {
                return this.Rpt2InInvoiceAmtField;
            }
            set {
                if ((this.Rpt2InInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt2InInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt2InInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InMiscAmt {
            get {
                return this.Rpt2InMiscAmtField;
            }
            set {
                if ((this.Rpt2InMiscAmtField.Equals(value) != true)) {
                    this.Rpt2InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InvoicedAmt {
            get {
                return this.Rpt2InvoicedAmtField;
            }
            set {
                if ((this.Rpt2InvoicedAmtField.Equals(value) != true)) {
                    this.Rpt2InvoicedAmtField = value;
                    this.RaisePropertyChanged("Rpt2InvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2MiscAmt {
            get {
                return this.Rpt2MiscAmtField;
            }
            set {
                if ((this.Rpt2MiscAmtField.Equals(value) != true)) {
                    this.Rpt2MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrMiscAmt {
            get {
                return this.Rpt2ScrMiscAmtField;
            }
            set {
                if ((this.Rpt2ScrMiscAmtField.Equals(value) != true)) {
                    this.Rpt2ScrMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InInvoiceAmt {
            get {
                return this.Rpt3InInvoiceAmtField;
            }
            set {
                if ((this.Rpt3InInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt3InInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt3InInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InMiscAmt {
            get {
                return this.Rpt3InMiscAmtField;
            }
            set {
                if ((this.Rpt3InMiscAmtField.Equals(value) != true)) {
                    this.Rpt3InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InvoicedAmt {
            get {
                return this.Rpt3InvoicedAmtField;
            }
            set {
                if ((this.Rpt3InvoicedAmtField.Equals(value) != true)) {
                    this.Rpt3InvoicedAmtField = value;
                    this.RaisePropertyChanged("Rpt3InvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3MiscAmt {
            get {
                return this.Rpt3MiscAmtField;
            }
            set {
                if ((this.Rpt3MiscAmtField.Equals(value) != true)) {
                    this.Rpt3MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrMiscAmt {
            get {
                return this.Rpt3ScrMiscAmtField;
            }
            set {
                if ((this.Rpt3ScrMiscAmtField.Equals(value) != true)) {
                    this.Rpt3ScrMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocMiscAmt {
            get {
                return this.ScrDocMiscAmtField;
            }
            set {
                if ((this.ScrDocMiscAmtField.Equals(value) != true)) {
                    this.ScrDocMiscAmtField = value;
                    this.RaisePropertyChanged("ScrDocMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrMiscAmt {
            get {
                return this.ScrMiscAmtField;
            }
            set {
                if ((this.ScrMiscAmtField.Equals(value) != true)) {
                    this.ScrMiscAmtField = value;
                    this.RaisePropertyChanged("ScrMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeadMiscTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POHeadMiscTaxRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeadMiscTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeadMiscTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrDedTaxAmt {
            get {
                return this.DocScrDedTaxAmtField;
            }
            set {
                if ((this.DocScrDedTaxAmtField.Equals(value) != true)) {
                    this.DocScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrReportableAmt {
            get {
                return this.DocScrReportableAmtField;
            }
            set {
                if ((this.DocScrReportableAmtField.Equals(value) != true)) {
                    this.DocScrReportableAmtField = value;
                    this.RaisePropertyChanged("DocScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmt {
            get {
                return this.DocScrTaxAmtField;
            }
            set {
                if ((this.DocScrTaxAmtField.Equals(value) != true)) {
                    this.DocScrTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmtVar {
            get {
                return this.DocScrTaxAmtVarField;
            }
            set {
                if ((this.DocScrTaxAmtVarField.Equals(value) != true)) {
                    this.DocScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxableAmt {
            get {
                return this.DocScrTaxableAmtField;
            }
            set {
                if ((this.DocScrTaxableAmtField.Equals(value) != true)) {
                    this.DocScrTaxableAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeaderRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POHeaderRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string APLOCDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string APLOCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApproveChkBxSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ApprovedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApprovedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoPrintReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyerIDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConfirmChkBxSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConfirmReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmViaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidatedPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContractEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContractOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContractStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalDedTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalWhTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FreightPPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HdrTaxNoUpdtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HoldChkBxSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICPOLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LogChangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MassPrntChkBxSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool POTaxReadyToProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PostDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostToWebField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrcConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrintAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintHeaderAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PromiseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecalcUnitCostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalDedTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalWhTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalDedTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalWhTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalDedTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalWhTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCountryNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalDedTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalWhTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateDtlAndRelRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendCntFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendCntPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCntEmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCntFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCntNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCntPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorPPPrimPConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorRefNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool XbSystAllowLinkedPOChgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserChar1LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserChar2LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserChar3LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserChar4LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserDate1LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserDate2LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserDate3LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserDate4LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserDec1LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserDec2LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserInt1LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XbSystPOUserInt2LabelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APLOCDescription {
            get {
                return this.APLOCDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.APLOCDescriptionField, value) != true)) {
                    this.APLOCDescriptionField = value;
                    this.RaisePropertyChanged("APLOCDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APLOCID {
            get {
                return this.APLOCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.APLOCIDField, value) != true)) {
                    this.APLOCIDField = value;
                    this.RaisePropertyChanged("APLOCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalStatus {
            get {
                return this.ApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalStatusField, value) != true)) {
                    this.ApprovalStatusField = value;
                    this.RaisePropertyChanged("ApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Approve {
            get {
                return this.ApproveField;
            }
            set {
                if ((this.ApproveField.Equals(value) != true)) {
                    this.ApproveField = value;
                    this.RaisePropertyChanged("Approve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApproveChkBxSensitive {
            get {
                return this.ApproveChkBxSensitiveField;
            }
            set {
                if ((this.ApproveChkBxSensitiveField.Equals(value) != true)) {
                    this.ApproveChkBxSensitiveField = value;
                    this.RaisePropertyChanged("ApproveChkBxSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ApprovedAmount {
            get {
                return this.ApprovedAmountField;
            }
            set {
                if ((this.ApprovedAmountField.Equals(value) != true)) {
                    this.ApprovedAmountField = value;
                    this.RaisePropertyChanged("ApprovedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedByField, value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApprovedDate {
            get {
                return this.ApprovedDateField;
            }
            set {
                if ((this.ApprovedDateField.Equals(value) != true)) {
                    this.ApprovedDateField = value;
                    this.RaisePropertyChanged("ApprovedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoPrintReady {
            get {
                return this.AutoPrintReadyField;
            }
            set {
                if ((this.AutoPrintReadyField.Equals(value) != true)) {
                    this.AutoPrintReadyField = value;
                    this.RaisePropertyChanged("AutoPrintReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrencyID {
            get {
                return this.BaseCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrencyIDField, value) != true)) {
                    this.BaseCurrencyIDField = value;
                    this.RaisePropertyChanged("BaseCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyerID {
            get {
                return this.BuyerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyerIDField, value) != true)) {
                    this.BuyerIDField = value;
                    this.RaisePropertyChanged("BuyerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyerIDName {
            get {
                return this.BuyerIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyerIDNameField, value) != true)) {
                    this.BuyerIDNameField = value;
                    this.RaisePropertyChanged("BuyerIDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConfirmChkBxSensitive {
            get {
                return this.ConfirmChkBxSensitiveField;
            }
            set {
                if ((this.ConfirmChkBxSensitiveField.Equals(value) != true)) {
                    this.ConfirmChkBxSensitiveField = value;
                    this.RaisePropertyChanged("ConfirmChkBxSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConfirmReq {
            get {
                return this.ConfirmReqField;
            }
            set {
                if ((this.ConfirmReqField.Equals(value) != true)) {
                    this.ConfirmReqField = value;
                    this.RaisePropertyChanged("ConfirmReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmVia {
            get {
                return this.ConfirmViaField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmViaField, value) != true)) {
                    this.ConfirmViaField = value;
                    this.RaisePropertyChanged("ConfirmVia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Confirmed {
            get {
                return this.ConfirmedField;
            }
            set {
                if ((this.ConfirmedField.Equals(value) != true)) {
                    this.ConfirmedField = value;
                    this.RaisePropertyChanged("Confirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidatedPO {
            get {
                return this.ConsolidatedPOField;
            }
            set {
                if ((this.ConsolidatedPOField.Equals(value) != true)) {
                    this.ConsolidatedPOField = value;
                    this.RaisePropertyChanged("ConsolidatedPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContractEndDate {
            get {
                return this.ContractEndDateField;
            }
            set {
                if ((this.ContractEndDateField.Equals(value) != true)) {
                    this.ContractEndDateField = value;
                    this.RaisePropertyChanged("ContractEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContractOrder {
            get {
                return this.ContractOrderField;
            }
            set {
                if ((this.ContractOrderField.Equals(value) != true)) {
                    this.ContractOrderField = value;
                    this.RaisePropertyChanged("ContractOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContractStartDate {
            get {
                return this.ContractStartDateField;
            }
            set {
                if ((this.ContractStartDateField.Equals(value) != true)) {
                    this.ContractStartDateField = value;
                    this.RaisePropertyChanged("ContractStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrDesc {
            get {
                return this.CurrencyCodeCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrDescField, value) != true)) {
                    this.CurrencyCodeCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrName {
            get {
                return this.CurrencyCodeCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrNameField, value) != true)) {
                    this.CurrencyCodeCurrNameField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrSymbol {
            get {
                return this.CurrencyCodeCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrSymbolField, value) != true)) {
                    this.CurrencyCodeCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrencyID {
            get {
                return this.CurrencyCodeCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrencyIDField, value) != true)) {
                    this.CurrencyCodeCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeDocumentDesc {
            get {
                return this.CurrencyCodeDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeDocumentDescField, value) != true)) {
                    this.CurrencyCodeDocumentDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalCharges {
            get {
                return this.DocTotalChargesField;
            }
            set {
                if ((this.DocTotalChargesField.Equals(value) != true)) {
                    this.DocTotalChargesField = value;
                    this.RaisePropertyChanged("DocTotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalDedTax {
            get {
                return this.DocTotalDedTaxField;
            }
            set {
                if ((this.DocTotalDedTaxField.Equals(value) != true)) {
                    this.DocTotalDedTaxField = value;
                    this.RaisePropertyChanged("DocTotalDedTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalMisc {
            get {
                return this.DocTotalMiscField;
            }
            set {
                if ((this.DocTotalMiscField.Equals(value) != true)) {
                    this.DocTotalMiscField = value;
                    this.RaisePropertyChanged("DocTotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalOrder {
            get {
                return this.DocTotalOrderField;
            }
            set {
                if ((this.DocTotalOrderField.Equals(value) != true)) {
                    this.DocTotalOrderField = value;
                    this.RaisePropertyChanged("DocTotalOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalSATax {
            get {
                return this.DocTotalSATaxField;
            }
            set {
                if ((this.DocTotalSATaxField.Equals(value) != true)) {
                    this.DocTotalSATaxField = value;
                    this.RaisePropertyChanged("DocTotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalTax {
            get {
                return this.DocTotalTaxField;
            }
            set {
                if ((this.DocTotalTaxField.Equals(value) != true)) {
                    this.DocTotalTaxField = value;
                    this.RaisePropertyChanged("DocTotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalWhTax {
            get {
                return this.DocTotalWhTaxField;
            }
            set {
                if ((this.DocTotalWhTaxField.Equals(value) != true)) {
                    this.DocTotalWhTaxField = value;
                    this.RaisePropertyChanged("DocTotalWhTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSupplierID {
            get {
                return this.EnableSupplierIDField;
            }
            set {
                if ((this.EnableSupplierIDField.Equals(value) != true)) {
                    this.EnableSupplierIDField = value;
                    this.RaisePropertyChanged("EnableSupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOB {
            get {
                return this.FOBField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBField, value) != true)) {
                    this.FOBField = value;
                    this.RaisePropertyChanged("FOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOBDescription {
            get {
                return this.FOBDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBDescriptionField, value) != true)) {
                    this.FOBDescriptionField = value;
                    this.RaisePropertyChanged("FOBDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FreightPP {
            get {
                return this.FreightPPField;
            }
            set {
                if ((this.FreightPPField.Equals(value) != true)) {
                    this.FreightPPField = value;
                    this.RaisePropertyChanged("FreightPP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLines {
            get {
                return this.HasLinesField;
            }
            set {
                if ((this.HasLinesField.Equals(value) != true)) {
                    this.HasLinesField = value;
                    this.RaisePropertyChanged("HasLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HdrTaxNoUpdt {
            get {
                return this.HdrTaxNoUpdtField;
            }
            set {
                if ((this.HdrTaxNoUpdtField.Equals(value) != true)) {
                    this.HdrTaxNoUpdtField = value;
                    this.RaisePropertyChanged("HdrTaxNoUpdt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HoldChkBxSensitive {
            get {
                return this.HoldChkBxSensitiveField;
            }
            set {
                if ((this.HoldChkBxSensitiveField.Equals(value) != true)) {
                    this.HoldChkBxSensitiveField = value;
                    this.RaisePropertyChanged("HoldChkBxSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICPOLocked {
            get {
                return this.ICPOLockedField;
            }
            set {
                if ((this.ICPOLockedField.Equals(value) != true)) {
                    this.ICPOLockedField = value;
                    this.RaisePropertyChanged("ICPOLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockRate {
            get {
                return this.LockRateField;
            }
            set {
                if ((this.LockRateField.Equals(value) != true)) {
                    this.LockRateField = value;
                    this.RaisePropertyChanged("LockRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LogChanges {
            get {
                return this.LogChangesField;
            }
            set {
                if ((this.LogChangesField.Equals(value) != true)) {
                    this.LogChangesField = value;
                    this.RaisePropertyChanged("LogChanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MassPrntChkBxSensitive {
            get {
                return this.MassPrntChkBxSensitiveField;
            }
            set {
                if ((this.MassPrntChkBxSensitiveField.Equals(value) != true)) {
                    this.MassPrntChkBxSensitiveField = value;
                    this.RaisePropertyChanged("MassPrntChkBxSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenOrder {
            get {
                return this.OpenOrderField;
            }
            set {
                if ((this.OpenOrderField.Equals(value) != true)) {
                    this.OpenOrderField = value;
                    this.RaisePropertyChanged("OpenOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHeld {
            get {
                return this.OrderHeldField;
            }
            set {
                if ((this.OrderHeldField.Equals(value) != true)) {
                    this.OrderHeldField = value;
                    this.RaisePropertyChanged("OrderHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool POTaxReadyToProcess {
            get {
                return this.POTaxReadyToProcessField;
            }
            set {
                if ((this.POTaxReadyToProcessField.Equals(value) != true)) {
                    this.POTaxReadyToProcessField = value;
                    this.RaisePropertyChanged("POTaxReadyToProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POType {
            get {
                return this.POTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.POTypeField, value) != true)) {
                    this.POTypeField = value;
                    this.RaisePropertyChanged("POType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PostDate {
            get {
                return this.PostDateField;
            }
            set {
                if ((this.PostDateField.Equals(value) != true)) {
                    this.PostDateField = value;
                    this.RaisePropertyChanged("PostDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PostToWeb {
            get {
                return this.PostToWebField;
            }
            set {
                if ((this.PostToWebField.Equals(value) != true)) {
                    this.PostToWebField = value;
                    this.RaisePropertyChanged("PostToWeb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrcConNum {
            get {
                return this.PrcConNumField;
            }
            set {
                if ((this.PrcConNumField.Equals(value) != true)) {
                    this.PrcConNumField = value;
                    this.RaisePropertyChanged("PrcConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintAs {
            get {
                return this.PrintAsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintAsField, value) != true)) {
                    this.PrintAsField = value;
                    this.RaisePropertyChanged("PrintAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintHeaderAddress {
            get {
                return this.PrintHeaderAddressField;
            }
            set {
                if ((this.PrintHeaderAddressField.Equals(value) != true)) {
                    this.PrintHeaderAddressField = value;
                    this.RaisePropertyChanged("PrintHeaderAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PromiseDate {
            get {
                return this.PromiseDateField;
            }
            set {
                if ((this.PromiseDateField.Equals(value) != true)) {
                    this.PromiseDateField = value;
                    this.RaisePropertyChanged("PromiseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpDescription {
            get {
                return this.RateGrpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpDescriptionField, value) != true)) {
                    this.RateGrpDescriptionField = value;
                    this.RaisePropertyChanged("RateGrpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToPrint {
            get {
                return this.ReadyToPrintField;
            }
            set {
                if ((this.ReadyToPrintField.Equals(value) != true)) {
                    this.ReadyToPrintField = value;
                    this.RaisePropertyChanged("ReadyToPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecalcUnitCosts {
            get {
                return this.RecalcUnitCostsField;
            }
            set {
                if ((this.RecalcUnitCostsField.Equals(value) != true)) {
                    this.RecalcUnitCostsField = value;
                    this.RaisePropertyChanged("RecalcUnitCosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCodeCurrSymbol {
            get {
                return this.RefCodeCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeCurrSymbolField, value) != true)) {
                    this.RefCodeCurrSymbolField = value;
                    this.RaisePropertyChanged("RefCodeCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalCharges {
            get {
                return this.Rpt1TotalChargesField;
            }
            set {
                if ((this.Rpt1TotalChargesField.Equals(value) != true)) {
                    this.Rpt1TotalChargesField = value;
                    this.RaisePropertyChanged("Rpt1TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalDedTax {
            get {
                return this.Rpt1TotalDedTaxField;
            }
            set {
                if ((this.Rpt1TotalDedTaxField.Equals(value) != true)) {
                    this.Rpt1TotalDedTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalDedTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalMiscCharges {
            get {
                return this.Rpt1TotalMiscChargesField;
            }
            set {
                if ((this.Rpt1TotalMiscChargesField.Equals(value) != true)) {
                    this.Rpt1TotalMiscChargesField = value;
                    this.RaisePropertyChanged("Rpt1TotalMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalOrder {
            get {
                return this.Rpt1TotalOrderField;
            }
            set {
                if ((this.Rpt1TotalOrderField.Equals(value) != true)) {
                    this.Rpt1TotalOrderField = value;
                    this.RaisePropertyChanged("Rpt1TotalOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalSATax {
            get {
                return this.Rpt1TotalSATaxField;
            }
            set {
                if ((this.Rpt1TotalSATaxField.Equals(value) != true)) {
                    this.Rpt1TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalTax {
            get {
                return this.Rpt1TotalTaxField;
            }
            set {
                if ((this.Rpt1TotalTaxField.Equals(value) != true)) {
                    this.Rpt1TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalWhTax {
            get {
                return this.Rpt1TotalWhTaxField;
            }
            set {
                if ((this.Rpt1TotalWhTaxField.Equals(value) != true)) {
                    this.Rpt1TotalWhTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalWhTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalCharges {
            get {
                return this.Rpt2TotalChargesField;
            }
            set {
                if ((this.Rpt2TotalChargesField.Equals(value) != true)) {
                    this.Rpt2TotalChargesField = value;
                    this.RaisePropertyChanged("Rpt2TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalDedTax {
            get {
                return this.Rpt2TotalDedTaxField;
            }
            set {
                if ((this.Rpt2TotalDedTaxField.Equals(value) != true)) {
                    this.Rpt2TotalDedTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalDedTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalMiscCharges {
            get {
                return this.Rpt2TotalMiscChargesField;
            }
            set {
                if ((this.Rpt2TotalMiscChargesField.Equals(value) != true)) {
                    this.Rpt2TotalMiscChargesField = value;
                    this.RaisePropertyChanged("Rpt2TotalMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalOrder {
            get {
                return this.Rpt2TotalOrderField;
            }
            set {
                if ((this.Rpt2TotalOrderField.Equals(value) != true)) {
                    this.Rpt2TotalOrderField = value;
                    this.RaisePropertyChanged("Rpt2TotalOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalSATax {
            get {
                return this.Rpt2TotalSATaxField;
            }
            set {
                if ((this.Rpt2TotalSATaxField.Equals(value) != true)) {
                    this.Rpt2TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalTax {
            get {
                return this.Rpt2TotalTaxField;
            }
            set {
                if ((this.Rpt2TotalTaxField.Equals(value) != true)) {
                    this.Rpt2TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalWhTax {
            get {
                return this.Rpt2TotalWhTaxField;
            }
            set {
                if ((this.Rpt2TotalWhTaxField.Equals(value) != true)) {
                    this.Rpt2TotalWhTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalWhTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalCharges {
            get {
                return this.Rpt3TotalChargesField;
            }
            set {
                if ((this.Rpt3TotalChargesField.Equals(value) != true)) {
                    this.Rpt3TotalChargesField = value;
                    this.RaisePropertyChanged("Rpt3TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalDedTax {
            get {
                return this.Rpt3TotalDedTaxField;
            }
            set {
                if ((this.Rpt3TotalDedTaxField.Equals(value) != true)) {
                    this.Rpt3TotalDedTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalDedTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalMiscCharges {
            get {
                return this.Rpt3TotalMiscChargesField;
            }
            set {
                if ((this.Rpt3TotalMiscChargesField.Equals(value) != true)) {
                    this.Rpt3TotalMiscChargesField = value;
                    this.RaisePropertyChanged("Rpt3TotalMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalOrder {
            get {
                return this.Rpt3TotalOrderField;
            }
            set {
                if ((this.Rpt3TotalOrderField.Equals(value) != true)) {
                    this.Rpt3TotalOrderField = value;
                    this.RaisePropertyChanged("Rpt3TotalOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalSATax {
            get {
                return this.Rpt3TotalSATaxField;
            }
            set {
                if ((this.Rpt3TotalSATaxField.Equals(value) != true)) {
                    this.Rpt3TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalTax {
            get {
                return this.Rpt3TotalTaxField;
            }
            set {
                if ((this.Rpt3TotalTaxField.Equals(value) != true)) {
                    this.Rpt3TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalWhTax {
            get {
                return this.Rpt3TotalWhTaxField;
            }
            set {
                if ((this.Rpt3TotalWhTaxField.Equals(value) != true)) {
                    this.Rpt3TotalWhTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalWhTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleCode {
            get {
                return this.RuleCodeField;
            }
            set {
                if ((this.RuleCodeField.Equals(value) != true)) {
                    this.RuleCodeField = value;
                    this.RaisePropertyChanged("RuleCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress1 {
            get {
                return this.ShipAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddress1Field, value) != true)) {
                    this.ShipAddress1Field = value;
                    this.RaisePropertyChanged("ShipAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress2 {
            get {
                return this.ShipAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddress2Field, value) != true)) {
                    this.ShipAddress2Field = value;
                    this.RaisePropertyChanged("ShipAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress3 {
            get {
                return this.ShipAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddress3Field, value) != true)) {
                    this.ShipAddress3Field = value;
                    this.RaisePropertyChanged("ShipAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipCity {
            get {
                return this.ShipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCityField, value) != true)) {
                    this.ShipCityField = value;
                    this.RaisePropertyChanged("ShipCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipCountry {
            get {
                return this.ShipCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCountryField, value) != true)) {
                    this.ShipCountryField = value;
                    this.RaisePropertyChanged("ShipCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipCountryNum {
            get {
                return this.ShipCountryNumField;
            }
            set {
                if ((this.ShipCountryNumField.Equals(value) != true)) {
                    this.ShipCountryNumField = value;
                    this.RaisePropertyChanged("ShipCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipCountryNumDescription {
            get {
                return this.ShipCountryNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCountryNumDescriptionField, value) != true)) {
                    this.ShipCountryNumDescriptionField = value;
                    this.RaisePropertyChanged("ShipCountryNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipName {
            get {
                return this.ShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipNameField, value) != true)) {
                    this.ShipNameField = value;
                    this.RaisePropertyChanged("ShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipState {
            get {
                return this.ShipStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStateField, value) != true)) {
                    this.ShipStateField = value;
                    this.RaisePropertyChanged("ShipState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToConName {
            get {
                return this.ShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToConNameField, value) != true)) {
                    this.ShipToConNameField = value;
                    this.RaisePropertyChanged("ShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipZIP {
            get {
                return this.ShipZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipZIPField, value) != true)) {
                    this.ShipZIPField = value;
                    this.RaisePropertyChanged("ShipZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxPoint {
            get {
                return this.TaxPointField;
            }
            set {
                if ((this.TaxPointField.Equals(value) != true)) {
                    this.TaxPointField = value;
                    this.RaisePropertyChanged("TaxPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRateGrpCode {
            get {
                return this.TaxRateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRateGrpCodeField, value) != true)) {
                    this.TaxRateGrpCodeField = value;
                    this.RaisePropertyChanged("TaxRateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCodeDescription {
            get {
                return this.TaxRegionCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeDescriptionField, value) != true)) {
                    this.TaxRegionCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCode {
            get {
                return this.TermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeField, value) != true)) {
                    this.TermsCodeField = value;
                    this.RaisePropertyChanged("TermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCodeDescription {
            get {
                return this.TermsCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeDescriptionField, value) != true)) {
                    this.TermsCodeDescriptionField = value;
                    this.RaisePropertyChanged("TermsCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCharges {
            get {
                return this.TotalChargesField;
            }
            set {
                if ((this.TotalChargesField.Equals(value) != true)) {
                    this.TotalChargesField = value;
                    this.RaisePropertyChanged("TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalDedTax {
            get {
                return this.TotalDedTaxField;
            }
            set {
                if ((this.TotalDedTaxField.Equals(value) != true)) {
                    this.TotalDedTaxField = value;
                    this.RaisePropertyChanged("TotalDedTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalMiscCharges {
            get {
                return this.TotalMiscChargesField;
            }
            set {
                if ((this.TotalMiscChargesField.Equals(value) != true)) {
                    this.TotalMiscChargesField = value;
                    this.RaisePropertyChanged("TotalMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalOrder {
            get {
                return this.TotalOrderField;
            }
            set {
                if ((this.TotalOrderField.Equals(value) != true)) {
                    this.TotalOrderField = value;
                    this.RaisePropertyChanged("TotalOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSATax {
            get {
                return this.TotalSATaxField;
            }
            set {
                if ((this.TotalSATaxField.Equals(value) != true)) {
                    this.TotalSATaxField = value;
                    this.RaisePropertyChanged("TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalTax {
            get {
                return this.TotalTaxField;
            }
            set {
                if ((this.TotalTaxField.Equals(value) != true)) {
                    this.TotalTaxField = value;
                    this.RaisePropertyChanged("TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalWhTax {
            get {
                return this.TotalWhTaxField;
            }
            set {
                if ((this.TotalWhTaxField.Equals(value) != true)) {
                    this.TotalWhTaxField = value;
                    this.RaisePropertyChanged("TotalWhTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateDtlAndRelRecords {
            get {
                return this.UpdateDtlAndRelRecordsField;
            }
            set {
                if ((this.UpdateDtlAndRelRecordsField.Equals(value) != true)) {
                    this.UpdateDtlAndRelRecordsField = value;
                    this.RaisePropertyChanged("UpdateDtlAndRelRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendCntFaxNum {
            get {
                return this.VendCntFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VendCntFaxNumField, value) != true)) {
                    this.VendCntFaxNumField = value;
                    this.RaisePropertyChanged("VendCntFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendCntPhoneNumber {
            get {
                return this.VendCntPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VendCntPhoneNumberField, value) != true)) {
                    this.VendCntPhoneNumberField = value;
                    this.RaisePropertyChanged("VendCntPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress1 {
            get {
                return this.VendorAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress1Field, value) != true)) {
                    this.VendorAddress1Field = value;
                    this.RaisePropertyChanged("VendorAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress3 {
            get {
                return this.VendorAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress3Field, value) != true)) {
                    this.VendorAddress3Field = value;
                    this.RaisePropertyChanged("VendorAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCntEmailAddress {
            get {
                return this.VendorCntEmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCntEmailAddressField, value) != true)) {
                    this.VendorCntEmailAddressField = value;
                    this.RaisePropertyChanged("VendorCntEmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCntFaxNum {
            get {
                return this.VendorCntFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCntFaxNumField, value) != true)) {
                    this.VendorCntFaxNumField = value;
                    this.RaisePropertyChanged("VendorCntFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCntName {
            get {
                return this.VendorCntNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCntNameField, value) != true)) {
                    this.VendorCntNameField = value;
                    this.RaisePropertyChanged("VendorCntName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCntPhoneNum {
            get {
                return this.VendorCntPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCntPhoneNumField, value) != true)) {
                    this.VendorCntPhoneNumField = value;
                    this.RaisePropertyChanged("VendorCntPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCountry {
            get {
                return this.VendorCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCountryField, value) != true)) {
                    this.VendorCountryField = value;
                    this.RaisePropertyChanged("VendorCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCurrencyCode {
            get {
                return this.VendorCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCurrencyCodeField, value) != true)) {
                    this.VendorCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDefaultFOB {
            get {
                return this.VendorDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDefaultFOBField, value) != true)) {
                    this.VendorDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPAddress1 {
            get {
                return this.VendorPPAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPAddress1Field, value) != true)) {
                    this.VendorPPAddress1Field = value;
                    this.RaisePropertyChanged("VendorPPAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPAddress2 {
            get {
                return this.VendorPPAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPAddress2Field, value) != true)) {
                    this.VendorPPAddress2Field = value;
                    this.RaisePropertyChanged("VendorPPAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPAddress3 {
            get {
                return this.VendorPPAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPAddress3Field, value) != true)) {
                    this.VendorPPAddress3Field = value;
                    this.RaisePropertyChanged("VendorPPAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPCity {
            get {
                return this.VendorPPCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPCityField, value) != true)) {
                    this.VendorPPCityField = value;
                    this.RaisePropertyChanged("VendorPPCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPCountry {
            get {
                return this.VendorPPCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPCountryField, value) != true)) {
                    this.VendorPPCountryField = value;
                    this.RaisePropertyChanged("VendorPPCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPName {
            get {
                return this.VendorPPNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNameField, value) != true)) {
                    this.VendorPPNameField = value;
                    this.RaisePropertyChanged("VendorPPName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorPPPrimPCon {
            get {
                return this.VendorPPPrimPConField;
            }
            set {
                if ((this.VendorPPPrimPConField.Equals(value) != true)) {
                    this.VendorPPPrimPConField = value;
                    this.RaisePropertyChanged("VendorPPPrimPCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPState {
            get {
                return this.VendorPPStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPStateField, value) != true)) {
                    this.VendorPPStateField = value;
                    this.RaisePropertyChanged("VendorPPState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPZip {
            get {
                return this.VendorPPZipField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPZipField, value) != true)) {
                    this.VendorPPZipField = value;
                    this.RaisePropertyChanged("VendorPPZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorRefNum {
            get {
                return this.VendorRefNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorRefNumField, value) != true)) {
                    this.VendorRefNumField = value;
                    this.RaisePropertyChanged("VendorRefNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorState {
            get {
                return this.VendorStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorStateField, value) != true)) {
                    this.VendorStateField = value;
                    this.RaisePropertyChanged("VendorState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorTermsCode {
            get {
                return this.VendorTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorTermsCodeField, value) != true)) {
                    this.VendorTermsCodeField = value;
                    this.RaisePropertyChanged("VendorTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorVendorID {
            get {
                return this.VendorVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorVendorIDField, value) != true)) {
                    this.VendorVendorIDField = value;
                    this.RaisePropertyChanged("VendorVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZIP {
            get {
                return this.VendorZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZIPField, value) != true)) {
                    this.VendorZIPField = value;
                    this.RaisePropertyChanged("VendorZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidOrder {
            get {
                return this.VoidOrderField;
            }
            set {
                if ((this.VoidOrderField.Equals(value) != true)) {
                    this.VoidOrderField = value;
                    this.RaisePropertyChanged("VoidOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPONum {
            get {
                return this.XRefPONumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPONumField, value) != true)) {
                    this.XRefPONumField = value;
                    this.RaisePropertyChanged("XRefPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool XbSystAllowLinkedPOChg {
            get {
                return this.XbSystAllowLinkedPOChgField;
            }
            set {
                if ((this.XbSystAllowLinkedPOChgField.Equals(value) != true)) {
                    this.XbSystAllowLinkedPOChgField = value;
                    this.RaisePropertyChanged("XbSystAllowLinkedPOChg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserChar1Label {
            get {
                return this.XbSystPOUserChar1LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserChar1LabelField, value) != true)) {
                    this.XbSystPOUserChar1LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserChar1Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserChar2Label {
            get {
                return this.XbSystPOUserChar2LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserChar2LabelField, value) != true)) {
                    this.XbSystPOUserChar2LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserChar2Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserChar3Label {
            get {
                return this.XbSystPOUserChar3LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserChar3LabelField, value) != true)) {
                    this.XbSystPOUserChar3LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserChar3Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserChar4Label {
            get {
                return this.XbSystPOUserChar4LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserChar4LabelField, value) != true)) {
                    this.XbSystPOUserChar4LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserChar4Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserDate1Label {
            get {
                return this.XbSystPOUserDate1LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserDate1LabelField, value) != true)) {
                    this.XbSystPOUserDate1LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserDate1Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserDate2Label {
            get {
                return this.XbSystPOUserDate2LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserDate2LabelField, value) != true)) {
                    this.XbSystPOUserDate2LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserDate2Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserDate3Label {
            get {
                return this.XbSystPOUserDate3LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserDate3LabelField, value) != true)) {
                    this.XbSystPOUserDate3LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserDate3Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserDate4Label {
            get {
                return this.XbSystPOUserDate4LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserDate4LabelField, value) != true)) {
                    this.XbSystPOUserDate4LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserDate4Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserDec1Label {
            get {
                return this.XbSystPOUserDec1LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserDec1LabelField, value) != true)) {
                    this.XbSystPOUserDec1LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserDec1Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserDec2Label {
            get {
                return this.XbSystPOUserDec2LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserDec2LabelField, value) != true)) {
                    this.XbSystPOUserDec2LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserDec2Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserInt1Label {
            get {
                return this.XbSystPOUserInt1LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserInt1LabelField, value) != true)) {
                    this.XbSystPOUserInt1LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserInt1Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XbSystPOUserInt2Label {
            get {
                return this.XbSystPOUserInt2LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XbSystPOUserInt2LabelField, value) != true)) {
                    this.XbSystPOUserInt2LabelField = value;
                    this.RaisePropertyChanged("XbSystPOUserInt2Label");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeaderAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POHeaderAttchRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeaderTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POHeaderTaxRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POHeaderTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescCollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSuperGRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SummaryOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POHeaderTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrSymbol {
            get {
                return this.CurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrSymbolField, value) != true)) {
                    this.CurrSymbolField = value;
                    this.RaisePropertyChanged("CurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescCollectionType {
            get {
                return this.DescCollectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescCollectionTypeField, value) != true)) {
                    this.DescCollectionTypeField = value;
                    this.RaisePropertyChanged("DescCollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSuperGRate {
            get {
                return this.EnableSuperGRateField;
            }
            set {
                if ((this.EnableSuperGRateField.Equals(value) != true)) {
                    this.EnableSuperGRateField = value;
                    this.RaisePropertyChanged("EnableSuperGRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrFixedAmount {
            get {
                return this.Rpt1ScrFixedAmountField;
            }
            set {
                if ((this.Rpt1ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt1ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrFixedAmount {
            get {
                return this.Rpt2ScrFixedAmountField;
            }
            set {
                if ((this.Rpt2ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt2ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrFixedAmount {
            get {
                return this.Rpt3ScrFixedAmountField;
            }
            set {
                if ((this.Rpt3ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt3ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocDedTaxAmt {
            get {
                return this.ScrDocDedTaxAmtField;
            }
            set {
                if ((this.ScrDocDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDocDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocFixedAmount {
            get {
                return this.ScrDocFixedAmountField;
            }
            set {
                if ((this.ScrDocFixedAmountField.Equals(value) != true)) {
                    this.ScrDocFixedAmountField = value;
                    this.RaisePropertyChanged("ScrDocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocReportableAmt {
            get {
                return this.ScrDocReportableAmtField;
            }
            set {
                if ((this.ScrDocReportableAmtField.Equals(value) != true)) {
                    this.ScrDocReportableAmtField = value;
                    this.RaisePropertyChanged("ScrDocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocTaxAmt {
            get {
                return this.ScrDocTaxAmtField;
            }
            set {
                if ((this.ScrDocTaxAmtField.Equals(value) != true)) {
                    this.ScrDocTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocTaxAmtVar {
            get {
                return this.ScrDocTaxAmtVarField;
            }
            set {
                if ((this.ScrDocTaxAmtVarField.Equals(value) != true)) {
                    this.ScrDocTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrDocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocTaxableAmt {
            get {
                return this.ScrDocTaxableAmtField;
            }
            set {
                if ((this.ScrDocTaxableAmtField.Equals(value) != true)) {
                    this.ScrDocTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrDocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrFixedAmount {
            get {
                return this.ScrFixedAmountField;
            }
            set {
                if ((this.ScrFixedAmountField.Equals(value) != true)) {
                    this.ScrFixedAmountField = value;
                    this.RaisePropertyChanged("ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SummaryOnly {
            get {
                return this.SummaryOnlyField;
            }
            set {
                if ((this.SummaryOnlyField.Equals(value) != true)) {
                    this.SummaryOnlyField = value;
                    this.RaisePropertyChanged("SummaryOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POMiscRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POMiscRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POMiscRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocCurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscCodeLCAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeLCCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeLCDisburseMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderSeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool POHeaderApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PONumInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InvoicedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POMiscRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencySymbol {
            get {
                return this.CurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencySymbolField, value) != true)) {
                    this.CurrencySymbolField = value;
                    this.RaisePropertyChanged("CurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocCurrencySymbol {
            get {
                return this.DocCurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocCurrencySymbolField, value) != true)) {
                    this.DocCurrencySymbolField = value;
                    this.RaisePropertyChanged("DocCurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInInvoiceAmt {
            get {
                return this.DocInInvoiceAmtField;
            }
            set {
                if ((this.DocInInvoiceAmtField.Equals(value) != true)) {
                    this.DocInInvoiceAmtField = value;
                    this.RaisePropertyChanged("DocInInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInMiscAmt {
            get {
                return this.DocInMiscAmtField;
            }
            set {
                if ((this.DocInMiscAmtField.Equals(value) != true)) {
                    this.DocInMiscAmtField = value;
                    this.RaisePropertyChanged("DocInMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoicedAmt {
            get {
                return this.DocInvoicedAmtField;
            }
            set {
                if ((this.DocInvoicedAmtField.Equals(value) != true)) {
                    this.DocInvoicedAmtField = value;
                    this.RaisePropertyChanged("DocInvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMiscAmt {
            get {
                return this.DocMiscAmtField;
            }
            set {
                if ((this.DocMiscAmtField.Equals(value) != true)) {
                    this.DocMiscAmtField = value;
                    this.RaisePropertyChanged("DocMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InInvoiceAmt {
            get {
                return this.InInvoiceAmtField;
            }
            set {
                if ((this.InInvoiceAmtField.Equals(value) != true)) {
                    this.InInvoiceAmtField = value;
                    this.RaisePropertyChanged("InInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InMiscAmt {
            get {
                return this.InMiscAmtField;
            }
            set {
                if ((this.InMiscAmtField.Equals(value) != true)) {
                    this.InMiscAmtField = value;
                    this.RaisePropertyChanged("InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoicedAmt {
            get {
                return this.InvoicedAmtField;
            }
            set {
                if ((this.InvoicedAmtField.Equals(value) != true)) {
                    this.InvoicedAmtField = value;
                    this.RaisePropertyChanged("InvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscAmt {
            get {
                return this.MiscAmtField;
            }
            set {
                if ((this.MiscAmtField.Equals(value) != true)) {
                    this.MiscAmtField = value;
                    this.RaisePropertyChanged("MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeDescription {
            get {
                return this.MiscCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeDescriptionField, value) != true)) {
                    this.MiscCodeDescriptionField = value;
                    this.RaisePropertyChanged("MiscCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscCodeLCAmount {
            get {
                return this.MiscCodeLCAmountField;
            }
            set {
                if ((this.MiscCodeLCAmountField.Equals(value) != true)) {
                    this.MiscCodeLCAmountField = value;
                    this.RaisePropertyChanged("MiscCodeLCAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeLCCurrencyCode {
            get {
                return this.MiscCodeLCCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeLCCurrencyCodeField, value) != true)) {
                    this.MiscCodeLCCurrencyCodeField = value;
                    this.RaisePropertyChanged("MiscCodeLCCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeLCDisburseMethod {
            get {
                return this.MiscCodeLCDisburseMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeLCDisburseMethodField, value) != true)) {
                    this.MiscCodeLCDisburseMethodField = value;
                    this.RaisePropertyChanged("MiscCodeLCDisburseMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderSeqNum {
            get {
                return this.OrderSeqNumField;
            }
            set {
                if ((this.OrderSeqNumField.Equals(value) != true)) {
                    this.OrderSeqNumField = value;
                    this.RaisePropertyChanged("OrderSeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool POHeaderApprove {
            get {
                return this.POHeaderApproveField;
            }
            set {
                if ((this.POHeaderApproveField.Equals(value) != true)) {
                    this.POHeaderApproveField = value;
                    this.RaisePropertyChanged("POHeaderApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PONumInPrice {
            get {
                return this.PONumInPriceField;
            }
            set {
                if ((this.PONumInPriceField.Equals(value) != true)) {
                    this.PONumInPriceField = value;
                    this.RaisePropertyChanged("PONumInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONumShipName {
            get {
                return this.PONumShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumShipNameField, value) != true)) {
                    this.PONumShipNameField = value;
                    this.RaisePropertyChanged("PONumShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONumShipToConName {
            get {
                return this.PONumShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumShipToConNameField, value) != true)) {
                    this.PONumShipToConNameField = value;
                    this.RaisePropertyChanged("PONumShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InInvoiceAmt {
            get {
                return this.Rpt1InInvoiceAmtField;
            }
            set {
                if ((this.Rpt1InInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt1InInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt1InInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InMiscAmt {
            get {
                return this.Rpt1InMiscAmtField;
            }
            set {
                if ((this.Rpt1InMiscAmtField.Equals(value) != true)) {
                    this.Rpt1InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InvoicedAmt {
            get {
                return this.Rpt1InvoicedAmtField;
            }
            set {
                if ((this.Rpt1InvoicedAmtField.Equals(value) != true)) {
                    this.Rpt1InvoicedAmtField = value;
                    this.RaisePropertyChanged("Rpt1InvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1MiscAmt {
            get {
                return this.Rpt1MiscAmtField;
            }
            set {
                if ((this.Rpt1MiscAmtField.Equals(value) != true)) {
                    this.Rpt1MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrMiscAmt {
            get {
                return this.Rpt1ScrMiscAmtField;
            }
            set {
                if ((this.Rpt1ScrMiscAmtField.Equals(value) != true)) {
                    this.Rpt1ScrMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InInvoiceAmt {
            get {
                return this.Rpt2InInvoiceAmtField;
            }
            set {
                if ((this.Rpt2InInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt2InInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt2InInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InMiscAmt {
            get {
                return this.Rpt2InMiscAmtField;
            }
            set {
                if ((this.Rpt2InMiscAmtField.Equals(value) != true)) {
                    this.Rpt2InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InvoicedAmt {
            get {
                return this.Rpt2InvoicedAmtField;
            }
            set {
                if ((this.Rpt2InvoicedAmtField.Equals(value) != true)) {
                    this.Rpt2InvoicedAmtField = value;
                    this.RaisePropertyChanged("Rpt2InvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2MiscAmt {
            get {
                return this.Rpt2MiscAmtField;
            }
            set {
                if ((this.Rpt2MiscAmtField.Equals(value) != true)) {
                    this.Rpt2MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrMiscAmt {
            get {
                return this.Rpt2ScrMiscAmtField;
            }
            set {
                if ((this.Rpt2ScrMiscAmtField.Equals(value) != true)) {
                    this.Rpt2ScrMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InInvoiceAmt {
            get {
                return this.Rpt3InInvoiceAmtField;
            }
            set {
                if ((this.Rpt3InInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt3InInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt3InInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InMiscAmt {
            get {
                return this.Rpt3InMiscAmtField;
            }
            set {
                if ((this.Rpt3InMiscAmtField.Equals(value) != true)) {
                    this.Rpt3InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InvoicedAmt {
            get {
                return this.Rpt3InvoicedAmtField;
            }
            set {
                if ((this.Rpt3InvoicedAmtField.Equals(value) != true)) {
                    this.Rpt3InvoicedAmtField = value;
                    this.RaisePropertyChanged("Rpt3InvoicedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3MiscAmt {
            get {
                return this.Rpt3MiscAmtField;
            }
            set {
                if ((this.Rpt3MiscAmtField.Equals(value) != true)) {
                    this.Rpt3MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrMiscAmt {
            get {
                return this.Rpt3ScrMiscAmtField;
            }
            set {
                if ((this.Rpt3ScrMiscAmtField.Equals(value) != true)) {
                    this.Rpt3ScrMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocMiscAmt {
            get {
                return this.ScrDocMiscAmtField;
            }
            set {
                if ((this.ScrDocMiscAmtField.Equals(value) != true)) {
                    this.ScrDocMiscAmtField = value;
                    this.RaisePropertyChanged("ScrDocMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrMiscAmt {
            get {
                return this.ScrMiscAmtField;
            }
            set {
                if ((this.ScrMiscAmtField.Equals(value) != true)) {
                    this.ScrMiscAmtField = value;
                    this.RaisePropertyChanged("ScrMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POMiscTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POMiscTaxRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POMiscTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POMiscTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrDedTaxAmt {
            get {
                return this.DocScrDedTaxAmtField;
            }
            set {
                if ((this.DocScrDedTaxAmtField.Equals(value) != true)) {
                    this.DocScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrReportableAmt {
            get {
                return this.DocScrReportableAmtField;
            }
            set {
                if ((this.DocScrReportableAmtField.Equals(value) != true)) {
                    this.DocScrReportableAmtField = value;
                    this.RaisePropertyChanged("DocScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmt {
            get {
                return this.DocScrTaxAmtField;
            }
            set {
                if ((this.DocScrTaxAmtField.Equals(value) != true)) {
                    this.DocScrTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmtVar {
            get {
                return this.DocScrTaxAmtVarField;
            }
            set {
                if ((this.DocScrTaxAmtVarField.Equals(value) != true)) {
                    this.DocScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxableAmt {
            get {
                return this.DocScrTaxableAmtField;
            }
            set {
                if ((this.DocScrTaxableAmtField.Equals(value) != true)) {
                    this.DocScrTaxableAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PORelRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PORelRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ArrivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblySeqDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTOOrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTOOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTOOrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BaseQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplianceMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmViaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidatedPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContainerHeaderDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContainerHeaderPromiseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContainerShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContractOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DelPoSugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliverToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispGLAcctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DueDateChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableBTOOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableGLAcctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EstUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FailedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromPOSugChgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbCreateJobMtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbPlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbWarehouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbWhseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InspectionQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoicedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMultiRelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobSeqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkToContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockNeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockRelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MangCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MangCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MangCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MappingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoTaxRecalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotCompliantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OTSCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSResaleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool POHeaderApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLinePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineVenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PORelOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PassedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PreviousDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProjProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PromiseDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PurchasingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchasingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefDisplayAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RelQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReqChgDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReqChgQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqNumShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqNumShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SMIRcvdQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SMIRemQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToAddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShippedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShpConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoldToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseGlbFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WBSPhaseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WBSPhaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal XRelQtyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ArrivedQty {
            get {
                return this.ArrivedQtyField;
            }
            set {
                if ((this.ArrivedQtyField.Equals(value) != true)) {
                    this.ArrivedQtyField = value;
                    this.RaisePropertyChanged("ArrivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblySeqDescription {
            get {
                return this.AssemblySeqDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblySeqDescriptionField, value) != true)) {
                    this.AssemblySeqDescriptionField = value;
                    this.RaisePropertyChanged("AssemblySeqDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTOOrderLine {
            get {
                return this.BTOOrderLineField;
            }
            set {
                if ((this.BTOOrderLineField.Equals(value) != true)) {
                    this.BTOOrderLineField = value;
                    this.RaisePropertyChanged("BTOOrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTOOrderNum {
            get {
                return this.BTOOrderNumField;
            }
            set {
                if ((this.BTOOrderNumField.Equals(value) != true)) {
                    this.BTOOrderNumField = value;
                    this.RaisePropertyChanged("BTOOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTOOrderRelNum {
            get {
                return this.BTOOrderRelNumField;
            }
            set {
                if ((this.BTOOrderRelNumField.Equals(value) != true)) {
                    this.BTOOrderRelNumField = value;
                    this.RaisePropertyChanged("BTOOrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseQty {
            get {
                return this.BaseQtyField;
            }
            set {
                if ((this.BaseQtyField.Equals(value) != true)) {
                    this.BaseQtyField = value;
                    this.RaisePropertyChanged("BaseQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseUOM {
            get {
                return this.BaseUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUOMField, value) != true)) {
                    this.BaseUOMField = value;
                    this.RaisePropertyChanged("BaseUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplianceMsg {
            get {
                return this.ComplianceMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplianceMsgField, value) != true)) {
                    this.ComplianceMsgField = value;
                    this.RaisePropertyChanged("ComplianceMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmVia {
            get {
                return this.ConfirmViaField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmViaField, value) != true)) {
                    this.ConfirmViaField = value;
                    this.RaisePropertyChanged("ConfirmVia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Confirmed {
            get {
                return this.ConfirmedField;
            }
            set {
                if ((this.ConfirmedField.Equals(value) != true)) {
                    this.ConfirmedField = value;
                    this.RaisePropertyChanged("Confirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidatedPO {
            get {
                return this.ConsolidatedPOField;
            }
            set {
                if ((this.ConsolidatedPOField.Equals(value) != true)) {
                    this.ConsolidatedPOField = value;
                    this.RaisePropertyChanged("ConsolidatedPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContainerHeaderDueDate {
            get {
                return this.ContainerHeaderDueDateField;
            }
            set {
                if ((this.ContainerHeaderDueDateField.Equals(value) != true)) {
                    this.ContainerHeaderDueDateField = value;
                    this.RaisePropertyChanged("ContainerHeaderDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContainerHeaderPromiseDate {
            get {
                return this.ContainerHeaderPromiseDateField;
            }
            set {
                if ((this.ContainerHeaderPromiseDateField.Equals(value) != true)) {
                    this.ContainerHeaderPromiseDateField = value;
                    this.RaisePropertyChanged("ContainerHeaderPromiseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContainerShipped {
            get {
                return this.ContainerShippedField;
            }
            set {
                if ((this.ContainerShippedField.Equals(value) != true)) {
                    this.ContainerShippedField = value;
                    this.RaisePropertyChanged("ContainerShipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractIDField, value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContractOrder {
            get {
                return this.ContractOrderField;
            }
            set {
                if ((this.ContractOrderField.Equals(value) != true)) {
                    this.ContractOrderField = value;
                    this.RaisePropertyChanged("ContractOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DelPoSug {
            get {
                return this.DelPoSugField;
            }
            set {
                if ((this.DelPoSugField.Equals(value) != true)) {
                    this.DelPoSugField = value;
                    this.RaisePropertyChanged("DelPoSug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliverTo {
            get {
                return this.DeliverToField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliverToField, value) != true)) {
                    this.DeliverToField = value;
                    this.RaisePropertyChanged("DeliverTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispGLAcct {
            get {
                return this.DispGLAcctField;
            }
            set {
                if ((object.ReferenceEquals(this.DispGLAcctField, value) != true)) {
                    this.DispGLAcctField = value;
                    this.RaisePropertyChanged("DispGLAcct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DueDateChanged {
            get {
                return this.DueDateChangedField;
            }
            set {
                if ((this.DueDateChangedField.Equals(value) != true)) {
                    this.DueDateChangedField = value;
                    this.RaisePropertyChanged("DueDateChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableBTOOrderNum {
            get {
                return this.EnableBTOOrderNumField;
            }
            set {
                if ((this.EnableBTOOrderNumField.Equals(value) != true)) {
                    this.EnableBTOOrderNumField = value;
                    this.RaisePropertyChanged("EnableBTOOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableGLAcct {
            get {
                return this.EnableGLAcctField;
            }
            set {
                if ((this.EnableGLAcctField.Equals(value) != true)) {
                    this.EnableGLAcctField = value;
                    this.RaisePropertyChanged("EnableGLAcct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EstUnitCost {
            get {
                return this.EstUnitCostField;
            }
            set {
                if ((this.EstUnitCostField.Equals(value) != true)) {
                    this.EstUnitCostField = value;
                    this.RaisePropertyChanged("EstUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpDesc {
            get {
                return this.ExpDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpDescField, value) != true)) {
                    this.ExpDescField = value;
                    this.RaisePropertyChanged("ExpDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpOverride {
            get {
                return this.ExpOverrideField;
            }
            set {
                if ((this.ExpOverrideField.Equals(value) != true)) {
                    this.ExpOverrideField = value;
                    this.RaisePropertyChanged("ExpOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FailedQty {
            get {
                return this.FailedQtyField;
            }
            set {
                if ((this.FailedQtyField.Equals(value) != true)) {
                    this.FailedQtyField = value;
                    this.RaisePropertyChanged("FailedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromPOSugChg {
            get {
                return this.FromPOSugChgField;
            }
            set {
                if ((this.FromPOSugChgField.Equals(value) != true)) {
                    this.FromPOSugChgField = value;
                    this.RaisePropertyChanged("FromPOSugChg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbCreateJobMtl {
            get {
                return this.GlbCreateJobMtlField;
            }
            set {
                if ((this.GlbCreateJobMtlField.Equals(value) != true)) {
                    this.GlbCreateJobMtlField = value;
                    this.RaisePropertyChanged("GlbCreateJobMtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbPlant {
            get {
                return this.GlbPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPlantField, value) != true)) {
                    this.GlbPlantField = value;
                    this.RaisePropertyChanged("GlbPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbPlantName {
            get {
                return this.GlbPlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPlantNameField, value) != true)) {
                    this.GlbPlantNameField = value;
                    this.RaisePropertyChanged("GlbPlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbWarehouse {
            get {
                return this.GlbWarehouseField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbWarehouseField, value) != true)) {
                    this.GlbWarehouseField = value;
                    this.RaisePropertyChanged("GlbWarehouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbWhseName {
            get {
                return this.GlbWhseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbWhseNameField, value) != true)) {
                    this.GlbWhseNameField = value;
                    this.RaisePropertyChanged("GlbWhseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inspection {
            get {
                return this.InspectionField;
            }
            set {
                if ((this.InspectionField.Equals(value) != true)) {
                    this.InspectionField = value;
                    this.RaisePropertyChanged("Inspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InspectionQty {
            get {
                return this.InspectionQtyField;
            }
            set {
                if ((this.InspectionQtyField.Equals(value) != true)) {
                    this.InspectionQtyField = value;
                    this.RaisePropertyChanged("InspectionQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoicedQty {
            get {
                return this.InvoicedQtyField;
            }
            set {
                if ((this.InvoicedQtyField.Equals(value) != true)) {
                    this.InvoicedQtyField = value;
                    this.RaisePropertyChanged("InvoicedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMultiRel {
            get {
                return this.IsMultiRelField;
            }
            set {
                if ((this.IsMultiRelField.Equals(value) != true)) {
                    this.IsMultiRelField = value;
                    this.RaisePropertyChanged("IsMultiRel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobSeq {
            get {
                return this.JobSeqField;
            }
            set {
                if ((this.JobSeqField.Equals(value) != true)) {
                    this.JobSeqField = value;
                    this.RaisePropertyChanged("JobSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobSeqType {
            get {
                return this.JobSeqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JobSeqTypeField, value) != true)) {
                    this.JobSeqTypeField = value;
                    this.RaisePropertyChanged("JobSeqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkToContract {
            get {
                return this.LinkToContractField;
            }
            set {
                if ((this.LinkToContractField.Equals(value) != true)) {
                    this.LinkToContractField = value;
                    this.RaisePropertyChanged("LinkToContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Lock {
            get {
                return this.LockField;
            }
            set {
                if ((this.LockField.Equals(value) != true)) {
                    this.LockField = value;
                    this.RaisePropertyChanged("Lock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockDate {
            get {
                return this.LockDateField;
            }
            set {
                if ((this.LockDateField.Equals(value) != true)) {
                    this.LockDateField = value;
                    this.RaisePropertyChanged("LockDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockNeedByDate {
            get {
                return this.LockNeedByDateField;
            }
            set {
                if ((this.LockNeedByDateField.Equals(value) != true)) {
                    this.LockNeedByDateField = value;
                    this.RaisePropertyChanged("LockNeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockQty {
            get {
                return this.LockQtyField;
            }
            set {
                if ((this.LockQtyField.Equals(value) != true)) {
                    this.LockQtyField = value;
                    this.RaisePropertyChanged("LockQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockRel {
            get {
                return this.LockRelField;
            }
            set {
                if ((object.ReferenceEquals(this.LockRelField, value) != true)) {
                    this.LockRelField = value;
                    this.RaisePropertyChanged("LockRel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MangCustID {
            get {
                return this.MangCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MangCustIDField, value) != true)) {
                    this.MangCustIDField = value;
                    this.RaisePropertyChanged("MangCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MangCustName {
            get {
                return this.MangCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MangCustNameField, value) != true)) {
                    this.MangCustNameField = value;
                    this.RaisePropertyChanged("MangCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MangCustNum {
            get {
                return this.MangCustNumField;
            }
            set {
                if ((this.MangCustNumField.Equals(value) != true)) {
                    this.MangCustNumField = value;
                    this.RaisePropertyChanged("MangCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Mapping {
            get {
                return this.MappingField;
            }
            set {
                if ((this.MappingField.Equals(value) != true)) {
                    this.MappingField = value;
                    this.RaisePropertyChanged("Mapping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NeedByDate {
            get {
                return this.NeedByDateField;
            }
            set {
                if ((this.NeedByDateField.Equals(value) != true)) {
                    this.NeedByDateField = value;
                    this.RaisePropertyChanged("NeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoTaxRecalc {
            get {
                return this.NoTaxRecalcField;
            }
            set {
                if ((this.NoTaxRecalcField.Equals(value) != true)) {
                    this.NoTaxRecalcField = value;
                    this.RaisePropertyChanged("NoTaxRecalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotCompliant {
            get {
                return this.NotCompliantField;
            }
            set {
                if ((this.NotCompliantField.Equals(value) != true)) {
                    this.NotCompliantField = value;
                    this.RaisePropertyChanged("NotCompliant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress1 {
            get {
                return this.OTSAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress1Field, value) != true)) {
                    this.OTSAddress1Field = value;
                    this.RaisePropertyChanged("OTSAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress2 {
            get {
                return this.OTSAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress2Field, value) != true)) {
                    this.OTSAddress2Field = value;
                    this.RaisePropertyChanged("OTSAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress3 {
            get {
                return this.OTSAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress3Field, value) != true)) {
                    this.OTSAddress3Field = value;
                    this.RaisePropertyChanged("OTSAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCity {
            get {
                return this.OTSCityField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCityField, value) != true)) {
                    this.OTSCityField = value;
                    this.RaisePropertyChanged("OTSCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSContact {
            get {
                return this.OTSContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSContactField, value) != true)) {
                    this.OTSContactField = value;
                    this.RaisePropertyChanged("OTSContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OTSCountryNum {
            get {
                return this.OTSCountryNumField;
            }
            set {
                if ((this.OTSCountryNumField.Equals(value) != true)) {
                    this.OTSCountryNumField = value;
                    this.RaisePropertyChanged("OTSCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSFaxNum {
            get {
                return this.OTSFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSFaxNumField, value) != true)) {
                    this.OTSFaxNumField = value;
                    this.RaisePropertyChanged("OTSFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSName {
            get {
                return this.OTSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSNameField, value) != true)) {
                    this.OTSNameField = value;
                    this.RaisePropertyChanged("OTSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSPhoneNum {
            get {
                return this.OTSPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSPhoneNumField, value) != true)) {
                    this.OTSPhoneNumField = value;
                    this.RaisePropertyChanged("OTSPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSResaleID {
            get {
                return this.OTSResaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSResaleIDField, value) != true)) {
                    this.OTSResaleIDField = value;
                    this.RaisePropertyChanged("OTSResaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSState {
            get {
                return this.OTSStateField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSStateField, value) != true)) {
                    this.OTSStateField = value;
                    this.RaisePropertyChanged("OTSState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSZIP {
            get {
                return this.OTSZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSZIPField, value) != true)) {
                    this.OTSZIPField = value;
                    this.RaisePropertyChanged("OTSZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenRelease {
            get {
                return this.OpenReleaseField;
            }
            set {
                if ((this.OpenReleaseField.Equals(value) != true)) {
                    this.OpenReleaseField = value;
                    this.RaisePropertyChanged("OpenRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHeld {
            get {
                return this.OrderHeldField;
            }
            set {
                if ((this.OrderHeldField.Equals(value) != true)) {
                    this.OrderHeldField = value;
                    this.RaisePropertyChanged("OrderHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool POHeaderApprove {
            get {
                return this.POHeaderApproveField;
            }
            set {
                if ((this.POHeaderApproveField.Equals(value) != true)) {
                    this.POHeaderApproveField = value;
                    this.RaisePropertyChanged("POHeaderApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineLineDesc {
            get {
                return this.POLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineLineDescField, value) != true)) {
                    this.POLineLineDescField = value;
                    this.RaisePropertyChanged("POLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLinePartNum {
            get {
                return this.POLinePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLinePartNumField, value) != true)) {
                    this.POLinePartNumField = value;
                    this.RaisePropertyChanged("POLinePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineVenPartNum {
            get {
                return this.POLineVenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineVenPartNumField, value) != true)) {
                    this.POLineVenPartNumField = value;
                    this.RaisePropertyChanged("POLineVenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONumShipName {
            get {
                return this.PONumShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumShipNameField, value) != true)) {
                    this.PONumShipNameField = value;
                    this.RaisePropertyChanged("PONumShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONumShipToConName {
            get {
                return this.PONumShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumShipToConNameField, value) != true)) {
                    this.PONumShipToConNameField = value;
                    this.RaisePropertyChanged("PONumShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PORelOpen {
            get {
                return this.PORelOpenField;
            }
            set {
                if ((this.PORelOpenField.Equals(value) != true)) {
                    this.PORelOpenField = value;
                    this.RaisePropertyChanged("PORelOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POType {
            get {
                return this.POTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.POTypeField, value) != true)) {
                    this.POTypeField = value;
                    this.RaisePropertyChanged("POType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PassedQty {
            get {
                return this.PassedQtyField;
            }
            set {
                if ((this.PassedQtyField.Equals(value) != true)) {
                    this.PassedQtyField = value;
                    this.RaisePropertyChanged("PassedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhaseID {
            get {
                return this.PhaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PhaseIDField, value) != true)) {
                    this.PhaseIDField = value;
                    this.RaisePropertyChanged("PhaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PreviousDueDate {
            get {
                return this.PreviousDueDateField;
            }
            set {
                if ((this.PreviousDueDateField.Equals(value) != true)) {
                    this.PreviousDueDateField = value;
                    this.RaisePropertyChanged("PreviousDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProjProcessed {
            get {
                return this.ProjProcessedField;
            }
            set {
                if ((this.ProjProcessedField.Equals(value) != true)) {
                    this.ProjProcessedField = value;
                    this.RaisePropertyChanged("ProjProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectIDDescription {
            get {
                return this.ProjectIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDDescriptionField, value) != true)) {
                    this.ProjectIDDescriptionField = value;
                    this.RaisePropertyChanged("ProjectIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PromiseDt {
            get {
                return this.PromiseDtField;
            }
            set {
                if ((this.PromiseDtField.Equals(value) != true)) {
                    this.PromiseDtField = value;
                    this.RaisePropertyChanged("PromiseDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PurchasingFactor {
            get {
                return this.PurchasingFactorField;
            }
            set {
                if ((this.PurchasingFactorField.Equals(value) != true)) {
                    this.PurchasingFactorField = value;
                    this.RaisePropertyChanged("PurchasingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchasingFactorDirection {
            get {
                return this.PurchasingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchasingFactorDirectionField, value) != true)) {
                    this.PurchasingFactorDirectionField = value;
                    this.RaisePropertyChanged("PurchasingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCode {
            get {
                return this.RefCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeField, value) != true)) {
                    this.RefCodeField = value;
                    this.RaisePropertyChanged("RefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCodeDesc {
            get {
                return this.RefCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeDescField, value) != true)) {
                    this.RefCodeDescField = value;
                    this.RaisePropertyChanged("RefCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCodeStatus {
            get {
                return this.RefCodeStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeStatusField, value) != true)) {
                    this.RefCodeStatusField = value;
                    this.RaisePropertyChanged("RefCodeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefDisplayAccount {
            get {
                return this.RefDisplayAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.RefDisplayAccountField, value) != true)) {
                    this.RefDisplayAccountField = value;
                    this.RaisePropertyChanged("RefDisplayAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefType {
            get {
                return this.RefTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RefTypeField, value) != true)) {
                    this.RefTypeField = value;
                    this.RaisePropertyChanged("RefType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RelQty {
            get {
                return this.RelQtyField;
            }
            set {
                if ((this.RelQtyField.Equals(value) != true)) {
                    this.RelQtyField = value;
                    this.RaisePropertyChanged("RelQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReqChgDate {
            get {
                return this.ReqChgDateField;
            }
            set {
                if ((this.ReqChgDateField.Equals(value) != true)) {
                    this.ReqChgDateField = value;
                    this.RaisePropertyChanged("ReqChgDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReqChgQty {
            get {
                return this.ReqChgQtyField;
            }
            set {
                if ((this.ReqChgQtyField.Equals(value) != true)) {
                    this.ReqChgQtyField = value;
                    this.RaisePropertyChanged("ReqChgQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqLine {
            get {
                return this.ReqLineField;
            }
            set {
                if ((this.ReqLineField.Equals(value) != true)) {
                    this.ReqLineField = value;
                    this.RaisePropertyChanged("ReqLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqLineLineDesc {
            get {
                return this.ReqLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqLineLineDescField, value) != true)) {
                    this.ReqLineLineDescField = value;
                    this.RaisePropertyChanged("ReqLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqNum {
            get {
                return this.ReqNumField;
            }
            set {
                if ((this.ReqNumField.Equals(value) != true)) {
                    this.ReqNumField = value;
                    this.RaisePropertyChanged("ReqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqNumShipName {
            get {
                return this.ReqNumShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqNumShipNameField, value) != true)) {
                    this.ReqNumShipNameField = value;
                    this.RaisePropertyChanged("ReqNumShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqNumShipToConName {
            get {
                return this.ReqNumShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqNumShipToConNameField, value) != true)) {
                    this.ReqNumShipToConNameField = value;
                    this.RaisePropertyChanged("ReqNumShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SMIRcvdQty {
            get {
                return this.SMIRcvdQtyField;
            }
            set {
                if ((this.SMIRcvdQtyField.Equals(value) != true)) {
                    this.SMIRcvdQtyField = value;
                    this.RaisePropertyChanged("SMIRcvdQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SMIRemQty {
            get {
                return this.SMIRemQtyField;
            }
            set {
                if ((this.SMIRemQtyField.Equals(value) != true)) {
                    this.SMIRemQtyField = value;
                    this.RaisePropertyChanged("SMIRemQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddressList {
            get {
                return this.ShipToAddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddressListField, value) != true)) {
                    this.ShipToAddressListField = value;
                    this.RaisePropertyChanged("ShipToAddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustNumBTName {
            get {
                return this.ShipToCustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustNumBTNameField, value) != true)) {
                    this.ShipToCustNumBTNameField = value;
                    this.RaisePropertyChanged("ShipToCustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustNumCustID {
            get {
                return this.ShipToCustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustNumCustIDField, value) != true)) {
                    this.ShipToCustNumCustIDField = value;
                    this.RaisePropertyChanged("ShipToCustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustNumName {
            get {
                return this.ShipToCustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustNumNameField, value) != true)) {
                    this.ShipToCustNumNameField = value;
                    this.RaisePropertyChanged("ShipToCustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShippedDate {
            get {
                return this.ShippedDateField;
            }
            set {
                if ((this.ShippedDateField.Equals(value) != true)) {
                    this.ShippedDateField = value;
                    this.RaisePropertyChanged("ShippedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShippedQty {
            get {
                return this.ShippedQtyField;
            }
            set {
                if ((this.ShippedQtyField.Equals(value) != true)) {
                    this.ShippedQtyField = value;
                    this.RaisePropertyChanged("ShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShpConNum {
            get {
                return this.ShpConNumField;
            }
            set {
                if ((this.ShpConNumField.Equals(value) != true)) {
                    this.ShpConNumField = value;
                    this.RaisePropertyChanged("ShpConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoldToNum {
            get {
                return this.SoldToNumField;
            }
            set {
                if ((this.SoldToNumField.Equals(value) != true)) {
                    this.SoldToNumField = value;
                    this.RaisePropertyChanged("SoldToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToNumBTName {
            get {
                return this.SoldToNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToNumBTNameField, value) != true)) {
                    this.SoldToNumBTNameField = value;
                    this.RaisePropertyChanged("SoldToNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToNumCustID {
            get {
                return this.SoldToNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToNumCustIDField, value) != true)) {
                    this.SoldToNumCustIDField = value;
                    this.RaisePropertyChanged("SoldToNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToNumName {
            get {
                return this.SoldToNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToNumNameField, value) != true)) {
                    this.SoldToNumNameField = value;
                    this.RaisePropertyChanged("SoldToNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranType {
            get {
                return this.TranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TranTypeField, value) != true)) {
                    this.TranTypeField = value;
                    this.RaisePropertyChanged("TranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranTypeDesc {
            get {
                return this.TranTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TranTypeDescField, value) != true)) {
                    this.TranTypeDescField = value;
                    this.RaisePropertyChanged("TranTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseGlbFields {
            get {
                return this.UseGlbFieldsField;
            }
            set {
                if ((this.UseGlbFieldsField.Equals(value) != true)) {
                    this.UseGlbFieldsField = value;
                    this.RaisePropertyChanged("UseGlbFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseOTS {
            get {
                return this.UseOTSField;
            }
            set {
                if ((this.UseOTSField.Equals(value) != true)) {
                    this.UseOTSField = value;
                    this.RaisePropertyChanged("UseOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidRelease {
            get {
                return this.VoidReleaseField;
            }
            set {
                if ((this.VoidReleaseField.Equals(value) != true)) {
                    this.VoidReleaseField = value;
                    this.RaisePropertyChanged("VoidRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WBSPhaseDescription {
            get {
                return this.WBSPhaseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WBSPhaseDescriptionField, value) != true)) {
                    this.WBSPhaseDescriptionField = value;
                    this.RaisePropertyChanged("WBSPhaseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WBSPhaseID {
            get {
                return this.WBSPhaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WBSPhaseIDField, value) != true)) {
                    this.WBSPhaseIDField = value;
                    this.RaisePropertyChanged("WBSPhaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCodeDescription {
            get {
                return this.WarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeDescriptionField, value) != true)) {
                    this.WarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal XRelQty {
            get {
                return this.XRelQtyField;
            }
            set {
                if ((this.XRelQtyField.Equals(value) != true)) {
                    this.XRelQtyField = value;
                    this.RaisePropertyChanged("XRelQty");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PORelAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PORelAttchRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PORelTGLCRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PORelTGLCRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ABTUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string APInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ARInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcctOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BookCreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BookDebitAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COACodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COADescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelTGLCRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CorrAccUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditStatAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DebitAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DebitStatAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalCalendarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalYearSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAccountAccountDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAccountGLAcctDispField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAccountGLShortAcctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAcctContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLBookCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLBookDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsModifiedByUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JournalLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JournalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaborDtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaborHedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovementNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MovementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedToFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReqRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue11Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue12Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue13Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue14Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue15Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue16Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue17Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue18Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue19Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue20Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatUOMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatisticalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysGLControlCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysGLControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TGLCTranNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TranDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TranNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserCanModifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABTUID {
            get {
                return this.ABTUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ABTUIDField, value) != true)) {
                    this.ABTUIDField = value;
                    this.RaisePropertyChanged("ABTUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APInvoiceNum {
            get {
                return this.APInvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.APInvoiceNumField, value) != true)) {
                    this.APInvoiceNumField = value;
                    this.RaisePropertyChanged("APInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ARInvoiceNum {
            get {
                return this.ARInvoiceNumField;
            }
            set {
                if ((this.ARInvoiceNumField.Equals(value) != true)) {
                    this.ARInvoiceNumField = value;
                    this.RaisePropertyChanged("ARInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AcctOverride {
            get {
                return this.AcctOverrideField;
            }
            set {
                if ((this.AcctOverrideField.Equals(value) != true)) {
                    this.AcctOverrideField = value;
                    this.RaisePropertyChanged("AcctOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BookCreditAmount {
            get {
                return this.BookCreditAmountField;
            }
            set {
                if ((this.BookCreditAmountField.Equals(value) != true)) {
                    this.BookCreditAmountField = value;
                    this.RaisePropertyChanged("BookCreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BookDebitAmount {
            get {
                return this.BookDebitAmountField;
            }
            set {
                if ((this.BookDebitAmountField.Equals(value) != true)) {
                    this.BookDebitAmountField = value;
                    this.RaisePropertyChanged("BookDebitAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookID {
            get {
                return this.BookIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BookIDField, value) != true)) {
                    this.BookIDField = value;
                    this.RaisePropertyChanged("BookID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COACode {
            get {
                return this.COACodeField;
            }
            set {
                if ((object.ReferenceEquals(this.COACodeField, value) != true)) {
                    this.COACodeField = value;
                    this.RaisePropertyChanged("COACode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COADescription {
            get {
                return this.COADescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.COADescriptionField, value) != true)) {
                    this.COADescriptionField = value;
                    this.RaisePropertyChanged("COADescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelTGLCRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CorrAccUID {
            get {
                return this.CorrAccUIDField;
            }
            set {
                if ((this.CorrAccUIDField.Equals(value) != true)) {
                    this.CorrAccUIDField = value;
                    this.RaisePropertyChanged("CorrAccUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditAmount {
            get {
                return this.CreditAmountField;
            }
            set {
                if ((this.CreditAmountField.Equals(value) != true)) {
                    this.CreditAmountField = value;
                    this.RaisePropertyChanged("CreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditStatAmt {
            get {
                return this.CreditStatAmtField;
            }
            set {
                if ((this.CreditStatAmtField.Equals(value) != true)) {
                    this.CreditStatAmtField = value;
                    this.RaisePropertyChanged("CreditStatAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DebitAmount {
            get {
                return this.DebitAmountField;
            }
            set {
                if ((this.DebitAmountField.Equals(value) != true)) {
                    this.DebitAmountField = value;
                    this.RaisePropertyChanged("DebitAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DebitStatAmt {
            get {
                return this.DebitStatAmtField;
            }
            set {
                if ((this.DebitStatAmtField.Equals(value) != true)) {
                    this.DebitStatAmtField = value;
                    this.RaisePropertyChanged("DebitStatAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompanyID {
            get {
                return this.ExtCompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyIDField, value) != true)) {
                    this.ExtCompanyIDField = value;
                    this.RaisePropertyChanged("ExtCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalCalendarID {
            get {
                return this.FiscalCalendarIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalCalendarIDField, value) != true)) {
                    this.FiscalCalendarIDField = value;
                    this.RaisePropertyChanged("FiscalCalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalYear {
            get {
                return this.FiscalYearField;
            }
            set {
                if ((this.FiscalYearField.Equals(value) != true)) {
                    this.FiscalYearField = value;
                    this.RaisePropertyChanged("FiscalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalYearSuffix {
            get {
                return this.FiscalYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalYearSuffixField, value) != true)) {
                    this.FiscalYearSuffixField = value;
                    this.RaisePropertyChanged("FiscalYearSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAccount {
            get {
                return this.GLAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAccountField, value) != true)) {
                    this.GLAccountField = value;
                    this.RaisePropertyChanged("GLAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAccountAccountDesc {
            get {
                return this.GLAccountAccountDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAccountAccountDescField, value) != true)) {
                    this.GLAccountAccountDescField = value;
                    this.RaisePropertyChanged("GLAccountAccountDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAccountGLAcctDisp {
            get {
                return this.GLAccountGLAcctDispField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAccountGLAcctDispField, value) != true)) {
                    this.GLAccountGLAcctDispField = value;
                    this.RaisePropertyChanged("GLAccountGLAcctDisp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAccountGLShortAcct {
            get {
                return this.GLAccountGLShortAcctField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAccountGLShortAcctField, value) != true)) {
                    this.GLAccountGLShortAcctField = value;
                    this.RaisePropertyChanged("GLAccountGLShortAcct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAcctContext {
            get {
                return this.GLAcctContextField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAcctContextField, value) != true)) {
                    this.GLAcctContextField = value;
                    this.RaisePropertyChanged("GLAcctContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLBookCurrencyCode {
            get {
                return this.GLBookCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLBookCurrencyCodeField, value) != true)) {
                    this.GLBookCurrencyCodeField = value;
                    this.RaisePropertyChanged("GLBookCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLBookDescription {
            get {
                return this.GLBookDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GLBookDescriptionField, value) != true)) {
                    this.GLBookDescriptionField = value;
                    this.RaisePropertyChanged("GLBookDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternalCompany {
            get {
                return this.IsExternalCompanyField;
            }
            set {
                if ((this.IsExternalCompanyField.Equals(value) != true)) {
                    this.IsExternalCompanyField = value;
                    this.RaisePropertyChanged("IsExternalCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModifiedByUser {
            get {
                return this.IsModifiedByUserField;
            }
            set {
                if ((this.IsModifiedByUserField.Equals(value) != true)) {
                    this.IsModifiedByUserField = value;
                    this.RaisePropertyChanged("IsModifiedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalCode {
            get {
                return this.JournalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalCodeField, value) != true)) {
                    this.JournalCodeField = value;
                    this.RaisePropertyChanged("JournalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JournalLine {
            get {
                return this.JournalLineField;
            }
            set {
                if ((this.JournalLineField.Equals(value) != true)) {
                    this.JournalLineField = value;
                    this.RaisePropertyChanged("JournalLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JournalNum {
            get {
                return this.JournalNumField;
            }
            set {
                if ((this.JournalNumField.Equals(value) != true)) {
                    this.JournalNumField = value;
                    this.RaisePropertyChanged("JournalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key1 {
            get {
                return this.Key1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key1Field, value) != true)) {
                    this.Key1Field = value;
                    this.RaisePropertyChanged("Key1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key2 {
            get {
                return this.Key2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key2Field, value) != true)) {
                    this.Key2Field = value;
                    this.RaisePropertyChanged("Key2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key3 {
            get {
                return this.Key3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key3Field, value) != true)) {
                    this.Key3Field = value;
                    this.RaisePropertyChanged("Key3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key4 {
            get {
                return this.Key4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key4Field, value) != true)) {
                    this.Key4Field = value;
                    this.RaisePropertyChanged("Key4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key5 {
            get {
                return this.Key5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key5Field, value) != true)) {
                    this.Key5Field = value;
                    this.RaisePropertyChanged("Key5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key6 {
            get {
                return this.Key6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key6Field, value) != true)) {
                    this.Key6Field = value;
                    this.RaisePropertyChanged("Key6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LaborDtlSeq {
            get {
                return this.LaborDtlSeqField;
            }
            set {
                if ((this.LaborDtlSeqField.Equals(value) != true)) {
                    this.LaborDtlSeqField = value;
                    this.RaisePropertyChanged("LaborDtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LaborHedSeq {
            get {
                return this.LaborHedSeqField;
            }
            set {
                if ((this.LaborHedSeqField.Equals(value) != true)) {
                    this.LaborHedSeqField = value;
                    this.RaisePropertyChanged("LaborHedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovementNum {
            get {
                return this.MovementNumField;
            }
            set {
                if ((this.MovementNumField.Equals(value) != true)) {
                    this.MovementNumField = value;
                    this.RaisePropertyChanged("MovementNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MovementType {
            get {
                return this.MovementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MovementTypeField, value) != true)) {
                    this.MovementTypeField = value;
                    this.RaisePropertyChanged("MovementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordType {
            get {
                return this.RecordTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordTypeField, value) != true)) {
                    this.RecordTypeField = value;
                    this.RaisePropertyChanged("RecordType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedToFile {
            get {
                return this.RelatedToFileField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedToFileField, value) != true)) {
                    this.RelatedToFileField = value;
                    this.RaisePropertyChanged("RelatedToFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReqRef {
            get {
                return this.ReqRefField;
            }
            set {
                if ((this.ReqRefField.Equals(value) != true)) {
                    this.ReqRefField = value;
                    this.RaisePropertyChanged("ReqRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleUID {
            get {
                return this.RuleUIDField;
            }
            set {
                if ((this.RuleUIDField.Equals(value) != true)) {
                    this.RuleUIDField = value;
                    this.RaisePropertyChanged("RuleUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue1 {
            get {
                return this.SegValue1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue1Field, value) != true)) {
                    this.SegValue1Field = value;
                    this.RaisePropertyChanged("SegValue1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue10 {
            get {
                return this.SegValue10Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue10Field, value) != true)) {
                    this.SegValue10Field = value;
                    this.RaisePropertyChanged("SegValue10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue11 {
            get {
                return this.SegValue11Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue11Field, value) != true)) {
                    this.SegValue11Field = value;
                    this.RaisePropertyChanged("SegValue11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue12 {
            get {
                return this.SegValue12Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue12Field, value) != true)) {
                    this.SegValue12Field = value;
                    this.RaisePropertyChanged("SegValue12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue13 {
            get {
                return this.SegValue13Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue13Field, value) != true)) {
                    this.SegValue13Field = value;
                    this.RaisePropertyChanged("SegValue13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue14 {
            get {
                return this.SegValue14Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue14Field, value) != true)) {
                    this.SegValue14Field = value;
                    this.RaisePropertyChanged("SegValue14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue15 {
            get {
                return this.SegValue15Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue15Field, value) != true)) {
                    this.SegValue15Field = value;
                    this.RaisePropertyChanged("SegValue15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue16 {
            get {
                return this.SegValue16Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue16Field, value) != true)) {
                    this.SegValue16Field = value;
                    this.RaisePropertyChanged("SegValue16");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue17 {
            get {
                return this.SegValue17Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue17Field, value) != true)) {
                    this.SegValue17Field = value;
                    this.RaisePropertyChanged("SegValue17");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue18 {
            get {
                return this.SegValue18Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue18Field, value) != true)) {
                    this.SegValue18Field = value;
                    this.RaisePropertyChanged("SegValue18");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue19 {
            get {
                return this.SegValue19Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue19Field, value) != true)) {
                    this.SegValue19Field = value;
                    this.RaisePropertyChanged("SegValue19");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue2 {
            get {
                return this.SegValue2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue2Field, value) != true)) {
                    this.SegValue2Field = value;
                    this.RaisePropertyChanged("SegValue2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue20 {
            get {
                return this.SegValue20Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue20Field, value) != true)) {
                    this.SegValue20Field = value;
                    this.RaisePropertyChanged("SegValue20");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue3 {
            get {
                return this.SegValue3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue3Field, value) != true)) {
                    this.SegValue3Field = value;
                    this.RaisePropertyChanged("SegValue3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue4 {
            get {
                return this.SegValue4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue4Field, value) != true)) {
                    this.SegValue4Field = value;
                    this.RaisePropertyChanged("SegValue4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue5 {
            get {
                return this.SegValue5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue5Field, value) != true)) {
                    this.SegValue5Field = value;
                    this.RaisePropertyChanged("SegValue5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue6 {
            get {
                return this.SegValue6Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue6Field, value) != true)) {
                    this.SegValue6Field = value;
                    this.RaisePropertyChanged("SegValue6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue7 {
            get {
                return this.SegValue7Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue7Field, value) != true)) {
                    this.SegValue7Field = value;
                    this.RaisePropertyChanged("SegValue7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue8 {
            get {
                return this.SegValue8Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue8Field, value) != true)) {
                    this.SegValue8Field = value;
                    this.RaisePropertyChanged("SegValue8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue9 {
            get {
                return this.SegValue9Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue9Field, value) != true)) {
                    this.SegValue9Field = value;
                    this.RaisePropertyChanged("SegValue9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatUOMCode {
            get {
                return this.StatUOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatUOMCodeField, value) != true)) {
                    this.StatUOMCodeField = value;
                    this.RaisePropertyChanged("StatUOMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Statistical {
            get {
                return this.StatisticalField;
            }
            set {
                if ((this.StatisticalField.Equals(value) != true)) {
                    this.StatisticalField = value;
                    this.RaisePropertyChanged("Statistical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SysDate {
            get {
                return this.SysDateField;
            }
            set {
                if ((this.SysDateField.Equals(value) != true)) {
                    this.SysDateField = value;
                    this.RaisePropertyChanged("SysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysGLControlCode {
            get {
                return this.SysGLControlCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SysGLControlCodeField, value) != true)) {
                    this.SysGLControlCodeField = value;
                    this.RaisePropertyChanged("SysGLControlCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysGLControlType {
            get {
                return this.SysGLControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SysGLControlTypeField, value) != true)) {
                    this.SysGLControlTypeField = value;
                    this.RaisePropertyChanged("SysGLControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysTime {
            get {
                return this.SysTimeField;
            }
            set {
                if ((this.SysTimeField.Equals(value) != true)) {
                    this.SysTimeField = value;
                    this.RaisePropertyChanged("SysTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TGLCTranNum {
            get {
                return this.TGLCTranNumField;
            }
            set {
                if ((this.TGLCTranNumField.Equals(value) != true)) {
                    this.TGLCTranNumField = value;
                    this.RaisePropertyChanged("TGLCTranNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TranDate {
            get {
                return this.TranDateField;
            }
            set {
                if ((this.TranDateField.Equals(value) != true)) {
                    this.TranDateField = value;
                    this.RaisePropertyChanged("TranDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TranNum {
            get {
                return this.TranNumField;
            }
            set {
                if ((this.TranNumField.Equals(value) != true)) {
                    this.TranNumField = value;
                    this.RaisePropertyChanged("TranNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranSource {
            get {
                return this.TranSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.TranSourceField, value) != true)) {
                    this.TranSourceField = value;
                    this.RaisePropertyChanged("TranSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransAmt {
            get {
                return this.TransAmtField;
            }
            set {
                if ((this.TransAmtField.Equals(value) != true)) {
                    this.TransAmtField = value;
                    this.RaisePropertyChanged("TransAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserCanModify {
            get {
                return this.UserCanModifyField;
            }
            set {
                if ((this.UserCanModifyField.Equals(value) != true)) {
                    this.UserCanModifyField = value;
                    this.RaisePropertyChanged("UserCanModify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PORelTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PORelTaxRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PORelTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PORelTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrDedTaxAmt {
            get {
                return this.DocScrDedTaxAmtField;
            }
            set {
                if ((this.DocScrDedTaxAmtField.Equals(value) != true)) {
                    this.DocScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrReportableAmt {
            get {
                return this.DocScrReportableAmtField;
            }
            set {
                if ((this.DocScrReportableAmtField.Equals(value) != true)) {
                    this.DocScrReportableAmtField = value;
                    this.RaisePropertyChanged("DocScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmt {
            get {
                return this.DocScrTaxAmtField;
            }
            set {
                if ((this.DocScrTaxAmtField.Equals(value) != true)) {
                    this.DocScrTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmtVar {
            get {
                return this.DocScrTaxAmtVarField;
            }
            set {
                if ((this.DocScrTaxAmtVarField.Equals(value) != true)) {
                    this.DocScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxableAmt {
            get {
                return this.DocScrTaxableAmtField;
            }
            set {
                if ((this.DocScrTaxableAmtField.Equals(value) != true)) {
                    this.DocScrTaxableAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartSubsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartSubsRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.PartSubsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultSubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubPartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubPartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubPartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubPartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SugOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SuggestedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.PartSubsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultSub {
            get {
                return this.DefaultSubField;
            }
            set {
                if ((this.DefaultSubField.Equals(value) != true)) {
                    this.DefaultSubField = value;
                    this.RaisePropertyChanged("DefaultSub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyPer {
            get {
                return this.QtyPerField;
            }
            set {
                if ((this.QtyPerField.Equals(value) != true)) {
                    this.QtyPerField = value;
                    this.RaisePropertyChanged("QtyPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecType {
            get {
                return this.RecTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecTypeField, value) != true)) {
                    this.RecTypeField = value;
                    this.RaisePropertyChanged("RecType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPart {
            get {
                return this.SubPartField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartField, value) != true)) {
                    this.SubPartField = value;
                    this.RaisePropertyChanged("SubPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartIUM {
            get {
                return this.SubPartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartIUMField, value) != true)) {
                    this.SubPartIUMField = value;
                    this.RaisePropertyChanged("SubPartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartPartDescription {
            get {
                return this.SubPartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartPartDescriptionField, value) != true)) {
                    this.SubPartPartDescriptionField = value;
                    this.RaisePropertyChanged("SubPartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartPricePerCode {
            get {
                return this.SubPartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartPricePerCodeField, value) != true)) {
                    this.SubPartPricePerCodeField = value;
                    this.RaisePropertyChanged("SubPartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartSalesUM {
            get {
                return this.SubPartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartSalesUMField, value) != true)) {
                    this.SubPartSalesUMField = value;
                    this.RaisePropertyChanged("SubPartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubPartSellingFactor {
            get {
                return this.SubPartSellingFactorField;
            }
            set {
                if ((this.SubPartSellingFactorField.Equals(value) != true)) {
                    this.SubPartSellingFactorField = value;
                    this.RaisePropertyChanged("SubPartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubPartTrackDimension {
            get {
                return this.SubPartTrackDimensionField;
            }
            set {
                if ((this.SubPartTrackDimensionField.Equals(value) != true)) {
                    this.SubPartTrackDimensionField = value;
                    this.RaisePropertyChanged("SubPartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubPartTrackLots {
            get {
                return this.SubPartTrackLotsField;
            }
            set {
                if ((this.SubPartTrackLotsField.Equals(value) != true)) {
                    this.SubPartTrackLotsField = value;
                    this.RaisePropertyChanged("SubPartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubPartTrackSerialNum {
            get {
                return this.SubPartTrackSerialNumField;
            }
            set {
                if ((this.SubPartTrackSerialNumField.Equals(value) != true)) {
                    this.SubPartTrackSerialNumField = value;
                    this.RaisePropertyChanged("SubPartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SugOrderQty {
            get {
                return this.SugOrderQtyField;
            }
            set {
                if ((this.SugOrderQtyField.Equals(value) != true)) {
                    this.SugOrderQtyField = value;
                    this.RaisePropertyChanged("SugOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SuggestedQty {
            get {
                return this.SuggestedQtyField;
            }
            set {
                if ((this.SuggestedQtyField.Equals(value) != true)) {
                    this.SuggestedQtyField = value;
                    this.RaisePropertyChanged("SuggestedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POReceiptsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POReceiptsRow : EpicorConsole.Epicor.POSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArrivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.POReceiptsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContainerLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LCFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCSpecLineDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCUpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OntimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurRemQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RemainingSMIQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThisTranQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThisTranUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VenRemQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VendorQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VolumeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedLCVariance {
            get {
                return this.AppliedLCVarianceField;
            }
            set {
                if ((this.AppliedLCVarianceField.Equals(value) != true)) {
                    this.AppliedLCVarianceField = value;
                    this.RaisePropertyChanged("AppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedRcptLCAmt {
            get {
                return this.AppliedRcptLCAmtField;
            }
            set {
                if ((this.AppliedRcptLCAmtField.Equals(value) != true)) {
                    this.AppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("AppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArrivedDate {
            get {
                return this.ArrivedDateField;
            }
            set {
                if ((this.ArrivedDateField.Equals(value) != true)) {
                    this.ArrivedDateField = value;
                    this.RaisePropertyChanged("ArrivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.POReceiptsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContainerLCAmt {
            get {
                return this.ContainerLCAmtField;
            }
            set {
                if ((this.ContainerLCAmtField.Equals(value) != true)) {
                    this.ContainerLCAmtField = value;
                    this.RaisePropertyChanged("ContainerLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocVendorUnitCost {
            get {
                return this.DocVendorUnitCostField;
            }
            set {
                if ((this.DocVendorUnitCostField.Equals(value) != true)) {
                    this.DocVendorUnitCostField = value;
                    this.RaisePropertyChanged("DocVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumField, value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCAmt {
            get {
                return this.LCAmtField;
            }
            set {
                if ((this.LCAmtField.Equals(value) != true)) {
                    this.LCAmtField = value;
                    this.RaisePropertyChanged("LCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LCFlag {
            get {
                return this.LCFlagField;
            }
            set {
                if ((this.LCFlagField.Equals(value) != true)) {
                    this.LCFlagField = value;
                    this.RaisePropertyChanged("LCFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCMtlBurUnitCost {
            get {
                return this.LCMtlBurUnitCostField;
            }
            set {
                if ((this.LCMtlBurUnitCostField.Equals(value) != true)) {
                    this.LCMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("LCMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCSpecLineDutyAmt {
            get {
                return this.LCSpecLineDutyAmtField;
            }
            set {
                if ((this.LCSpecLineDutyAmtField.Equals(value) != true)) {
                    this.LCSpecLineDutyAmtField = value;
                    this.RaisePropertyChanged("LCSpecLineDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCUpliftIndCost {
            get {
                return this.LCUpliftIndCostField;
            }
            set {
                if ((this.LCUpliftIndCostField.Equals(value) != true)) {
                    this.LCUpliftIndCostField = value;
                    this.RaisePropertyChanged("LCUpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ontime {
            get {
                return this.OntimeField;
            }
            set {
                if ((object.ReferenceEquals(this.OntimeField, value) != true)) {
                    this.OntimeField = value;
                    this.RaisePropertyChanged("Ontime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenRelease {
            get {
                return this.OpenReleaseField;
            }
            set {
                if ((this.OpenReleaseField.Equals(value) != true)) {
                    this.OpenReleaseField = value;
                    this.RaisePropertyChanged("OpenRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurQty {
            get {
                return this.OurQtyField;
            }
            set {
                if ((this.OurQtyField.Equals(value) != true)) {
                    this.OurQtyField = value;
                    this.RaisePropertyChanged("OurQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurRemQty {
            get {
                return this.OurRemQtyField;
            }
            set {
                if ((this.OurRemQtyField.Equals(value) != true)) {
                    this.OurRemQtyField = value;
                    this.RaisePropertyChanged("OurRemQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurUnitCost {
            get {
                return this.OurUnitCostField;
            }
            set {
                if ((this.OurUnitCostField.Equals(value) != true)) {
                    this.OurUnitCostField = value;
                    this.RaisePropertyChanged("OurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceiptDate {
            get {
                return this.ReceiptDateField;
            }
            set {
                if ((this.ReceiptDateField.Equals(value) != true)) {
                    this.ReceiptDateField = value;
                    this.RaisePropertyChanged("ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RemainingSMIQty {
            get {
                return this.RemainingSMIQtyField;
            }
            set {
                if ((this.RemainingSMIQtyField.Equals(value) != true)) {
                    this.RemainingSMIQtyField = value;
                    this.RaisePropertyChanged("RemainingSMIQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThisTranQty {
            get {
                return this.ThisTranQtyField;
            }
            set {
                if ((this.ThisTranQtyField.Equals(value) != true)) {
                    this.ThisTranQtyField = value;
                    this.RaisePropertyChanged("ThisTranQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThisTranUOM {
            get {
                return this.ThisTranUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ThisTranUOMField, value) != true)) {
                    this.ThisTranUOMField = value;
                    this.RaisePropertyChanged("ThisTranUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VenPartNum {
            get {
                return this.VenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VenPartNumField, value) != true)) {
                    this.VenPartNumField = value;
                    this.RaisePropertyChanged("VenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VenRemQty {
            get {
                return this.VenRemQtyField;
            }
            set {
                if ((this.VenRemQtyField.Equals(value) != true)) {
                    this.VenRemQtyField = value;
                    this.RaisePropertyChanged("VenRemQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName {
            get {
                return this.VendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumNameField, value) != true)) {
                    this.VendorNumNameField = value;
                    this.RaisePropertyChanged("VendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VendorQty {
            get {
                return this.VendorQtyField;
            }
            set {
                if ((this.VendorQtyField.Equals(value) != true)) {
                    this.VendorQtyField = value;
                    this.RaisePropertyChanged("VendorQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeaderListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POHeaderListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenOrder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidOrder = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOB = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCode = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipAddress1 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipAddress2 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipAddress3 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipCity = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipState = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipCountry = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyerID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHeld = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToConName = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToPrint = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorVendorID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorName = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyerIDName = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOBDescription = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovedDate = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovedBy = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCodeDescription = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approve = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovalStatus = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POType = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 36,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PODetailRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PODetailRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenLine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONUM = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitCost = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnitCost = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderQty = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XOrderQty = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxable = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostPerCode = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VenPartNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentText = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvInspectionReq = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvancePayBal = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAdvancePayBal = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Confirmed = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateChgReq = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyChgReq = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumChgReq = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNumChgReq = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmDate = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmVia = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrcChgReq = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractActive = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractQty = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractUnitCost = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractDocUnitCost = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AdvancePayBal = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AdvancePayBal = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AdvancePayBal = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1UnitCost = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2UnitCost = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3UnitCost = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractQtyUOM = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ContractUnitCost = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ContractUnitCost = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ContractUnitCost = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseQty = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseUOM = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTOOrderNum = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTOOrderLine = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPartOpts = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgPartOpts = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartOpts = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgNum = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgPartNum = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartNum = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartType = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfigUnitCost = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfigBaseUnitCost = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvOverRide = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BasePartNum = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseRevisionNum = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Direction = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Per = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaintainPricingUnits = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideConversion = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowsManualFactor = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepRowsManualFactorTmp = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToSupplierDate = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Factor = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricingQty = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricingUnitPrice = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOM = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupSeq = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPricingUnitPrice = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverridePriceList = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyOption = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigComment = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmartString = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmartStringProcessed = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractID = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkToContract = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelCurrPricingUnitPrice = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCLinkRemoved = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoTaxRecalc = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InUnitCost = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInUnitCost = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InUnitCost = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InUnitCost = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAdvancePayBal = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInAdvancePayBal = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InAdvancePayBal = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InAdvancePayBal = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InAdvancePayBal = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InContractUnitCost = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInContractUnitCost = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InContractUnitCost = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InContractUnitCost = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InContractUnitCost = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InUnitCost = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocExtCost = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCost = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ExtCost = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ExtCost = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ExtCost = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMiscCost = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCost = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1MiscCost = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2MiscCost = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3MiscCost = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowPORecon = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcDocInTaxAmt = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcInTaxAmt = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcOurQty = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        calcPartPUM = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcPurchasingFactor = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcPurchasingFactorDirection = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcTotalCost = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcTranType = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcVendQty = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Configured = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidatedPO = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractOrder = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostPerCodeContract = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CPFactor = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DelPoSug = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisablePartRevBtn = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispAcctDescription = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispExpAccount = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrUnitCost = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableRcvInspectionReq = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpChart = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpDivision = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpGLDept = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromPOSugChg = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkedSOConfig = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultiRel = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonMasterPart = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpCode = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartQtyBearing = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POHeaderApprove = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelOneOpenRelease = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceBrkBTNSensitive = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCodeDesc = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCodeStatus = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReferenceCode = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1CalcInTaxAmt = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1CalcTotalCost = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrUnitCost = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2CalcInTaxAmt = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2CalcTotalCost = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrUnitCost = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3CalcInTaxAmt = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3CalcTotalCost = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrUnitCost = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrUnitCost = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetCheveron = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubAvail = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateRelRecords = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateRelTaxable = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendPurPoint = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AskRefCode = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcAssemblySeq = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcDocTotalCost = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcDueDate = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcJobNum = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcJobSeq = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcJobSeqType = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        calcLeadTime = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcMangCustID = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcMangCustName = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcMangCustNum = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcMfg = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcMfgPart = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        calcMinOrderQty = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassDescription = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlPurchPurchDesc = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgNumMfgID = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgNumName = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONUMCurrencyCode = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONUMOrderDate = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONUMInPrice = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONUMShipName = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONUMShipToConName = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatIDDescription = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 202,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PODetailAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PODetailAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONUM = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PODetailInspRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PODetailInspRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONUM = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlanSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspPlanPartNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspPlanRevNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecRevNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecHedDescription = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspPlanDescription = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeadMiscRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POHeadMiscRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMiscAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxable = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoicedAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoicedAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderSeqNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InvoicedAmt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InvoicedAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InvoicedAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1MiscAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2MiscAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3MiscAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percentage = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Type = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InMiscAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInMiscAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InMiscAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InMiscAmt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InMiscAmt = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InInvoiceAmt = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInInvoiceAmt = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InInvoiceAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InInvoiceAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InInvoiceAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySymbol = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCurrencySymbol = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POHeaderApprove = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrMiscAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrMiscAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrMiscAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocMiscAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrMiscAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeLCAmount = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeLCCurrencyCode = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeLCDisburseMethod = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeDescription = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumInPrice = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumShipToConName = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumShipName = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 55,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeadMiscTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POHeadMiscTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrDedTaxAmt = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrReportableAmt = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxableAmt = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmtVar = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 95,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeaderRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POHeaderRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenOrder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidOrder = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOB = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCode = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipAddress1 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipAddress2 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipAddress3 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipCity = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipState = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipZIP = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipCountry = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyerID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreightPP = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrcConNum = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentText = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHeld = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToConName = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToPrint = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintAs = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRate = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockRate = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipCountryNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogChanges = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovedDate = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovedBy = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approve = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovalStatus = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovedAmount = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostToWeb = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostDate = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorRefNum = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmReq = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Confirmed = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmVia = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPONum = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidatedPO = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractOrder = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractStartDate = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractEndDate = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintHeaderAddress = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpCode = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POType = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APLOCID = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoPrintReady = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPOLocked = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PromiseDate = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POTaxReadyToProcess = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxPoint = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalTax = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalTax = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalTax = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalTax = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalTax = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalWhTax = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalWhTax = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalWhTax = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalWhTax = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalWhTax = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalSATax = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalSATax = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalSATax = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalSATax = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalSATax = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HdrTaxNoUpdt = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateGrpCode = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalDedTax = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalDedTax = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalDedTax = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalDedTax = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalDedTax = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalCharges = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalMiscCharges = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalOrder = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalCharges = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalMisc = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalOrder = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalCharges = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalCharges = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalCharges = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalMiscCharges = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalMiscCharges = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalMiscCharges = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalOrder = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalOrder = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalOrder = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApproveChkBxSensitive = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrencyID = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmChkBxSensitive = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSupplierID = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasLines = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoldChkBxSensitive = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MassPrntChkBxSensitive = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCodeCurrSymbol = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RuleCode = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDtlAndRelRecords = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendCntFaxNum = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendCntPhoneNumber = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecalcUnitCosts = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APLOCDescription = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyerIDName = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrName = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrSymbol = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeDocumentDesc = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrDesc = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrencyID = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOBDescription = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpDescription = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipCountryNumDescription = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCodeDescription = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCodeDescription = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorVendorID = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorZIP = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorDefaultFOB = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCity = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorName = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCountry = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress3 = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorTermsCode = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress1 = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress2 = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCurrencyCode = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorState = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCntName = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCntEmailAddress = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCntPhoneNum = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCntFaxNum = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPAddress3 = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPCountry = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPZip = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPState = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPAddress1 = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPName = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPPrimPCon = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPAddress2 = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPCity = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystAllowLinkedPOChg = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserInt2Label = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserDate3Label = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserChar3Label = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserChar4Label = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserChar2Label = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserDate2Label = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserInt1Label = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserDec1Label = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserDec2Label = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserDate4Label = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserDate1Label = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XbSystPOUserChar1Label = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 175,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeaderAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POHeaderAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POHeaderTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POHeaderTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SummaryOnly = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrSymbol = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescCollectionType = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuperGRate = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrFixedAmount = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocDedTaxAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocFixedAmount = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocReportableAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrFixedAmount = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrFixedAmount = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocTaxableAmt = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocTaxAmt = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocTaxAmtVar = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrFixedAmount = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 103,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POMiscRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POMiscRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMiscAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxable = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoicedAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoicedAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderSeqNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InvoicedAmt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InvoicedAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InvoicedAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1MiscAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2MiscAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3MiscAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percentage = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Type = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InMiscAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInMiscAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InMiscAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InMiscAmt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InMiscAmt = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InInvoiceAmt = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInInvoiceAmt = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InInvoiceAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InInvoiceAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InInvoiceAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySymbol = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCurrencySymbol = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POHeaderApprove = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrMiscAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrMiscAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrMiscAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocMiscAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrMiscAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeLCCurrencyCode = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeLCAmount = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeDescription = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeLCDisburseMethod = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumInPrice = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumShipName = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumShipToConName = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 55,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POMiscTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POMiscTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrDedTaxAmt = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrReportableAmt = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxableAmt = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmtVar = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 95,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PORelRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PORelRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenRelease = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidRelease = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRelQty = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchasingFactor = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelQty = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeqType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeq = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedQty = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpOverride = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqLine = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PromiseDt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Confirmed = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmVia = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqChgDate = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqChgQty = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockRel = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefDisplayAccount = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCode = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCodeDesc = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippedQty = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranType = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPlant = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbWarehouse = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCreateJobMtl = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippedDate = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchasingFactorDirection = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreviousDueDate = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseQty = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseUOM = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTOOrderNum = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTOOrderLine = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTOOrderRelNum = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToNum = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMIRcvdQty = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpConNum = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MangCustNum = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseOTS = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSName = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress1 = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress2 = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress3 = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCity = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSState = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSZIP = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSResaleID = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSContact = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSFaxNum = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSPhoneNum = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCountryNum = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComplianceMsg = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelOpen = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mapping = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhaseID = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WBSPhaseID = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsMultiRel = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMIRemQty = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockQty = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockDate = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDateChanged = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractID = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkToContract = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Status = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArrivedQty = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoicedQty = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByDate = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockNeedByDate = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspectionQty = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailedQty = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedQty = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjProcessed = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliverTo = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxable = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExempt = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoTaxRecalc = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerShipped = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractOrder = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DelPoSug = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispGLAcct = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableBTOOrderNum = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableGLAcct = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstUnitCost = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpDesc = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromPOSugChg = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPlantName = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbWhseName = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inspection = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lock = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MangCustID = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MangCustName = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotCompliant = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHeld = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POHeaderApprove = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POType = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCodeStatus = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToAddressList = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatusDescription = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranTypeDesc = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseGlbFields = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorID = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorName = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidatedPO = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeqDescription = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerHeaderPromiseDate = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerHeaderDueDate = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineLineDesc = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineVenPartNum = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLinePartNum = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumShipName = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumShipToConName = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectIDDescription = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqLineLineDesc = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqNumShipName = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqNumShipToConName = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNumBTName = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNumCustID = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNumName = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToNumCustID = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToNumBTName = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToNumName = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCodeDescription = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WBSPhaseDescription = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 151,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PORelAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PORelAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PORelTGLCRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PORelTGLCRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelatedToFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key1 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key2 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key3 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key4 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key5 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key6 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TGLCTranNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAcctContext = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COACode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAccount = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserCanModify = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue1 = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue2 = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue3 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue4 = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue5 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue6 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue7 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue8 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue9 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue10 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue11 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue12 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue13 = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue14 = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue15 = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue16 = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue17 = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue18 = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue19 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue20 = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysGLControlType = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysGLControlCode = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompanyID = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsExternalCompany = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYear = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalCode = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalNum = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalLine = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDate = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranSource = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborHedSeq = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborDtlSeq = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysDate = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysTime = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranNum = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARInvoiceNum = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APInvoiceNum = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateDate = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYearSuffix = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalCalendarID = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditAmount = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebitAmount = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookCreditAmount = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookDebitAmount = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecordType = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorrAccUID = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABTUID = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RuleUID = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Statistical = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatUOMCode = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebitStatAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditStatAmt = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsModifiedByUser = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MovementNum = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MovementType = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqRef = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcctOverride = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COADescription = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAccountAccountDesc = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAccountGLAcctDisp = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAccountGLShortAcct = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLBookDescription = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLBookCurrencyCode = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 89,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PORelTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PORelTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrDedTaxAmt = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrReportableAmt = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxableAmt = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmtVar = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 95,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartSubsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartSubsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPart = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyPer = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultSub = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Price = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuggestedQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selected = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SugOrderQty = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartSellingFactor = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartTrackSerialNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartTrackDimension = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartPartDescription = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartIUM = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartSalesUM = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartTrackLots = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartPricePerCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 33,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POReceiptsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POReceiptsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerLCAmt = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ontime = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenRelease = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurRemQty = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptDate = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemainingSMIQty = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VenRemQty = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurQty = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Volume = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VenPartNum = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorQty = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurUnitCost = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCSpecLineDutyAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedRcptLCAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCUpliftIndCost = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedLCVariance = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCMtlBurUnitCost = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArrivedDate = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocVendorUnitCost = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisTranQty = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisTranUOM = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 46,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PODetailTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PODetailRow")]
    [System.SerializableAttribute()]
    public class PODetailTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.PODetailRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PODetailAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PODetailAttchRow")]
    [System.SerializableAttribute()]
    public class PODetailAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.PODetailAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PODetailInspTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PODetailInspRow")]
    [System.SerializableAttribute()]
    public class PODetailInspTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.PODetailInspRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POHeadMiscTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POHeadMiscRow")]
    [System.SerializableAttribute()]
    public class POHeadMiscTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.POHeadMiscRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POHeadMiscTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POHeadMiscTaxRow")]
    [System.SerializableAttribute()]
    public class POHeadMiscTaxTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.POHeadMiscTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POHeaderTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POHeaderRow")]
    [System.SerializableAttribute()]
    public class POHeaderTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.POHeaderRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POHeaderAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POHeaderAttchRow")]
    [System.SerializableAttribute()]
    public class POHeaderAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.POHeaderAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POHeaderTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POHeaderTaxRow")]
    [System.SerializableAttribute()]
    public class POHeaderTaxTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.POHeaderTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POMiscTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POMiscRow")]
    [System.SerializableAttribute()]
    public class POMiscTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.POMiscRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POMiscTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POMiscTaxRow")]
    [System.SerializableAttribute()]
    public class POMiscTaxTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.POMiscTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PORelTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PORelRow")]
    [System.SerializableAttribute()]
    public class PORelTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.PORelRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PORelAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PORelAttchRow")]
    [System.SerializableAttribute()]
    public class PORelAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.PORelAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PORelTGLCTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PORelTGLCRow")]
    [System.SerializableAttribute()]
    public class PORelTGLCTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.PORelTGLCRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PORelTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PORelTaxRow")]
    [System.SerializableAttribute()]
    public class PORelTaxTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.PORelTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartSubsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartSubsRow")]
    [System.SerializableAttribute()]
    public class PartSubsTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.PartSubsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POReceiptsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POReceiptsRow")]
    [System.SerializableAttribute()]
    public class POReceiptsTable : System.Collections.Generic.List<EpicorConsole.Epicor.POSvc.POReceiptsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.POSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.POSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:PO", ConfigurationName="Epicor.POSvc.POSvcContract")]
    public interface POSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetList", ReplyAction="Erp:BO:PO/POSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetListResponse GetList(EpicorConsole.Epicor.POSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetList", ReplyAction="Erp:BO:PO/POSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.POSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetRows", ReplyAction="Erp:BO:PO/POSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetRowsResponse GetRows(EpicorConsole.Epicor.POSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetRows", ReplyAction="Erp:BO:PO/POSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.POSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetBySysRowID", ReplyAction="Erp:BO:PO/POSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetBySysRowID", ReplyAction="Erp:BO:PO/POSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:PO/POSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:PO/POSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/Update", ReplyAction="Erp:BO:PO/POSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.UpdateResponse Update(EpicorConsole.Epicor.POSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/Update", ReplyAction="Erp:BO:PO/POSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.POSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/UpdateExt", ReplyAction="Erp:BO:PO/POSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.UpdateExtResponse UpdateExt(EpicorConsole.Epicor.POSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/UpdateExt", ReplyAction="Erp:BO:PO/POSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.POSvc.UpdateExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CalcAutoPORelTGLC", ReplyAction="Erp:BO:PO/POSvcContract/CalcAutoPORelTGLCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CalcAutoPORelTGLCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool CalcAutoPORelTGLC(string calcTranType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CalcAutoPORelTGLC", ReplyAction="Erp:BO:PO/POSvcContract/CalcAutoPORelTGLCResponse")]
        System.Threading.Tasks.Task<bool> CalcAutoPORelTGLCAsync(string calcTranType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckBeforeUpdate", ReplyAction="Erp:BO:PO/POSvcContract/CheckBeforeUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CheckBeforeUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.CheckBeforeUpdateResponse CheckBeforeUpdate(EpicorConsole.Epicor.POSvc.CheckBeforeUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckBeforeUpdate", ReplyAction="Erp:BO:PO/POSvcContract/CheckBeforeUpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckBeforeUpdateResponse> CheckBeforeUpdateAsync(EpicorConsole.Epicor.POSvc.CheckBeforeUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckLOC", ReplyAction="Erp:BO:PO/POSvcContract/CheckLOCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CheckLOCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.CheckLOCResponse CheckLOC(EpicorConsole.Epicor.POSvc.CheckLOCRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckLOC", ReplyAction="Erp:BO:PO/POSvcContract/CheckLOCResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckLOCResponse> CheckLOCAsync(EpicorConsole.Epicor.POSvc.CheckLOCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckPONum", ReplyAction="Erp:BO:PO/POSvcContract/CheckPONumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CheckPONumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.CheckPONumResponse CheckPONum(EpicorConsole.Epicor.POSvc.CheckPONumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckPONum", ReplyAction="Erp:BO:PO/POSvcContract/CheckPONumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckPONumResponse> CheckPONumAsync(EpicorConsole.Epicor.POSvc.CheckPONumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/chkPODatesChanges", ReplyAction="Erp:BO:PO/POSvcContract/chkPODatesChangesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/chkPODatesChangesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cOrderChangedMsgText")]
        string chkPODatesChanges(string viewName, EpicorConsole.Epicor.POSvc.POTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/chkPODatesChanges", ReplyAction="Erp:BO:PO/POSvcContract/chkPODatesChangesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cOrderChangedMsgText")]
        System.Threading.Tasks.Task<string> chkPODatesChangesAsync(string viewName, EpicorConsole.Epicor.POSvc.POTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CloseOrder", ReplyAction="Erp:BO:PO/POSvcContract/CloseOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CloseOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POTableset CloseOrder(int PoNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CloseOrder", ReplyAction="Erp:BO:PO/POSvcContract/CloseOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> CloseOrderAsync(int PoNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CloseOrderLine", ReplyAction="Erp:BO:PO/POSvcContract/CloseOrderLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CloseOrderLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POTableset CloseOrderLine(int PoNum, int PoLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CloseOrderLine", ReplyAction="Erp:BO:PO/POSvcContract/CloseOrderLineResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> CloseOrderLineAsync(int PoNum, int PoLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CloseRelease", ReplyAction="Erp:BO:PO/POSvcContract/CloseReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CloseReleaseEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POTableset CloseRelease(int PoNum, int PoLine, int PoRelease);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CloseRelease", ReplyAction="Erp:BO:PO/POSvcContract/CloseReleaseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> CloseReleaseAsync(int PoNum, int PoLine, int PoRelease);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/DuplicatePO", ReplyAction="Erp:BO:PO/POSvcContract/DuplicatePOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/DuplicatePOEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.DuplicatePOResponse DuplicatePO(EpicorConsole.Epicor.POSvc.DuplicatePORequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/DuplicatePO", ReplyAction="Erp:BO:PO/POSvcContract/DuplicatePOResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.DuplicatePOResponse> DuplicatePOAsync(EpicorConsole.Epicor.POSvc.DuplicatePORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetAPLOCDescription", ReplyAction="Erp:BO:PO/POSvcContract/GetAPLOCDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetAPLOCDescriptionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionResponse GetAPLOCDescription(EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetAPLOCDescription", ReplyAction="Erp:BO:PO/POSvcContract/GetAPLOCDescriptionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionResponse> GetAPLOCDescriptionAsync(EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetCodeDescList", ReplyAction="Erp:BO:PO/POSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetCodeDescListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetCodeDescList", ReplyAction="Erp:BO:PO/POSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetCurrencyBase", ReplyAction="Erp:BO:PO/POSvcContract/GetCurrencyBaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetCurrencyBaseEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opCurrencyBase")]
        string GetCurrencyBase();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetCurrencyBase", ReplyAction="Erp:BO:PO/POSvcContract/GetCurrencyBaseResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opCurrencyBase")]
        System.Threading.Tasks.Task<string> GetCurrencyBaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetDefaultBuyer", ReplyAction="Erp:BO:PO/POSvcContract/GetDefaultBuyerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetDefaultBuyerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetDefaultBuyerResponse GetDefaultBuyer(EpicorConsole.Epicor.POSvc.GetDefaultBuyerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetDefaultBuyer", ReplyAction="Erp:BO:PO/POSvcContract/GetDefaultBuyerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetDefaultBuyerResponse> GetDefaultBuyerAsync(EpicorConsole.Epicor.POSvc.GetDefaultBuyerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetDefaultGLAccountAllPOReleases", ReplyAction="Erp:BO:PO/POSvcContract/GetDefaultGLAccountAllPOReleasesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetDefaultGLAccountAllPOReleasesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesResponse GetDefaultGLAccountAllPOReleases(EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetDefaultGLAccountAllPOReleases", ReplyAction="Erp:BO:PO/POSvcContract/GetDefaultGLAccountAllPOReleasesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesResponse> GetDefaultGLAccountAllPOReleasesAsync(EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewConsolidatedPO", ReplyAction="Erp:BO:PO/POSvcContract/GetNewConsolidatedPOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewConsolidatedPOEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewConsolidatedPOResponse GetNewConsolidatedPO(EpicorConsole.Epicor.POSvc.GetNewConsolidatedPORequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewConsolidatedPO", ReplyAction="Erp:BO:PO/POSvcContract/GetNewConsolidatedPOResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewConsolidatedPOResponse> GetNewConsolidatedPOAsync(EpicorConsole.Epicor.POSvc.GetNewConsolidatedPORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewContractPO", ReplyAction="Erp:BO:PO/POSvcContract/GetNewContractPOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewContractPOEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewContractPOResponse GetNewContractPO(EpicorConsole.Epicor.POSvc.GetNewContractPORequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewContractPO", ReplyAction="Erp:BO:PO/POSvcContract/GetNewContractPOResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewContractPOResponse> GetNewContractPOAsync(EpicorConsole.Epicor.POSvc.GetNewContractPORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetGlbCompanyList", ReplyAction="Erp:BO:PO/POSvcContract/GetGlbCompanyListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetGlbCompanyListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GlbCompanyList")]
        string GetGlbCompanyList();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetGlbCompanyList", ReplyAction="Erp:BO:PO/POSvcContract/GetGlbCompanyListResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GlbCompanyList")]
        System.Threading.Tasks.Task<string> GetGlbCompanyListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetPartSubList", ReplyAction="Erp:BO:PO/POSvcContract/GetPartSubListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetPartSubListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetPartSubListResponse GetPartSubList(EpicorConsole.Epicor.POSvc.GetPartSubListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetPartSubList", ReplyAction="Erp:BO:PO/POSvcContract/GetPartSubListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetPartSubListResponse> GetPartSubListAsync(EpicorConsole.Epicor.POSvc.GetPartSubListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetPOReceipts", ReplyAction="Erp:BO:PO/POSvcContract/GetPOReceiptsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetPOReceiptsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POReceiptsTableset GetPOReceipts(int ipPONum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetPOReceipts", ReplyAction="Erp:BO:PO/POSvcContract/GetPOReceiptsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POReceiptsTableset> GetPOReceiptsAsync(int ipPONum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ReopenOrder", ReplyAction="Erp:BO:PO/POSvcContract/ReopenOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ReopenOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POTableset ReopenOrder(int PoNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ReopenOrder", ReplyAction="Erp:BO:PO/POSvcContract/ReopenOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> ReopenOrderAsync(int PoNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ReopenOrderLine", ReplyAction="Erp:BO:PO/POSvcContract/ReopenOrderLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ReopenOrderLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POTableset ReopenOrderLine(int PoNum, int PoLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ReopenOrderLine", ReplyAction="Erp:BO:PO/POSvcContract/ReopenOrderLineResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> ReopenOrderLineAsync(int PoNum, int PoLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ReOpenRelease", ReplyAction="Erp:BO:PO/POSvcContract/ReOpenReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ReOpenReleaseEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POTableset ReOpenRelease(int PoNum, int PoLine, int PoRelease);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ReOpenRelease", ReplyAction="Erp:BO:PO/POSvcContract/ReOpenReleaseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> ReOpenReleaseAsync(int PoNum, int PoLine, int PoRelease);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/SetReadyToCalc", ReplyAction="Erp:BO:PO/POSvcContract/SetReadyToCalcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/SetReadyToCalcEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.SetReadyToCalcResponse SetReadyToCalc(EpicorConsole.Epicor.POSvc.SetReadyToCalcRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/SetReadyToCalc", ReplyAction="Erp:BO:PO/POSvcContract/SetReadyToCalcResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.SetReadyToCalcResponse> SetReadyToCalcAsync(EpicorConsole.Epicor.POSvc.SetReadyToCalcRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeContractUOM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeContractUOMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeContractUOMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeContractUOMResponse ChangeContractUOM(EpicorConsole.Epicor.POSvc.ChangeContractUOMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeContractUOM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeContractUOMResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeContractUOMResponse> ChangeContractUOMAsync(EpicorConsole.Epicor.POSvc.ChangeContractUOMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailAssemblySeq", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailAssemblySeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailAssemblySeqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqResponse ChangeDetailAssemblySeq(EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailAssemblySeq", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailAssemblySeqResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqResponse> ChangeDetailAssemblySeqAsync(EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailCalcOurQty", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailCalcOurQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailCalcOurQtyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyResponse ChangeDetailCalcOurQty(EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailCalcOurQty", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailCalcOurQtyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyResponse> ChangeDetailCalcOurQtyAsync(EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailCalcVendQty", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailCalcVendQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailCalcVendQtyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyResponse ChangeDetailCalcVendQty(EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailCalcVendQty", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailCalcVendQtyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyResponse> ChangeDetailCalcVendQtyAsync(EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailIUM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailIUMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailIUMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailIUMResponse ChangeDetailIUM(EpicorConsole.Epicor.POSvc.ChangeDetailIUMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailIUM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailIUMResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailIUMResponse> ChangeDetailIUMAsync(EpicorConsole.Epicor.POSvc.ChangeDetailIUMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailJobNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailJobNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailJobNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailJobNumResponse ChangeDetailJobNum(EpicorConsole.Epicor.POSvc.ChangeDetailJobNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailJobNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailJobNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailJobNumResponse> ChangeDetailJobNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailJobNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailJobSeq", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailJobSeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailJobSeqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqResponse ChangeDetailJobSeq(EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailJobSeq", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailJobSeqResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqResponse> ChangeDetailJobSeqAsync(EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailMangCust", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailMangCustResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailMangCustEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailMangCustResponse ChangeDetailMangCust(EpicorConsole.Epicor.POSvc.ChangeDetailMangCustRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailMangCust", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailMangCustResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailMangCustResponse> ChangeDetailMangCustAsync(EpicorConsole.Epicor.POSvc.ChangeDetailMangCustRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailMfgNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailMfgNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailMfgNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumResponse ChangeDetailMfgNum(EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailMfgNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailMfgNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumResponse> ChangeDetailMfgNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailMfgPartNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailMfgPartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailMfgPartNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumResponse ChangeDetailMfgPartNum(EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailMfgPartNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailMfgPartNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumResponse> ChangeDetailMfgPartNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailOrderLine", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailOrderLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailOrderLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineResponse ChangeDetailOrderLine(EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailOrderLine", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailOrderLineResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineResponse> ChangeDetailOrderLineAsync(EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailOrderNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailOrderNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailOrderNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumResponse ChangeDetailOrderNum(EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailOrderNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailOrderNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumResponse> ChangeDetailOrderNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailOverridePriceList", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailOverridePriceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailOverridePriceListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListResponse ChangeDetailOverridePriceList(EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailOverridePriceList", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailOverridePriceListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListResponse> ChangeDetailOverridePriceListAsync(EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailPartClass", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailPartClassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailPartClassEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailPartClassResponse ChangeDetailPartClass(EpicorConsole.Epicor.POSvc.ChangeDetailPartClassRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailPartClass", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailPartClassResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailPartClassResponse> ChangeDetailPartClassAsync(EpicorConsole.Epicor.POSvc.ChangeDetailPartClassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailPartNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailPartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailPartNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailPartNumResponse ChangeDetailPartNum(EpicorConsole.Epicor.POSvc.ChangeDetailPartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailPartNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailPartNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailPartNumResponse> ChangeDetailPartNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailPartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailPUM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailPUMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailPUMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailPUMResponse ChangeDetailPUM(EpicorConsole.Epicor.POSvc.ChangeDetailPUMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailPUM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailPUMResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailPUMResponse> ChangeDetailPUMAsync(EpicorConsole.Epicor.POSvc.ChangeDetailPUMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailRevisionNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailRevisionNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailRevisionNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumResponse ChangeDetailRevisionNum(EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailRevisionNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailRevisionNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumResponse> ChangeDetailRevisionNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailTaxCatID", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailTaxCatIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailTaxCatIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDResponse ChangeDetailTaxCatID(EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailTaxCatID", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailTaxCatIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDResponse> ChangeDetailTaxCatIDAsync(EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailTranType", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailTranTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeDetailTranTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeResponse ChangeDetailTranType(EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeDetailTranType", ReplyAction="Erp:BO:PO/POSvcContract/ChangeDetailTranTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeResponse> ChangeDetailTranTypeAsync(EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangingDetailRevisionNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangingDetailRevisionNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangingDetailRevisionNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumResponse ChangingDetailRevisionNum(EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangingDetailRevisionNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangingDetailRevisionNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumResponse> ChangingDetailRevisionNumAsync(EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeUnitPrice", ReplyAction="Erp:BO:PO/POSvcContract/ChangeUnitPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeUnitPriceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeUnitPriceResponse ChangeUnitPrice(EpicorConsole.Epicor.POSvc.ChangeUnitPriceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeUnitPrice", ReplyAction="Erp:BO:PO/POSvcContract/ChangeUnitPriceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeUnitPriceResponse> ChangeUnitPriceAsync(EpicorConsole.Epicor.POSvc.ChangeUnitPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeUnitPriceConfirmOverride", ReplyAction="Erp:BO:PO/POSvcContract/ChangeUnitPriceConfirmOverrideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeUnitPriceConfirmOverrideEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideResponse ChangeUnitPriceConfirmOverride(EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeUnitPriceConfirmOverride", ReplyAction="Erp:BO:PO/POSvcContract/ChangeUnitPriceConfirmOverrideResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideResponse> ChangeUnitPriceConfirmOverrideAsync(EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeQtyOption", ReplyAction="Erp:BO:PO/POSvcContract/ChangeQtyOptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeQtyOptionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeQtyOptionResponse ChangeQtyOption(EpicorConsole.Epicor.POSvc.ChangeQtyOptionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeQtyOption", ReplyAction="Erp:BO:PO/POSvcContract/ChangeQtyOptionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeQtyOptionResponse> ChangeQtyOptionAsync(EpicorConsole.Epicor.POSvc.ChangeQtyOptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetBasePartForConfig", ReplyAction="Erp:BO:PO/POSvcContract/GetBasePartForConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetBasePartForConfigEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetBasePartForConfigResponse GetBasePartForConfig(EpicorConsole.Epicor.POSvc.GetBasePartForConfigRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetBasePartForConfig", ReplyAction="Erp:BO:PO/POSvcContract/GetBasePartForConfigResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetBasePartForConfigResponse> GetBasePartForConfigAsync(EpicorConsole.Epicor.POSvc.GetBasePartForConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetPlantsForPart", ReplyAction="Erp:BO:PO/POSvcContract/GetPlantsForPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetPlantsForPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opPlantList")]
        string GetPlantsForPart(string ipPartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetPlantsForPart", ReplyAction="Erp:BO:PO/POSvcContract/GetPlantsForPartResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opPlantList")]
        System.Threading.Tasks.Task<string> GetPlantsForPartAsync(string ipPartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/PartStatusValidationMessages", ReplyAction="Erp:BO:PO/POSvcContract/PartStatusValidationMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/PartStatusValidationMessagesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesResponse PartStatusValidationMessages(EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/PartStatusValidationMessages", ReplyAction="Erp:BO:PO/POSvcContract/PartStatusValidationMessagesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesResponse> PartStatusValidationMessagesAsync(EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeApproveSwitch", ReplyAction="Erp:BO:PO/POSvcContract/ChangeApproveSwitchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeApproveSwitchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeApproveSwitchResponse ChangeApproveSwitch(EpicorConsole.Epicor.POSvc.ChangeApproveSwitchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeApproveSwitch", ReplyAction="Erp:BO:PO/POSvcContract/ChangeApproveSwitchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeApproveSwitchResponse> ChangeApproveSwitchAsync(EpicorConsole.Epicor.POSvc.ChangeApproveSwitchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangedApproveSwitch", ReplyAction="Erp:BO:PO/POSvcContract/ChangedApproveSwitchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangedApproveSwitchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangedApproveSwitchResponse ChangedApproveSwitch(EpicorConsole.Epicor.POSvc.ChangedApproveSwitchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangedApproveSwitch", ReplyAction="Erp:BO:PO/POSvcContract/ChangedApproveSwitchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangedApproveSwitchResponse> ChangedApproveSwitchAsync(EpicorConsole.Epicor.POSvc.ChangedApproveSwitchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeCountry", ReplyAction="Erp:BO:PO/POSvcContract/ChangeCountryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeCountryEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeCountryResponse ChangeCountry(EpicorConsole.Epicor.POSvc.ChangeCountryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeCountry", ReplyAction="Erp:BO:PO/POSvcContract/ChangeCountryResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeCountryResponse> ChangeCountryAsync(EpicorConsole.Epicor.POSvc.ChangeCountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeCurrencyCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeCurrencyCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeCurrencyCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeResponse ChangeCurrencyCode(EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeCurrencyCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeCurrencyCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeResponse> ChangeCurrencyCodeAsync(EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOTaxRegionCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOTaxRegionCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePOTaxRegionCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeResponse ChangePOTaxRegionCode(EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOTaxRegionCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOTaxRegionCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeResponse> ChangePOTaxRegionCodeAsync(EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOType", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePOTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePOTypeResponse ChangePOType(EpicorConsole.Epicor.POSvc.ChangePOTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOType", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOTypeResponse> ChangePOTypeAsync(EpicorConsole.Epicor.POSvc.ChangePOTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePrcConNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangePrcConNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePrcConNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePrcConNumResponse ChangePrcConNum(EpicorConsole.Epicor.POSvc.ChangePrcConNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePrcConNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangePrcConNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePrcConNumResponse> ChangePrcConNumAsync(EpicorConsole.Epicor.POSvc.ChangePrcConNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePrcConNumByName", ReplyAction="Erp:BO:PO/POSvcContract/ChangePrcConNumByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePrcConNumByNameEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameResponse ChangePrcConNumByName(EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePrcConNumByName", ReplyAction="Erp:BO:PO/POSvcContract/ChangePrcConNumByNameResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameResponse> ChangePrcConNumByNameAsync(EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePurPoint", ReplyAction="Erp:BO:PO/POSvcContract/ChangePurPointResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePurPointEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePurPointResponse ChangePurPoint(EpicorConsole.Epicor.POSvc.ChangePurPointRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePurPoint", ReplyAction="Erp:BO:PO/POSvcContract/ChangePurPointResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePurPointResponse> ChangePurPointAsync(EpicorConsole.Epicor.POSvc.ChangePurPointRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeVendor", ReplyAction="Erp:BO:PO/POSvcContract/ChangeVendorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeVendorEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeVendorResponse ChangeVendor(EpicorConsole.Epicor.POSvc.ChangeVendorRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeVendor", ReplyAction="Erp:BO:PO/POSvcContract/ChangeVendorResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeVendorResponse> ChangeVendorAsync(EpicorConsole.Epicor.POSvc.ChangeVendorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckRateGrpCode", ReplyAction="Erp:BO:PO/POSvcContract/CheckRateGrpCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CheckRateGrpCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.CheckRateGrpCodeResponse CheckRateGrpCode(EpicorConsole.Epicor.POSvc.CheckRateGrpCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckRateGrpCode", ReplyAction="Erp:BO:PO/POSvcContract/CheckRateGrpCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckRateGrpCodeResponse> CheckRateGrpCodeAsync(EpicorConsole.Epicor.POSvc.CheckRateGrpCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangedHeaderTaxManual", ReplyAction="Erp:BO:PO/POSvcContract/ChangedHeaderTaxManualResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangedHeaderTaxManualEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualResponse ChangedHeaderTaxManual(EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangedHeaderTaxManual", ReplyAction="Erp:BO:PO/POSvcContract/ChangedHeaderTaxManualResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualResponse> ChangedHeaderTaxManualAsync(EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxFixedAmount", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxFixedAmountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxFixedAmountEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountResponse ChangeHeaderTaxFixedAmount(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxFixedAmount", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxFixedAmountResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountResponse> ChangeHeaderTaxFixedAmountAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxPercent", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxPercentEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentResponse ChangeHeaderTaxTaxPercent(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxPercent", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxPercentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentResponse> ChangeHeaderTaxTaxPercentAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeResponse ChangeHeaderTaxRateCode(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeResponse> ChangeHeaderTaxRateCodeAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCodeMaster", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCodeMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCodeMasterEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterResponse ChangeHeaderTaxRateCodeMaster(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCodeMaster", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxRateCodeMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterResponse> ChangeHeaderTaxRateCodeMasterAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxReportableAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxReportableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxReportableAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtResponse ChangeHeaderTaxReportableAmt(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxReportableAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxReportableAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtResponse> ChangeHeaderTaxReportableAmtAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxableAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxableAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtResponse ChangeHeaderTaxTaxableAmt(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxableAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxableAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtResponse> ChangeHeaderTaxTaxableAmtAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtResponse ChangeHeaderTaxTaxAmt(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtResponse> ChangeHeaderTaxTaxAmtAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeResponse ChangeHeaderTaxTaxCode(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeResponse> ChangeHeaderTaxTaxCodeAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxDeductable", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxDeductableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxDeductableEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableResponse ChangeHeaderTaxTaxDeductable(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxDeductable", ReplyAction="Erp:BO:PO/POSvcContract/ChangeHeaderTaxTaxDeductableResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableResponse> ChangeHeaderTaxTaxDeductableAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeCurrencySwitch", ReplyAction="Erp:BO:PO/POSvcContract/ChangeCurrencySwitchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeCurrencySwitchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchResponse ChangeCurrencySwitch(EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeCurrencySwitch", ReplyAction="Erp:BO:PO/POSvcContract/ChangeCurrencySwitchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchResponse> ChangeCurrencySwitchAsync(EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOHeadMiscAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOHeadMiscAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePOHeadMiscAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtResponse ChangePOHeadMiscAmt(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOHeadMiscAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOHeadMiscAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtResponse> ChangePOHeadMiscAmtAsync(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOHeadMiscCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOHeadMiscCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePOHeadMiscCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeResponse ChangePOHeadMiscCode(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOHeadMiscCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOHeadMiscCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeResponse> ChangePOHeadMiscCodeAsync(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOHeadMiscPrcnt", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOHeadMiscPrcntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePOHeadMiscPrcntEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntResponse ChangePOHeadMiscPrcnt(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOHeadMiscPrcnt", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOHeadMiscPrcntResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntResponse> ChangePOHeadMiscPrcntAsync(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOMiscAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOMiscAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePOMiscAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePOMiscAmtResponse ChangePOMiscAmt(EpicorConsole.Epicor.POSvc.ChangePOMiscAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOMiscAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOMiscAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOMiscAmtResponse> ChangePOMiscAmtAsync(EpicorConsole.Epicor.POSvc.ChangePOMiscAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOMiscCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOMiscCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePOMiscCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePOMiscCodeResponse ChangePOMiscCode(EpicorConsole.Epicor.POSvc.ChangePOMiscCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOMiscCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOMiscCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOMiscCodeResponse> ChangePOMiscCodeAsync(EpicorConsole.Epicor.POSvc.ChangePOMiscCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePoMiscCurrSwitch", ReplyAction="Erp:BO:PO/POSvcContract/ChangePoMiscCurrSwitchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePoMiscCurrSwitchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchResponse ChangePoMiscCurrSwitch(EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePoMiscCurrSwitch", ReplyAction="Erp:BO:PO/POSvcContract/ChangePoMiscCurrSwitchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchResponse> ChangePoMiscCurrSwitchAsync(EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOMiscPrcnt", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOMiscPrcntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePOMiscPrcntEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntResponse ChangePOMiscPrcnt(EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePOMiscPrcnt", ReplyAction="Erp:BO:PO/POSvcContract/ChangePOMiscPrcntResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntResponse> ChangePOMiscPrcntAsync(EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelAssemblySeq", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelAssemblySeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelAssemblySeqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqResponse ChangeRelAssemblySeq(EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelAssemblySeq", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelAssemblySeqResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqResponse> ChangeRelAssemblySeqAsync(EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelGlbCompany", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelGlbCompanyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelGlbCompanyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyResponse ChangeRelGlbCompany(EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelGlbCompany", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelGlbCompanyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyResponse> ChangeRelGlbCompanyAsync(EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelGlbPlant", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelGlbPlantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelGlbPlantEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantResponse ChangeRelGlbPlant(EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelGlbPlant", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelGlbPlantResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantResponse> ChangeRelGlbPlantAsync(EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelGlbWarehouse", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelGlbWarehouseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelGlbWarehouseEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseResponse ChangeRelGlbWarehouse(EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelGlbWarehouse", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelGlbWarehouseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseResponse> ChangeRelGlbWarehouseAsync(EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelIUM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelIUMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelIUMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelIUMResponse ChangeRelIUM(EpicorConsole.Epicor.POSvc.ChangeRelIUMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelIUM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelIUMResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelIUMResponse> ChangeRelIUMAsync(EpicorConsole.Epicor.POSvc.ChangeRelIUMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelJobNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelJobNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelJobNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelJobNumResponse ChangeRelJobNum(EpicorConsole.Epicor.POSvc.ChangeRelJobNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelJobNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelJobNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelJobNumResponse> ChangeRelJobNumAsync(EpicorConsole.Epicor.POSvc.ChangeRelJobNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelJobSeq", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelJobSeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelJobSeqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelJobSeqResponse ChangeRelJobSeq(EpicorConsole.Epicor.POSvc.ChangeRelJobSeqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelJobSeq", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelJobSeqResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelJobSeqResponse> ChangeRelJobSeqAsync(EpicorConsole.Epicor.POSvc.ChangeRelJobSeqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelJobSeqWarning", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelJobSeqWarningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelJobSeqWarningEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opWrnMsg")]
        string ChangeRelJobSeqWarning(string ipTranType, string ipJobNum, int ipAssemblySeq, int ipNewJobSeq, string ipPODtlPartNum, string ipPODtlRevNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelJobSeqWarning", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelJobSeqWarningResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opWrnMsg")]
        System.Threading.Tasks.Task<string> ChangeRelJobSeqWarningAsync(string ipTranType, string ipJobNum, int ipAssemblySeq, int ipNewJobSeq, string ipPODtlPartNum, string ipPODtlRevNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeBTOOrderLineWarning", ReplyAction="Erp:BO:PO/POSvcContract/ChangeBTOOrderLineWarningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeBTOOrderLineWarningEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opWrnMsg")]
        string ChangeBTOOrderLineWarning(int ipOrderNum, int ipOrderLine, int ipPONum, int ipPOLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeBTOOrderLineWarning", ReplyAction="Erp:BO:PO/POSvcContract/ChangeBTOOrderLineWarningResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opWrnMsg")]
        System.Threading.Tasks.Task<string> ChangeBTOOrderLineWarningAsync(int ipOrderNum, int ipOrderLine, int ipPONum, int ipPOLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelMangCust", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelMangCustResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelMangCustEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelMangCustResponse ChangeRelMangCust(EpicorConsole.Epicor.POSvc.ChangeRelMangCustRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelMangCust", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelMangCustResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelMangCustResponse> ChangeRelMangCustAsync(EpicorConsole.Epicor.POSvc.ChangeRelMangCustRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelOrderLine", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelOrderLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelOrderLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelOrderLineResponse ChangeRelOrderLine(EpicorConsole.Epicor.POSvc.ChangeRelOrderLineRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelOrderLine", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelOrderLineResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelOrderLineResponse> ChangeRelOrderLineAsync(EpicorConsole.Epicor.POSvc.ChangeRelOrderLineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelOrderNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelOrderNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelOrderNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelOrderNumResponse ChangeRelOrderNum(EpicorConsole.Epicor.POSvc.ChangeRelOrderNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelOrderNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelOrderNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelOrderNumResponse> ChangeRelOrderNumAsync(EpicorConsole.Epicor.POSvc.ChangeRelOrderNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelOrderRelNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelOrderRelNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelOrderRelNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumResponse ChangeRelOrderRelNum(EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelOrderRelNum", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelOrderRelNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumResponse> ChangeRelOrderRelNumAsync(EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelOurQty", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelOurQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelOurQtyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelOurQtyResponse ChangeRelOurQty(EpicorConsole.Epicor.POSvc.ChangeRelOurQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelOurQty", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelOurQtyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelOurQtyResponse> ChangeRelOurQtyAsync(EpicorConsole.Epicor.POSvc.ChangeRelOurQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelPlant", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelPlantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelPlantEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelPlantResponse ChangeRelPlant(EpicorConsole.Epicor.POSvc.ChangeRelPlantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelPlant", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelPlantResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelPlantResponse> ChangeRelPlantAsync(EpicorConsole.Epicor.POSvc.ChangeRelPlantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelPUM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelPUMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelPUMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelPUMResponse ChangeRelPUM(EpicorConsole.Epicor.POSvc.ChangeRelPUMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelPUM", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelPUMResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelPUMResponse> ChangeRelPUMAsync(EpicorConsole.Epicor.POSvc.ChangeRelPUMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelTaxExempt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelTaxExemptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelTaxExemptEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptResponse ChangeRelTaxExempt(EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelTaxExempt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelTaxExemptResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptResponse> ChangeRelTaxExemptAsync(EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelVendQty", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelVendQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeRelVendQtyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeRelVendQtyResponse ChangeRelVendQty(EpicorConsole.Epicor.POSvc.ChangeRelVendQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeRelVendQty", ReplyAction="Erp:BO:PO/POSvcContract/ChangeRelVendQtyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelVendQtyResponse> ChangeRelVendQtyAsync(EpicorConsole.Epicor.POSvc.ChangeRelVendQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePORelContract", ReplyAction="Erp:BO:PO/POSvcContract/ChangePORelContractResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangePORelContractEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangePORelContractResponse ChangePORelContract(EpicorConsole.Epicor.POSvc.ChangePORelContractRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangePORelContract", ReplyAction="Erp:BO:PO/POSvcContract/ChangePORelContractResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePORelContractResponse> ChangePORelContractAsync(EpicorConsole.Epicor.POSvc.ChangePORelContractRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTranType", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTranTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeTranTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeTranTypeResponse ChangeTranType(EpicorConsole.Epicor.POSvc.ChangeTranTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTranType", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTranTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTranTypeResponse> ChangeTranTypeAsync(EpicorConsole.Epicor.POSvc.ChangeTranTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckComplianceFail", ReplyAction="Erp:BO:PO/POSvcContract/CheckComplianceFailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CheckComplianceFailEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="compliant")]
        bool CheckComplianceFail(int poNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckComplianceFail", ReplyAction="Erp:BO:PO/POSvcContract/CheckComplianceFailResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="compliant")]
        System.Threading.Tasks.Task<bool> CheckComplianceFailAsync(int poNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckProjectID", ReplyAction="Erp:BO:PO/POSvcContract/CheckProjectIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/CheckProjectIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.CheckProjectIDResponse CheckProjectID(EpicorConsole.Epicor.POSvc.CheckProjectIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/CheckProjectID", ReplyAction="Erp:BO:PO/POSvcContract/CheckProjectIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckProjectIDResponse> CheckProjectIDAsync(EpicorConsole.Epicor.POSvc.CheckProjectIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetDefaultGLAccount", ReplyAction="Erp:BO:PO/POSvcContract/GetDefaultGLAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetDefaultGLAccountEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetDefaultGLAccountResponse GetDefaultGLAccount(EpicorConsole.Epicor.POSvc.GetDefaultGLAccountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetDefaultGLAccount", ReplyAction="Erp:BO:PO/POSvcContract/GetDefaultGLAccountResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetDefaultGLAccountResponse> GetDefaultGLAccountAsync(EpicorConsole.Epicor.POSvc.GetDefaultGLAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxReportableAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxReportableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeTaxReportableAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtResponse ChangeTaxReportableAmt(EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxReportableAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxReportableAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtResponse> ChangeTaxReportableAmtAsync(EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxTaxableAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxTaxableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeTaxTaxableAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtResponse ChangeTaxTaxableAmt(EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxTaxableAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxTaxableAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtResponse> ChangeTaxTaxableAmtAsync(EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxTaxAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxTaxAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeTaxTaxAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtResponse ChangeTaxTaxAmt(EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxTaxAmt", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxTaxAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtResponse> ChangeTaxTaxAmtAsync(EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxDeductable", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxDeductableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeTaxDeductableEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeTaxDeductableResponse ChangeTaxDeductable(EpicorConsole.Epicor.POSvc.ChangeTaxDeductableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxDeductable", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxDeductableResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxDeductableResponse> ChangeTaxDeductableAsync(EpicorConsole.Epicor.POSvc.ChangeTaxDeductableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxTaxCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxTaxCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeTaxTaxCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeResponse ChangeTaxTaxCode(EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxTaxCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxTaxCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeResponse> ChangeTaxTaxCodeAsync(EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxRateCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxRateCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeTaxRateCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeResponse ChangeTaxRateCode(EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxRateCode", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxRateCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeResponse> ChangeTaxRateCodeAsync(EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxPercent", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeTaxPercentEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeTaxPercentResponse ChangeTaxPercent(EpicorConsole.Epicor.POSvc.ChangeTaxPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeTaxPercent", ReplyAction="Erp:BO:PO/POSvcContract/ChangeTaxPercentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxPercentResponse> ChangeTaxPercentAsync(EpicorConsole.Epicor.POSvc.ChangeTaxPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeExpAcct", ReplyAction="Erp:BO:PO/POSvcContract/ChangeExpAcctResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ChangeExpAcctEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ChangeExpAcctResponse ChangeExpAcct(EpicorConsole.Epicor.POSvc.ChangeExpAcctRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ChangeExpAcct", ReplyAction="Erp:BO:PO/POSvcContract/ChangeExpAcctResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeExpAcctResponse> ChangeExpAcctAsync(EpicorConsole.Epicor.POSvc.ChangeExpAcctRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ValidateAcctForGLControl", ReplyAction="Erp:BO:PO/POSvcContract/ValidateAcctForGLControlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ValidateAcctForGLControlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outMessage")]
        string ValidateAcctForGLControl(int ipPONum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ValidateAcctForGLControl", ReplyAction="Erp:BO:PO/POSvcContract/ValidateAcctForGLControlResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outMessage")]
        System.Threading.Tasks.Task<string> ValidateAcctForGLControlAsync(int ipPONum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ValidateInspection", ReplyAction="Erp:BO:PO/POSvcContract/ValidateInspectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ValidateInspectionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.ValidateInspectionResponse ValidateInspection(EpicorConsole.Epicor.POSvc.ValidateInspectionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ValidateInspection", ReplyAction="Erp:BO:PO/POSvcContract/ValidateInspectionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ValidateInspectionResponse> ValidateInspectionAsync(EpicorConsole.Epicor.POSvc.ValidateInspectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ValidataPartToLinkToContract", ReplyAction="Erp:BO:PO/POSvcContract/ValidataPartToLinkToContractResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/ValidataPartToLinkToContractEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ValidataPartToLinkToContract(bool bLinkToContract, string partNum, string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/ValidataPartToLinkToContract", ReplyAction="Erp:BO:PO/POSvcContract/ValidataPartToLinkToContractResponse")]
        System.Threading.Tasks.Task ValidataPartToLinkToContractAsync(bool bLinkToContract, string partNum, string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeader", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeaderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPOHeaderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPOHeaderResponse GetNewPOHeader(EpicorConsole.Epicor.POSvc.GetNewPOHeaderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeader", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeaderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeaderResponse> GetNewPOHeaderAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeaderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeaderAttch", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeaderAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPOHeaderAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchResponse GetNewPOHeaderAttch(EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeaderAttch", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeaderAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchResponse> GetNewPOHeaderAttchAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPODetail", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPODetailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPODetailEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPODetailResponse GetNewPODetail(EpicorConsole.Epicor.POSvc.GetNewPODetailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPODetail", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPODetailResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPODetailResponse> GetNewPODetailAsync(EpicorConsole.Epicor.POSvc.GetNewPODetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPODetailAttch", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPODetailAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPODetailAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPODetailAttchResponse GetNewPODetailAttch(EpicorConsole.Epicor.POSvc.GetNewPODetailAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPODetailAttch", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPODetailAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPODetailAttchResponse> GetNewPODetailAttchAsync(EpicorConsole.Epicor.POSvc.GetNewPODetailAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPORel", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPORelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPORelEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPORelResponse GetNewPORel(EpicorConsole.Epicor.POSvc.GetNewPORelRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPORel", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPORelResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPORelResponse> GetNewPORelAsync(EpicorConsole.Epicor.POSvc.GetNewPORelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPORelAttch", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPORelAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPORelAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPORelAttchResponse GetNewPORelAttch(EpicorConsole.Epicor.POSvc.GetNewPORelAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPORelAttch", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPORelAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPORelAttchResponse> GetNewPORelAttchAsync(EpicorConsole.Epicor.POSvc.GetNewPORelAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPORelTax", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPORelTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPORelTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPORelTaxResponse GetNewPORelTax(EpicorConsole.Epicor.POSvc.GetNewPORelTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPORelTax", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPORelTaxResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPORelTaxResponse> GetNewPORelTaxAsync(EpicorConsole.Epicor.POSvc.GetNewPORelTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPORelTGLC", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPORelTGLCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPORelTGLCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPORelTGLCResponse GetNewPORelTGLC(EpicorConsole.Epicor.POSvc.GetNewPORelTGLCRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPORelTGLC", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPORelTGLCResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPORelTGLCResponse> GetNewPORelTGLCAsync(EpicorConsole.Epicor.POSvc.GetNewPORelTGLCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPODetailInsp", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPODetailInspResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPODetailInspEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPODetailInspResponse GetNewPODetailInsp(EpicorConsole.Epicor.POSvc.GetNewPODetailInspRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPODetailInsp", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPODetailInspResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPODetailInspResponse> GetNewPODetailInspAsync(EpicorConsole.Epicor.POSvc.GetNewPODetailInspRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOMisc", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOMiscResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPOMiscEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPOMiscResponse GetNewPOMisc(EpicorConsole.Epicor.POSvc.GetNewPOMiscRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOMisc", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOMiscResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOMiscResponse> GetNewPOMiscAsync(EpicorConsole.Epicor.POSvc.GetNewPOMiscRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOMiscTax", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOMiscTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPOMiscTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxResponse GetNewPOMiscTax(EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOMiscTax", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOMiscTaxResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxResponse> GetNewPOMiscTaxAsync(EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeadMisc", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeadMiscResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPOHeadMiscEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscResponse GetNewPOHeadMisc(EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeadMisc", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeadMiscResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscResponse> GetNewPOHeadMiscAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeaderTax", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeaderTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPOHeaderTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxResponse GetNewPOHeaderTax(EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeaderTax", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeaderTaxResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxResponse> GetNewPOHeaderTaxAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeadMiscTax", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeadMiscTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetNewPOHeadMiscTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxResponse GetNewPOHeadMiscTax(EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetNewPOHeadMiscTax", ReplyAction="Erp:BO:PO/POSvcContract/GetNewPOHeadMiscTaxResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxResponse> GetNewPOHeadMiscTaxAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/DeleteByID", ReplyAction="Erp:BO:PO/POSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(int poNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/DeleteByID", ReplyAction="Erp:BO:PO/POSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(int poNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetByID", ReplyAction="Erp:BO:PO/POSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.POSvc.EpicorFaultDetail), Action="Erp:BO:PO/POSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.POSvc.POTableset GetByID(int poNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:PO/POSvcContract/GetByID", ReplyAction="Erp:BO:PO/POSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> GetByIDAsync(int poNum);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POHeaderListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicorConsole.Epicor.POSvc.POHeaderListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string whereClausePOHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string whereClausePOHeaderAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public string whereClausePODetail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public string whereClausePODetailAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=4)]
        public string whereClausePORel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=5)]
        public string whereClausePORelAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=6)]
        public string whereClausePORelTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=7)]
        public string whereClausePORelTGLC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=8)]
        public string whereClausePODetailInsp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=9)]
        public string whereClausePOMisc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=10)]
        public string whereClausePOMiscTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=11)]
        public string whereClausePOHeadMisc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=12)]
        public string whereClausePOHeaderTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=13)]
        public string whereClausePOHeadMiscTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=14)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=15)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(
                    string whereClausePOHeader, 
                    string whereClausePOHeaderAttch, 
                    string whereClausePODetail, 
                    string whereClausePODetailAttch, 
                    string whereClausePORel, 
                    string whereClausePORelAttch, 
                    string whereClausePORelTax, 
                    string whereClausePORelTGLC, 
                    string whereClausePODetailInsp, 
                    string whereClausePOMisc, 
                    string whereClausePOMiscTax, 
                    string whereClausePOHeadMisc, 
                    string whereClausePOHeaderTax, 
                    string whereClausePOHeadMiscTax, 
                    int pageSize, 
                    int absolutePage) {
            this.whereClausePOHeader = whereClausePOHeader;
            this.whereClausePOHeaderAttch = whereClausePOHeaderAttch;
            this.whereClausePODetail = whereClausePODetail;
            this.whereClausePODetailAttch = whereClausePODetailAttch;
            this.whereClausePORel = whereClausePORel;
            this.whereClausePORelAttch = whereClausePORelAttch;
            this.whereClausePORelTax = whereClausePORelTax;
            this.whereClausePORelTGLC = whereClausePORelTGLC;
            this.whereClausePODetailInsp = whereClausePODetailInsp;
            this.whereClausePOMisc = whereClausePOMisc;
            this.whereClausePOMiscTax = whereClausePOMiscTax;
            this.whereClausePOHeadMisc = whereClausePOHeadMisc;
            this.whereClausePOHeaderTax = whereClausePOHeaderTax;
            this.whereClausePOHeadMiscTax = whereClausePOHeadMiscTax;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicorConsole.Epicor.POSvc.POTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.UpdExtPOTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(EpicorConsole.Epicor.POSvc.UpdExtPOTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.UpdExtPOTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(EpicorConsole.Epicor.POSvc.BOUpdErrorTableset UpdateExtResult, EpicorConsole.Epicor.POSvc.UpdExtPOTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckBeforeUpdate", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckBeforeUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string viewName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public CheckBeforeUpdateRequest() {
        }
        
        public CheckBeforeUpdateRequest(string viewName, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.viewName = viewName;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckBeforeUpdateResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckBeforeUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string cOrderChangedMsgText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string taxableChangedMsgText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public string vendorChangedMsgText;
        
        public CheckBeforeUpdateResponse() {
        }
        
        public CheckBeforeUpdateResponse(string cOrderChangedMsgText, string taxableChangedMsgText, string vendorChangedMsgText) {
            this.cOrderChangedMsgText = cOrderChangedMsgText;
            this.taxableChangedMsgText = taxableChangedMsgText;
            this.vendorChangedMsgText = vendorChangedMsgText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLOC", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckLOCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public CheckLOCRequest() {
        }
        
        public CheckLOCRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLOCResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckLOCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string[] opMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public CheckLOCResponse() {
        }
        
        public CheckLOCResponse(string[] opMsg, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.opMsg = opMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPONum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckPONumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int ProposedPONum;
        
        public CheckPONumRequest() {
        }
        
        public CheckPONumRequest(int ProposedPONum) {
            this.ProposedPONum = ProposedPONum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPONumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckPONumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public bool opFoundPO;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string opMessage;
        
        public CheckPONumResponse() {
        }
        
        public CheckPONumResponse(bool opFoundPO, string opMessage) {
            this.opFoundPO = opFoundPO;
            this.opMessage = opMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DuplicatePO", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class DuplicatePORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public bool copyUnitCosts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public bool copyJobInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public bool getLatestSupplierPrice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=4)]
        public bool getLatestRevision;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=5)]
        public System.Nullable<System.DateTime> newDueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=6)]
        public System.Nullable<System.DateTime> newPromiseDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=7)]
        public string newBuyerID;
        
        public DuplicatePORequest() {
        }
        
        public DuplicatePORequest(int poNum, bool copyUnitCosts, bool copyJobInfo, bool getLatestSupplierPrice, bool getLatestRevision, System.Nullable<System.DateTime> newDueDate, System.Nullable<System.DateTime> newPromiseDate, string newBuyerID) {
            this.poNum = poNum;
            this.copyUnitCosts = copyUnitCosts;
            this.copyJobInfo = copyJobInfo;
            this.getLatestSupplierPrice = getLatestSupplierPrice;
            this.getLatestRevision = getLatestRevision;
            this.newDueDate = newDueDate;
            this.newPromiseDate = newPromiseDate;
            this.newBuyerID = newBuyerID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DuplicatePOResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class DuplicatePOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset DuplicatePOResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string cJobMTLIssuedComplete;
        
        public DuplicatePOResponse() {
        }
        
        public DuplicatePOResponse(EpicorConsole.Epicor.POSvc.POTableset DuplicatePOResult, string cJobMTLIssuedComplete) {
            this.DuplicatePOResult = DuplicatePOResult;
            this.cJobMTLIssuedComplete = cJobMTLIssuedComplete;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAPLOCDescription", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetAPLOCDescriptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string poAPLOCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetAPLOCDescriptionRequest() {
        }
        
        public GetAPLOCDescriptionRequest(string poAPLOCID, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.poAPLOCID = poAPLOCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAPLOCDescriptionResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetAPLOCDescriptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetAPLOCDescriptionResponse() {
        }
        
        public GetAPLOCDescriptionResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultBuyer", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetDefaultBuyerRequest {
        
        public GetDefaultBuyerRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultBuyerResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetDefaultBuyerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public bool GetDefaultBuyerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string buyerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public string buyerIDName;
        
        public GetDefaultBuyerResponse() {
        }
        
        public GetDefaultBuyerResponse(bool GetDefaultBuyerResult, string buyerID, string buyerIDName) {
            this.GetDefaultBuyerResult = GetDefaultBuyerResult;
            this.buyerID = buyerID;
            this.buyerIDName = buyerIDName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultGLAccountAllPOReleases", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetDefaultGLAccountAllPOReleasesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int pPONum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetDefaultGLAccountAllPOReleasesRequest() {
        }
        
        public GetDefaultGLAccountAllPOReleasesRequest(int pPONum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.pPONum = pPONum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultGLAccountAllPOReleasesResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetDefaultGLAccountAllPOReleasesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetDefaultGLAccountAllPOReleasesResponse() {
        }
        
        public GetDefaultGLAccountAllPOReleasesResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewConsolidatedPO", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewConsolidatedPORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewConsolidatedPORequest() {
        }
        
        public GetNewConsolidatedPORequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewConsolidatedPOResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewConsolidatedPOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewConsolidatedPOResponse() {
        }
        
        public GetNewConsolidatedPOResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewContractPO", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewContractPORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewContractPORequest() {
        }
        
        public GetNewContractPORequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewContractPOResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewContractPOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewContractPOResponse() {
        }
        
        public GetNewContractPOResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartSubList", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetPartSubListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string PartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int absolutePage;
        
        public GetPartSubListRequest() {
        }
        
        public GetPartSubListRequest(string PartNum, int pageSize, int absolutePage) {
            this.PartNum = PartNum;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartSubListResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetPartSubListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.PartSubsTableset GetPartSubListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public bool morePages;
        
        public GetPartSubListResponse() {
        }
        
        public GetPartSubListResponse(EpicorConsole.Epicor.POSvc.PartSubsTableset GetPartSubListResult, bool morePages) {
            this.GetPartSubListResult = GetPartSubListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetReadyToCalc", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class SetReadyToCalcRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int ipPONum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public bool ipCalledFromUI;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public SetReadyToCalcRequest() {
        }
        
        public SetReadyToCalcRequest(int ipPONum, bool ipCalledFromUI, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipPONum = ipPONum;
            this.ipCalledFromUI = ipCalledFromUI;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetReadyToCalcResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class SetReadyToCalcResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public SetReadyToCalcResponse() {
        }
        
        public SetReadyToCalcResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeContractUOM", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeContractUOMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewUOM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeContractUOMRequest() {
        }
        
        public ChangeContractUOMRequest(string NewUOM, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewUOM = NewUOM;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeContractUOMResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeContractUOMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeContractUOMResponse() {
        }
        
        public ChangeContractUOMResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailAssemblySeq", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailAssemblySeqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int NewAsmSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailAssemblySeqRequest() {
        }
        
        public ChangeDetailAssemblySeqRequest(int NewAsmSeq, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewAsmSeq = NewAsmSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailAssemblySeqResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailAssemblySeqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailAssemblySeqResponse() {
        }
        
        public ChangeDetailAssemblySeqResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailCalcOurQty", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailCalcOurQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal NewCalcOurQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailCalcOurQtyRequest() {
        }
        
        public ChangeDetailCalcOurQtyRequest(decimal NewCalcOurQty, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewCalcOurQty = NewCalcOurQty;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailCalcOurQtyResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailCalcOurQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailCalcOurQtyResponse() {
        }
        
        public ChangeDetailCalcOurQtyResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailCalcVendQty", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailCalcVendQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal NewCalcVendQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailCalcVendQtyRequest() {
        }
        
        public ChangeDetailCalcVendQtyRequest(decimal NewCalcVendQty, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewCalcVendQty = NewCalcVendQty;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailCalcVendQtyResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailCalcVendQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailCalcVendQtyResponse() {
        }
        
        public ChangeDetailCalcVendQtyResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailIUM", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailIUMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewIUM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailIUMRequest() {
        }
        
        public ChangeDetailIUMRequest(string NewIUM, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewIUM = NewIUM;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailIUMResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailIUMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailIUMResponse() {
        }
        
        public ChangeDetailIUMResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailJobNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailJobNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewJobNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailJobNumRequest() {
        }
        
        public ChangeDetailJobNumRequest(string NewJobNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewJobNum = NewJobNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailJobNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailJobNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailJobNumResponse() {
        }
        
        public ChangeDetailJobNumResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailJobSeq", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailJobSeqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int NewJobSeqNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailJobSeqRequest() {
        }
        
        public ChangeDetailJobSeqRequest(int NewJobSeqNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewJobSeqNum = NewJobSeqNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailJobSeqResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailJobSeqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailJobSeqResponse() {
        }
        
        public ChangeDetailJobSeqResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailMangCust", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailMangCustRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewMangCust;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailMangCustRequest() {
        }
        
        public ChangeDetailMangCustRequest(string NewMangCust, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewMangCust = NewMangCust;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailMangCustResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailMangCustResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailMangCustResponse() {
        }
        
        public ChangeDetailMangCustResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailMfgNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailMfgNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int newMfgNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailMfgNumRequest() {
        }
        
        public ChangeDetailMfgNumRequest(int newMfgNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newMfgNum = newMfgNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailMfgNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailMfgNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailMfgNumResponse() {
        }
        
        public ChangeDetailMfgNumResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailMfgPartNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailMfgPartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string newMfgPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailMfgPartNumRequest() {
        }
        
        public ChangeDetailMfgPartNumRequest(string newMfgPartNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newMfgPartNum = newMfgPartNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailMfgPartNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailMfgPartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailMfgPartNumResponse() {
        }
        
        public ChangeDetailMfgPartNumResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailOrderLine", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailOrderLineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int ipOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailOrderLineRequest() {
        }
        
        public ChangeDetailOrderLineRequest(int ipOrderLine, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipOrderLine = ipOrderLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailOrderLineResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailOrderLineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailOrderLineResponse() {
        }
        
        public ChangeDetailOrderLineResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailOrderNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailOrderNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailOrderNumRequest() {
        }
        
        public ChangeDetailOrderNumRequest(int ipOrderNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipOrderNum = ipOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailOrderNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailOrderNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailOrderNumResponse() {
        }
        
        public ChangeDetailOrderNumResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailOverridePriceList", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailOverridePriceListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public bool overridePriceList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailOverridePriceListRequest() {
        }
        
        public ChangeDetailOverridePriceListRequest(bool overridePriceList, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.overridePriceList = overridePriceList;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailOverridePriceListResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailOverridePriceListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailOverridePriceListResponse() {
        }
        
        public ChangeDetailOverridePriceListResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailPartClass", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailPartClassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewClassID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailPartClassRequest() {
        }
        
        public ChangeDetailPartClassRequest(string NewClassID, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewClassID = NewClassID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailPartClassResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailPartClassResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailPartClassResponse() {
        }
        
        public ChangeDetailPartClassResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailPartNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailPartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public System.Guid SysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public string rowType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public bool isSubstitute;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=4)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailPartNumRequest() {
        }
        
        public ChangeDetailPartNumRequest(string NewPartNum, System.Guid SysRowID, string rowType, bool isSubstitute, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewPartNum = NewPartNum;
            this.SysRowID = SysRowID;
            this.rowType = rowType;
            this.isSubstitute = isSubstitute;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailPartNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailPartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public bool multipleMatch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailPartNumResponse() {
        }
        
        public ChangeDetailPartNumResponse(string NewPartNum, bool multipleMatch, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewPartNum = NewPartNum;
            this.multipleMatch = multipleMatch;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailPUM", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailPUMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewPUM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailPUMRequest() {
        }
        
        public ChangeDetailPUMRequest(string NewPUM, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewPUM = NewPUM;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailPUMResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailPUMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailPUMResponse() {
        }
        
        public ChangeDetailPUMResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailRevisionNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailRevisionNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailRevisionNumRequest() {
        }
        
        public ChangeDetailRevisionNumRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailRevisionNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailRevisionNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailRevisionNumResponse() {
        }
        
        public ChangeDetailRevisionNumResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailTaxCatID", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailTaxCatIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string newTaxCatID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailTaxCatIDRequest() {
        }
        
        public ChangeDetailTaxCatIDRequest(string newTaxCatID, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newTaxCatID = newTaxCatID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailTaxCatIDResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailTaxCatIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailTaxCatIDResponse() {
        }
        
        public ChangeDetailTaxCatIDResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailTranType", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailTranTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewTranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailTranTypeRequest() {
        }
        
        public ChangeDetailTranTypeRequest(string NewTranType, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewTranType = NewTranType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDetailTranTypeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeDetailTranTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeDetailTranTypeResponse() {
        }
        
        public ChangeDetailTranTypeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangingDetailRevisionNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangingDetailRevisionNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangingDetailRevisionNumRequest() {
        }
        
        public ChangingDetailRevisionNumRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangingDetailRevisionNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangingDetailRevisionNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ChangingDetailRevisionNumResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangingDetailRevisionNumResponse() {
        }
        
        public ChangingDetailRevisionNumResponse(string ChangingDetailRevisionNumResult, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ChangingDetailRevisionNumResult = ChangingDetailRevisionNumResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUnitPrice", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeUnitPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeUnitPriceRequest() {
        }
        
        public ChangeUnitPriceRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUnitPriceResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeUnitPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeUnitPriceResponse() {
        }
        
        public ChangeUnitPriceResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUnitPriceConfirmOverride", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeUnitPriceConfirmOverrideRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeUnitPriceConfirmOverrideRequest() {
        }
        
        public ChangeUnitPriceConfirmOverrideRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUnitPriceConfirmOverrideResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeUnitPriceConfirmOverrideResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string sConfirmMsg;
        
        public ChangeUnitPriceConfirmOverrideResponse() {
        }
        
        public ChangeUnitPriceConfirmOverrideResponse(EpicorConsole.Epicor.POSvc.POTableset ds, string sConfirmMsg) {
            this.ds = ds;
            this.sConfirmMsg = sConfirmMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQtyOption", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeQtyOptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ipQtyOption;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeQtyOptionRequest() {
        }
        
        public ChangeQtyOptionRequest(string ipQtyOption, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipQtyOption = ipQtyOption;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQtyOptionResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeQtyOptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeQtyOptionResponse() {
        }
        
        public ChangeQtyOptionResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBasePartForConfig", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetBasePartForConfigRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public System.Guid sourceSysRowID;
        
        public GetBasePartForConfigRequest() {
        }
        
        public GetBasePartForConfigRequest(System.Guid sourceSysRowID) {
            this.sourceSysRowID = sourceSysRowID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBasePartForConfigResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetBasePartForConfigResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string cfgPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string cfgRevisionNum;
        
        public GetBasePartForConfigResponse() {
        }
        
        public GetBasePartForConfigResponse(string cfgPartNum, string cfgRevisionNum) {
            this.cfgPartNum = cfgPartNum;
            this.cfgRevisionNum = cfgRevisionNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PartStatusValidationMessages", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class PartStatusValidationMessagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string valpartnum;
        
        public PartStatusValidationMessagesRequest() {
        }
        
        public PartStatusValidationMessagesRequest(string valpartnum) {
            this.valpartnum = valpartnum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PartStatusValidationMessagesResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class PartStatusValidationMessagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string valpartnum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string QuestionString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public bool SubstitutePartAvail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public string MsgType;
        
        public PartStatusValidationMessagesResponse() {
        }
        
        public PartStatusValidationMessagesResponse(string valpartnum, string QuestionString, bool SubstitutePartAvail, string MsgType) {
            this.valpartnum = valpartnum;
            this.QuestionString = QuestionString;
            this.SubstitutePartAvail = SubstitutePartAvail;
            this.MsgType = MsgType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeApproveSwitch", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeApproveSwitchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public bool ApproveValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeApproveSwitchRequest() {
        }
        
        public ChangeApproveSwitchRequest(bool ApproveValue, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ApproveValue = ApproveValue;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeApproveSwitchResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeApproveSwitchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ViolationMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeApproveSwitchResponse() {
        }
        
        public ChangeApproveSwitchResponse(string ViolationMsg, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ViolationMsg = ViolationMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangedApproveSwitch", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangedApproveSwitchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangedApproveSwitchRequest() {
        }
        
        public ChangedApproveSwitchRequest(int poNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.poNum = poNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangedApproveSwitchResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangedApproveSwitchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string violationMsg;
        
        public ChangedApproveSwitchResponse() {
        }
        
        public ChangedApproveSwitchResponse(EpicorConsole.Epicor.POSvc.POTableset ds, string violationMsg) {
            this.ds = ds;
            this.violationMsg = violationMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCountry", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeCountryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeCountryRequest() {
        }
        
        public ChangeCountryRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCountryResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeCountryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeCountryResponse() {
        }
        
        public ChangeCountryResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCurrencyCode", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeCurrencyCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string iCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeCurrencyCodeRequest() {
        }
        
        public ChangeCurrencyCodeRequest(string iCurrencyCode, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.iCurrencyCode = iCurrencyCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCurrencyCodeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeCurrencyCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeCurrencyCodeResponse() {
        }
        
        public ChangeCurrencyCodeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOTaxRegionCode", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOTaxRegionCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string newTaxRegionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOTaxRegionCodeRequest() {
        }
        
        public ChangePOTaxRegionCodeRequest(string newTaxRegionCode, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newTaxRegionCode = newTaxRegionCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOTaxRegionCodeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOTaxRegionCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOTaxRegionCodeResponse() {
        }
        
        public ChangePOTaxRegionCodeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOType", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string newPOType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOTypeRequest() {
        }
        
        public ChangePOTypeRequest(string newPOType, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newPOType = newPOType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOTypeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOTypeResponse() {
        }
        
        public ChangePOTypeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePrcConNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePrcConNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int PrcConNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePrcConNumRequest() {
        }
        
        public ChangePrcConNumRequest(int PrcConNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.PrcConNum = PrcConNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePrcConNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePrcConNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePrcConNumResponse() {
        }
        
        public ChangePrcConNumResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePrcConNumByName", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePrcConNumByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string prcConName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePrcConNumByNameRequest() {
        }
        
        public ChangePrcConNumByNameRequest(string prcConName, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.prcConName = prcConName;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePrcConNumByNameResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePrcConNumByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int prcConNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePrcConNumByNameResponse() {
        }
        
        public ChangePrcConNumByNameResponse(int prcConNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.prcConNum = prcConNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePurPoint", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePurPointRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string PurPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePurPointRequest() {
        }
        
        public ChangePurPointRequest(string PurPoint, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.PurPoint = PurPoint;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePurPointResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePurPointResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePurPointResponse() {
        }
        
        public ChangePurPointResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeVendor", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeVendorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string VendID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeVendorRequest() {
        }
        
        public ChangeVendorRequest(string VendID, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.VendID = VendID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeVendorResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeVendorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeVendorResponse() {
        }
        
        public ChangeVendorResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckRateGrpCode", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckRateGrpCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ipRateGrpCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public CheckRateGrpCodeRequest() {
        }
        
        public CheckRateGrpCodeRequest(string ipRateGrpCode, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipRateGrpCode = ipRateGrpCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckRateGrpCodeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckRateGrpCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public CheckRateGrpCodeResponse() {
        }
        
        public CheckRateGrpCodeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangedHeaderTaxManual", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangedHeaderTaxManualRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangedHeaderTaxManualRequest() {
        }
        
        public ChangedHeaderTaxManualRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangedHeaderTaxManualResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangedHeaderTaxManualResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangedHeaderTaxManualResponse() {
        }
        
        public ChangedHeaderTaxManualResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxFixedAmount", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxFixedAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal proposedFixedAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxFixedAmountRequest() {
        }
        
        public ChangeHeaderTaxFixedAmountRequest(decimal proposedFixedAmt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedFixedAmt = proposedFixedAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxFixedAmountResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxFixedAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxFixedAmountResponse() {
        }
        
        public ChangeHeaderTaxFixedAmountResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxPercent", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal proposedTaxPercent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxPercentRequest() {
        }
        
        public ChangeHeaderTaxTaxPercentRequest(decimal proposedTaxPercent, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedTaxPercent = proposedTaxPercent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxPercentResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxPercentResponse() {
        }
        
        public ChangeHeaderTaxTaxPercentResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxRateCode", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxRateCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxRateCodeRequest() {
        }
        
        public ChangeHeaderTaxRateCodeRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxRateCodeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxRateCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxRateCodeResponse() {
        }
        
        public ChangeHeaderTaxRateCodeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxRateCodeMaster", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxRateCodeMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string proposedRateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxRateCodeMasterRequest() {
        }
        
        public ChangeHeaderTaxRateCodeMasterRequest(string proposedRateCode, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedRateCode = proposedRateCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxRateCodeMasterResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxRateCodeMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxRateCodeMasterResponse() {
        }
        
        public ChangeHeaderTaxRateCodeMasterResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxReportableAmt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxReportableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal proposedReportableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxReportableAmtRequest() {
        }
        
        public ChangeHeaderTaxReportableAmtRequest(decimal proposedReportableAmt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedReportableAmt = proposedReportableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxReportableAmtResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxReportableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxReportableAmtResponse() {
        }
        
        public ChangeHeaderTaxReportableAmtResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxableAmt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal proposedTaxableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxableAmtRequest() {
        }
        
        public ChangeHeaderTaxTaxableAmtRequest(decimal proposedTaxableAmt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedTaxableAmt = proposedTaxableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxableAmtResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxableAmtResponse() {
        }
        
        public ChangeHeaderTaxTaxableAmtResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxAmt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal proposedTaxAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxAmtRequest() {
        }
        
        public ChangeHeaderTaxTaxAmtRequest(decimal proposedTaxAmt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedTaxAmt = proposedTaxAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxAmtResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxAmtResponse() {
        }
        
        public ChangeHeaderTaxTaxAmtResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxCode", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string proposedTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxCodeRequest() {
        }
        
        public ChangeHeaderTaxTaxCodeRequest(string proposedTaxCode, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedTaxCode = proposedTaxCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxCodeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxCodeResponse() {
        }
        
        public ChangeHeaderTaxTaxCodeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxDeductable", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxDeductableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal proposedTaxDeductable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxDeductableRequest() {
        }
        
        public ChangeHeaderTaxTaxDeductableRequest(decimal proposedTaxDeductable, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedTaxDeductable = proposedTaxDeductable;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHeaderTaxTaxDeductableResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeHeaderTaxTaxDeductableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeHeaderTaxTaxDeductableResponse() {
        }
        
        public ChangeHeaderTaxTaxDeductableResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCurrencySwitch", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeCurrencySwitchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeCurrencySwitchRequest() {
        }
        
        public ChangeCurrencySwitchRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCurrencySwitchResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeCurrencySwitchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeCurrencySwitchResponse() {
        }
        
        public ChangeCurrencySwitchResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOHeadMiscAmt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOHeadMiscAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal proposedMiscAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOHeadMiscAmtRequest() {
        }
        
        public ChangePOHeadMiscAmtRequest(decimal proposedMiscAmt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedMiscAmt = proposedMiscAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOHeadMiscAmtResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOHeadMiscAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOHeadMiscAmtResponse() {
        }
        
        public ChangePOHeadMiscAmtResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOHeadMiscCode", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOHeadMiscCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string newMiscCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOHeadMiscCodeRequest() {
        }
        
        public ChangePOHeadMiscCodeRequest(string newMiscCode, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newMiscCode = newMiscCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOHeadMiscCodeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOHeadMiscCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOHeadMiscCodeResponse() {
        }
        
        public ChangePOHeadMiscCodeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOHeadMiscPrcnt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOHeadMiscPrcntRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOHeadMiscPrcntRequest() {
        }
        
        public ChangePOHeadMiscPrcntRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOHeadMiscPrcntResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOHeadMiscPrcntResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOHeadMiscPrcntResponse() {
        }
        
        public ChangePOHeadMiscPrcntResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOMiscAmt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOMiscAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal proposedMiscAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOMiscAmtRequest() {
        }
        
        public ChangePOMiscAmtRequest(decimal proposedMiscAmt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedMiscAmt = proposedMiscAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOMiscAmtResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOMiscAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOMiscAmtResponse() {
        }
        
        public ChangePOMiscAmtResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOMiscCode", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOMiscCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string newMiscCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOMiscCodeRequest() {
        }
        
        public ChangePOMiscCodeRequest(string newMiscCode, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newMiscCode = newMiscCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOMiscCodeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOMiscCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOMiscCodeResponse() {
        }
        
        public ChangePOMiscCodeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePoMiscCurrSwitch", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePoMiscCurrSwitchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePoMiscCurrSwitchRequest() {
        }
        
        public ChangePoMiscCurrSwitchRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePoMiscCurrSwitchResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePoMiscCurrSwitchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePoMiscCurrSwitchResponse() {
        }
        
        public ChangePoMiscCurrSwitchResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOMiscPrcnt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOMiscPrcntRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOMiscPrcntRequest() {
        }
        
        public ChangePOMiscPrcntRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePOMiscPrcntResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePOMiscPrcntResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePOMiscPrcntResponse() {
        }
        
        public ChangePOMiscPrcntResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelAssemblySeq", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelAssemblySeqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int NewAsmSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelAssemblySeqRequest() {
        }
        
        public ChangeRelAssemblySeqRequest(int NewAsmSeq, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewAsmSeq = NewAsmSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelAssemblySeqResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelAssemblySeqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelAssemblySeqResponse() {
        }
        
        public ChangeRelAssemblySeqResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelGlbCompany", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelGlbCompanyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ProposedGlbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelGlbCompanyRequest() {
        }
        
        public ChangeRelGlbCompanyRequest(string ProposedGlbCompany, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ProposedGlbCompany = ProposedGlbCompany;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelGlbCompanyResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelGlbCompanyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelGlbCompanyResponse() {
        }
        
        public ChangeRelGlbCompanyResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelGlbPlant", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelGlbPlantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ProposedGlbPlant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelGlbPlantRequest() {
        }
        
        public ChangeRelGlbPlantRequest(string ProposedGlbPlant, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ProposedGlbPlant = ProposedGlbPlant;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelGlbPlantResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelGlbPlantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelGlbPlantResponse() {
        }
        
        public ChangeRelGlbPlantResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelGlbWarehouse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelGlbWarehouseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ProposedGlbWarehouse;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelGlbWarehouseRequest() {
        }
        
        public ChangeRelGlbWarehouseRequest(string ProposedGlbWarehouse, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ProposedGlbWarehouse = ProposedGlbWarehouse;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelGlbWarehouseResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelGlbWarehouseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelGlbWarehouseResponse() {
        }
        
        public ChangeRelGlbWarehouseResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelIUM", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelIUMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewIUM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelIUMRequest() {
        }
        
        public ChangeRelIUMRequest(string NewIUM, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewIUM = NewIUM;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelIUMResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelIUMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelIUMResponse() {
        }
        
        public ChangeRelIUMResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelJobNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelJobNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewJobNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelJobNumRequest() {
        }
        
        public ChangeRelJobNumRequest(string NewJobNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewJobNum = NewJobNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelJobNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelJobNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelJobNumResponse() {
        }
        
        public ChangeRelJobNumResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelJobSeq", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelJobSeqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int NewJobSeqNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelJobSeqRequest() {
        }
        
        public ChangeRelJobSeqRequest(int NewJobSeqNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewJobSeqNum = NewJobSeqNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelJobSeqResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelJobSeqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelJobSeqResponse() {
        }
        
        public ChangeRelJobSeqResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelMangCust", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelMangCustRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewMangCust;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelMangCustRequest() {
        }
        
        public ChangeRelMangCustRequest(string NewMangCust, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewMangCust = NewMangCust;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelMangCustResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelMangCustResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelMangCustResponse() {
        }
        
        public ChangeRelMangCustResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelOrderLine", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelOrderLineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int ipOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelOrderLineRequest() {
        }
        
        public ChangeRelOrderLineRequest(int ipOrderLine, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipOrderLine = ipOrderLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelOrderLineResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelOrderLineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelOrderLineResponse() {
        }
        
        public ChangeRelOrderLineResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelOrderNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelOrderNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelOrderNumRequest() {
        }
        
        public ChangeRelOrderNumRequest(int ipOrderNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipOrderNum = ipOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelOrderNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelOrderNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelOrderNumResponse() {
        }
        
        public ChangeRelOrderNumResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelOrderRelNum", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelOrderRelNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int ipOrderRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelOrderRelNumRequest() {
        }
        
        public ChangeRelOrderRelNumRequest(int ipOrderRelNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipOrderRelNum = ipOrderRelNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelOrderRelNumResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelOrderRelNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string opWrnMsg;
        
        public ChangeRelOrderRelNumResponse() {
        }
        
        public ChangeRelOrderRelNumResponse(EpicorConsole.Epicor.POSvc.POTableset ds, string opWrnMsg) {
            this.ds = ds;
            this.opWrnMsg = opWrnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelOurQty", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelOurQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal NewOurQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelOurQtyRequest() {
        }
        
        public ChangeRelOurQtyRequest(decimal NewOurQty, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewOurQty = NewOurQty;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelOurQtyResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelOurQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string opWarningMsg;
        
        public ChangeRelOurQtyResponse() {
        }
        
        public ChangeRelOurQtyResponse(EpicorConsole.Epicor.POSvc.POTableset ds, string opWarningMsg) {
            this.ds = ds;
            this.opWarningMsg = opWarningMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelPlant", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelPlantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string newPlant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelPlantRequest() {
        }
        
        public ChangeRelPlantRequest(string newPlant, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newPlant = newPlant;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelPlantResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelPlantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelPlantResponse() {
        }
        
        public ChangeRelPlantResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelPUM", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelPUMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string NewPUM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelPUMRequest() {
        }
        
        public ChangeRelPUMRequest(string NewPUM, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewPUM = NewPUM;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelPUMResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelPUMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelPUMResponse() {
        }
        
        public ChangeRelPUMResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelTaxExempt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelTaxExemptRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string newTaxExempt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelTaxExemptRequest() {
        }
        
        public ChangeRelTaxExemptRequest(string newTaxExempt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newTaxExempt = newTaxExempt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelTaxExemptResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelTaxExemptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelTaxExemptResponse() {
        }
        
        public ChangeRelTaxExemptResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelVendQty", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelVendQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public decimal NewVendQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeRelVendQtyRequest() {
        }
        
        public ChangeRelVendQtyRequest(decimal NewVendQty, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.NewVendQty = NewVendQty;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelVendQtyResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeRelVendQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string opWarningMsg;
        
        public ChangeRelVendQtyResponse() {
        }
        
        public ChangeRelVendQtyResponse(EpicorConsole.Epicor.POSvc.POTableset ds, string opWarningMsg) {
            this.ds = ds;
            this.opWarningMsg = opWarningMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePORelContract", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePORelContractRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ipContractID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePORelContractRequest() {
        }
        
        public ChangePORelContractRequest(string ipContractID, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipContractID = ipContractID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePORelContractResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangePORelContractResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ipContractID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangePORelContractResponse() {
        }
        
        public ChangePORelContractResponse(string ipContractID, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipContractID = ipContractID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTranType", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTranTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string newTranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTranTypeRequest() {
        }
        
        public ChangeTranTypeRequest(string newTranType, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.newTranType = newTranType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTranTypeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTranTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTranTypeResponse() {
        }
        
        public ChangeTranTypeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckProjectID", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckProjectIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ipProjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public CheckProjectIDRequest() {
        }
        
        public CheckProjectIDRequest(string ipProjectID, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipProjectID = ipProjectID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckProjectIDResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class CheckProjectIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public CheckProjectIDResponse() {
        }
        
        public CheckProjectIDResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultGLAccount", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetDefaultGLAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public int pPONum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int pPOLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int pPORelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetDefaultGLAccountRequest() {
        }
        
        public GetDefaultGLAccountRequest(int pPONum, int pPOLine, int pPORelNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.pPONum = pPONum;
            this.pPOLine = pPOLine;
            this.pPORelNum = pPORelNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultGLAccountResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetDefaultGLAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetDefaultGLAccountResponse() {
        }
        
        public GetDefaultGLAccountResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxReportableAmt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxReportableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public decimal proposedReportableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxReportableAmtRequest() {
        }
        
        public ChangeTaxReportableAmtRequest(string tableName, decimal proposedReportableAmt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.tableName = tableName;
            this.proposedReportableAmt = proposedReportableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxReportableAmtResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxReportableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxReportableAmtResponse() {
        }
        
        public ChangeTaxReportableAmtResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxTaxableAmt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxTaxableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public decimal proposedTaxableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxTaxableAmtRequest() {
        }
        
        public ChangeTaxTaxableAmtRequest(string tableName, decimal proposedTaxableAmt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.tableName = tableName;
            this.proposedTaxableAmt = proposedTaxableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxTaxableAmtResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxTaxableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxTaxableAmtResponse() {
        }
        
        public ChangeTaxTaxableAmtResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxTaxAmt", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxTaxAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public decimal proposedTaxAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxTaxAmtRequest() {
        }
        
        public ChangeTaxTaxAmtRequest(string tableName, decimal proposedTaxAmt, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.tableName = tableName;
            this.proposedTaxAmt = proposedTaxAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxTaxAmtResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxTaxAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxTaxAmtResponse() {
        }
        
        public ChangeTaxTaxAmtResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxDeductable", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxDeductableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public decimal proposedTaxDeductable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxDeductableRequest() {
        }
        
        public ChangeTaxDeductableRequest(string tableName, decimal proposedTaxDeductable, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.tableName = tableName;
            this.proposedTaxDeductable = proposedTaxDeductable;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxDeductableResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxDeductableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxDeductableResponse() {
        }
        
        public ChangeTaxDeductableResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxTaxCode", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxTaxCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string proposedTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxTaxCodeRequest() {
        }
        
        public ChangeTaxTaxCodeRequest(string tableName, string proposedTaxCode, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.tableName = tableName;
            this.proposedTaxCode = proposedTaxCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxTaxCodeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxTaxCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxTaxCodeResponse() {
        }
        
        public ChangeTaxTaxCodeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxRateCode", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxRateCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string proposedRateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxRateCodeRequest() {
        }
        
        public ChangeTaxRateCodeRequest(string tableName, string proposedRateCode, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.tableName = tableName;
            this.proposedRateCode = proposedRateCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxRateCodeResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxRateCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxRateCodeResponse() {
        }
        
        public ChangeTaxRateCodeResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxPercent", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public decimal proposedTaxPercent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxPercentRequest() {
        }
        
        public ChangeTaxPercentRequest(string tableName, decimal proposedTaxPercent, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.tableName = tableName;
            this.proposedTaxPercent = proposedTaxPercent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeTaxPercentResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeTaxPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeTaxPercentResponse() {
        }
        
        public ChangeTaxPercentResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeExpAcct", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeExpAcctRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string proposedAccountNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int inTGLCTranNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeExpAcctRequest() {
        }
        
        public ChangeExpAcctRequest(string proposedAccountNum, int inTGLCTranNum, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.proposedAccountNum = proposedAccountNum;
            this.inTGLCTranNum = inTGLCTranNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeExpAcctResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ChangeExpAcctResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ChangeExpAcctResponse() {
        }
        
        public ChangeExpAcctResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateInspection", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ValidateInspectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public string ipProposedInspPlan;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public string ipProposedSpecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ValidateInspectionRequest() {
        }
        
        public ValidateInspectionRequest(string ipProposedInspPlan, string ipProposedSpecId, EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ipProposedInspPlan = ipProposedInspPlan;
            this.ipProposedSpecId = ipProposedSpecId;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateInspectionResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class ValidateInspectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public ValidateInspectionResponse() {
        }
        
        public ValidateInspectionResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeader", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeaderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPOHeaderRequest() {
        }
        
        public GetNewPOHeaderRequest(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeaderResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeaderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPOHeaderResponse() {
        }
        
        public GetNewPOHeaderResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeaderAttch", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeaderAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        public GetNewPOHeaderAttchRequest() {
        }
        
        public GetNewPOHeaderAttchRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum) {
            this.ds = ds;
            this.poNum = poNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeaderAttchResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeaderAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPOHeaderAttchResponse() {
        }
        
        public GetNewPOHeaderAttchResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPODetail", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPODetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNUM;
        
        public GetNewPODetailRequest() {
        }
        
        public GetNewPODetailRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNUM) {
            this.ds = ds;
            this.poNUM = poNUM;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPODetailResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPODetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPODetailResponse() {
        }
        
        public GetNewPODetailResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPODetailAttch", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPODetailAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNUM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        public GetNewPODetailAttchRequest() {
        }
        
        public GetNewPODetailAttchRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNUM, int poLine) {
            this.ds = ds;
            this.poNUM = poNUM;
            this.poLine = poLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPODetailAttchResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPODetailAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPODetailAttchResponse() {
        }
        
        public GetNewPODetailAttchResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPORel", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPORelRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        public GetNewPORelRequest() {
        }
        
        public GetNewPORelRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine) {
            this.ds = ds;
            this.poNum = poNum;
            this.poLine = poLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPORelResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPORelResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPORelResponse() {
        }
        
        public GetNewPORelResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPORelAttch", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPORelAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public int poRelNum;
        
        public GetNewPORelAttchRequest() {
        }
        
        public GetNewPORelAttchRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum) {
            this.ds = ds;
            this.poNum = poNum;
            this.poLine = poLine;
            this.poRelNum = poRelNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPORelAttchResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPORelAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPORelAttchResponse() {
        }
        
        public GetNewPORelAttchResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPORelTax", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPORelTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public int poRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=4)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=5)]
        public string rateCode;
        
        public GetNewPORelTaxRequest() {
        }
        
        public GetNewPORelTaxRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum, string taxCode, string rateCode) {
            this.ds = ds;
            this.poNum = poNum;
            this.poLine = poLine;
            this.poRelNum = poRelNum;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPORelTaxResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPORelTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPORelTaxResponse() {
        }
        
        public GetNewPORelTaxResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPORelTGLC", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPORelTGLCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public int poRelNum;
        
        public GetNewPORelTGLCRequest() {
        }
        
        public GetNewPORelTGLCRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum) {
            this.ds = ds;
            this.poNum = poNum;
            this.poLine = poLine;
            this.poRelNum = poRelNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPORelTGLCResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPORelTGLCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPORelTGLCResponse() {
        }
        
        public GetNewPORelTGLCResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPODetailInsp", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPODetailInspRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNUM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        public GetNewPODetailInspRequest() {
        }
        
        public GetNewPODetailInspRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNUM, int poLine) {
            this.ds = ds;
            this.poNUM = poNUM;
            this.poLine = poLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPODetailInspResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPODetailInspResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPODetailInspResponse() {
        }
        
        public GetNewPODetailInspResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOMisc", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOMiscRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        public GetNewPOMiscRequest() {
        }
        
        public GetNewPOMiscRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine) {
            this.ds = ds;
            this.poNum = poNum;
            this.poLine = poLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOMiscResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOMiscResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPOMiscResponse() {
        }
        
        public GetNewPOMiscResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOMiscTax", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOMiscTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public int poRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=4)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=5)]
        public string rateCode;
        
        public GetNewPOMiscTaxRequest() {
        }
        
        public GetNewPOMiscTaxRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum, string taxCode, string rateCode) {
            this.ds = ds;
            this.poNum = poNum;
            this.poLine = poLine;
            this.poRelNum = poRelNum;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOMiscTaxResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOMiscTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPOMiscTaxResponse() {
        }
        
        public GetNewPOMiscTaxResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeadMisc", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeadMiscRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        public GetNewPOHeadMiscRequest() {
        }
        
        public GetNewPOHeadMiscRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine) {
            this.ds = ds;
            this.poNum = poNum;
            this.poLine = poLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeadMiscResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeadMiscResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPOHeadMiscResponse() {
        }
        
        public GetNewPOHeadMiscResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeaderTax", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeaderTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public string rateCode;
        
        public GetNewPOHeaderTaxRequest() {
        }
        
        public GetNewPOHeaderTaxRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, string taxCode, string rateCode) {
            this.ds = ds;
            this.poNum = poNum;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeaderTaxResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeaderTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPOHeaderTaxResponse() {
        }
        
        public GetNewPOHeaderTaxResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeadMiscTax", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeadMiscTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=2)]
        public int poLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=3)]
        public int poRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=4)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=5)]
        public string rateCode;
        
        public GetNewPOHeadMiscTaxRequest() {
        }
        
        public GetNewPOHeadMiscTaxRequest(EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum, string taxCode, string rateCode) {
            this.ds = ds;
            this.poNum = poNum;
            this.poLine = poLine;
            this.poRelNum = poRelNum;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPOHeadMiscTaxResponse", WrapperNamespace="Erp:BO:PO", IsWrapped=true)]
    public partial class GetNewPOHeadMiscTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:PO", Order=0)]
        public EpicorConsole.Epicor.POSvc.POTableset ds;
        
        public GetNewPOHeadMiscTaxResponse() {
        }
        
        public GetNewPOHeadMiscTaxResponse(EpicorConsole.Epicor.POSvc.POTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface POSvcContractChannel : EpicorConsole.Epicor.POSvc.POSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class POSvcContractClient : System.ServiceModel.ClientBase<EpicorConsole.Epicor.POSvc.POSvcContract>, EpicorConsole.Epicor.POSvc.POSvcContract {
        
        public POSvcContractClient() {
        }
        
        public POSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public POSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public POSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public POSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetListResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetList(EpicorConsole.Epicor.POSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicorConsole.Epicor.POSvc.POHeaderListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.POSvc.GetListRequest inValue = new EpicorConsole.Epicor.POSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.POSvc.GetListResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.POSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetRowsResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetRows(EpicorConsole.Epicor.POSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset GetRows(
                    string whereClausePOHeader, 
                    string whereClausePOHeaderAttch, 
                    string whereClausePODetail, 
                    string whereClausePODetailAttch, 
                    string whereClausePORel, 
                    string whereClausePORelAttch, 
                    string whereClausePORelTax, 
                    string whereClausePORelTGLC, 
                    string whereClausePODetailInsp, 
                    string whereClausePOMisc, 
                    string whereClausePOMiscTax, 
                    string whereClausePOHeadMisc, 
                    string whereClausePOHeaderTax, 
                    string whereClausePOHeadMiscTax, 
                    int pageSize, 
                    int absolutePage, 
                    out bool morePages) {
            EpicorConsole.Epicor.POSvc.GetRowsRequest inValue = new EpicorConsole.Epicor.POSvc.GetRowsRequest();
            inValue.whereClausePOHeader = whereClausePOHeader;
            inValue.whereClausePOHeaderAttch = whereClausePOHeaderAttch;
            inValue.whereClausePODetail = whereClausePODetail;
            inValue.whereClausePODetailAttch = whereClausePODetailAttch;
            inValue.whereClausePORel = whereClausePORel;
            inValue.whereClausePORelAttch = whereClausePORelAttch;
            inValue.whereClausePORelTax = whereClausePORelTax;
            inValue.whereClausePORelTGLC = whereClausePORelTGLC;
            inValue.whereClausePODetailInsp = whereClausePODetailInsp;
            inValue.whereClausePOMisc = whereClausePOMisc;
            inValue.whereClausePOMiscTax = whereClausePOMiscTax;
            inValue.whereClausePOHeadMisc = whereClausePOHeadMisc;
            inValue.whereClausePOHeaderTax = whereClausePOHeaderTax;
            inValue.whereClausePOHeadMiscTax = whereClausePOHeadMiscTax;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.POSvc.GetRowsResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.POSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.UpdateResponse EpicorConsole.Epicor.POSvc.POSvcContract.Update(EpicorConsole.Epicor.POSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.UpdateRequest inValue = new EpicorConsole.Epicor.POSvc.UpdateRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.UpdateResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.POSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.UpdateExtResponse EpicorConsole.Epicor.POSvc.POSvcContract.UpdateExt(EpicorConsole.Epicor.POSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public EpicorConsole.Epicor.POSvc.BOUpdErrorTableset UpdateExt(ref EpicorConsole.Epicor.POSvc.UpdExtPOTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            EpicorConsole.Epicor.POSvc.UpdateExtRequest inValue = new EpicorConsole.Epicor.POSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            EpicorConsole.Epicor.POSvc.UpdateExtResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.POSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
        
        public bool CalcAutoPORelTGLC(string calcTranType) {
            return base.Channel.CalcAutoPORelTGLC(calcTranType);
        }
        
        public System.Threading.Tasks.Task<bool> CalcAutoPORelTGLCAsync(string calcTranType) {
            return base.Channel.CalcAutoPORelTGLCAsync(calcTranType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.CheckBeforeUpdateResponse EpicorConsole.Epicor.POSvc.POSvcContract.CheckBeforeUpdate(EpicorConsole.Epicor.POSvc.CheckBeforeUpdateRequest request) {
            return base.Channel.CheckBeforeUpdate(request);
        }
        
        public string CheckBeforeUpdate(string viewName, EpicorConsole.Epicor.POSvc.POTableset ds, out string taxableChangedMsgText, out string vendorChangedMsgText) {
            EpicorConsole.Epicor.POSvc.CheckBeforeUpdateRequest inValue = new EpicorConsole.Epicor.POSvc.CheckBeforeUpdateRequest();
            inValue.viewName = viewName;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.CheckBeforeUpdateResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).CheckBeforeUpdate(inValue);
            taxableChangedMsgText = retVal.taxableChangedMsgText;
            vendorChangedMsgText = retVal.vendorChangedMsgText;
            return retVal.cOrderChangedMsgText;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckBeforeUpdateResponse> CheckBeforeUpdateAsync(EpicorConsole.Epicor.POSvc.CheckBeforeUpdateRequest request) {
            return base.Channel.CheckBeforeUpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.CheckLOCResponse EpicorConsole.Epicor.POSvc.POSvcContract.CheckLOC(EpicorConsole.Epicor.POSvc.CheckLOCRequest request) {
            return base.Channel.CheckLOC(request);
        }
        
        public string[] CheckLOC(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.CheckLOCRequest inValue = new EpicorConsole.Epicor.POSvc.CheckLOCRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.CheckLOCResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).CheckLOC(inValue);
            ds = retVal.ds;
            return retVal.opMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckLOCResponse> CheckLOCAsync(EpicorConsole.Epicor.POSvc.CheckLOCRequest request) {
            return base.Channel.CheckLOCAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.CheckPONumResponse EpicorConsole.Epicor.POSvc.POSvcContract.CheckPONum(EpicorConsole.Epicor.POSvc.CheckPONumRequest request) {
            return base.Channel.CheckPONum(request);
        }
        
        public bool CheckPONum(int ProposedPONum, out string opMessage) {
            EpicorConsole.Epicor.POSvc.CheckPONumRequest inValue = new EpicorConsole.Epicor.POSvc.CheckPONumRequest();
            inValue.ProposedPONum = ProposedPONum;
            EpicorConsole.Epicor.POSvc.CheckPONumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).CheckPONum(inValue);
            opMessage = retVal.opMessage;
            return retVal.opFoundPO;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckPONumResponse> CheckPONumAsync(EpicorConsole.Epicor.POSvc.CheckPONumRequest request) {
            return base.Channel.CheckPONumAsync(request);
        }
        
        public string chkPODatesChanges(string viewName, EpicorConsole.Epicor.POSvc.POTableset ds) {
            return base.Channel.chkPODatesChanges(viewName, ds);
        }
        
        public System.Threading.Tasks.Task<string> chkPODatesChangesAsync(string viewName, EpicorConsole.Epicor.POSvc.POTableset ds) {
            return base.Channel.chkPODatesChangesAsync(viewName, ds);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset CloseOrder(int PoNum) {
            return base.Channel.CloseOrder(PoNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> CloseOrderAsync(int PoNum) {
            return base.Channel.CloseOrderAsync(PoNum);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset CloseOrderLine(int PoNum, int PoLine) {
            return base.Channel.CloseOrderLine(PoNum, PoLine);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> CloseOrderLineAsync(int PoNum, int PoLine) {
            return base.Channel.CloseOrderLineAsync(PoNum, PoLine);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset CloseRelease(int PoNum, int PoLine, int PoRelease) {
            return base.Channel.CloseRelease(PoNum, PoLine, PoRelease);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> CloseReleaseAsync(int PoNum, int PoLine, int PoRelease) {
            return base.Channel.CloseReleaseAsync(PoNum, PoLine, PoRelease);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.DuplicatePOResponse EpicorConsole.Epicor.POSvc.POSvcContract.DuplicatePO(EpicorConsole.Epicor.POSvc.DuplicatePORequest request) {
            return base.Channel.DuplicatePO(request);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset DuplicatePO(int poNum, bool copyUnitCosts, bool copyJobInfo, bool getLatestSupplierPrice, bool getLatestRevision, System.Nullable<System.DateTime> newDueDate, System.Nullable<System.DateTime> newPromiseDate, string newBuyerID, out string cJobMTLIssuedComplete) {
            EpicorConsole.Epicor.POSvc.DuplicatePORequest inValue = new EpicorConsole.Epicor.POSvc.DuplicatePORequest();
            inValue.poNum = poNum;
            inValue.copyUnitCosts = copyUnitCosts;
            inValue.copyJobInfo = copyJobInfo;
            inValue.getLatestSupplierPrice = getLatestSupplierPrice;
            inValue.getLatestRevision = getLatestRevision;
            inValue.newDueDate = newDueDate;
            inValue.newPromiseDate = newPromiseDate;
            inValue.newBuyerID = newBuyerID;
            EpicorConsole.Epicor.POSvc.DuplicatePOResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).DuplicatePO(inValue);
            cJobMTLIssuedComplete = retVal.cJobMTLIssuedComplete;
            return retVal.DuplicatePOResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.DuplicatePOResponse> DuplicatePOAsync(EpicorConsole.Epicor.POSvc.DuplicatePORequest request) {
            return base.Channel.DuplicatePOAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetAPLOCDescription(EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionRequest request) {
            return base.Channel.GetAPLOCDescription(request);
        }
        
        public void GetAPLOCDescription(string poAPLOCID, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionRequest inValue = new EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionRequest();
            inValue.poAPLOCID = poAPLOCID;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetAPLOCDescription(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionResponse> GetAPLOCDescriptionAsync(EpicorConsole.Epicor.POSvc.GetAPLOCDescriptionRequest request) {
            return base.Channel.GetAPLOCDescriptionAsync(request);
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        public string GetCurrencyBase() {
            return base.Channel.GetCurrencyBase();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrencyBaseAsync() {
            return base.Channel.GetCurrencyBaseAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetDefaultBuyerResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetDefaultBuyer(EpicorConsole.Epicor.POSvc.GetDefaultBuyerRequest request) {
            return base.Channel.GetDefaultBuyer(request);
        }
        
        public bool GetDefaultBuyer(out string buyerID, out string buyerIDName) {
            EpicorConsole.Epicor.POSvc.GetDefaultBuyerRequest inValue = new EpicorConsole.Epicor.POSvc.GetDefaultBuyerRequest();
            EpicorConsole.Epicor.POSvc.GetDefaultBuyerResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetDefaultBuyer(inValue);
            buyerID = retVal.buyerID;
            buyerIDName = retVal.buyerIDName;
            return retVal.GetDefaultBuyerResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetDefaultBuyerResponse> GetDefaultBuyerAsync(EpicorConsole.Epicor.POSvc.GetDefaultBuyerRequest request) {
            return base.Channel.GetDefaultBuyerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetDefaultGLAccountAllPOReleases(EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesRequest request) {
            return base.Channel.GetDefaultGLAccountAllPOReleases(request);
        }
        
        public void GetDefaultGLAccountAllPOReleases(int pPONum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesRequest inValue = new EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesRequest();
            inValue.pPONum = pPONum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetDefaultGLAccountAllPOReleases(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesResponse> GetDefaultGLAccountAllPOReleasesAsync(EpicorConsole.Epicor.POSvc.GetDefaultGLAccountAllPOReleasesRequest request) {
            return base.Channel.GetDefaultGLAccountAllPOReleasesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewConsolidatedPOResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewConsolidatedPO(EpicorConsole.Epicor.POSvc.GetNewConsolidatedPORequest request) {
            return base.Channel.GetNewConsolidatedPO(request);
        }
        
        public void GetNewConsolidatedPO(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.GetNewConsolidatedPORequest inValue = new EpicorConsole.Epicor.POSvc.GetNewConsolidatedPORequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.GetNewConsolidatedPOResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewConsolidatedPO(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewConsolidatedPOResponse> GetNewConsolidatedPOAsync(EpicorConsole.Epicor.POSvc.GetNewConsolidatedPORequest request) {
            return base.Channel.GetNewConsolidatedPOAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewContractPOResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewContractPO(EpicorConsole.Epicor.POSvc.GetNewContractPORequest request) {
            return base.Channel.GetNewContractPO(request);
        }
        
        public void GetNewContractPO(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.GetNewContractPORequest inValue = new EpicorConsole.Epicor.POSvc.GetNewContractPORequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.GetNewContractPOResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewContractPO(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewContractPOResponse> GetNewContractPOAsync(EpicorConsole.Epicor.POSvc.GetNewContractPORequest request) {
            return base.Channel.GetNewContractPOAsync(request);
        }
        
        public string GetGlbCompanyList() {
            return base.Channel.GetGlbCompanyList();
        }
        
        public System.Threading.Tasks.Task<string> GetGlbCompanyListAsync() {
            return base.Channel.GetGlbCompanyListAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetPartSubListResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetPartSubList(EpicorConsole.Epicor.POSvc.GetPartSubListRequest request) {
            return base.Channel.GetPartSubList(request);
        }
        
        public EpicorConsole.Epicor.POSvc.PartSubsTableset GetPartSubList(string PartNum, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.POSvc.GetPartSubListRequest inValue = new EpicorConsole.Epicor.POSvc.GetPartSubListRequest();
            inValue.PartNum = PartNum;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.POSvc.GetPartSubListResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetPartSubList(inValue);
            morePages = retVal.morePages;
            return retVal.GetPartSubListResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetPartSubListResponse> GetPartSubListAsync(EpicorConsole.Epicor.POSvc.GetPartSubListRequest request) {
            return base.Channel.GetPartSubListAsync(request);
        }
        
        public EpicorConsole.Epicor.POSvc.POReceiptsTableset GetPOReceipts(int ipPONum) {
            return base.Channel.GetPOReceipts(ipPONum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POReceiptsTableset> GetPOReceiptsAsync(int ipPONum) {
            return base.Channel.GetPOReceiptsAsync(ipPONum);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset ReopenOrder(int PoNum) {
            return base.Channel.ReopenOrder(PoNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> ReopenOrderAsync(int PoNum) {
            return base.Channel.ReopenOrderAsync(PoNum);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset ReopenOrderLine(int PoNum, int PoLine) {
            return base.Channel.ReopenOrderLine(PoNum, PoLine);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> ReopenOrderLineAsync(int PoNum, int PoLine) {
            return base.Channel.ReopenOrderLineAsync(PoNum, PoLine);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset ReOpenRelease(int PoNum, int PoLine, int PoRelease) {
            return base.Channel.ReOpenRelease(PoNum, PoLine, PoRelease);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> ReOpenReleaseAsync(int PoNum, int PoLine, int PoRelease) {
            return base.Channel.ReOpenReleaseAsync(PoNum, PoLine, PoRelease);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.SetReadyToCalcResponse EpicorConsole.Epicor.POSvc.POSvcContract.SetReadyToCalc(EpicorConsole.Epicor.POSvc.SetReadyToCalcRequest request) {
            return base.Channel.SetReadyToCalc(request);
        }
        
        public void SetReadyToCalc(int ipPONum, bool ipCalledFromUI, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.SetReadyToCalcRequest inValue = new EpicorConsole.Epicor.POSvc.SetReadyToCalcRequest();
            inValue.ipPONum = ipPONum;
            inValue.ipCalledFromUI = ipCalledFromUI;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.SetReadyToCalcResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).SetReadyToCalc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.SetReadyToCalcResponse> SetReadyToCalcAsync(EpicorConsole.Epicor.POSvc.SetReadyToCalcRequest request) {
            return base.Channel.SetReadyToCalcAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeContractUOMResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeContractUOM(EpicorConsole.Epicor.POSvc.ChangeContractUOMRequest request) {
            return base.Channel.ChangeContractUOM(request);
        }
        
        public void ChangeContractUOM(string NewUOM, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeContractUOMRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeContractUOMRequest();
            inValue.NewUOM = NewUOM;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeContractUOMResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeContractUOM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeContractUOMResponse> ChangeContractUOMAsync(EpicorConsole.Epicor.POSvc.ChangeContractUOMRequest request) {
            return base.Channel.ChangeContractUOMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailAssemblySeq(EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqRequest request) {
            return base.Channel.ChangeDetailAssemblySeq(request);
        }
        
        public void ChangeDetailAssemblySeq(int NewAsmSeq, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqRequest();
            inValue.NewAsmSeq = NewAsmSeq;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailAssemblySeq(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqResponse> ChangeDetailAssemblySeqAsync(EpicorConsole.Epicor.POSvc.ChangeDetailAssemblySeqRequest request) {
            return base.Channel.ChangeDetailAssemblySeqAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailCalcOurQty(EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyRequest request) {
            return base.Channel.ChangeDetailCalcOurQty(request);
        }
        
        public void ChangeDetailCalcOurQty(decimal NewCalcOurQty, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyRequest();
            inValue.NewCalcOurQty = NewCalcOurQty;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailCalcOurQty(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyResponse> ChangeDetailCalcOurQtyAsync(EpicorConsole.Epicor.POSvc.ChangeDetailCalcOurQtyRequest request) {
            return base.Channel.ChangeDetailCalcOurQtyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailCalcVendQty(EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyRequest request) {
            return base.Channel.ChangeDetailCalcVendQty(request);
        }
        
        public void ChangeDetailCalcVendQty(decimal NewCalcVendQty, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyRequest();
            inValue.NewCalcVendQty = NewCalcVendQty;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailCalcVendQty(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyResponse> ChangeDetailCalcVendQtyAsync(EpicorConsole.Epicor.POSvc.ChangeDetailCalcVendQtyRequest request) {
            return base.Channel.ChangeDetailCalcVendQtyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailIUMResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailIUM(EpicorConsole.Epicor.POSvc.ChangeDetailIUMRequest request) {
            return base.Channel.ChangeDetailIUM(request);
        }
        
        public void ChangeDetailIUM(string NewIUM, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailIUMRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailIUMRequest();
            inValue.NewIUM = NewIUM;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailIUMResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailIUM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailIUMResponse> ChangeDetailIUMAsync(EpicorConsole.Epicor.POSvc.ChangeDetailIUMRequest request) {
            return base.Channel.ChangeDetailIUMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailJobNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailJobNum(EpicorConsole.Epicor.POSvc.ChangeDetailJobNumRequest request) {
            return base.Channel.ChangeDetailJobNum(request);
        }
        
        public void ChangeDetailJobNum(string NewJobNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailJobNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailJobNumRequest();
            inValue.NewJobNum = NewJobNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailJobNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailJobNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailJobNumResponse> ChangeDetailJobNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailJobNumRequest request) {
            return base.Channel.ChangeDetailJobNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailJobSeq(EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqRequest request) {
            return base.Channel.ChangeDetailJobSeq(request);
        }
        
        public void ChangeDetailJobSeq(int NewJobSeqNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqRequest();
            inValue.NewJobSeqNum = NewJobSeqNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailJobSeq(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqResponse> ChangeDetailJobSeqAsync(EpicorConsole.Epicor.POSvc.ChangeDetailJobSeqRequest request) {
            return base.Channel.ChangeDetailJobSeqAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailMangCustResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailMangCust(EpicorConsole.Epicor.POSvc.ChangeDetailMangCustRequest request) {
            return base.Channel.ChangeDetailMangCust(request);
        }
        
        public void ChangeDetailMangCust(string NewMangCust, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailMangCustRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailMangCustRequest();
            inValue.NewMangCust = NewMangCust;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailMangCustResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailMangCust(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailMangCustResponse> ChangeDetailMangCustAsync(EpicorConsole.Epicor.POSvc.ChangeDetailMangCustRequest request) {
            return base.Channel.ChangeDetailMangCustAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailMfgNum(EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumRequest request) {
            return base.Channel.ChangeDetailMfgNum(request);
        }
        
        public void ChangeDetailMfgNum(int newMfgNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumRequest();
            inValue.newMfgNum = newMfgNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailMfgNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumResponse> ChangeDetailMfgNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailMfgNumRequest request) {
            return base.Channel.ChangeDetailMfgNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailMfgPartNum(EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumRequest request) {
            return base.Channel.ChangeDetailMfgPartNum(request);
        }
        
        public void ChangeDetailMfgPartNum(string newMfgPartNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumRequest();
            inValue.newMfgPartNum = newMfgPartNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailMfgPartNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumResponse> ChangeDetailMfgPartNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailMfgPartNumRequest request) {
            return base.Channel.ChangeDetailMfgPartNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailOrderLine(EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineRequest request) {
            return base.Channel.ChangeDetailOrderLine(request);
        }
        
        public void ChangeDetailOrderLine(int ipOrderLine, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineRequest();
            inValue.ipOrderLine = ipOrderLine;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailOrderLine(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineResponse> ChangeDetailOrderLineAsync(EpicorConsole.Epicor.POSvc.ChangeDetailOrderLineRequest request) {
            return base.Channel.ChangeDetailOrderLineAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailOrderNum(EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumRequest request) {
            return base.Channel.ChangeDetailOrderNum(request);
        }
        
        public void ChangeDetailOrderNum(int ipOrderNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumRequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailOrderNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumResponse> ChangeDetailOrderNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailOrderNumRequest request) {
            return base.Channel.ChangeDetailOrderNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailOverridePriceList(EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListRequest request) {
            return base.Channel.ChangeDetailOverridePriceList(request);
        }
        
        public void ChangeDetailOverridePriceList(bool overridePriceList, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListRequest();
            inValue.overridePriceList = overridePriceList;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailOverridePriceList(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListResponse> ChangeDetailOverridePriceListAsync(EpicorConsole.Epicor.POSvc.ChangeDetailOverridePriceListRequest request) {
            return base.Channel.ChangeDetailOverridePriceListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailPartClassResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailPartClass(EpicorConsole.Epicor.POSvc.ChangeDetailPartClassRequest request) {
            return base.Channel.ChangeDetailPartClass(request);
        }
        
        public void ChangeDetailPartClass(string NewClassID, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailPartClassRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailPartClassRequest();
            inValue.NewClassID = NewClassID;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailPartClassResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailPartClass(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailPartClassResponse> ChangeDetailPartClassAsync(EpicorConsole.Epicor.POSvc.ChangeDetailPartClassRequest request) {
            return base.Channel.ChangeDetailPartClassAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailPartNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailPartNum(EpicorConsole.Epicor.POSvc.ChangeDetailPartNumRequest request) {
            return base.Channel.ChangeDetailPartNum(request);
        }
        
        public bool ChangeDetailPartNum(ref string NewPartNum, System.Guid SysRowID, string rowType, bool isSubstitute, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailPartNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailPartNumRequest();
            inValue.NewPartNum = NewPartNum;
            inValue.SysRowID = SysRowID;
            inValue.rowType = rowType;
            inValue.isSubstitute = isSubstitute;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailPartNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailPartNum(inValue);
            NewPartNum = retVal.NewPartNum;
            ds = retVal.ds;
            return retVal.multipleMatch;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailPartNumResponse> ChangeDetailPartNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailPartNumRequest request) {
            return base.Channel.ChangeDetailPartNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailPUMResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailPUM(EpicorConsole.Epicor.POSvc.ChangeDetailPUMRequest request) {
            return base.Channel.ChangeDetailPUM(request);
        }
        
        public void ChangeDetailPUM(string NewPUM, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailPUMRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailPUMRequest();
            inValue.NewPUM = NewPUM;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailPUMResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailPUM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailPUMResponse> ChangeDetailPUMAsync(EpicorConsole.Epicor.POSvc.ChangeDetailPUMRequest request) {
            return base.Channel.ChangeDetailPUMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailRevisionNum(EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumRequest request) {
            return base.Channel.ChangeDetailRevisionNum(request);
        }
        
        public void ChangeDetailRevisionNum(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailRevisionNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumResponse> ChangeDetailRevisionNumAsync(EpicorConsole.Epicor.POSvc.ChangeDetailRevisionNumRequest request) {
            return base.Channel.ChangeDetailRevisionNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailTaxCatID(EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDRequest request) {
            return base.Channel.ChangeDetailTaxCatID(request);
        }
        
        public void ChangeDetailTaxCatID(string newTaxCatID, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDRequest();
            inValue.newTaxCatID = newTaxCatID;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailTaxCatID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDResponse> ChangeDetailTaxCatIDAsync(EpicorConsole.Epicor.POSvc.ChangeDetailTaxCatIDRequest request) {
            return base.Channel.ChangeDetailTaxCatIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeDetailTranType(EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeRequest request) {
            return base.Channel.ChangeDetailTranType(request);
        }
        
        public void ChangeDetailTranType(string NewTranType, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeRequest();
            inValue.NewTranType = NewTranType;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeDetailTranType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeResponse> ChangeDetailTranTypeAsync(EpicorConsole.Epicor.POSvc.ChangeDetailTranTypeRequest request) {
            return base.Channel.ChangeDetailTranTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangingDetailRevisionNum(EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumRequest request) {
            return base.Channel.ChangingDetailRevisionNum(request);
        }
        
        public string ChangingDetailRevisionNum(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangingDetailRevisionNum(inValue);
            ds = retVal.ds;
            return retVal.ChangingDetailRevisionNumResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumResponse> ChangingDetailRevisionNumAsync(EpicorConsole.Epicor.POSvc.ChangingDetailRevisionNumRequest request) {
            return base.Channel.ChangingDetailRevisionNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeUnitPriceResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeUnitPrice(EpicorConsole.Epicor.POSvc.ChangeUnitPriceRequest request) {
            return base.Channel.ChangeUnitPrice(request);
        }
        
        public void ChangeUnitPrice(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeUnitPriceRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeUnitPriceRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeUnitPriceResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeUnitPrice(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeUnitPriceResponse> ChangeUnitPriceAsync(EpicorConsole.Epicor.POSvc.ChangeUnitPriceRequest request) {
            return base.Channel.ChangeUnitPriceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeUnitPriceConfirmOverride(EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideRequest request) {
            return base.Channel.ChangeUnitPriceConfirmOverride(request);
        }
        
        public string ChangeUnitPriceConfirmOverride(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeUnitPriceConfirmOverride(inValue);
            ds = retVal.ds;
            return retVal.sConfirmMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideResponse> ChangeUnitPriceConfirmOverrideAsync(EpicorConsole.Epicor.POSvc.ChangeUnitPriceConfirmOverrideRequest request) {
            return base.Channel.ChangeUnitPriceConfirmOverrideAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeQtyOptionResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeQtyOption(EpicorConsole.Epicor.POSvc.ChangeQtyOptionRequest request) {
            return base.Channel.ChangeQtyOption(request);
        }
        
        public void ChangeQtyOption(string ipQtyOption, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeQtyOptionRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeQtyOptionRequest();
            inValue.ipQtyOption = ipQtyOption;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeQtyOptionResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeQtyOption(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeQtyOptionResponse> ChangeQtyOptionAsync(EpicorConsole.Epicor.POSvc.ChangeQtyOptionRequest request) {
            return base.Channel.ChangeQtyOptionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetBasePartForConfigResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetBasePartForConfig(EpicorConsole.Epicor.POSvc.GetBasePartForConfigRequest request) {
            return base.Channel.GetBasePartForConfig(request);
        }
        
        public string GetBasePartForConfig(System.Guid sourceSysRowID, out string cfgRevisionNum) {
            EpicorConsole.Epicor.POSvc.GetBasePartForConfigRequest inValue = new EpicorConsole.Epicor.POSvc.GetBasePartForConfigRequest();
            inValue.sourceSysRowID = sourceSysRowID;
            EpicorConsole.Epicor.POSvc.GetBasePartForConfigResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetBasePartForConfig(inValue);
            cfgRevisionNum = retVal.cfgRevisionNum;
            return retVal.cfgPartNum;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetBasePartForConfigResponse> GetBasePartForConfigAsync(EpicorConsole.Epicor.POSvc.GetBasePartForConfigRequest request) {
            return base.Channel.GetBasePartForConfigAsync(request);
        }
        
        public string GetPlantsForPart(string ipPartNum) {
            return base.Channel.GetPlantsForPart(ipPartNum);
        }
        
        public System.Threading.Tasks.Task<string> GetPlantsForPartAsync(string ipPartNum) {
            return base.Channel.GetPlantsForPartAsync(ipPartNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesResponse EpicorConsole.Epicor.POSvc.POSvcContract.PartStatusValidationMessages(EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesRequest request) {
            return base.Channel.PartStatusValidationMessages(request);
        }
        
        public string PartStatusValidationMessages(ref string valpartnum, out bool SubstitutePartAvail, out string MsgType) {
            EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesRequest inValue = new EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesRequest();
            inValue.valpartnum = valpartnum;
            EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).PartStatusValidationMessages(inValue);
            valpartnum = retVal.valpartnum;
            SubstitutePartAvail = retVal.SubstitutePartAvail;
            MsgType = retVal.MsgType;
            return retVal.QuestionString;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesResponse> PartStatusValidationMessagesAsync(EpicorConsole.Epicor.POSvc.PartStatusValidationMessagesRequest request) {
            return base.Channel.PartStatusValidationMessagesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeApproveSwitchResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeApproveSwitch(EpicorConsole.Epicor.POSvc.ChangeApproveSwitchRequest request) {
            return base.Channel.ChangeApproveSwitch(request);
        }
        
        public string ChangeApproveSwitch(bool ApproveValue, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeApproveSwitchRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeApproveSwitchRequest();
            inValue.ApproveValue = ApproveValue;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeApproveSwitchResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeApproveSwitch(inValue);
            ds = retVal.ds;
            return retVal.ViolationMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeApproveSwitchResponse> ChangeApproveSwitchAsync(EpicorConsole.Epicor.POSvc.ChangeApproveSwitchRequest request) {
            return base.Channel.ChangeApproveSwitchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangedApproveSwitchResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangedApproveSwitch(EpicorConsole.Epicor.POSvc.ChangedApproveSwitchRequest request) {
            return base.Channel.ChangedApproveSwitch(request);
        }
        
        public string ChangedApproveSwitch(int poNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangedApproveSwitchRequest inValue = new EpicorConsole.Epicor.POSvc.ChangedApproveSwitchRequest();
            inValue.poNum = poNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangedApproveSwitchResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangedApproveSwitch(inValue);
            ds = retVal.ds;
            return retVal.violationMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangedApproveSwitchResponse> ChangedApproveSwitchAsync(EpicorConsole.Epicor.POSvc.ChangedApproveSwitchRequest request) {
            return base.Channel.ChangedApproveSwitchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeCountryResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeCountry(EpicorConsole.Epicor.POSvc.ChangeCountryRequest request) {
            return base.Channel.ChangeCountry(request);
        }
        
        public void ChangeCountry(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeCountryRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeCountryRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeCountryResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeCountry(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeCountryResponse> ChangeCountryAsync(EpicorConsole.Epicor.POSvc.ChangeCountryRequest request) {
            return base.Channel.ChangeCountryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeCurrencyCode(EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeRequest request) {
            return base.Channel.ChangeCurrencyCode(request);
        }
        
        public void ChangeCurrencyCode(string iCurrencyCode, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeRequest();
            inValue.iCurrencyCode = iCurrencyCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeCurrencyCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeResponse> ChangeCurrencyCodeAsync(EpicorConsole.Epicor.POSvc.ChangeCurrencyCodeRequest request) {
            return base.Channel.ChangeCurrencyCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePOTaxRegionCode(EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeRequest request) {
            return base.Channel.ChangePOTaxRegionCode(request);
        }
        
        public void ChangePOTaxRegionCode(string newTaxRegionCode, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeRequest();
            inValue.newTaxRegionCode = newTaxRegionCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePOTaxRegionCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeResponse> ChangePOTaxRegionCodeAsync(EpicorConsole.Epicor.POSvc.ChangePOTaxRegionCodeRequest request) {
            return base.Channel.ChangePOTaxRegionCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePOTypeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePOType(EpicorConsole.Epicor.POSvc.ChangePOTypeRequest request) {
            return base.Channel.ChangePOType(request);
        }
        
        public void ChangePOType(string newPOType, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePOTypeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePOTypeRequest();
            inValue.newPOType = newPOType;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePOTypeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePOType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOTypeResponse> ChangePOTypeAsync(EpicorConsole.Epicor.POSvc.ChangePOTypeRequest request) {
            return base.Channel.ChangePOTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePrcConNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePrcConNum(EpicorConsole.Epicor.POSvc.ChangePrcConNumRequest request) {
            return base.Channel.ChangePrcConNum(request);
        }
        
        public void ChangePrcConNum(int PrcConNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePrcConNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePrcConNumRequest();
            inValue.PrcConNum = PrcConNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePrcConNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePrcConNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePrcConNumResponse> ChangePrcConNumAsync(EpicorConsole.Epicor.POSvc.ChangePrcConNumRequest request) {
            return base.Channel.ChangePrcConNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePrcConNumByName(EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameRequest request) {
            return base.Channel.ChangePrcConNumByName(request);
        }
        
        public int ChangePrcConNumByName(string prcConName, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameRequest();
            inValue.prcConName = prcConName;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePrcConNumByName(inValue);
            ds = retVal.ds;
            return retVal.prcConNum;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameResponse> ChangePrcConNumByNameAsync(EpicorConsole.Epicor.POSvc.ChangePrcConNumByNameRequest request) {
            return base.Channel.ChangePrcConNumByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePurPointResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePurPoint(EpicorConsole.Epicor.POSvc.ChangePurPointRequest request) {
            return base.Channel.ChangePurPoint(request);
        }
        
        public void ChangePurPoint(string PurPoint, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePurPointRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePurPointRequest();
            inValue.PurPoint = PurPoint;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePurPointResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePurPoint(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePurPointResponse> ChangePurPointAsync(EpicorConsole.Epicor.POSvc.ChangePurPointRequest request) {
            return base.Channel.ChangePurPointAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeVendorResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeVendor(EpicorConsole.Epicor.POSvc.ChangeVendorRequest request) {
            return base.Channel.ChangeVendor(request);
        }
        
        public void ChangeVendor(string VendID, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeVendorRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeVendorRequest();
            inValue.VendID = VendID;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeVendorResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeVendor(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeVendorResponse> ChangeVendorAsync(EpicorConsole.Epicor.POSvc.ChangeVendorRequest request) {
            return base.Channel.ChangeVendorAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.CheckRateGrpCodeResponse EpicorConsole.Epicor.POSvc.POSvcContract.CheckRateGrpCode(EpicorConsole.Epicor.POSvc.CheckRateGrpCodeRequest request) {
            return base.Channel.CheckRateGrpCode(request);
        }
        
        public void CheckRateGrpCode(string ipRateGrpCode, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.CheckRateGrpCodeRequest inValue = new EpicorConsole.Epicor.POSvc.CheckRateGrpCodeRequest();
            inValue.ipRateGrpCode = ipRateGrpCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.CheckRateGrpCodeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).CheckRateGrpCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckRateGrpCodeResponse> CheckRateGrpCodeAsync(EpicorConsole.Epicor.POSvc.CheckRateGrpCodeRequest request) {
            return base.Channel.CheckRateGrpCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangedHeaderTaxManual(EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualRequest request) {
            return base.Channel.ChangedHeaderTaxManual(request);
        }
        
        public void ChangedHeaderTaxManual(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualRequest inValue = new EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangedHeaderTaxManual(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualResponse> ChangedHeaderTaxManualAsync(EpicorConsole.Epicor.POSvc.ChangedHeaderTaxManualRequest request) {
            return base.Channel.ChangedHeaderTaxManualAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeHeaderTaxFixedAmount(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountRequest request) {
            return base.Channel.ChangeHeaderTaxFixedAmount(request);
        }
        
        public void ChangeHeaderTaxFixedAmount(decimal proposedFixedAmt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountRequest();
            inValue.proposedFixedAmt = proposedFixedAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeHeaderTaxFixedAmount(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountResponse> ChangeHeaderTaxFixedAmountAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxFixedAmountRequest request) {
            return base.Channel.ChangeHeaderTaxFixedAmountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeHeaderTaxTaxPercent(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentRequest request) {
            return base.Channel.ChangeHeaderTaxTaxPercent(request);
        }
        
        public void ChangeHeaderTaxTaxPercent(decimal proposedTaxPercent, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentRequest();
            inValue.proposedTaxPercent = proposedTaxPercent;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeHeaderTaxTaxPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentResponse> ChangeHeaderTaxTaxPercentAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxPercentRequest request) {
            return base.Channel.ChangeHeaderTaxTaxPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeHeaderTaxRateCode(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeRequest request) {
            return base.Channel.ChangeHeaderTaxRateCode(request);
        }
        
        public void ChangeHeaderTaxRateCode(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeHeaderTaxRateCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeResponse> ChangeHeaderTaxRateCodeAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeRequest request) {
            return base.Channel.ChangeHeaderTaxRateCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeHeaderTaxRateCodeMaster(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterRequest request) {
            return base.Channel.ChangeHeaderTaxRateCodeMaster(request);
        }
        
        public void ChangeHeaderTaxRateCodeMaster(string proposedRateCode, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterRequest();
            inValue.proposedRateCode = proposedRateCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeHeaderTaxRateCodeMaster(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterResponse> ChangeHeaderTaxRateCodeMasterAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxRateCodeMasterRequest request) {
            return base.Channel.ChangeHeaderTaxRateCodeMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeHeaderTaxReportableAmt(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtRequest request) {
            return base.Channel.ChangeHeaderTaxReportableAmt(request);
        }
        
        public void ChangeHeaderTaxReportableAmt(decimal proposedReportableAmt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtRequest();
            inValue.proposedReportableAmt = proposedReportableAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeHeaderTaxReportableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtResponse> ChangeHeaderTaxReportableAmtAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxReportableAmtRequest request) {
            return base.Channel.ChangeHeaderTaxReportableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeHeaderTaxTaxableAmt(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtRequest request) {
            return base.Channel.ChangeHeaderTaxTaxableAmt(request);
        }
        
        public void ChangeHeaderTaxTaxableAmt(decimal proposedTaxableAmt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtRequest();
            inValue.proposedTaxableAmt = proposedTaxableAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeHeaderTaxTaxableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtResponse> ChangeHeaderTaxTaxableAmtAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxableAmtRequest request) {
            return base.Channel.ChangeHeaderTaxTaxableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeHeaderTaxTaxAmt(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtRequest request) {
            return base.Channel.ChangeHeaderTaxTaxAmt(request);
        }
        
        public void ChangeHeaderTaxTaxAmt(decimal proposedTaxAmt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtRequest();
            inValue.proposedTaxAmt = proposedTaxAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeHeaderTaxTaxAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtResponse> ChangeHeaderTaxTaxAmtAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxAmtRequest request) {
            return base.Channel.ChangeHeaderTaxTaxAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeHeaderTaxTaxCode(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeRequest request) {
            return base.Channel.ChangeHeaderTaxTaxCode(request);
        }
        
        public void ChangeHeaderTaxTaxCode(string proposedTaxCode, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeRequest();
            inValue.proposedTaxCode = proposedTaxCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeHeaderTaxTaxCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeResponse> ChangeHeaderTaxTaxCodeAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxCodeRequest request) {
            return base.Channel.ChangeHeaderTaxTaxCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeHeaderTaxTaxDeductable(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableRequest request) {
            return base.Channel.ChangeHeaderTaxTaxDeductable(request);
        }
        
        public void ChangeHeaderTaxTaxDeductable(decimal proposedTaxDeductable, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableRequest();
            inValue.proposedTaxDeductable = proposedTaxDeductable;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeHeaderTaxTaxDeductable(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableResponse> ChangeHeaderTaxTaxDeductableAsync(EpicorConsole.Epicor.POSvc.ChangeHeaderTaxTaxDeductableRequest request) {
            return base.Channel.ChangeHeaderTaxTaxDeductableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeCurrencySwitch(EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchRequest request) {
            return base.Channel.ChangeCurrencySwitch(request);
        }
        
        public void ChangeCurrencySwitch(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeCurrencySwitch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchResponse> ChangeCurrencySwitchAsync(EpicorConsole.Epicor.POSvc.ChangeCurrencySwitchRequest request) {
            return base.Channel.ChangeCurrencySwitchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePOHeadMiscAmt(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtRequest request) {
            return base.Channel.ChangePOHeadMiscAmt(request);
        }
        
        public void ChangePOHeadMiscAmt(decimal proposedMiscAmt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtRequest();
            inValue.proposedMiscAmt = proposedMiscAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePOHeadMiscAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtResponse> ChangePOHeadMiscAmtAsync(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscAmtRequest request) {
            return base.Channel.ChangePOHeadMiscAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePOHeadMiscCode(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeRequest request) {
            return base.Channel.ChangePOHeadMiscCode(request);
        }
        
        public void ChangePOHeadMiscCode(string newMiscCode, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeRequest();
            inValue.newMiscCode = newMiscCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePOHeadMiscCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeResponse> ChangePOHeadMiscCodeAsync(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscCodeRequest request) {
            return base.Channel.ChangePOHeadMiscCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePOHeadMiscPrcnt(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntRequest request) {
            return base.Channel.ChangePOHeadMiscPrcnt(request);
        }
        
        public void ChangePOHeadMiscPrcnt(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePOHeadMiscPrcnt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntResponse> ChangePOHeadMiscPrcntAsync(EpicorConsole.Epicor.POSvc.ChangePOHeadMiscPrcntRequest request) {
            return base.Channel.ChangePOHeadMiscPrcntAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePOMiscAmtResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePOMiscAmt(EpicorConsole.Epicor.POSvc.ChangePOMiscAmtRequest request) {
            return base.Channel.ChangePOMiscAmt(request);
        }
        
        public void ChangePOMiscAmt(decimal proposedMiscAmt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePOMiscAmtRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePOMiscAmtRequest();
            inValue.proposedMiscAmt = proposedMiscAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePOMiscAmtResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePOMiscAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOMiscAmtResponse> ChangePOMiscAmtAsync(EpicorConsole.Epicor.POSvc.ChangePOMiscAmtRequest request) {
            return base.Channel.ChangePOMiscAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePOMiscCodeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePOMiscCode(EpicorConsole.Epicor.POSvc.ChangePOMiscCodeRequest request) {
            return base.Channel.ChangePOMiscCode(request);
        }
        
        public void ChangePOMiscCode(string newMiscCode, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePOMiscCodeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePOMiscCodeRequest();
            inValue.newMiscCode = newMiscCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePOMiscCodeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePOMiscCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOMiscCodeResponse> ChangePOMiscCodeAsync(EpicorConsole.Epicor.POSvc.ChangePOMiscCodeRequest request) {
            return base.Channel.ChangePOMiscCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePoMiscCurrSwitch(EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchRequest request) {
            return base.Channel.ChangePoMiscCurrSwitch(request);
        }
        
        public void ChangePoMiscCurrSwitch(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePoMiscCurrSwitch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchResponse> ChangePoMiscCurrSwitchAsync(EpicorConsole.Epicor.POSvc.ChangePoMiscCurrSwitchRequest request) {
            return base.Channel.ChangePoMiscCurrSwitchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePOMiscPrcnt(EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntRequest request) {
            return base.Channel.ChangePOMiscPrcnt(request);
        }
        
        public void ChangePOMiscPrcnt(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePOMiscPrcnt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntResponse> ChangePOMiscPrcntAsync(EpicorConsole.Epicor.POSvc.ChangePOMiscPrcntRequest request) {
            return base.Channel.ChangePOMiscPrcntAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelAssemblySeq(EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqRequest request) {
            return base.Channel.ChangeRelAssemblySeq(request);
        }
        
        public void ChangeRelAssemblySeq(int NewAsmSeq, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqRequest();
            inValue.NewAsmSeq = NewAsmSeq;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelAssemblySeq(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqResponse> ChangeRelAssemblySeqAsync(EpicorConsole.Epicor.POSvc.ChangeRelAssemblySeqRequest request) {
            return base.Channel.ChangeRelAssemblySeqAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelGlbCompany(EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyRequest request) {
            return base.Channel.ChangeRelGlbCompany(request);
        }
        
        public void ChangeRelGlbCompany(string ProposedGlbCompany, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyRequest();
            inValue.ProposedGlbCompany = ProposedGlbCompany;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelGlbCompany(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyResponse> ChangeRelGlbCompanyAsync(EpicorConsole.Epicor.POSvc.ChangeRelGlbCompanyRequest request) {
            return base.Channel.ChangeRelGlbCompanyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelGlbPlant(EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantRequest request) {
            return base.Channel.ChangeRelGlbPlant(request);
        }
        
        public void ChangeRelGlbPlant(string ProposedGlbPlant, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantRequest();
            inValue.ProposedGlbPlant = ProposedGlbPlant;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelGlbPlant(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantResponse> ChangeRelGlbPlantAsync(EpicorConsole.Epicor.POSvc.ChangeRelGlbPlantRequest request) {
            return base.Channel.ChangeRelGlbPlantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelGlbWarehouse(EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseRequest request) {
            return base.Channel.ChangeRelGlbWarehouse(request);
        }
        
        public void ChangeRelGlbWarehouse(string ProposedGlbWarehouse, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseRequest();
            inValue.ProposedGlbWarehouse = ProposedGlbWarehouse;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelGlbWarehouse(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseResponse> ChangeRelGlbWarehouseAsync(EpicorConsole.Epicor.POSvc.ChangeRelGlbWarehouseRequest request) {
            return base.Channel.ChangeRelGlbWarehouseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelIUMResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelIUM(EpicorConsole.Epicor.POSvc.ChangeRelIUMRequest request) {
            return base.Channel.ChangeRelIUM(request);
        }
        
        public void ChangeRelIUM(string NewIUM, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelIUMRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelIUMRequest();
            inValue.NewIUM = NewIUM;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelIUMResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelIUM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelIUMResponse> ChangeRelIUMAsync(EpicorConsole.Epicor.POSvc.ChangeRelIUMRequest request) {
            return base.Channel.ChangeRelIUMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelJobNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelJobNum(EpicorConsole.Epicor.POSvc.ChangeRelJobNumRequest request) {
            return base.Channel.ChangeRelJobNum(request);
        }
        
        public void ChangeRelJobNum(string NewJobNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelJobNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelJobNumRequest();
            inValue.NewJobNum = NewJobNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelJobNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelJobNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelJobNumResponse> ChangeRelJobNumAsync(EpicorConsole.Epicor.POSvc.ChangeRelJobNumRequest request) {
            return base.Channel.ChangeRelJobNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelJobSeqResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelJobSeq(EpicorConsole.Epicor.POSvc.ChangeRelJobSeqRequest request) {
            return base.Channel.ChangeRelJobSeq(request);
        }
        
        public void ChangeRelJobSeq(int NewJobSeqNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelJobSeqRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelJobSeqRequest();
            inValue.NewJobSeqNum = NewJobSeqNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelJobSeqResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelJobSeq(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelJobSeqResponse> ChangeRelJobSeqAsync(EpicorConsole.Epicor.POSvc.ChangeRelJobSeqRequest request) {
            return base.Channel.ChangeRelJobSeqAsync(request);
        }
        
        public string ChangeRelJobSeqWarning(string ipTranType, string ipJobNum, int ipAssemblySeq, int ipNewJobSeq, string ipPODtlPartNum, string ipPODtlRevNum) {
            return base.Channel.ChangeRelJobSeqWarning(ipTranType, ipJobNum, ipAssemblySeq, ipNewJobSeq, ipPODtlPartNum, ipPODtlRevNum);
        }
        
        public System.Threading.Tasks.Task<string> ChangeRelJobSeqWarningAsync(string ipTranType, string ipJobNum, int ipAssemblySeq, int ipNewJobSeq, string ipPODtlPartNum, string ipPODtlRevNum) {
            return base.Channel.ChangeRelJobSeqWarningAsync(ipTranType, ipJobNum, ipAssemblySeq, ipNewJobSeq, ipPODtlPartNum, ipPODtlRevNum);
        }
        
        public string ChangeBTOOrderLineWarning(int ipOrderNum, int ipOrderLine, int ipPONum, int ipPOLine) {
            return base.Channel.ChangeBTOOrderLineWarning(ipOrderNum, ipOrderLine, ipPONum, ipPOLine);
        }
        
        public System.Threading.Tasks.Task<string> ChangeBTOOrderLineWarningAsync(int ipOrderNum, int ipOrderLine, int ipPONum, int ipPOLine) {
            return base.Channel.ChangeBTOOrderLineWarningAsync(ipOrderNum, ipOrderLine, ipPONum, ipPOLine);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelMangCustResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelMangCust(EpicorConsole.Epicor.POSvc.ChangeRelMangCustRequest request) {
            return base.Channel.ChangeRelMangCust(request);
        }
        
        public void ChangeRelMangCust(string NewMangCust, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelMangCustRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelMangCustRequest();
            inValue.NewMangCust = NewMangCust;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelMangCustResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelMangCust(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelMangCustResponse> ChangeRelMangCustAsync(EpicorConsole.Epicor.POSvc.ChangeRelMangCustRequest request) {
            return base.Channel.ChangeRelMangCustAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelOrderLineResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelOrderLine(EpicorConsole.Epicor.POSvc.ChangeRelOrderLineRequest request) {
            return base.Channel.ChangeRelOrderLine(request);
        }
        
        public void ChangeRelOrderLine(int ipOrderLine, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelOrderLineRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelOrderLineRequest();
            inValue.ipOrderLine = ipOrderLine;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelOrderLineResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelOrderLine(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelOrderLineResponse> ChangeRelOrderLineAsync(EpicorConsole.Epicor.POSvc.ChangeRelOrderLineRequest request) {
            return base.Channel.ChangeRelOrderLineAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelOrderNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelOrderNum(EpicorConsole.Epicor.POSvc.ChangeRelOrderNumRequest request) {
            return base.Channel.ChangeRelOrderNum(request);
        }
        
        public void ChangeRelOrderNum(int ipOrderNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelOrderNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelOrderNumRequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelOrderNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelOrderNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelOrderNumResponse> ChangeRelOrderNumAsync(EpicorConsole.Epicor.POSvc.ChangeRelOrderNumRequest request) {
            return base.Channel.ChangeRelOrderNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelOrderRelNum(EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumRequest request) {
            return base.Channel.ChangeRelOrderRelNum(request);
        }
        
        public string ChangeRelOrderRelNum(int ipOrderRelNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumRequest();
            inValue.ipOrderRelNum = ipOrderRelNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelOrderRelNum(inValue);
            ds = retVal.ds;
            return retVal.opWrnMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumResponse> ChangeRelOrderRelNumAsync(EpicorConsole.Epicor.POSvc.ChangeRelOrderRelNumRequest request) {
            return base.Channel.ChangeRelOrderRelNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelOurQtyResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelOurQty(EpicorConsole.Epicor.POSvc.ChangeRelOurQtyRequest request) {
            return base.Channel.ChangeRelOurQty(request);
        }
        
        public string ChangeRelOurQty(decimal NewOurQty, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelOurQtyRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelOurQtyRequest();
            inValue.NewOurQty = NewOurQty;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelOurQtyResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelOurQty(inValue);
            ds = retVal.ds;
            return retVal.opWarningMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelOurQtyResponse> ChangeRelOurQtyAsync(EpicorConsole.Epicor.POSvc.ChangeRelOurQtyRequest request) {
            return base.Channel.ChangeRelOurQtyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelPlantResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelPlant(EpicorConsole.Epicor.POSvc.ChangeRelPlantRequest request) {
            return base.Channel.ChangeRelPlant(request);
        }
        
        public void ChangeRelPlant(string newPlant, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelPlantRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelPlantRequest();
            inValue.newPlant = newPlant;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelPlantResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelPlant(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelPlantResponse> ChangeRelPlantAsync(EpicorConsole.Epicor.POSvc.ChangeRelPlantRequest request) {
            return base.Channel.ChangeRelPlantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelPUMResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelPUM(EpicorConsole.Epicor.POSvc.ChangeRelPUMRequest request) {
            return base.Channel.ChangeRelPUM(request);
        }
        
        public void ChangeRelPUM(string NewPUM, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelPUMRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelPUMRequest();
            inValue.NewPUM = NewPUM;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelPUMResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelPUM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelPUMResponse> ChangeRelPUMAsync(EpicorConsole.Epicor.POSvc.ChangeRelPUMRequest request) {
            return base.Channel.ChangeRelPUMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelTaxExempt(EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptRequest request) {
            return base.Channel.ChangeRelTaxExempt(request);
        }
        
        public void ChangeRelTaxExempt(string newTaxExempt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptRequest();
            inValue.newTaxExempt = newTaxExempt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelTaxExempt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptResponse> ChangeRelTaxExemptAsync(EpicorConsole.Epicor.POSvc.ChangeRelTaxExemptRequest request) {
            return base.Channel.ChangeRelTaxExemptAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeRelVendQtyResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeRelVendQty(EpicorConsole.Epicor.POSvc.ChangeRelVendQtyRequest request) {
            return base.Channel.ChangeRelVendQty(request);
        }
        
        public string ChangeRelVendQty(decimal NewVendQty, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeRelVendQtyRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeRelVendQtyRequest();
            inValue.NewVendQty = NewVendQty;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeRelVendQtyResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeRelVendQty(inValue);
            ds = retVal.ds;
            return retVal.opWarningMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeRelVendQtyResponse> ChangeRelVendQtyAsync(EpicorConsole.Epicor.POSvc.ChangeRelVendQtyRequest request) {
            return base.Channel.ChangeRelVendQtyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangePORelContractResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangePORelContract(EpicorConsole.Epicor.POSvc.ChangePORelContractRequest request) {
            return base.Channel.ChangePORelContract(request);
        }
        
        public void ChangePORelContract(ref string ipContractID, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangePORelContractRequest inValue = new EpicorConsole.Epicor.POSvc.ChangePORelContractRequest();
            inValue.ipContractID = ipContractID;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangePORelContractResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangePORelContract(inValue);
            ipContractID = retVal.ipContractID;
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangePORelContractResponse> ChangePORelContractAsync(EpicorConsole.Epicor.POSvc.ChangePORelContractRequest request) {
            return base.Channel.ChangePORelContractAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeTranTypeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeTranType(EpicorConsole.Epicor.POSvc.ChangeTranTypeRequest request) {
            return base.Channel.ChangeTranType(request);
        }
        
        public void ChangeTranType(string newTranType, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeTranTypeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeTranTypeRequest();
            inValue.newTranType = newTranType;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeTranTypeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeTranType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTranTypeResponse> ChangeTranTypeAsync(EpicorConsole.Epicor.POSvc.ChangeTranTypeRequest request) {
            return base.Channel.ChangeTranTypeAsync(request);
        }
        
        public bool CheckComplianceFail(int poNum) {
            return base.Channel.CheckComplianceFail(poNum);
        }
        
        public System.Threading.Tasks.Task<bool> CheckComplianceFailAsync(int poNum) {
            return base.Channel.CheckComplianceFailAsync(poNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.CheckProjectIDResponse EpicorConsole.Epicor.POSvc.POSvcContract.CheckProjectID(EpicorConsole.Epicor.POSvc.CheckProjectIDRequest request) {
            return base.Channel.CheckProjectID(request);
        }
        
        public void CheckProjectID(string ipProjectID, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.CheckProjectIDRequest inValue = new EpicorConsole.Epicor.POSvc.CheckProjectIDRequest();
            inValue.ipProjectID = ipProjectID;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.CheckProjectIDResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).CheckProjectID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.CheckProjectIDResponse> CheckProjectIDAsync(EpicorConsole.Epicor.POSvc.CheckProjectIDRequest request) {
            return base.Channel.CheckProjectIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetDefaultGLAccountResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetDefaultGLAccount(EpicorConsole.Epicor.POSvc.GetDefaultGLAccountRequest request) {
            return base.Channel.GetDefaultGLAccount(request);
        }
        
        public void GetDefaultGLAccount(int pPONum, int pPOLine, int pPORelNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.GetDefaultGLAccountRequest inValue = new EpicorConsole.Epicor.POSvc.GetDefaultGLAccountRequest();
            inValue.pPONum = pPONum;
            inValue.pPOLine = pPOLine;
            inValue.pPORelNum = pPORelNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.GetDefaultGLAccountResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetDefaultGLAccount(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetDefaultGLAccountResponse> GetDefaultGLAccountAsync(EpicorConsole.Epicor.POSvc.GetDefaultGLAccountRequest request) {
            return base.Channel.GetDefaultGLAccountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeTaxReportableAmt(EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtRequest request) {
            return base.Channel.ChangeTaxReportableAmt(request);
        }
        
        public void ChangeTaxReportableAmt(string tableName, decimal proposedReportableAmt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtRequest();
            inValue.tableName = tableName;
            inValue.proposedReportableAmt = proposedReportableAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeTaxReportableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtResponse> ChangeTaxReportableAmtAsync(EpicorConsole.Epicor.POSvc.ChangeTaxReportableAmtRequest request) {
            return base.Channel.ChangeTaxReportableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeTaxTaxableAmt(EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtRequest request) {
            return base.Channel.ChangeTaxTaxableAmt(request);
        }
        
        public void ChangeTaxTaxableAmt(string tableName, decimal proposedTaxableAmt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxableAmt = proposedTaxableAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeTaxTaxableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtResponse> ChangeTaxTaxableAmtAsync(EpicorConsole.Epicor.POSvc.ChangeTaxTaxableAmtRequest request) {
            return base.Channel.ChangeTaxTaxableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeTaxTaxAmt(EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtRequest request) {
            return base.Channel.ChangeTaxTaxAmt(request);
        }
        
        public void ChangeTaxTaxAmt(string tableName, decimal proposedTaxAmt, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxAmt = proposedTaxAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeTaxTaxAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtResponse> ChangeTaxTaxAmtAsync(EpicorConsole.Epicor.POSvc.ChangeTaxTaxAmtRequest request) {
            return base.Channel.ChangeTaxTaxAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeTaxDeductableResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeTaxDeductable(EpicorConsole.Epicor.POSvc.ChangeTaxDeductableRequest request) {
            return base.Channel.ChangeTaxDeductable(request);
        }
        
        public void ChangeTaxDeductable(string tableName, decimal proposedTaxDeductable, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeTaxDeductableRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeTaxDeductableRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxDeductable = proposedTaxDeductable;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeTaxDeductableResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeTaxDeductable(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxDeductableResponse> ChangeTaxDeductableAsync(EpicorConsole.Epicor.POSvc.ChangeTaxDeductableRequest request) {
            return base.Channel.ChangeTaxDeductableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeTaxTaxCode(EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeRequest request) {
            return base.Channel.ChangeTaxTaxCode(request);
        }
        
        public void ChangeTaxTaxCode(string tableName, string proposedTaxCode, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxCode = proposedTaxCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeTaxTaxCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeResponse> ChangeTaxTaxCodeAsync(EpicorConsole.Epicor.POSvc.ChangeTaxTaxCodeRequest request) {
            return base.Channel.ChangeTaxTaxCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeTaxRateCode(EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeRequest request) {
            return base.Channel.ChangeTaxRateCode(request);
        }
        
        public void ChangeTaxRateCode(string tableName, string proposedRateCode, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeRequest();
            inValue.tableName = tableName;
            inValue.proposedRateCode = proposedRateCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeTaxRateCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeResponse> ChangeTaxRateCodeAsync(EpicorConsole.Epicor.POSvc.ChangeTaxRateCodeRequest request) {
            return base.Channel.ChangeTaxRateCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeTaxPercentResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeTaxPercent(EpicorConsole.Epicor.POSvc.ChangeTaxPercentRequest request) {
            return base.Channel.ChangeTaxPercent(request);
        }
        
        public void ChangeTaxPercent(string tableName, decimal proposedTaxPercent, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeTaxPercentRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeTaxPercentRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxPercent = proposedTaxPercent;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeTaxPercentResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeTaxPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeTaxPercentResponse> ChangeTaxPercentAsync(EpicorConsole.Epicor.POSvc.ChangeTaxPercentRequest request) {
            return base.Channel.ChangeTaxPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ChangeExpAcctResponse EpicorConsole.Epicor.POSvc.POSvcContract.ChangeExpAcct(EpicorConsole.Epicor.POSvc.ChangeExpAcctRequest request) {
            return base.Channel.ChangeExpAcct(request);
        }
        
        public void ChangeExpAcct(string proposedAccountNum, int inTGLCTranNum, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ChangeExpAcctRequest inValue = new EpicorConsole.Epicor.POSvc.ChangeExpAcctRequest();
            inValue.proposedAccountNum = proposedAccountNum;
            inValue.inTGLCTranNum = inTGLCTranNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ChangeExpAcctResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ChangeExpAcct(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ChangeExpAcctResponse> ChangeExpAcctAsync(EpicorConsole.Epicor.POSvc.ChangeExpAcctRequest request) {
            return base.Channel.ChangeExpAcctAsync(request);
        }
        
        public string ValidateAcctForGLControl(int ipPONum) {
            return base.Channel.ValidateAcctForGLControl(ipPONum);
        }
        
        public System.Threading.Tasks.Task<string> ValidateAcctForGLControlAsync(int ipPONum) {
            return base.Channel.ValidateAcctForGLControlAsync(ipPONum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.ValidateInspectionResponse EpicorConsole.Epicor.POSvc.POSvcContract.ValidateInspection(EpicorConsole.Epicor.POSvc.ValidateInspectionRequest request) {
            return base.Channel.ValidateInspection(request);
        }
        
        public void ValidateInspection(string ipProposedInspPlan, string ipProposedSpecId, ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.ValidateInspectionRequest inValue = new EpicorConsole.Epicor.POSvc.ValidateInspectionRequest();
            inValue.ipProposedInspPlan = ipProposedInspPlan;
            inValue.ipProposedSpecId = ipProposedSpecId;
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.ValidateInspectionResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).ValidateInspection(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.ValidateInspectionResponse> ValidateInspectionAsync(EpicorConsole.Epicor.POSvc.ValidateInspectionRequest request) {
            return base.Channel.ValidateInspectionAsync(request);
        }
        
        public void ValidataPartToLinkToContract(bool bLinkToContract, string partNum, string tableName) {
            base.Channel.ValidataPartToLinkToContract(bLinkToContract, partNum, tableName);
        }
        
        public System.Threading.Tasks.Task ValidataPartToLinkToContractAsync(bool bLinkToContract, string partNum, string tableName) {
            return base.Channel.ValidataPartToLinkToContractAsync(bLinkToContract, partNum, tableName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPOHeaderResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPOHeader(EpicorConsole.Epicor.POSvc.GetNewPOHeaderRequest request) {
            return base.Channel.GetNewPOHeader(request);
        }
        
        public void GetNewPOHeader(ref EpicorConsole.Epicor.POSvc.POTableset ds) {
            EpicorConsole.Epicor.POSvc.GetNewPOHeaderRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPOHeaderRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.POSvc.GetNewPOHeaderResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPOHeader(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeaderResponse> GetNewPOHeaderAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeaderRequest request) {
            return base.Channel.GetNewPOHeaderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPOHeaderAttch(EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchRequest request) {
            return base.Channel.GetNewPOHeaderAttch(request);
        }
        
        public void GetNewPOHeaderAttch(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum) {
            EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPOHeaderAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchResponse> GetNewPOHeaderAttchAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeaderAttchRequest request) {
            return base.Channel.GetNewPOHeaderAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPODetailResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPODetail(EpicorConsole.Epicor.POSvc.GetNewPODetailRequest request) {
            return base.Channel.GetNewPODetail(request);
        }
        
        public void GetNewPODetail(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNUM) {
            EpicorConsole.Epicor.POSvc.GetNewPODetailRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPODetailRequest();
            inValue.ds = ds;
            inValue.poNUM = poNUM;
            EpicorConsole.Epicor.POSvc.GetNewPODetailResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPODetail(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPODetailResponse> GetNewPODetailAsync(EpicorConsole.Epicor.POSvc.GetNewPODetailRequest request) {
            return base.Channel.GetNewPODetailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPODetailAttchResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPODetailAttch(EpicorConsole.Epicor.POSvc.GetNewPODetailAttchRequest request) {
            return base.Channel.GetNewPODetailAttch(request);
        }
        
        public void GetNewPODetailAttch(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNUM, int poLine) {
            EpicorConsole.Epicor.POSvc.GetNewPODetailAttchRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPODetailAttchRequest();
            inValue.ds = ds;
            inValue.poNUM = poNUM;
            inValue.poLine = poLine;
            EpicorConsole.Epicor.POSvc.GetNewPODetailAttchResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPODetailAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPODetailAttchResponse> GetNewPODetailAttchAsync(EpicorConsole.Epicor.POSvc.GetNewPODetailAttchRequest request) {
            return base.Channel.GetNewPODetailAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPORelResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPORel(EpicorConsole.Epicor.POSvc.GetNewPORelRequest request) {
            return base.Channel.GetNewPORel(request);
        }
        
        public void GetNewPORel(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine) {
            EpicorConsole.Epicor.POSvc.GetNewPORelRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPORelRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.poLine = poLine;
            EpicorConsole.Epicor.POSvc.GetNewPORelResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPORel(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPORelResponse> GetNewPORelAsync(EpicorConsole.Epicor.POSvc.GetNewPORelRequest request) {
            return base.Channel.GetNewPORelAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPORelAttchResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPORelAttch(EpicorConsole.Epicor.POSvc.GetNewPORelAttchRequest request) {
            return base.Channel.GetNewPORelAttch(request);
        }
        
        public void GetNewPORelAttch(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum) {
            EpicorConsole.Epicor.POSvc.GetNewPORelAttchRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPORelAttchRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.poLine = poLine;
            inValue.poRelNum = poRelNum;
            EpicorConsole.Epicor.POSvc.GetNewPORelAttchResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPORelAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPORelAttchResponse> GetNewPORelAttchAsync(EpicorConsole.Epicor.POSvc.GetNewPORelAttchRequest request) {
            return base.Channel.GetNewPORelAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPORelTaxResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPORelTax(EpicorConsole.Epicor.POSvc.GetNewPORelTaxRequest request) {
            return base.Channel.GetNewPORelTax(request);
        }
        
        public void GetNewPORelTax(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum, string taxCode, string rateCode) {
            EpicorConsole.Epicor.POSvc.GetNewPORelTaxRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPORelTaxRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.poLine = poLine;
            inValue.poRelNum = poRelNum;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicorConsole.Epicor.POSvc.GetNewPORelTaxResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPORelTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPORelTaxResponse> GetNewPORelTaxAsync(EpicorConsole.Epicor.POSvc.GetNewPORelTaxRequest request) {
            return base.Channel.GetNewPORelTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPORelTGLCResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPORelTGLC(EpicorConsole.Epicor.POSvc.GetNewPORelTGLCRequest request) {
            return base.Channel.GetNewPORelTGLC(request);
        }
        
        public void GetNewPORelTGLC(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum) {
            EpicorConsole.Epicor.POSvc.GetNewPORelTGLCRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPORelTGLCRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.poLine = poLine;
            inValue.poRelNum = poRelNum;
            EpicorConsole.Epicor.POSvc.GetNewPORelTGLCResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPORelTGLC(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPORelTGLCResponse> GetNewPORelTGLCAsync(EpicorConsole.Epicor.POSvc.GetNewPORelTGLCRequest request) {
            return base.Channel.GetNewPORelTGLCAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPODetailInspResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPODetailInsp(EpicorConsole.Epicor.POSvc.GetNewPODetailInspRequest request) {
            return base.Channel.GetNewPODetailInsp(request);
        }
        
        public void GetNewPODetailInsp(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNUM, int poLine) {
            EpicorConsole.Epicor.POSvc.GetNewPODetailInspRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPODetailInspRequest();
            inValue.ds = ds;
            inValue.poNUM = poNUM;
            inValue.poLine = poLine;
            EpicorConsole.Epicor.POSvc.GetNewPODetailInspResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPODetailInsp(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPODetailInspResponse> GetNewPODetailInspAsync(EpicorConsole.Epicor.POSvc.GetNewPODetailInspRequest request) {
            return base.Channel.GetNewPODetailInspAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPOMiscResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPOMisc(EpicorConsole.Epicor.POSvc.GetNewPOMiscRequest request) {
            return base.Channel.GetNewPOMisc(request);
        }
        
        public void GetNewPOMisc(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine) {
            EpicorConsole.Epicor.POSvc.GetNewPOMiscRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPOMiscRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.poLine = poLine;
            EpicorConsole.Epicor.POSvc.GetNewPOMiscResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPOMisc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOMiscResponse> GetNewPOMiscAsync(EpicorConsole.Epicor.POSvc.GetNewPOMiscRequest request) {
            return base.Channel.GetNewPOMiscAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPOMiscTax(EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxRequest request) {
            return base.Channel.GetNewPOMiscTax(request);
        }
        
        public void GetNewPOMiscTax(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum, string taxCode, string rateCode) {
            EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.poLine = poLine;
            inValue.poRelNum = poRelNum;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPOMiscTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxResponse> GetNewPOMiscTaxAsync(EpicorConsole.Epicor.POSvc.GetNewPOMiscTaxRequest request) {
            return base.Channel.GetNewPOMiscTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPOHeadMisc(EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscRequest request) {
            return base.Channel.GetNewPOHeadMisc(request);
        }
        
        public void GetNewPOHeadMisc(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine) {
            EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.poLine = poLine;
            EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPOHeadMisc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscResponse> GetNewPOHeadMiscAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscRequest request) {
            return base.Channel.GetNewPOHeadMiscAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPOHeaderTax(EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxRequest request) {
            return base.Channel.GetNewPOHeaderTax(request);
        }
        
        public void GetNewPOHeaderTax(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, string taxCode, string rateCode) {
            EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPOHeaderTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxResponse> GetNewPOHeaderTaxAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeaderTaxRequest request) {
            return base.Channel.GetNewPOHeaderTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxResponse EpicorConsole.Epicor.POSvc.POSvcContract.GetNewPOHeadMiscTax(EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxRequest request) {
            return base.Channel.GetNewPOHeadMiscTax(request);
        }
        
        public void GetNewPOHeadMiscTax(ref EpicorConsole.Epicor.POSvc.POTableset ds, int poNum, int poLine, int poRelNum, string taxCode, string rateCode) {
            EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxRequest inValue = new EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.poLine = poLine;
            inValue.poRelNum = poRelNum;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxResponse retVal = ((EpicorConsole.Epicor.POSvc.POSvcContract)(this)).GetNewPOHeadMiscTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxResponse> GetNewPOHeadMiscTaxAsync(EpicorConsole.Epicor.POSvc.GetNewPOHeadMiscTaxRequest request) {
            return base.Channel.GetNewPOHeadMiscTaxAsync(request);
        }
        
        public void DeleteByID(int poNum) {
            base.Channel.DeleteByID(poNum);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(int poNum) {
            return base.Channel.DeleteByIDAsync(poNum);
        }
        
        public EpicorConsole.Epicor.POSvc.POTableset GetByID(int poNum) {
            return base.Channel.GetByID(poNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.POSvc.POTableset> GetByIDAsync(int poNum) {
            return base.Channel.GetByIDAsync(poNum);
        }
    }
}
