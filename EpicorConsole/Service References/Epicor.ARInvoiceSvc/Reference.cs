//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicorConsole.Epicor.ARInvoiceSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.RecurringInvTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvcDtlPackTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.UpdExtARInvoiceTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ETCAddrValidationTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvRemindersTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMATableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.MXDigitalTaxRcptTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvoiceTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvoiceTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.AllocDepositTable AllocDepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.HedTaxSumTable HedTaxSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcChrgTable InvcChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDeferredRevTable InvcDeferredRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTable InvcDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlAttchTable InvcDtlAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRASchTable InvcDtlRASchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTGLCTable InvcDtlTGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTable InvcHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadAttchTable InvcHeadAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcMiscTable InvcMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcTaxTable InvcTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.TaxConnectStatusTable TaxConnectStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.AllocDepositTable AllocDeposit {
            get {
                return this.AllocDepositField;
            }
            set {
                if ((object.ReferenceEquals(this.AllocDepositField, value) != true)) {
                    this.AllocDepositField = value;
                    this.RaisePropertyChanged("AllocDeposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.HedTaxSumTable HedTaxSum {
            get {
                return this.HedTaxSumField;
            }
            set {
                if ((object.ReferenceEquals(this.HedTaxSumField, value) != true)) {
                    this.HedTaxSumField = value;
                    this.RaisePropertyChanged("HedTaxSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcChrgTable InvcChrg {
            get {
                return this.InvcChrgField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcChrgField, value) != true)) {
                    this.InvcChrgField = value;
                    this.RaisePropertyChanged("InvcChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDeferredRevTable InvcDeferredRev {
            get {
                return this.InvcDeferredRevField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDeferredRevField, value) != true)) {
                    this.InvcDeferredRevField = value;
                    this.RaisePropertyChanged("InvcDeferredRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTable InvcDtl {
            get {
                return this.InvcDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDtlField, value) != true)) {
                    this.InvcDtlField = value;
                    this.RaisePropertyChanged("InvcDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlAttchTable InvcDtlAttch {
            get {
                return this.InvcDtlAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDtlAttchField, value) != true)) {
                    this.InvcDtlAttchField = value;
                    this.RaisePropertyChanged("InvcDtlAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRASchTable InvcDtlRASch {
            get {
                return this.InvcDtlRASchField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDtlRASchField, value) != true)) {
                    this.InvcDtlRASchField = value;
                    this.RaisePropertyChanged("InvcDtlRASch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTGLCTable InvcDtlTGLC {
            get {
                return this.InvcDtlTGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDtlTGLCField, value) != true)) {
                    this.InvcDtlTGLCField = value;
                    this.RaisePropertyChanged("InvcDtlTGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTable InvcHead {
            get {
                return this.InvcHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcHeadField, value) != true)) {
                    this.InvcHeadField = value;
                    this.RaisePropertyChanged("InvcHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadAttchTable InvcHeadAttch {
            get {
                return this.InvcHeadAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcHeadAttchField, value) != true)) {
                    this.InvcHeadAttchField = value;
                    this.RaisePropertyChanged("InvcHeadAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcMiscTable InvcMisc {
            get {
                return this.InvcMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcMiscField, value) != true)) {
                    this.InvcMiscField = value;
                    this.RaisePropertyChanged("InvcMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcTaxTable InvcTax {
            get {
                return this.InvcTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcTaxField, value) != true)) {
                    this.InvcTaxField = value;
                    this.RaisePropertyChanged("InvcTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.TaxConnectStatusTable TaxConnectStatus {
            get {
                return this.TaxConnectStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxConnectStatusField, value) != true)) {
                    this.TaxConnectStatusField = value;
                    this.RaisePropertyChanged("TaxConnectStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetDropShipTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetDropShipTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARSelectedDropShipTable ARSelectedDropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARUninvoicedDropShipTable ARUninvoicedDropShipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARSelectedDropShipTable ARSelectedDropShip {
            get {
                return this.ARSelectedDropShipField;
            }
            set {
                if ((object.ReferenceEquals(this.ARSelectedDropShipField, value) != true)) {
                    this.ARSelectedDropShipField = value;
                    this.RaisePropertyChanged("ARSelectedDropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARUninvoicedDropShipTable ARUninvoicedDropShip {
            get {
                return this.ARUninvoicedDropShipField;
            }
            set {
                if ((object.ReferenceEquals(this.ARUninvoicedDropShipField, value) != true)) {
                    this.ARUninvoicedDropShipField = value;
                    this.RaisePropertyChanged("ARUninvoicedDropShip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PEDetractionsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PEDetractionsTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.PEHedTaxSumTable PEHedTaxSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.PEInvcTaxTable PEInvcTaxField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.PEHedTaxSumTable PEHedTaxSum {
            get {
                return this.PEHedTaxSumField;
            }
            set {
                if ((object.ReferenceEquals(this.PEHedTaxSumField, value) != true)) {
                    this.PEHedTaxSumField = value;
                    this.RaisePropertyChanged("PEHedTaxSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.PEInvcTaxTable PEInvcTax {
            get {
                return this.PEInvcTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PEInvcTaxField, value) != true)) {
                    this.PEInvcTaxField = value;
                    this.RaisePropertyChanged("PEInvcTax");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RebateInvTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RebateInvTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTable RebateInvField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTable RebateInv {
            get {
                return this.RebateInvField;
            }
            set {
                if ((object.ReferenceEquals(this.RebateInvField, value) != true)) {
                    this.RebateInvField = value;
                    this.RaisePropertyChanged("RebateInv");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetRecInvSourceTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetRecInvSourceTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceTable ARInvGetRecInvSourceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceTable ARInvGetRecInvSource {
            get {
                return this.ARInvGetRecInvSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvGetRecInvSourceField, value) != true)) {
                    this.ARInvGetRecInvSourceField = value;
                    this.RaisePropertyChanged("ARInvGetRecInvSource");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurringInvTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RecurringInvTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcRecurrTable InvcRecurrField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcRecurrTable InvcRecurr {
            get {
                return this.InvcRecurrField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcRecurrField, value) != true)) {
                    this.InvcRecurrField = value;
                    this.RaisePropertyChanged("InvcRecurr");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvcDtlPackTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvcDtlPackTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlPackTable InvcDtlPackField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlPackTable InvcDtlPack {
            get {
                return this.InvcDtlPackField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDtlPackField, value) != true)) {
                    this.InvcDtlPackField = value;
                    this.RaisePropertyChanged("InvcDtlPack");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcHeadListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcHeadListTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTable InvcHeadListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTransferListTable InvcHeadTransferListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTable InvcHeadList {
            get {
                return this.InvcHeadListField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcHeadListField, value) != true)) {
                    this.InvcHeadListField = value;
                    this.RaisePropertyChanged("InvcHeadList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTransferListTable InvcHeadTransferList {
            get {
                return this.InvcHeadTransferListField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcHeadTransferListField, value) != true)) {
                    this.InvcHeadTransferListField = value;
                    this.RaisePropertyChanged("InvcHeadTransferList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtARInvoiceTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtARInvoiceTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.AllocDepositTable AllocDepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.HedTaxSumTable HedTaxSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcChrgTable InvcChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDeferredRevTable InvcDeferredRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTable InvcDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlAttchTable InvcDtlAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRASchTable InvcDtlRASchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTGLCTable InvcDtlTGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTable InvcHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadAttchTable InvcHeadAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcMiscTable InvcMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcTaxTable InvcTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.TaxConnectStatusTable TaxConnectStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.AllocDepositTable AllocDeposit {
            get {
                return this.AllocDepositField;
            }
            set {
                if ((object.ReferenceEquals(this.AllocDepositField, value) != true)) {
                    this.AllocDepositField = value;
                    this.RaisePropertyChanged("AllocDeposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.HedTaxSumTable HedTaxSum {
            get {
                return this.HedTaxSumField;
            }
            set {
                if ((object.ReferenceEquals(this.HedTaxSumField, value) != true)) {
                    this.HedTaxSumField = value;
                    this.RaisePropertyChanged("HedTaxSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcChrgTable InvcChrg {
            get {
                return this.InvcChrgField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcChrgField, value) != true)) {
                    this.InvcChrgField = value;
                    this.RaisePropertyChanged("InvcChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDeferredRevTable InvcDeferredRev {
            get {
                return this.InvcDeferredRevField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDeferredRevField, value) != true)) {
                    this.InvcDeferredRevField = value;
                    this.RaisePropertyChanged("InvcDeferredRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTable InvcDtl {
            get {
                return this.InvcDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDtlField, value) != true)) {
                    this.InvcDtlField = value;
                    this.RaisePropertyChanged("InvcDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlAttchTable InvcDtlAttch {
            get {
                return this.InvcDtlAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDtlAttchField, value) != true)) {
                    this.InvcDtlAttchField = value;
                    this.RaisePropertyChanged("InvcDtlAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRASchTable InvcDtlRASch {
            get {
                return this.InvcDtlRASchField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDtlRASchField, value) != true)) {
                    this.InvcDtlRASchField = value;
                    this.RaisePropertyChanged("InvcDtlRASch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTGLCTable InvcDtlTGLC {
            get {
                return this.InvcDtlTGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcDtlTGLCField, value) != true)) {
                    this.InvcDtlTGLCField = value;
                    this.RaisePropertyChanged("InvcDtlTGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTable InvcHead {
            get {
                return this.InvcHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcHeadField, value) != true)) {
                    this.InvcHeadField = value;
                    this.RaisePropertyChanged("InvcHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadAttchTable InvcHeadAttch {
            get {
                return this.InvcHeadAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcHeadAttchField, value) != true)) {
                    this.InvcHeadAttchField = value;
                    this.RaisePropertyChanged("InvcHeadAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcMiscTable InvcMisc {
            get {
                return this.InvcMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcMiscField, value) != true)) {
                    this.InvcMiscField = value;
                    this.RaisePropertyChanged("InvcMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcTaxTable InvcTax {
            get {
                return this.InvcTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcTaxField, value) != true)) {
                    this.InvcTaxField = value;
                    this.RaisePropertyChanged("InvcTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.TaxConnectStatusTable TaxConnectStatus {
            get {
                return this.TaxConnectStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxConnectStatusField, value) != true)) {
                    this.TaxConnectStatusField = value;
                    this.RaisePropertyChanged("TaxConnectStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LegalNumGenOptsTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTable LegalNumGenOptsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTable LegalNumGenOpts {
            get {
                return this.LegalNumGenOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumGenOptsField, value) != true)) {
                    this.LegalNumGenOptsField = value;
                    this.RaisePropertyChanged("LegalNumGenOpts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetLinesTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetLinesTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTable ARInvGetLinesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTable ARInvGetLines {
            get {
                return this.ARInvGetLinesField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvGetLinesField, value) != true)) {
                    this.ARInvGetLinesField = value;
                    this.RaisePropertyChanged("ARInvGetLines");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCAddrValidationTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ETCAddrValidationTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ETCAddressTable ETCAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ETCMessageTable ETCMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ETCAddressTable ETCAddress {
            get {
                return this.ETCAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ETCAddressField, value) != true)) {
                    this.ETCAddressField = value;
                    this.RaisePropertyChanged("ETCAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ETCMessageTable ETCMessage {
            get {
                return this.ETCMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ETCMessageField, value) != true)) {
                    this.ETCMessageField = value;
                    this.RaisePropertyChanged("ETCMessage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetDepTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetDepTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepTable ARInvGetDepField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepTable ARInvGetDep {
            get {
                return this.ARInvGetDepField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvGetDepField, value) != true)) {
                    this.ARInvGetDepField = value;
                    this.RaisePropertyChanged("ARInvGetDep");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvRemindersTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvRemindersTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcReminderTable InvcReminderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcReminderTable InvcReminder {
            get {
                return this.InvcReminderField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcReminderField, value) != true)) {
                    this.InvcReminderField = value;
                    this.RaisePropertyChanged("InvcReminder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetMilestoneTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetMilestoneTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneTable ARInvGetMilestoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneTable ARInvGetMilestone {
            get {
                return this.ARInvGetMilestoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvGetMilestoneField, value) != true)) {
                    this.ARInvGetMilestoneField = value;
                    this.RaisePropertyChanged("ARInvGetMilestone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetPBTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetPBTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBTable ARInvGetPBField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBTable ARInvGetPB {
            get {
                return this.ARInvGetPBField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvGetPBField, value) != true)) {
                    this.ARInvGetPBField = value;
                    this.RaisePropertyChanged("ARInvGetPB");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetFSContTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetFSContTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContTable ARInvGetFSContField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContTable ARInvGetFSCont {
            get {
                return this.ARInvGetFSContField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvGetFSContField, value) != true)) {
                    this.ARInvGetFSContField = value;
                    this.RaisePropertyChanged("ARInvGetFSCont");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetRMATableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetRMATableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMATable ARInvGetRMAField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMATable ARInvGetRMA {
            get {
                return this.ARInvGetRMAField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvGetRMAField, value) != true)) {
                    this.ARInvGetRMAField = value;
                    this.RaisePropertyChanged("ARInvGetRMA");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcCustTrkTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcCustTrkTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkTable InvcCustTrkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkTable InvcCustTrk {
            get {
                return this.InvcCustTrkField;
            }
            set {
                if ((object.ReferenceEquals(this.InvcCustTrkField, value) != true)) {
                    this.InvcCustTrkField = value;
                    this.RaisePropertyChanged("InvcCustTrk");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetShipTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetShipTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipTable ARInvGetShipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipTable ARInvGetShip {
            get {
                return this.ARInvGetShipField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvGetShipField, value) != true)) {
                    this.ARInvGetShipField = value;
                    this.RaisePropertyChanged("ARInvGetShip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MXDigitalTaxRcptTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class MXDigitalTaxRcptTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.MXTaxRcptErrorTable MXTaxRcptErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.MXTaxRcptErrorTable MXTaxRcptError {
            get {
                return this.MXTaxRcptErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.MXTaxRcptErrorField, value) != true)) {
                    this.MXTaxRcptErrorField = value;
                    this.RaisePropertyChanged("MXTaxRcptError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvPaySchedTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvPaySchedTableset : EpicorConsole.Epicor.ARInvoiceSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvPayActivityTable ARInvPayActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTable ARInvPaySchedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPayActivityTable ARInvPayActivity {
            get {
                return this.ARInvPayActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvPayActivityField, value) != true)) {
                    this.ARInvPayActivityField = value;
                    this.RaisePropertyChanged("ARInvPayActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTable ARInvPaySched {
            get {
                return this.ARInvPaySchedField;
            }
            set {
                if ((object.ReferenceEquals(this.ARInvPaySchedField, value) != true)) {
                    this.ARInvPaySchedField = value;
                    this.RaisePropertyChanged("ARInvPaySched");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvPayActivityTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvPayActivityRow")]
    [System.SerializableAttribute()]
    public class ARInvPayActivityTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvPayActivityRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvPaySchedTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvPaySchedRow")]
    [System.SerializableAttribute()]
    public class ARInvPaySchedTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.BOUpdErrorRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPayActivityRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.AllocDepositRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.HedTaxSumRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcChrgRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDeferredRevRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRASchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.TaxConnectStatusRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARSelectedDropShipRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARUninvoicedDropShipRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.PEHedTaxSumRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.PEInvcTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.RebateInvRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcRecurrRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlPackRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTransferListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ETCAddressRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ETCMessageRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcReminderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMARow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.MXTaxRcptErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.BOUpdErrorRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPayActivityRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.AllocDepositRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.HedTaxSumRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcChrgRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDeferredRevRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRASchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.TaxConnectStatusRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARSelectedDropShipRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARUninvoicedDropShipRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.PEHedTaxSumRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.PEInvcTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.RebateInvRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcRecurrRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlPackRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTransferListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ETCAddressRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ETCMessageRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcReminderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMARow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.MXTaxRcptErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.BOUpdErrorRow))]
    public partial class IceRow : EpicorConsole.Epicor.ARInvoiceSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvPayActivityRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvPayActivityRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BOEInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvPayActivityRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DNAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DebitNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DispCustAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DispCustDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DispInvAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DispInvDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispTranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocCurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDispInvAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDispInvDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDnAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRevalueBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocToRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTranAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GLPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLRefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLRefTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GainLossTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RefToBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RefToBaseRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RevalueBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RevalueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DispInvAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DispInvDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RevalueBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DispInvAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DispInvDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RevalueBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DispInvAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DispInvDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RevalueBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TranAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TranDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BOEInvoiceNum {
            get {
                return this.BOEInvoiceNumField;
            }
            set {
                if ((this.BOEInvoiceNumField.Equals(value) != true)) {
                    this.BOEInvoiceNumField = value;
                    this.RaisePropertyChanged("BOEInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckRef {
            get {
                return this.CheckRefField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckRefField, value) != true)) {
                    this.CheckRefField = value;
                    this.RaisePropertyChanged("CheckRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPayActivityRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DNAmount {
            get {
                return this.DNAmountField;
            }
            set {
                if ((this.DNAmountField.Equals(value) != true)) {
                    this.DNAmountField = value;
                    this.RaisePropertyChanged("DNAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNComments {
            get {
                return this.DNCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DNCommentsField, value) != true)) {
                    this.DNCommentsField = value;
                    this.RaisePropertyChanged("DNComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DebitNote {
            get {
                return this.DebitNoteField;
            }
            set {
                if ((this.DebitNoteField.Equals(value) != true)) {
                    this.DebitNoteField = value;
                    this.RaisePropertyChanged("DebitNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispCurrencyCode {
            get {
                return this.DispCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispCurrencyCodeField, value) != true)) {
                    this.DispCurrencyCodeField = value;
                    this.RaisePropertyChanged("DispCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DispCustAmt {
            get {
                return this.DispCustAmtField;
            }
            set {
                if ((this.DispCustAmtField.Equals(value) != true)) {
                    this.DispCustAmtField = value;
                    this.RaisePropertyChanged("DispCustAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DispCustDiscount {
            get {
                return this.DispCustDiscountField;
            }
            set {
                if ((this.DispCustDiscountField.Equals(value) != true)) {
                    this.DispCustDiscountField = value;
                    this.RaisePropertyChanged("DispCustDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DispInvAmt {
            get {
                return this.DispInvAmtField;
            }
            set {
                if ((this.DispInvAmtField.Equals(value) != true)) {
                    this.DispInvAmtField = value;
                    this.RaisePropertyChanged("DispInvAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DispInvDiscount {
            get {
                return this.DispInvDiscountField;
            }
            set {
                if ((this.DispInvDiscountField.Equals(value) != true)) {
                    this.DispInvDiscountField = value;
                    this.RaisePropertyChanged("DispInvDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispRef {
            get {
                return this.DispRefField;
            }
            set {
                if ((object.ReferenceEquals(this.DispRefField, value) != true)) {
                    this.DispRefField = value;
                    this.RaisePropertyChanged("DispRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispTranType {
            get {
                return this.DispTranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispTranTypeField, value) != true)) {
                    this.DispTranTypeField = value;
                    this.RaisePropertyChanged("DispTranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocCurrencySymbol {
            get {
                return this.DocCurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocCurrencySymbolField, value) != true)) {
                    this.DocCurrencySymbolField = value;
                    this.RaisePropertyChanged("DocCurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDiscount {
            get {
                return this.DocDiscountField;
            }
            set {
                if ((this.DocDiscountField.Equals(value) != true)) {
                    this.DocDiscountField = value;
                    this.RaisePropertyChanged("DocDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDispInvAmt {
            get {
                return this.DocDispInvAmtField;
            }
            set {
                if ((this.DocDispInvAmtField.Equals(value) != true)) {
                    this.DocDispInvAmtField = value;
                    this.RaisePropertyChanged("DocDispInvAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDispInvDiscount {
            get {
                return this.DocDispInvDiscountField;
            }
            set {
                if ((this.DocDispInvDiscountField.Equals(value) != true)) {
                    this.DocDispInvDiscountField = value;
                    this.RaisePropertyChanged("DocDispInvDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDnAmount {
            get {
                return this.DocDnAmountField;
            }
            set {
                if ((this.DocDnAmountField.Equals(value) != true)) {
                    this.DocDnAmountField = value;
                    this.RaisePropertyChanged("DocDnAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRevalueBal {
            get {
                return this.DocRevalueBalField;
            }
            set {
                if ((this.DocRevalueBalField.Equals(value) != true)) {
                    this.DocRevalueBalField = value;
                    this.RaisePropertyChanged("DocRevalueBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocToRef {
            get {
                return this.DocToRefField;
            }
            set {
                if ((this.DocToRefField.Equals(value) != true)) {
                    this.DocToRefField = value;
                    this.RaisePropertyChanged("DocToRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTranAmt {
            get {
                return this.DocTranAmtField;
            }
            set {
                if ((this.DocTranAmtField.Equals(value) != true)) {
                    this.DocTranAmtField = value;
                    this.RaisePropertyChanged("DocTranAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalPeriod {
            get {
                return this.FiscalPeriodField;
            }
            set {
                if ((this.FiscalPeriodField.Equals(value) != true)) {
                    this.FiscalPeriodField = value;
                    this.RaisePropertyChanged("FiscalPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalYear {
            get {
                return this.FiscalYearField;
            }
            set {
                if ((this.FiscalYearField.Equals(value) != true)) {
                    this.FiscalYearField = value;
                    this.RaisePropertyChanged("FiscalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GLPosted {
            get {
                return this.GLPostedField;
            }
            set {
                if ((this.GLPostedField.Equals(value) != true)) {
                    this.GLPostedField = value;
                    this.RaisePropertyChanged("GLPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLRefCode {
            get {
                return this.GLRefCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLRefCodeField, value) != true)) {
                    this.GLRefCodeField = value;
                    this.RaisePropertyChanged("GLRefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLRefType {
            get {
                return this.GLRefTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLRefTypeField, value) != true)) {
                    this.GLRefTypeField = value;
                    this.RaisePropertyChanged("GLRefType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GainLossType {
            get {
                return this.GainLossTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GainLossTypeField, value) != true)) {
                    this.GainLossTypeField = value;
                    this.RaisePropertyChanged("GainLossType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeadNum {
            get {
                return this.HeadNumField;
            }
            set {
                if ((this.HeadNumField.Equals(value) != true)) {
                    this.HeadNumField = value;
                    this.RaisePropertyChanged("HeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceRef {
            get {
                return this.InvoiceRefField;
            }
            set {
                if ((this.InvoiceRefField.Equals(value) != true)) {
                    this.InvoiceRefField = value;
                    this.RaisePropertyChanged("InvoiceRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Posted {
            get {
                return this.PostedField;
            }
            set {
                if ((this.PostedField.Equals(value) != true)) {
                    this.PostedField = value;
                    this.RaisePropertyChanged("Posted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCode {
            get {
                return this.RefCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeField, value) != true)) {
                    this.RefCodeField = value;
                    this.RaisePropertyChanged("RefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RefToBase {
            get {
                return this.RefToBaseField;
            }
            set {
                if ((this.RefToBaseField.Equals(value) != true)) {
                    this.RefToBaseField = value;
                    this.RaisePropertyChanged("RefToBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RefToBaseRate {
            get {
                return this.RefToBaseRateField;
            }
            set {
                if ((this.RefToBaseRateField.Equals(value) != true)) {
                    this.RefToBaseRateField = value;
                    this.RaisePropertyChanged("RefToBaseRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RevalueBal {
            get {
                return this.RevalueBalField;
            }
            set {
                if ((this.RevalueBalField.Equals(value) != true)) {
                    this.RevalueBalField = value;
                    this.RaisePropertyChanged("RevalueBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RevalueDate {
            get {
                return this.RevalueDateField;
            }
            set {
                if ((this.RevalueDateField.Equals(value) != true)) {
                    this.RevalueDateField = value;
                    this.RaisePropertyChanged("RevalueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DispInvAmt {
            get {
                return this.Rpt1DispInvAmtField;
            }
            set {
                if ((this.Rpt1DispInvAmtField.Equals(value) != true)) {
                    this.Rpt1DispInvAmtField = value;
                    this.RaisePropertyChanged("Rpt1DispInvAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DispInvDiscount {
            get {
                return this.Rpt1DispInvDiscountField;
            }
            set {
                if ((this.Rpt1DispInvDiscountField.Equals(value) != true)) {
                    this.Rpt1DispInvDiscountField = value;
                    this.RaisePropertyChanged("Rpt1DispInvDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1RevalueBal {
            get {
                return this.Rpt1RevalueBalField;
            }
            set {
                if ((this.Rpt1RevalueBalField.Equals(value) != true)) {
                    this.Rpt1RevalueBalField = value;
                    this.RaisePropertyChanged("Rpt1RevalueBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DispInvAmt {
            get {
                return this.Rpt2DispInvAmtField;
            }
            set {
                if ((this.Rpt2DispInvAmtField.Equals(value) != true)) {
                    this.Rpt2DispInvAmtField = value;
                    this.RaisePropertyChanged("Rpt2DispInvAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DispInvDiscount {
            get {
                return this.Rpt2DispInvDiscountField;
            }
            set {
                if ((this.Rpt2DispInvDiscountField.Equals(value) != true)) {
                    this.Rpt2DispInvDiscountField = value;
                    this.RaisePropertyChanged("Rpt2DispInvDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2RevalueBal {
            get {
                return this.Rpt2RevalueBalField;
            }
            set {
                if ((this.Rpt2RevalueBalField.Equals(value) != true)) {
                    this.Rpt2RevalueBalField = value;
                    this.RaisePropertyChanged("Rpt2RevalueBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DispInvAmt {
            get {
                return this.Rpt3DispInvAmtField;
            }
            set {
                if ((this.Rpt3DispInvAmtField.Equals(value) != true)) {
                    this.Rpt3DispInvAmtField = value;
                    this.RaisePropertyChanged("Rpt3DispInvAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DispInvDiscount {
            get {
                return this.Rpt3DispInvDiscountField;
            }
            set {
                if ((this.Rpt3DispInvDiscountField.Equals(value) != true)) {
                    this.Rpt3DispInvDiscountField = value;
                    this.RaisePropertyChanged("Rpt3DispInvDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3RevalueBal {
            get {
                return this.Rpt3RevalueBalField;
            }
            set {
                if ((this.Rpt3RevalueBalField.Equals(value) != true)) {
                    this.Rpt3RevalueBalField = value;
                    this.RaisePropertyChanged("Rpt3RevalueBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TranAmt {
            get {
                return this.TranAmtField;
            }
            set {
                if ((this.TranAmtField.Equals(value) != true)) {
                    this.TranAmtField = value;
                    this.RaisePropertyChanged("TranAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TranDate {
            get {
                return this.TranDateField;
            }
            set {
                if ((this.TranDateField.Equals(value) != true)) {
                    this.TranDateField = value;
                    this.RaisePropertyChanged("TranDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranType {
            get {
                return this.TranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TranTypeField, value) != true)) {
                    this.TranTypeField = value;
                    this.RaisePropertyChanged("TranType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvPaySchedRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvPaySchedRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocCurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPayAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxDocPayAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxPayAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PassFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PayAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1PayAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2PayAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3PayAmtField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyID {
            get {
                return this.CurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIDField, value) != true)) {
                    this.CurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencySymbol {
            get {
                return this.CurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencySymbolField, value) != true)) {
                    this.CurrencySymbolField = value;
                    this.RaisePropertyChanged("CurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocCurrencyID {
            get {
                return this.DocCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocCurrencyIDField, value) != true)) {
                    this.DocCurrencyIDField = value;
                    this.RaisePropertyChanged("DocCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocCurrencySymbol {
            get {
                return this.DocCurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocCurrencySymbolField, value) != true)) {
                    this.DocCurrencySymbolField = value;
                    this.RaisePropertyChanged("DocCurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPayAmt {
            get {
                return this.DocPayAmtField;
            }
            set {
                if ((this.DocPayAmtField.Equals(value) != true)) {
                    this.DocPayAmtField = value;
                    this.RaisePropertyChanged("DocPayAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineNumber {
            get {
                return this.LineNumberField;
            }
            set {
                if ((this.LineNumberField.Equals(value) != true)) {
                    this.LineNumberField = value;
                    this.RaisePropertyChanged("LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxDocPayAmt {
            get {
                return this.MaxDocPayAmtField;
            }
            set {
                if ((this.MaxDocPayAmtField.Equals(value) != true)) {
                    this.MaxDocPayAmtField = value;
                    this.RaisePropertyChanged("MaxDocPayAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxPayAmt {
            get {
                return this.MaxPayAmtField;
            }
            set {
                if ((this.MaxPayAmtField.Equals(value) != true)) {
                    this.MaxPayAmtField = value;
                    this.RaisePropertyChanged("MaxPayAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PassFlag {
            get {
                return this.PassFlagField;
            }
            set {
                if ((this.PassFlagField.Equals(value) != true)) {
                    this.PassFlagField = value;
                    this.RaisePropertyChanged("PassFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PayAmt {
            get {
                return this.PayAmtField;
            }
            set {
                if ((this.PayAmtField.Equals(value) != true)) {
                    this.PayAmtField = value;
                    this.RaisePropertyChanged("PayAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PayDate {
            get {
                return this.PayDateField;
            }
            set {
                if ((this.PayDateField.Equals(value) != true)) {
                    this.PayDateField = value;
                    this.RaisePropertyChanged("PayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1PayAmt {
            get {
                return this.Rpt1PayAmtField;
            }
            set {
                if ((this.Rpt1PayAmtField.Equals(value) != true)) {
                    this.Rpt1PayAmtField = value;
                    this.RaisePropertyChanged("Rpt1PayAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2PayAmt {
            get {
                return this.Rpt2PayAmtField;
            }
            set {
                if ((this.Rpt2PayAmtField.Equals(value) != true)) {
                    this.Rpt2PayAmtField = value;
                    this.RaisePropertyChanged("Rpt2PayAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3PayAmt {
            get {
                return this.Rpt3PayAmtField;
            }
            set {
                if ((this.Rpt3PayAmtField.Equals(value) != true)) {
                    this.Rpt3PayAmtField = value;
                    this.RaisePropertyChanged("Rpt3PayAmt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AllocDepositRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class AllocDepositRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllocAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllocBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllocTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.AllocDepositRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DepApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepCheckRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepHeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAllocAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAllocBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAllocTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDocumentAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocumentAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrePayStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrePayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AllocAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AllocBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AllocTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DocumentAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AllocAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AllocBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AllocTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DocumentAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AllocAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AllocBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AllocTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DocumentAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllocAmt {
            get {
                return this.AllocAmtField;
            }
            set {
                if ((this.AllocAmtField.Equals(value) != true)) {
                    this.AllocAmtField = value;
                    this.RaisePropertyChanged("AllocAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllocBal {
            get {
                return this.AllocBalField;
            }
            set {
                if ((this.AllocBalField.Equals(value) != true)) {
                    this.AllocBalField = value;
                    this.RaisePropertyChanged("AllocBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllocTaxBal {
            get {
                return this.AllocTaxBalField;
            }
            set {
                if ((this.AllocTaxBalField.Equals(value) != true)) {
                    this.AllocTaxBalField = value;
                    this.RaisePropertyChanged("AllocTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.AllocDepositRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DepApplyDate {
            get {
                return this.DepApplyDateField;
            }
            set {
                if ((this.DepApplyDateField.Equals(value) != true)) {
                    this.DepApplyDateField = value;
                    this.RaisePropertyChanged("DepApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepCheckRef {
            get {
                return this.DepCheckRefField;
            }
            set {
                if ((object.ReferenceEquals(this.DepCheckRefField, value) != true)) {
                    this.DepCheckRefField = value;
                    this.RaisePropertyChanged("DepCheckRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepGroupID {
            get {
                return this.DepGroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DepGroupIDField, value) != true)) {
                    this.DepGroupIDField = value;
                    this.RaisePropertyChanged("DepGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepHeadNum {
            get {
                return this.DepHeadNumField;
            }
            set {
                if ((this.DepHeadNumField.Equals(value) != true)) {
                    this.DepHeadNumField = value;
                    this.RaisePropertyChanged("DepHeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepInvoiceNum {
            get {
                return this.DepInvoiceNumField;
            }
            set {
                if ((this.DepInvoiceNumField.Equals(value) != true)) {
                    this.DepInvoiceNumField = value;
                    this.RaisePropertyChanged("DepInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAllocAmt {
            get {
                return this.DocAllocAmtField;
            }
            set {
                if ((this.DocAllocAmtField.Equals(value) != true)) {
                    this.DocAllocAmtField = value;
                    this.RaisePropertyChanged("DocAllocAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAllocBal {
            get {
                return this.DocAllocBalField;
            }
            set {
                if ((this.DocAllocBalField.Equals(value) != true)) {
                    this.DocAllocBalField = value;
                    this.RaisePropertyChanged("DocAllocBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAllocTaxBal {
            get {
                return this.DocAllocTaxBalField;
            }
            set {
                if ((this.DocAllocTaxBalField.Equals(value) != true)) {
                    this.DocAllocTaxBalField = value;
                    this.RaisePropertyChanged("DocAllocTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDocumentAmt {
            get {
                return this.DocDocumentAmtField;
            }
            set {
                if ((this.DocDocumentAmtField.Equals(value) != true)) {
                    this.DocDocumentAmtField = value;
                    this.RaisePropertyChanged("DocDocumentAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocumentAmt {
            get {
                return this.DocumentAmtField;
            }
            set {
                if ((this.DocumentAmtField.Equals(value) != true)) {
                    this.DocumentAmtField = value;
                    this.RaisePropertyChanged("DocumentAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrePayStatus {
            get {
                return this.PrePayStatusField;
            }
            set {
                if ((this.PrePayStatusField.Equals(value) != true)) {
                    this.PrePayStatusField = value;
                    this.RaisePropertyChanged("PrePayStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrePayType {
            get {
                return this.PrePayTypeField;
            }
            set {
                if ((this.PrePayTypeField.Equals(value) != true)) {
                    this.PrePayTypeField = value;
                    this.RaisePropertyChanged("PrePayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AllocAmt {
            get {
                return this.Rpt1AllocAmtField;
            }
            set {
                if ((this.Rpt1AllocAmtField.Equals(value) != true)) {
                    this.Rpt1AllocAmtField = value;
                    this.RaisePropertyChanged("Rpt1AllocAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AllocBal {
            get {
                return this.Rpt1AllocBalField;
            }
            set {
                if ((this.Rpt1AllocBalField.Equals(value) != true)) {
                    this.Rpt1AllocBalField = value;
                    this.RaisePropertyChanged("Rpt1AllocBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AllocTaxBal {
            get {
                return this.Rpt1AllocTaxBalField;
            }
            set {
                if ((this.Rpt1AllocTaxBalField.Equals(value) != true)) {
                    this.Rpt1AllocTaxBalField = value;
                    this.RaisePropertyChanged("Rpt1AllocTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DocumentAmt {
            get {
                return this.Rpt1DocumentAmtField;
            }
            set {
                if ((this.Rpt1DocumentAmtField.Equals(value) != true)) {
                    this.Rpt1DocumentAmtField = value;
                    this.RaisePropertyChanged("Rpt1DocumentAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AllocAmt {
            get {
                return this.Rpt2AllocAmtField;
            }
            set {
                if ((this.Rpt2AllocAmtField.Equals(value) != true)) {
                    this.Rpt2AllocAmtField = value;
                    this.RaisePropertyChanged("Rpt2AllocAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AllocBal {
            get {
                return this.Rpt2AllocBalField;
            }
            set {
                if ((this.Rpt2AllocBalField.Equals(value) != true)) {
                    this.Rpt2AllocBalField = value;
                    this.RaisePropertyChanged("Rpt2AllocBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AllocTaxBal {
            get {
                return this.Rpt2AllocTaxBalField;
            }
            set {
                if ((this.Rpt2AllocTaxBalField.Equals(value) != true)) {
                    this.Rpt2AllocTaxBalField = value;
                    this.RaisePropertyChanged("Rpt2AllocTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DocumentAmt {
            get {
                return this.Rpt2DocumentAmtField;
            }
            set {
                if ((this.Rpt2DocumentAmtField.Equals(value) != true)) {
                    this.Rpt2DocumentAmtField = value;
                    this.RaisePropertyChanged("Rpt2DocumentAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AllocAmt {
            get {
                return this.Rpt3AllocAmtField;
            }
            set {
                if ((this.Rpt3AllocAmtField.Equals(value) != true)) {
                    this.Rpt3AllocAmtField = value;
                    this.RaisePropertyChanged("Rpt3AllocAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AllocBal {
            get {
                return this.Rpt3AllocBalField;
            }
            set {
                if ((this.Rpt3AllocBalField.Equals(value) != true)) {
                    this.Rpt3AllocBalField = value;
                    this.RaisePropertyChanged("Rpt3AllocBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AllocTaxBal {
            get {
                return this.Rpt3AllocTaxBalField;
            }
            set {
                if ((this.Rpt3AllocTaxBalField.Equals(value) != true)) {
                    this.Rpt3AllocTaxBalField = value;
                    this.RaisePropertyChanged("Rpt3AllocTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DocumentAmt {
            get {
                return this.Rpt3DocumentAmtField;
            }
            set {
                if ((this.Rpt3DocumentAmtField.Equals(value) != true)) {
                    this.Rpt3DocumentAmtField = value;
                    this.RaisePropertyChanged("Rpt3DocumentAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HedTaxSumRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class HedTaxSumRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllocDepInvcNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.HedTaxSumRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HedNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllocDepInvcNum {
            get {
                return this.AllocDepInvcNumField;
            }
            set {
                if ((this.AllocDepInvcNumField.Equals(value) != true)) {
                    this.AllocDepInvcNumField = value;
                    this.RaisePropertyChanged("AllocDepInvcNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.HedTaxSumRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HedNum {
            get {
                return this.HedNumField;
            }
            set {
                if ((this.HedNumField.Equals(value) != true)) {
                    this.HedNumField = value;
                    this.RaisePropertyChanged("HedNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxDescription {
            get {
                return this.TaxDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxDescriptionField, value) != true)) {
                    this.TaxDescriptionField = value;
                    this.RaisePropertyChanged("TaxDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcChrgRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcChrgRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChargePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcChrgRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocOutstandingBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LetterNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OutstandingBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReminderPreviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1OutstandingBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2OutstandingBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3OutstandingBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChargeAmt {
            get {
                return this.ChargeAmtField;
            }
            set {
                if ((this.ChargeAmtField.Equals(value) != true)) {
                    this.ChargeAmtField = value;
                    this.RaisePropertyChanged("ChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeCode {
            get {
                return this.ChargeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeCodeField, value) != true)) {
                    this.ChargeCodeField = value;
                    this.RaisePropertyChanged("ChargeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChargePercent {
            get {
                return this.ChargePercentField;
            }
            set {
                if ((this.ChargePercentField.Equals(value) != true)) {
                    this.ChargePercentField = value;
                    this.RaisePropertyChanged("ChargePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcChrgRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocChargeAmt {
            get {
                return this.DocChargeAmtField;
            }
            set {
                if ((this.DocChargeAmtField.Equals(value) != true)) {
                    this.DocChargeAmtField = value;
                    this.RaisePropertyChanged("DocChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocOutstandingBalance {
            get {
                return this.DocOutstandingBalanceField;
            }
            set {
                if ((this.DocOutstandingBalanceField.Equals(value) != true)) {
                    this.DocOutstandingBalanceField = value;
                    this.RaisePropertyChanged("DocOutstandingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspChargeAmt {
            get {
                return this.DspChargeAmtField;
            }
            set {
                if ((this.DspChargeAmtField.Equals(value) != true)) {
                    this.DspChargeAmtField = value;
                    this.RaisePropertyChanged("DspChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocChargeAmt {
            get {
                return this.DspDocChargeAmtField;
            }
            set {
                if ((this.DspDocChargeAmtField.Equals(value) != true)) {
                    this.DspDocChargeAmtField = value;
                    this.RaisePropertyChanged("DspDocChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LetterNum {
            get {
                return this.LetterNumField;
            }
            set {
                if ((this.LetterNumField.Equals(value) != true)) {
                    this.LetterNumField = value;
                    this.RaisePropertyChanged("LetterNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OutstandingBalance {
            get {
                return this.OutstandingBalanceField;
            }
            set {
                if ((this.OutstandingBalanceField.Equals(value) != true)) {
                    this.OutstandingBalanceField = value;
                    this.RaisePropertyChanged("OutstandingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReminderPreview {
            get {
                return this.ReminderPreviewField;
            }
            set {
                if ((this.ReminderPreviewField.Equals(value) != true)) {
                    this.ReminderPreviewField = value;
                    this.RaisePropertyChanged("ReminderPreview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ChargeAmt {
            get {
                return this.Rpt1ChargeAmtField;
            }
            set {
                if ((this.Rpt1ChargeAmtField.Equals(value) != true)) {
                    this.Rpt1ChargeAmtField = value;
                    this.RaisePropertyChanged("Rpt1ChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspChargeAmt {
            get {
                return this.Rpt1DspChargeAmtField;
            }
            set {
                if ((this.Rpt1DspChargeAmtField.Equals(value) != true)) {
                    this.Rpt1DspChargeAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1OutstandingBalance {
            get {
                return this.Rpt1OutstandingBalanceField;
            }
            set {
                if ((this.Rpt1OutstandingBalanceField.Equals(value) != true)) {
                    this.Rpt1OutstandingBalanceField = value;
                    this.RaisePropertyChanged("Rpt1OutstandingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ChargeAmt {
            get {
                return this.Rpt2ChargeAmtField;
            }
            set {
                if ((this.Rpt2ChargeAmtField.Equals(value) != true)) {
                    this.Rpt2ChargeAmtField = value;
                    this.RaisePropertyChanged("Rpt2ChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspChargeAmt {
            get {
                return this.Rpt2DspChargeAmtField;
            }
            set {
                if ((this.Rpt2DspChargeAmtField.Equals(value) != true)) {
                    this.Rpt2DspChargeAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2OutstandingBalance {
            get {
                return this.Rpt2OutstandingBalanceField;
            }
            set {
                if ((this.Rpt2OutstandingBalanceField.Equals(value) != true)) {
                    this.Rpt2OutstandingBalanceField = value;
                    this.RaisePropertyChanged("Rpt2OutstandingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ChargeAmt {
            get {
                return this.Rpt3ChargeAmtField;
            }
            set {
                if ((this.Rpt3ChargeAmtField.Equals(value) != true)) {
                    this.Rpt3ChargeAmtField = value;
                    this.RaisePropertyChanged("Rpt3ChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspChargeAmt {
            get {
                return this.Rpt3DspChargeAmtField;
            }
            set {
                if ((this.Rpt3DspChargeAmtField.Equals(value) != true)) {
                    this.Rpt3DspChargeAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3OutstandingBalance {
            get {
                return this.Rpt3OutstandingBalanceField;
            }
            set {
                if ((this.Rpt3OutstandingBalanceField.Equals(value) != true)) {
                    this.Rpt3OutstandingBalanceField = value;
                    this.RaisePropertyChanged("Rpt3OutstandingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceInvoiceNum {
            get {
                return this.SourceInvoiceNumField;
            }
            set {
                if ((this.SourceInvoiceNumField.Equals(value) != true)) {
                    this.SourceInvoiceNumField = value;
                    this.RaisePropertyChanged("SourceInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDeferredRevRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcDeferredRevRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDeferredRevRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DistributedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDistributedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRecognizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRemainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnrecognizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RecognizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RemainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DistributedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RecognizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RemainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnrecognizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DistributedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RecognizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RemainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnrecognizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DistributedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RecognizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RemainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnrecognizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnrecognizedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDeferredRevRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Distributed {
            get {
                return this.DistributedField;
            }
            set {
                if ((this.DistributedField.Equals(value) != true)) {
                    this.DistributedField = value;
                    this.RaisePropertyChanged("Distributed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDistributed {
            get {
                return this.DocDistributedField;
            }
            set {
                if ((this.DocDistributedField.Equals(value) != true)) {
                    this.DocDistributedField = value;
                    this.RaisePropertyChanged("DocDistributed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRecognized {
            get {
                return this.DocRecognizedField;
            }
            set {
                if ((this.DocRecognizedField.Equals(value) != true)) {
                    this.DocRecognizedField = value;
                    this.RaisePropertyChanged("DocRecognized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRemaining {
            get {
                return this.DocRemainingField;
            }
            set {
                if ((this.DocRemainingField.Equals(value) != true)) {
                    this.DocRemainingField = value;
                    this.RaisePropertyChanged("DocRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRevenue {
            get {
                return this.DocRevenueField;
            }
            set {
                if ((this.DocRevenueField.Equals(value) != true)) {
                    this.DocRevenueField = value;
                    this.RaisePropertyChanged("DocRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnrecognized {
            get {
                return this.DocUnrecognizedField;
            }
            set {
                if ((this.DocUnrecognizedField.Equals(value) != true)) {
                    this.DocUnrecognizedField = value;
                    this.RaisePropertyChanged("DocUnrecognized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Recognized {
            get {
                return this.RecognizedField;
            }
            set {
                if ((this.RecognizedField.Equals(value) != true)) {
                    this.RecognizedField = value;
                    this.RaisePropertyChanged("Recognized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Remaining {
            get {
                return this.RemainingField;
            }
            set {
                if ((this.RemainingField.Equals(value) != true)) {
                    this.RemainingField = value;
                    this.RaisePropertyChanged("Remaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Revenue {
            get {
                return this.RevenueField;
            }
            set {
                if ((this.RevenueField.Equals(value) != true)) {
                    this.RevenueField = value;
                    this.RaisePropertyChanged("Revenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Distributed {
            get {
                return this.Rpt1DistributedField;
            }
            set {
                if ((this.Rpt1DistributedField.Equals(value) != true)) {
                    this.Rpt1DistributedField = value;
                    this.RaisePropertyChanged("Rpt1Distributed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Recognized {
            get {
                return this.Rpt1RecognizedField;
            }
            set {
                if ((this.Rpt1RecognizedField.Equals(value) != true)) {
                    this.Rpt1RecognizedField = value;
                    this.RaisePropertyChanged("Rpt1Recognized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Remaining {
            get {
                return this.Rpt1RemainingField;
            }
            set {
                if ((this.Rpt1RemainingField.Equals(value) != true)) {
                    this.Rpt1RemainingField = value;
                    this.RaisePropertyChanged("Rpt1Remaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Revenue {
            get {
                return this.Rpt1RevenueField;
            }
            set {
                if ((this.Rpt1RevenueField.Equals(value) != true)) {
                    this.Rpt1RevenueField = value;
                    this.RaisePropertyChanged("Rpt1Revenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Unrecognized {
            get {
                return this.Rpt1UnrecognizedField;
            }
            set {
                if ((this.Rpt1UnrecognizedField.Equals(value) != true)) {
                    this.Rpt1UnrecognizedField = value;
                    this.RaisePropertyChanged("Rpt1Unrecognized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Distributed {
            get {
                return this.Rpt2DistributedField;
            }
            set {
                if ((this.Rpt2DistributedField.Equals(value) != true)) {
                    this.Rpt2DistributedField = value;
                    this.RaisePropertyChanged("Rpt2Distributed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Recognized {
            get {
                return this.Rpt2RecognizedField;
            }
            set {
                if ((this.Rpt2RecognizedField.Equals(value) != true)) {
                    this.Rpt2RecognizedField = value;
                    this.RaisePropertyChanged("Rpt2Recognized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Remaining {
            get {
                return this.Rpt2RemainingField;
            }
            set {
                if ((this.Rpt2RemainingField.Equals(value) != true)) {
                    this.Rpt2RemainingField = value;
                    this.RaisePropertyChanged("Rpt2Remaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Revenue {
            get {
                return this.Rpt2RevenueField;
            }
            set {
                if ((this.Rpt2RevenueField.Equals(value) != true)) {
                    this.Rpt2RevenueField = value;
                    this.RaisePropertyChanged("Rpt2Revenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Unrecognized {
            get {
                return this.Rpt2UnrecognizedField;
            }
            set {
                if ((this.Rpt2UnrecognizedField.Equals(value) != true)) {
                    this.Rpt2UnrecognizedField = value;
                    this.RaisePropertyChanged("Rpt2Unrecognized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Distributed {
            get {
                return this.Rpt3DistributedField;
            }
            set {
                if ((this.Rpt3DistributedField.Equals(value) != true)) {
                    this.Rpt3DistributedField = value;
                    this.RaisePropertyChanged("Rpt3Distributed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Recognized {
            get {
                return this.Rpt3RecognizedField;
            }
            set {
                if ((this.Rpt3RecognizedField.Equals(value) != true)) {
                    this.Rpt3RecognizedField = value;
                    this.RaisePropertyChanged("Rpt3Recognized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Remaining {
            get {
                return this.Rpt3RemainingField;
            }
            set {
                if ((this.Rpt3RemainingField.Equals(value) != true)) {
                    this.Rpt3RemainingField = value;
                    this.RaisePropertyChanged("Rpt3Remaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Revenue {
            get {
                return this.Rpt3RevenueField;
            }
            set {
                if ((this.Rpt3RevenueField.Equals(value) != true)) {
                    this.Rpt3RevenueField = value;
                    this.RaisePropertyChanged("Rpt3Revenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Unrecognized {
            get {
                return this.Rpt3UnrecognizedField;
            }
            set {
                if ((this.Rpt3UnrecognizedField.Equals(value) != true)) {
                    this.Rpt3UnrecognizedField = value;
                    this.RaisePropertyChanged("Rpt3Unrecognized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Unrecognized {
            get {
                return this.UnrecognizedField;
            }
            set {
                if ((this.UnrecognizedField.Equals(value) != true)) {
                    this.UnrecognizedField = value;
                    this.RaisePropertyChanged("Unrecognized");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcDtlRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ABTUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdvBillEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdvGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowReclassifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowTaxCodeUpdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowUpdPartDeferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillToCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIDescription1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIDescription2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIDescription3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CNGTIDiscountTaxAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CNGTINetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTISpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CNGTITaxAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTITaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CNGTITaxPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CNGTITotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CNGTIUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool COSPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool COSPostingReqdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallCodeCallDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeDefRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeReclassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckAmortAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommissionableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidateLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeContractDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContractNumSuspendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContractSuspendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CorrectionDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCntCorpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCntFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCntFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCntLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCntMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCntNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCntPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCostCenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustNumAllowShipTo3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEDenominationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEInternationalSecuritiesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DEIsInvestmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DEIsSecurityFinancialDerivativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DEIsServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEPayStatCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DefRevEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefRevPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DefRevStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeferredPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeferredRevAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteRAScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispGLAcctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispShipToAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisposalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDeferredRevAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspWithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocLessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocLineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocLineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMXUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPEDetAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DockingStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DropShipPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DropShipPackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DropShipPackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocLessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocLineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocLineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DspInvoiceRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspLessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspLineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspLineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspOurShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspSellingShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspTaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspWithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableDspWithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableRMADeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableRMAUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityUseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinChargeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalCalendarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalYearSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GLTranAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GLTranDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GetDfltTaxIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomeTaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomeTaxDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvLegalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCommisBtnSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIntrastatSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTaxBtnSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCLbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalCodeJrnlDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JournalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkedCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkedCurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LinkedInvcUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXCustomsDutyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MXSellingShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MXUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MYIndustryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MilestoneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MilestoneIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCntryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OTSCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSResaleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSTaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrigTaxCatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PBInvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PBLineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PEBOEHeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PEDetAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEDspCurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartiallyDeferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RACodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RADescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RADtlIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RASchedExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMALineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMALineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMANumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReclassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReclassCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReclassCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReclassCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReclassReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReclassReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReclassifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RenewalNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RevChargeAppliedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevChargeMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AdvGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DeferredRevAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspLessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspLineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspLineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspWithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1LineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1LineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1MXUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1OrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1PEDetAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AdvGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DeferredRevAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspLessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspLineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspLineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspWithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2LineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2LineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2MXUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2OrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2PEDetAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AdvGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DeferredRevAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspLessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspLineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspLineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspWithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3LineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3LineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3MXUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3OrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3PEDetAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactEMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShpConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShpLegalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxConnectCalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRevisionNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABTUID {
            get {
                return this.ABTUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ABTUIDField, value) != true)) {
                    this.ABTUIDField = value;
                    this.RaisePropertyChanged("ABTUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdvBillEnabled {
            get {
                return this.AdvBillEnabledField;
            }
            set {
                if ((this.AdvBillEnabledField.Equals(value) != true)) {
                    this.AdvBillEnabledField = value;
                    this.RaisePropertyChanged("AdvBillEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AdvGainLoss {
            get {
                return this.AdvGainLossField;
            }
            set {
                if ((this.AdvGainLossField.Equals(value) != true)) {
                    this.AdvGainLossField = value;
                    this.RaisePropertyChanged("AdvGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AdvanceBillCredit {
            get {
                return this.AdvanceBillCreditField;
            }
            set {
                if ((this.AdvanceBillCreditField.Equals(value) != true)) {
                    this.AdvanceBillCreditField = value;
                    this.RaisePropertyChanged("AdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowReclassify {
            get {
                return this.AllowReclassifyField;
            }
            set {
                if ((this.AllowReclassifyField.Equals(value) != true)) {
                    this.AllowReclassifyField = value;
                    this.RaisePropertyChanged("AllowReclassify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowTaxCodeUpd {
            get {
                return this.AllowTaxCodeUpdField;
            }
            set {
                if ((this.AllowTaxCodeUpdField.Equals(value) != true)) {
                    this.AllowTaxCodeUpdField = value;
                    this.RaisePropertyChanged("AllowTaxCodeUpd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUpdPartDefer {
            get {
                return this.AllowUpdPartDeferField;
            }
            set {
                if ((this.AllowUpdPartDeferField.Equals(value) != true)) {
                    this.AllowUpdPartDeferField = value;
                    this.RaisePropertyChanged("AllowUpdPartDefer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetNum {
            get {
                return this.AssetNumField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetNumField, value) != true)) {
                    this.AssetNumField = value;
                    this.RaisePropertyChanged("AssetNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustName {
            get {
                return this.BTCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustNameField, value) != true)) {
                    this.BTCustNameField = value;
                    this.RaisePropertyChanged("BTCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillToCustID {
            get {
                return this.BillToCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BillToCustIDField, value) != true)) {
                    this.BillToCustIDField = value;
                    this.RaisePropertyChanged("BillToCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BurUnitCost {
            get {
                return this.BurUnitCostField;
            }
            set {
                if ((this.BurUnitCostField.Equals(value) != true)) {
                    this.BurUnitCostField = value;
                    this.RaisePropertyChanged("BurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIDescription1 {
            get {
                return this.CNGTIDescription1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIDescription1Field, value) != true)) {
                    this.CNGTIDescription1Field = value;
                    this.RaisePropertyChanged("CNGTIDescription1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIDescription2 {
            get {
                return this.CNGTIDescription2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIDescription2Field, value) != true)) {
                    this.CNGTIDescription2Field = value;
                    this.RaisePropertyChanged("CNGTIDescription2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIDescription3 {
            get {
                return this.CNGTIDescription3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIDescription3Field, value) != true)) {
                    this.CNGTIDescription3Field = value;
                    this.RaisePropertyChanged("CNGTIDescription3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CNGTIDiscountTaxAmount {
            get {
                return this.CNGTIDiscountTaxAmountField;
            }
            set {
                if ((this.CNGTIDiscountTaxAmountField.Equals(value) != true)) {
                    this.CNGTIDiscountTaxAmountField = value;
                    this.RaisePropertyChanged("CNGTIDiscountTaxAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIIUM {
            get {
                return this.CNGTIIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIIUMField, value) != true)) {
                    this.CNGTIIUMField = value;
                    this.RaisePropertyChanged("CNGTIIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CNGTINetAmount {
            get {
                return this.CNGTINetAmountField;
            }
            set {
                if ((this.CNGTINetAmountField.Equals(value) != true)) {
                    this.CNGTINetAmountField = value;
                    this.RaisePropertyChanged("CNGTINetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIPartDescription {
            get {
                return this.CNGTIPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIPartDescriptionField, value) != true)) {
                    this.CNGTIPartDescriptionField = value;
                    this.RaisePropertyChanged("CNGTIPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTISpecification {
            get {
                return this.CNGTISpecificationField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTISpecificationField, value) != true)) {
                    this.CNGTISpecificationField = value;
                    this.RaisePropertyChanged("CNGTISpecification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CNGTITaxAmount {
            get {
                return this.CNGTITaxAmountField;
            }
            set {
                if ((this.CNGTITaxAmountField.Equals(value) != true)) {
                    this.CNGTITaxAmountField = value;
                    this.RaisePropertyChanged("CNGTITaxAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTITaxCode {
            get {
                return this.CNGTITaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTITaxCodeField, value) != true)) {
                    this.CNGTITaxCodeField = value;
                    this.RaisePropertyChanged("CNGTITaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CNGTITaxPercent {
            get {
                return this.CNGTITaxPercentField;
            }
            set {
                if ((this.CNGTITaxPercentField.Equals(value) != true)) {
                    this.CNGTITaxPercentField = value;
                    this.RaisePropertyChanged("CNGTITaxPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CNGTITotalAmount {
            get {
                return this.CNGTITotalAmountField;
            }
            set {
                if ((this.CNGTITotalAmountField.Equals(value) != true)) {
                    this.CNGTITotalAmountField = value;
                    this.RaisePropertyChanged("CNGTITotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CNGTIUnitPrice {
            get {
                return this.CNGTIUnitPriceField;
            }
            set {
                if ((this.CNGTIUnitPriceField.Equals(value) != true)) {
                    this.CNGTIUnitPriceField = value;
                    this.RaisePropertyChanged("CNGTIUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COSPosted {
            get {
                return this.COSPostedField;
            }
            set {
                if ((this.COSPostedField.Equals(value) != true)) {
                    this.COSPostedField = value;
                    this.RaisePropertyChanged("COSPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COSPostingReqd {
            get {
                return this.COSPostingReqdField;
            }
            set {
                if ((this.COSPostingReqdField.Equals(value) != true)) {
                    this.COSPostingReqdField = value;
                    this.RaisePropertyChanged("COSPostingReqd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallCode {
            get {
                return this.CallCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CallCodeField, value) != true)) {
                    this.CallCodeField = value;
                    this.RaisePropertyChanged("CallCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallCodeCallDescription {
            get {
                return this.CallCodeCallDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CallCodeCallDescriptionField, value) != true)) {
                    this.CallCodeCallDescriptionField = value;
                    this.RaisePropertyChanged("CallCodeCallDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallLine {
            get {
                return this.CallLineField;
            }
            set {
                if ((this.CallLineField.Equals(value) != true)) {
                    this.CallLineField = value;
                    this.RaisePropertyChanged("CallLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallNum {
            get {
                return this.CallNumField;
            }
            set {
                if ((this.CallNumField.Equals(value) != true)) {
                    this.CallNumField = value;
                    this.RaisePropertyChanged("CallNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDateTime {
            get {
                return this.ChangeDateTimeField;
            }
            set {
                if ((this.ChangeDateTimeField.Equals(value) != true)) {
                    this.ChangeDateTimeField = value;
                    this.RaisePropertyChanged("ChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeDefRev {
            get {
                return this.ChargeDefRevField;
            }
            set {
                if ((this.ChargeDefRevField.Equals(value) != true)) {
                    this.ChargeDefRevField = value;
                    this.RaisePropertyChanged("ChargeDefRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeReclass {
            get {
                return this.ChargeReclassField;
            }
            set {
                if ((this.ChargeReclassField.Equals(value) != true)) {
                    this.ChargeReclassField = value;
                    this.RaisePropertyChanged("ChargeReclass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckAmortAmounts {
            get {
                return this.CheckAmortAmountsField;
            }
            set {
                if ((this.CheckAmortAmountsField.Equals(value) != true)) {
                    this.CheckAmortAmountsField = value;
                    this.RaisePropertyChanged("CheckAmortAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Commissionable {
            get {
                return this.CommissionableField;
            }
            set {
                if ((this.CommissionableField.Equals(value) != true)) {
                    this.CommissionableField = value;
                    this.RaisePropertyChanged("Commissionable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidateLines {
            get {
                return this.ConsolidateLinesField;
            }
            set {
                if ((this.ConsolidateLinesField.Equals(value) != true)) {
                    this.ConsolidateLinesField = value;
                    this.RaisePropertyChanged("ConsolidateLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCodeContractDescription {
            get {
                return this.ContractCodeContractDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeContractDescriptionField, value) != true)) {
                    this.ContractCodeContractDescriptionField = value;
                    this.RaisePropertyChanged("ContractCodeContractDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractNum {
            get {
                return this.ContractNumField;
            }
            set {
                if ((this.ContractNumField.Equals(value) != true)) {
                    this.ContractNumField = value;
                    this.RaisePropertyChanged("ContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContractNumSuspended {
            get {
                return this.ContractNumSuspendedField;
            }
            set {
                if ((this.ContractNumSuspendedField.Equals(value) != true)) {
                    this.ContractNumSuspendedField = value;
                    this.RaisePropertyChanged("ContractNumSuspended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContractSuspended {
            get {
                return this.ContractSuspendedField;
            }
            set {
                if ((this.ContractSuspendedField.Equals(value) != true)) {
                    this.ContractSuspendedField = value;
                    this.RaisePropertyChanged("ContractSuspended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CorrectionDtl {
            get {
                return this.CorrectionDtlField;
            }
            set {
                if ((this.CorrectionDtlField.Equals(value) != true)) {
                    this.CorrectionDtlField = value;
                    this.RaisePropertyChanged("CorrectionDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCntCorpName {
            get {
                return this.CustCntCorpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCntCorpNameField, value) != true)) {
                    this.CustCntCorpNameField = value;
                    this.RaisePropertyChanged("CustCntCorpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCntFaxNum {
            get {
                return this.CustCntFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCntFaxNumField, value) != true)) {
                    this.CustCntFaxNumField = value;
                    this.RaisePropertyChanged("CustCntFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCntFirstName {
            get {
                return this.CustCntFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCntFirstNameField, value) != true)) {
                    this.CustCntFirstNameField = value;
                    this.RaisePropertyChanged("CustCntFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCntLastName {
            get {
                return this.CustCntLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCntLastNameField, value) != true)) {
                    this.CustCntLastNameField = value;
                    this.RaisePropertyChanged("CustCntLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCntMiddleName {
            get {
                return this.CustCntMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCntMiddleNameField, value) != true)) {
                    this.CustCntMiddleNameField = value;
                    this.RaisePropertyChanged("CustCntMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCntName {
            get {
                return this.CustCntNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCntNameField, value) != true)) {
                    this.CustCntNameField = value;
                    this.RaisePropertyChanged("CustCntName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCntPhoneNum {
            get {
                return this.CustCntPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCntPhoneNumField, value) != true)) {
                    this.CustCntPhoneNumField = value;
                    this.RaisePropertyChanged("CustCntPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCostCenter {
            get {
                return this.CustCostCenterField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCostCenterField, value) != true)) {
                    this.CustCostCenterField = value;
                    this.RaisePropertyChanged("CustCostCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustName {
            get {
                return this.CustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNameField, value) != true)) {
                    this.CustNameField = value;
                    this.RaisePropertyChanged("CustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustNumAllowShipTo3 {
            get {
                return this.CustNumAllowShipTo3Field;
            }
            set {
                if ((this.CustNumAllowShipTo3Field.Equals(value) != true)) {
                    this.CustNumAllowShipTo3Field = value;
                    this.RaisePropertyChanged("CustNumAllowShipTo3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEDenomination {
            get {
                return this.DEDenominationField;
            }
            set {
                if ((object.ReferenceEquals(this.DEDenominationField, value) != true)) {
                    this.DEDenominationField = value;
                    this.RaisePropertyChanged("DEDenomination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEInternationalSecuritiesID {
            get {
                return this.DEInternationalSecuritiesIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DEInternationalSecuritiesIDField, value) != true)) {
                    this.DEInternationalSecuritiesIDField = value;
                    this.RaisePropertyChanged("DEInternationalSecuritiesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DEIsInvestment {
            get {
                return this.DEIsInvestmentField;
            }
            set {
                if ((this.DEIsInvestmentField.Equals(value) != true)) {
                    this.DEIsInvestmentField = value;
                    this.RaisePropertyChanged("DEIsInvestment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DEIsSecurityFinancialDerivative {
            get {
                return this.DEIsSecurityFinancialDerivativeField;
            }
            set {
                if ((this.DEIsSecurityFinancialDerivativeField.Equals(value) != true)) {
                    this.DEIsSecurityFinancialDerivativeField = value;
                    this.RaisePropertyChanged("DEIsSecurityFinancialDerivative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DEIsServices {
            get {
                return this.DEIsServicesField;
            }
            set {
                if ((this.DEIsServicesField.Equals(value) != true)) {
                    this.DEIsServicesField = value;
                    this.RaisePropertyChanged("DEIsServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPayStatCode {
            get {
                return this.DEPayStatCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPayStatCodeField, value) != true)) {
                    this.DEPayStatCodeField = value;
                    this.RaisePropertyChanged("DEPayStatCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DefRevEndDate {
            get {
                return this.DefRevEndDateField;
            }
            set {
                if ((this.DefRevEndDateField.Equals(value) != true)) {
                    this.DefRevEndDateField = value;
                    this.RaisePropertyChanged("DefRevEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefRevPosted {
            get {
                return this.DefRevPostedField;
            }
            set {
                if ((this.DefRevPostedField.Equals(value) != true)) {
                    this.DefRevPostedField = value;
                    this.RaisePropertyChanged("DefRevPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DefRevStart {
            get {
                return this.DefRevStartField;
            }
            set {
                if ((this.DefRevStartField.Equals(value) != true)) {
                    this.DefRevStartField = value;
                    this.RaisePropertyChanged("DefRevStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeferredOnly {
            get {
                return this.DeferredOnlyField;
            }
            set {
                if ((this.DeferredOnlyField.Equals(value) != true)) {
                    this.DeferredOnlyField = value;
                    this.RaisePropertyChanged("DeferredOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeferredPercent {
            get {
                return this.DeferredPercentField;
            }
            set {
                if ((this.DeferredPercentField.Equals(value) != true)) {
                    this.DeferredPercentField = value;
                    this.RaisePropertyChanged("DeferredPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeferredRev {
            get {
                return this.DeferredRevField;
            }
            set {
                if ((this.DeferredRevField.Equals(value) != true)) {
                    this.DeferredRevField = value;
                    this.RaisePropertyChanged("DeferredRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeferredRevAmt {
            get {
                return this.DeferredRevAmtField;
            }
            set {
                if ((this.DeferredRevAmtField.Equals(value) != true)) {
                    this.DeferredRevAmtField = value;
                    this.RaisePropertyChanged("DeferredRevAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteRASchedule {
            get {
                return this.DeleteRAScheduleField;
            }
            set {
                if ((this.DeleteRAScheduleField.Equals(value) != true)) {
                    this.DeleteRAScheduleField = value;
                    this.RaisePropertyChanged("DeleteRASchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountPercent {
            get {
                return this.DiscountPercentField;
            }
            set {
                if ((this.DiscountPercentField.Equals(value) != true)) {
                    this.DiscountPercentField = value;
                    this.RaisePropertyChanged("DiscountPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispGLAcct {
            get {
                return this.DispGLAcctField;
            }
            set {
                if ((object.ReferenceEquals(this.DispGLAcctField, value) != true)) {
                    this.DispGLAcctField = value;
                    this.RaisePropertyChanged("DispGLAcct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispPONum {
            get {
                return this.DispPONumField;
            }
            set {
                if ((object.ReferenceEquals(this.DispPONumField, value) != true)) {
                    this.DispPONumField = value;
                    this.RaisePropertyChanged("DispPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispShipToAddr {
            get {
                return this.DispShipToAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.DispShipToAddrField, value) != true)) {
                    this.DispShipToAddrField = value;
                    this.RaisePropertyChanged("DispShipToAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisposalNum {
            get {
                return this.DisposalNumField;
            }
            set {
                if ((this.DisposalNumField.Equals(value) != true)) {
                    this.DisposalNumField = value;
                    this.RaisePropertyChanged("DisposalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAdvanceBillCredit {
            get {
                return this.DocAdvanceBillCreditField;
            }
            set {
                if ((this.DocAdvanceBillCreditField.Equals(value) != true)) {
                    this.DocAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("DocAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDeferredRevAmt {
            get {
                return this.DocDeferredRevAmtField;
            }
            set {
                if ((this.DocDeferredRevAmtField.Equals(value) != true)) {
                    this.DocDeferredRevAmtField = value;
                    this.RaisePropertyChanged("DocDeferredRevAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDiscount {
            get {
                return this.DocDiscountField;
            }
            set {
                if ((this.DocDiscountField.Equals(value) != true)) {
                    this.DocDiscountField = value;
                    this.RaisePropertyChanged("DocDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspUnitPrice {
            get {
                return this.DocDspUnitPriceField;
            }
            set {
                if ((this.DocDspUnitPriceField.Equals(value) != true)) {
                    this.DocDspUnitPriceField = value;
                    this.RaisePropertyChanged("DocDspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspWithholdAmt {
            get {
                return this.DocDspWithholdAmtField;
            }
            set {
                if ((this.DocDspWithholdAmtField.Equals(value) != true)) {
                    this.DocDspWithholdAmtField = value;
                    this.RaisePropertyChanged("DocDspWithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocExtPrice {
            get {
                return this.DocExtPriceField;
            }
            set {
                if ((this.DocExtPriceField.Equals(value) != true)) {
                    this.DocExtPriceField = value;
                    this.RaisePropertyChanged("DocExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInAdvanceBillCredit {
            get {
                return this.DocInAdvanceBillCreditField;
            }
            set {
                if ((this.DocInAdvanceBillCreditField.Equals(value) != true)) {
                    this.DocInAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("DocInAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInDiscount {
            get {
                return this.DocInDiscountField;
            }
            set {
                if ((this.DocInDiscountField.Equals(value) != true)) {
                    this.DocInDiscountField = value;
                    this.RaisePropertyChanged("DocInDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInExtPrice {
            get {
                return this.DocInExtPriceField;
            }
            set {
                if ((this.DocInExtPriceField.Equals(value) != true)) {
                    this.DocInExtPriceField = value;
                    this.RaisePropertyChanged("DocInExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInListPrice {
            get {
                return this.DocInListPriceField;
            }
            set {
                if ((this.DocInListPriceField.Equals(value) != true)) {
                    this.DocInListPriceField = value;
                    this.RaisePropertyChanged("DocInListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInOrdBasedPrice {
            get {
                return this.DocInOrdBasedPriceField;
            }
            set {
                if ((this.DocInOrdBasedPriceField.Equals(value) != true)) {
                    this.DocInOrdBasedPriceField = value;
                    this.RaisePropertyChanged("DocInOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInTotalMiscChrg {
            get {
                return this.DocInTotalMiscChrgField;
            }
            set {
                if ((this.DocInTotalMiscChrgField.Equals(value) != true)) {
                    this.DocInTotalMiscChrgField = value;
                    this.RaisePropertyChanged("DocInTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInUnitPrice {
            get {
                return this.DocInUnitPriceField;
            }
            set {
                if ((this.DocInUnitPriceField.Equals(value) != true)) {
                    this.DocInUnitPriceField = value;
                    this.RaisePropertyChanged("DocInUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocLessDiscount {
            get {
                return this.DocLessDiscountField;
            }
            set {
                if ((this.DocLessDiscountField.Equals(value) != true)) {
                    this.DocLessDiscountField = value;
                    this.RaisePropertyChanged("DocLessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocLineTax {
            get {
                return this.DocLineTaxField;
            }
            set {
                if ((this.DocLineTaxField.Equals(value) != true)) {
                    this.DocLineTaxField = value;
                    this.RaisePropertyChanged("DocLineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocLineTotal {
            get {
                return this.DocLineTotalField;
            }
            set {
                if ((this.DocLineTotalField.Equals(value) != true)) {
                    this.DocLineTotalField = value;
                    this.RaisePropertyChanged("DocLineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocListPrice {
            get {
                return this.DocListPriceField;
            }
            set {
                if ((this.DocListPriceField.Equals(value) != true)) {
                    this.DocListPriceField = value;
                    this.RaisePropertyChanged("DocListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMXUnitPrice {
            get {
                return this.DocMXUnitPriceField;
            }
            set {
                if ((this.DocMXUnitPriceField.Equals(value) != true)) {
                    this.DocMXUnitPriceField = value;
                    this.RaisePropertyChanged("DocMXUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocOrdBasedPrice {
            get {
                return this.DocOrdBasedPriceField;
            }
            set {
                if ((this.DocOrdBasedPriceField.Equals(value) != true)) {
                    this.DocOrdBasedPriceField = value;
                    this.RaisePropertyChanged("DocOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPEDetAmt {
            get {
                return this.DocPEDetAmtField;
            }
            set {
                if ((this.DocPEDetAmtField.Equals(value) != true)) {
                    this.DocPEDetAmtField = value;
                    this.RaisePropertyChanged("DocPEDetAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalMiscChrg {
            get {
                return this.DocTotalMiscChrgField;
            }
            set {
                if ((this.DocTotalMiscChrgField.Equals(value) != true)) {
                    this.DocTotalMiscChrgField = value;
                    this.RaisePropertyChanged("DocTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnitPrice {
            get {
                return this.DocUnitPriceField;
            }
            set {
                if ((this.DocUnitPriceField.Equals(value) != true)) {
                    this.DocUnitPriceField = value;
                    this.RaisePropertyChanged("DocUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DockingStation {
            get {
                return this.DockingStationField;
            }
            set {
                if ((object.ReferenceEquals(this.DockingStationField, value) != true)) {
                    this.DockingStationField = value;
                    this.RaisePropertyChanged("DockingStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DropShipPONum {
            get {
                return this.DropShipPONumField;
            }
            set {
                if ((this.DropShipPONumField.Equals(value) != true)) {
                    this.DropShipPONumField = value;
                    this.RaisePropertyChanged("DropShipPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DropShipPackLine {
            get {
                return this.DropShipPackLineField;
            }
            set {
                if ((this.DropShipPackLineField.Equals(value) != true)) {
                    this.DropShipPackLineField = value;
                    this.RaisePropertyChanged("DropShipPackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DropShipPackSlip {
            get {
                return this.DropShipPackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.DropShipPackSlipField, value) != true)) {
                    this.DropShipPackSlipField = value;
                    this.RaisePropertyChanged("DropShipPackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShipment {
            get {
                return this.DropShipmentField;
            }
            set {
                if ((this.DropShipmentField.Equals(value) != true)) {
                    this.DropShipmentField = value;
                    this.RaisePropertyChanged("DropShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspAdvanceBillCredit {
            get {
                return this.DspAdvanceBillCreditField;
            }
            set {
                if ((this.DspAdvanceBillCreditField.Equals(value) != true)) {
                    this.DspAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("DspAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDiscount {
            get {
                return this.DspDiscountField;
            }
            set {
                if ((this.DspDiscountField.Equals(value) != true)) {
                    this.DspDiscountField = value;
                    this.RaisePropertyChanged("DspDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocAdvanceBillCredit {
            get {
                return this.DspDocAdvanceBillCreditField;
            }
            set {
                if ((this.DspDocAdvanceBillCreditField.Equals(value) != true)) {
                    this.DspDocAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("DspDocAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocDiscount {
            get {
                return this.DspDocDiscountField;
            }
            set {
                if ((this.DspDocDiscountField.Equals(value) != true)) {
                    this.DspDocDiscountField = value;
                    this.RaisePropertyChanged("DspDocDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocExtPrice {
            get {
                return this.DspDocExtPriceField;
            }
            set {
                if ((this.DspDocExtPriceField.Equals(value) != true)) {
                    this.DspDocExtPriceField = value;
                    this.RaisePropertyChanged("DspDocExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocLessDiscount {
            get {
                return this.DspDocLessDiscountField;
            }
            set {
                if ((this.DspDocLessDiscountField.Equals(value) != true)) {
                    this.DspDocLessDiscountField = value;
                    this.RaisePropertyChanged("DspDocLessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocLineTax {
            get {
                return this.DspDocLineTaxField;
            }
            set {
                if ((this.DspDocLineTaxField.Equals(value) != true)) {
                    this.DspDocLineTaxField = value;
                    this.RaisePropertyChanged("DspDocLineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocLineTotal {
            get {
                return this.DspDocLineTotalField;
            }
            set {
                if ((this.DspDocLineTotalField.Equals(value) != true)) {
                    this.DspDocLineTotalField = value;
                    this.RaisePropertyChanged("DspDocLineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocTotalMiscChrg {
            get {
                return this.DspDocTotalMiscChrgField;
            }
            set {
                if ((this.DspDocTotalMiscChrgField.Equals(value) != true)) {
                    this.DspDocTotalMiscChrgField = value;
                    this.RaisePropertyChanged("DspDocTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspExtPrice {
            get {
                return this.DspExtPriceField;
            }
            set {
                if ((this.DspExtPriceField.Equals(value) != true)) {
                    this.DspExtPriceField = value;
                    this.RaisePropertyChanged("DspExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DspInvoiceRef {
            get {
                return this.DspInvoiceRefField;
            }
            set {
                if ((this.DspInvoiceRefField.Equals(value) != true)) {
                    this.DspInvoiceRefField = value;
                    this.RaisePropertyChanged("DspInvoiceRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspLessDiscount {
            get {
                return this.DspLessDiscountField;
            }
            set {
                if ((this.DspLessDiscountField.Equals(value) != true)) {
                    this.DspLessDiscountField = value;
                    this.RaisePropertyChanged("DspLessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspLineTax {
            get {
                return this.DspLineTaxField;
            }
            set {
                if ((this.DspLineTaxField.Equals(value) != true)) {
                    this.DspLineTaxField = value;
                    this.RaisePropertyChanged("DspLineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspLineTotal {
            get {
                return this.DspLineTotalField;
            }
            set {
                if ((this.DspLineTotalField.Equals(value) != true)) {
                    this.DspLineTotalField = value;
                    this.RaisePropertyChanged("DspLineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspOurShipQty {
            get {
                return this.DspOurShipQtyField;
            }
            set {
                if ((this.DspOurShipQtyField.Equals(value) != true)) {
                    this.DspOurShipQtyField = value;
                    this.RaisePropertyChanged("DspOurShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspSellingShipQty {
            get {
                return this.DspSellingShipQtyField;
            }
            set {
                if ((this.DspSellingShipQtyField.Equals(value) != true)) {
                    this.DspSellingShipQtyField = value;
                    this.RaisePropertyChanged("DspSellingShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspTaxExempt {
            get {
                return this.DspTaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.DspTaxExemptField, value) != true)) {
                    this.DspTaxExemptField = value;
                    this.RaisePropertyChanged("DspTaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspTotalMiscChrg {
            get {
                return this.DspTotalMiscChrgField;
            }
            set {
                if ((this.DspTotalMiscChrgField.Equals(value) != true)) {
                    this.DspTotalMiscChrgField = value;
                    this.RaisePropertyChanged("DspTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspUnitPrice {
            get {
                return this.DspUnitPriceField;
            }
            set {
                if ((this.DspUnitPriceField.Equals(value) != true)) {
                    this.DspUnitPriceField = value;
                    this.RaisePropertyChanged("DspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspWithholdAmt {
            get {
                return this.DspWithholdAmtField;
            }
            set {
                if ((this.DspWithholdAmtField.Equals(value) != true)) {
                    this.DspWithholdAmtField = value;
                    this.RaisePropertyChanged("DspWithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableDspWithholdAmt {
            get {
                return this.EnableDspWithholdAmtField;
            }
            set {
                if ((this.EnableDspWithholdAmtField.Equals(value) != true)) {
                    this.EnableDspWithholdAmtField = value;
                    this.RaisePropertyChanged("EnableDspWithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableRMADelete {
            get {
                return this.EnableRMADeleteField;
            }
            set {
                if ((this.EnableRMADeleteField.Equals(value) != true)) {
                    this.EnableRMADeleteField = value;
                    this.RaisePropertyChanged("EnableRMADelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableRMAUpdate {
            get {
                return this.EnableRMAUpdateField;
            }
            set {
                if ((this.EnableRMAUpdateField.Equals(value) != true)) {
                    this.EnableRMAUpdateField = value;
                    this.RaisePropertyChanged("EnableRMAUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityUseCode {
            get {
                return this.EntityUseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityUseCodeField, value) != true)) {
                    this.EntityUseCodeField = value;
                    this.RaisePropertyChanged("EntityUseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtPrice {
            get {
                return this.ExtPriceField;
            }
            set {
                if ((this.ExtPriceField.Equals(value) != true)) {
                    this.ExtPriceField = value;
                    this.RaisePropertyChanged("ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinChargeCode {
            get {
                return this.FinChargeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FinChargeCodeField, value) != true)) {
                    this.FinChargeCodeField = value;
                    this.RaisePropertyChanged("FinChargeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalCalendarID {
            get {
                return this.FiscalCalendarIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalCalendarIDField, value) != true)) {
                    this.FiscalCalendarIDField = value;
                    this.RaisePropertyChanged("FiscalCalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalPeriod {
            get {
                return this.FiscalPeriodField;
            }
            set {
                if ((this.FiscalPeriodField.Equals(value) != true)) {
                    this.FiscalPeriodField = value;
                    this.RaisePropertyChanged("FiscalPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalYear {
            get {
                return this.FiscalYearField;
            }
            set {
                if ((this.FiscalYearField.Equals(value) != true)) {
                    this.FiscalYearField = value;
                    this.RaisePropertyChanged("FiscalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalYearSuffix {
            get {
                return this.FiscalYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalYearSuffixField, value) != true)) {
                    this.FiscalYearSuffixField = value;
                    this.RaisePropertyChanged("FiscalYearSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GLTranAmt {
            get {
                return this.GLTranAmtField;
            }
            set {
                if ((this.GLTranAmtField.Equals(value) != true)) {
                    this.GLTranAmtField = value;
                    this.RaisePropertyChanged("GLTranAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GLTranDate {
            get {
                return this.GLTranDateField;
            }
            set {
                if ((this.GLTranDateField.Equals(value) != true)) {
                    this.GLTranDateField = value;
                    this.RaisePropertyChanged("GLTranDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetDfltTaxIds {
            get {
                return this.GetDfltTaxIdsField;
            }
            set {
                if ((this.GetDfltTaxIdsField.Equals(value) != true)) {
                    this.GetDfltTaxIdsField = value;
                    this.RaisePropertyChanged("GetDfltTaxIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAdvanceBillCredit {
            get {
                return this.InAdvanceBillCreditField;
            }
            set {
                if ((this.InAdvanceBillCreditField.Equals(value) != true)) {
                    this.InAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("InAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InDiscount {
            get {
                return this.InDiscountField;
            }
            set {
                if ((this.InDiscountField.Equals(value) != true)) {
                    this.InDiscountField = value;
                    this.RaisePropertyChanged("InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InExtPrice {
            get {
                return this.InExtPriceField;
            }
            set {
                if ((this.InExtPriceField.Equals(value) != true)) {
                    this.InExtPriceField = value;
                    this.RaisePropertyChanged("InExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InListPrice {
            get {
                return this.InListPriceField;
            }
            set {
                if ((this.InListPriceField.Equals(value) != true)) {
                    this.InListPriceField = value;
                    this.RaisePropertyChanged("InListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InOrdBasedPrice {
            get {
                return this.InOrdBasedPriceField;
            }
            set {
                if ((this.InOrdBasedPriceField.Equals(value) != true)) {
                    this.InOrdBasedPriceField = value;
                    this.RaisePropertyChanged("InOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InTotalMiscChrg {
            get {
                return this.InTotalMiscChrgField;
            }
            set {
                if ((this.InTotalMiscChrgField.Equals(value) != true)) {
                    this.InTotalMiscChrgField = value;
                    this.RaisePropertyChanged("InTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InUnitPrice {
            get {
                return this.InUnitPriceField;
            }
            set {
                if ((this.InUnitPriceField.Equals(value) != true)) {
                    this.InUnitPriceField = value;
                    this.RaisePropertyChanged("InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomeTaxCode {
            get {
                return this.IncomeTaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomeTaxCodeField, value) != true)) {
                    this.IncomeTaxCodeField = value;
                    this.RaisePropertyChanged("IncomeTaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomeTaxDescription {
            get {
                return this.IncomeTaxDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomeTaxDescriptionField, value) != true)) {
                    this.IncomeTaxDescriptionField = value;
                    this.RaisePropertyChanged("IncomeTaxDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvLegalNum {
            get {
                return this.InvLegalNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InvLegalNumField, value) != true)) {
                    this.InvLegalNumField = value;
                    this.RaisePropertyChanged("InvLegalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceComment {
            get {
                return this.InvoiceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCommentField, value) != true)) {
                    this.InvoiceCommentField = value;
                    this.RaisePropertyChanged("InvoiceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLineRef {
            get {
                return this.InvoiceLineRefField;
            }
            set {
                if ((this.InvoiceLineRefField.Equals(value) != true)) {
                    this.InvoiceLineRefField = value;
                    this.RaisePropertyChanged("InvoiceLineRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumCardMemberName {
            get {
                return this.InvoiceNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumCardMemberNameField, value) != true)) {
                    this.InvoiceNumCardMemberNameField = value;
                    this.RaisePropertyChanged("InvoiceNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumTermsCode {
            get {
                return this.InvoiceNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumTermsCodeField, value) != true)) {
                    this.InvoiceNumTermsCodeField = value;
                    this.RaisePropertyChanged("InvoiceNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceRef {
            get {
                return this.InvoiceRefField;
            }
            set {
                if ((this.InvoiceRefField.Equals(value) != true)) {
                    this.InvoiceRefField = value;
                    this.RaisePropertyChanged("InvoiceRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceType {
            get {
                return this.InvoiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeField, value) != true)) {
                    this.InvoiceTypeField = value;
                    this.RaisePropertyChanged("InvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCommisBtnSensitive {
            get {
                return this.IsCommisBtnSensitiveField;
            }
            set {
                if ((this.IsCommisBtnSensitiveField.Equals(value) != true)) {
                    this.IsCommisBtnSensitiveField = value;
                    this.RaisePropertyChanged("IsCommisBtnSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIntrastatSensitive {
            get {
                return this.IsIntrastatSensitiveField;
            }
            set {
                if ((this.IsIntrastatSensitiveField.Equals(value) != true)) {
                    this.IsIntrastatSensitiveField = value;
                    this.RaisePropertyChanged("IsIntrastatSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTaxBtnSensitive {
            get {
                return this.IsTaxBtnSensitiveField;
            }
            set {
                if ((this.IsTaxBtnSensitiveField.Equals(value) != true)) {
                    this.IsTaxBtnSensitiveField = value;
                    this.RaisePropertyChanged("IsTaxBtnSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCBurUnitCost {
            get {
                return this.JCBurUnitCostField;
            }
            set {
                if ((this.JCBurUnitCostField.Equals(value) != true)) {
                    this.JCBurUnitCostField = value;
                    this.RaisePropertyChanged("JCBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCLbrUnitCost {
            get {
                return this.JCLbrUnitCostField;
            }
            set {
                if ((this.JCLbrUnitCostField.Equals(value) != true)) {
                    this.JCLbrUnitCostField = value;
                    this.RaisePropertyChanged("JCLbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCMtlBurUnitCost {
            get {
                return this.JCMtlBurUnitCostField;
            }
            set {
                if ((this.JCMtlBurUnitCostField.Equals(value) != true)) {
                    this.JCMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("JCMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCMtlUnitCost {
            get {
                return this.JCMtlUnitCostField;
            }
            set {
                if ((this.JCMtlUnitCostField.Equals(value) != true)) {
                    this.JCMtlUnitCostField = value;
                    this.RaisePropertyChanged("JCMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCSubUnitCost {
            get {
                return this.JCSubUnitCostField;
            }
            set {
                if ((this.JCSubUnitCostField.Equals(value) != true)) {
                    this.JCSubUnitCostField = value;
                    this.RaisePropertyChanged("JCSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalCode {
            get {
                return this.JournalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalCodeField, value) != true)) {
                    this.JournalCodeField = value;
                    this.RaisePropertyChanged("JournalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalCodeJrnlDescription {
            get {
                return this.JournalCodeJrnlDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalCodeJrnlDescriptionField, value) != true)) {
                    this.JournalCodeJrnlDescriptionField = value;
                    this.RaisePropertyChanged("JournalCodeJrnlDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JournalNum {
            get {
                return this.JournalNumField;
            }
            set {
                if ((this.JournalNumField.Equals(value) != true)) {
                    this.JournalNumField = value;
                    this.RaisePropertyChanged("JournalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LbrUnitCost {
            get {
                return this.LbrUnitCostField;
            }
            set {
                if ((this.LbrUnitCostField.Equals(value) != true)) {
                    this.LbrUnitCostField = value;
                    this.RaisePropertyChanged("LbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LessDiscount {
            get {
                return this.LessDiscountField;
            }
            set {
                if ((this.LessDiscountField.Equals(value) != true)) {
                    this.LessDiscountField = value;
                    this.RaisePropertyChanged("LessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LineTax {
            get {
                return this.LineTaxField;
            }
            set {
                if ((this.LineTaxField.Equals(value) != true)) {
                    this.LineTaxField = value;
                    this.RaisePropertyChanged("LineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LineTotal {
            get {
                return this.LineTotalField;
            }
            set {
                if ((this.LineTotalField.Equals(value) != true)) {
                    this.LineTotalField = value;
                    this.RaisePropertyChanged("LineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineType {
            get {
                return this.LineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LineTypeField, value) != true)) {
                    this.LineTypeField = value;
                    this.RaisePropertyChanged("LineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkedCurrencyCode {
            get {
                return this.LinkedCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedCurrencyCodeField, value) != true)) {
                    this.LinkedCurrencyCodeField = value;
                    this.RaisePropertyChanged("LinkedCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkedCurrencySymbol {
            get {
                return this.LinkedCurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedCurrencySymbolField, value) != true)) {
                    this.LinkedCurrencySymbolField = value;
                    this.RaisePropertyChanged("LinkedCurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LinkedInvcUnitPrice {
            get {
                return this.LinkedInvcUnitPriceField;
            }
            set {
                if ((this.LinkedInvcUnitPriceField.Equals(value) != true)) {
                    this.LinkedInvcUnitPriceField = value;
                    this.RaisePropertyChanged("LinkedInvcUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ListPrice {
            get {
                return this.ListPriceField;
            }
            set {
                if ((this.ListPriceField.Equals(value) != true)) {
                    this.ListPriceField = value;
                    this.RaisePropertyChanged("ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXCustomsDuty {
            get {
                return this.MXCustomsDutyField;
            }
            set {
                if ((object.ReferenceEquals(this.MXCustomsDutyField, value) != true)) {
                    this.MXCustomsDutyField = value;
                    this.RaisePropertyChanged("MXCustomsDuty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MXSellingShipQty {
            get {
                return this.MXSellingShipQtyField;
            }
            set {
                if ((this.MXSellingShipQtyField.Equals(value) != true)) {
                    this.MXSellingShipQtyField = value;
                    this.RaisePropertyChanged("MXSellingShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MXUnitPrice {
            get {
                return this.MXUnitPriceField;
            }
            set {
                if ((this.MXUnitPriceField.Equals(value) != true)) {
                    this.MXUnitPriceField = value;
                    this.RaisePropertyChanged("MXUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MYIndustryCode {
            get {
                return this.MYIndustryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MYIndustryCodeField, value) != true)) {
                    this.MYIndustryCodeField = value;
                    this.RaisePropertyChanged("MYIndustryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MilestoneID {
            get {
                return this.MilestoneIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MilestoneIDField, value) != true)) {
                    this.MilestoneIDField = value;
                    this.RaisePropertyChanged("MilestoneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MilestoneIDDescription {
            get {
                return this.MilestoneIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MilestoneIDDescriptionField, value) != true)) {
                    this.MilestoneIDDescriptionField = value;
                    this.RaisePropertyChanged("MilestoneIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlBurUnitCost {
            get {
                return this.MtlBurUnitCostField;
            }
            set {
                if ((this.MtlBurUnitCostField.Equals(value) != true)) {
                    this.MtlBurUnitCostField = value;
                    this.RaisePropertyChanged("MtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlUnitCost {
            get {
                return this.MtlUnitCostField;
            }
            set {
                if ((this.MtlUnitCostField.Equals(value) != true)) {
                    this.MtlUnitCostField = value;
                    this.RaisePropertyChanged("MtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress1 {
            get {
                return this.OTSAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress1Field, value) != true)) {
                    this.OTSAddress1Field = value;
                    this.RaisePropertyChanged("OTSAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress2 {
            get {
                return this.OTSAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress2Field, value) != true)) {
                    this.OTSAddress2Field = value;
                    this.RaisePropertyChanged("OTSAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress3 {
            get {
                return this.OTSAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress3Field, value) != true)) {
                    this.OTSAddress3Field = value;
                    this.RaisePropertyChanged("OTSAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCity {
            get {
                return this.OTSCityField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCityField, value) != true)) {
                    this.OTSCityField = value;
                    this.RaisePropertyChanged("OTSCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCntryDescription {
            get {
                return this.OTSCntryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCntryDescriptionField, value) != true)) {
                    this.OTSCntryDescriptionField = value;
                    this.RaisePropertyChanged("OTSCntryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSContact {
            get {
                return this.OTSContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSContactField, value) != true)) {
                    this.OTSContactField = value;
                    this.RaisePropertyChanged("OTSContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OTSCountryNum {
            get {
                return this.OTSCountryNumField;
            }
            set {
                if ((this.OTSCountryNumField.Equals(value) != true)) {
                    this.OTSCountryNumField = value;
                    this.RaisePropertyChanged("OTSCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSFaxNum {
            get {
                return this.OTSFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSFaxNumField, value) != true)) {
                    this.OTSFaxNumField = value;
                    this.RaisePropertyChanged("OTSFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSName {
            get {
                return this.OTSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSNameField, value) != true)) {
                    this.OTSNameField = value;
                    this.RaisePropertyChanged("OTSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSPhoneNum {
            get {
                return this.OTSPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSPhoneNumField, value) != true)) {
                    this.OTSPhoneNumField = value;
                    this.RaisePropertyChanged("OTSPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSResaleID {
            get {
                return this.OTSResaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSResaleIDField, value) != true)) {
                    this.OTSResaleIDField = value;
                    this.RaisePropertyChanged("OTSResaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSState {
            get {
                return this.OTSStateField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSStateField, value) != true)) {
                    this.OTSStateField = value;
                    this.RaisePropertyChanged("OTSState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSTaxRegionCode {
            get {
                return this.OTSTaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSTaxRegionCodeField, value) != true)) {
                    this.OTSTaxRegionCodeField = value;
                    this.RaisePropertyChanged("OTSTaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSZIP {
            get {
                return this.OTSZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSZIPField, value) != true)) {
                    this.OTSZIPField = value;
                    this.RaisePropertyChanged("OTSZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenInvoice {
            get {
                return this.OpenInvoiceField;
            }
            set {
                if ((this.OpenInvoiceField.Equals(value) != true)) {
                    this.OpenInvoiceField = value;
                    this.RaisePropertyChanged("OpenInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrdBasedPrice {
            get {
                return this.OrdBasedPriceField;
            }
            set {
                if ((this.OrdBasedPriceField.Equals(value) != true)) {
                    this.OrdBasedPriceField = value;
                    this.RaisePropertyChanged("OrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineLineDesc {
            get {
                return this.OrderLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineLineDescField, value) != true)) {
                    this.OrderLineLineDescField = value;
                    this.RaisePropertyChanged("OrderLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderUM {
            get {
                return this.OrderUMField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderUMField, value) != true)) {
                    this.OrderUMField = value;
                    this.RaisePropertyChanged("OrderUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrigTaxCat {
            get {
                return this.OrigTaxCatField;
            }
            set {
                if ((object.ReferenceEquals(this.OrigTaxCatField, value) != true)) {
                    this.OrigTaxCatField = value;
                    this.RaisePropertyChanged("OrigTaxCat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurOrderQty {
            get {
                return this.OurOrderQtyField;
            }
            set {
                if ((this.OurOrderQtyField.Equals(value) != true)) {
                    this.OurOrderQtyField = value;
                    this.RaisePropertyChanged("OurOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurShipQty {
            get {
                return this.OurShipQtyField;
            }
            set {
                if ((this.OurShipQtyField.Equals(value) != true)) {
                    this.OurShipQtyField = value;
                    this.RaisePropertyChanged("OurShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideReverseCharge {
            get {
                return this.OverrideReverseChargeField;
            }
            set {
                if ((this.OverrideReverseChargeField.Equals(value) != true)) {
                    this.OverrideReverseChargeField = value;
                    this.RaisePropertyChanged("OverrideReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PBInvoiceLine {
            get {
                return this.PBInvoiceLineField;
            }
            set {
                if ((this.PBInvoiceLineField.Equals(value) != true)) {
                    this.PBInvoiceLineField = value;
                    this.RaisePropertyChanged("PBInvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PBLineType {
            get {
                return this.PBLineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PBLineTypeField, value) != true)) {
                    this.PBLineTypeField = value;
                    this.RaisePropertyChanged("PBLineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PEBOEHeadNum {
            get {
                return this.PEBOEHeadNumField;
            }
            set {
                if ((this.PEBOEHeadNumField.Equals(value) != true)) {
                    this.PEBOEHeadNumField = value;
                    this.RaisePropertyChanged("PEBOEHeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PEDetAmt {
            get {
                return this.PEDetAmtField;
            }
            set {
                if ((this.PEDetAmtField.Equals(value) != true)) {
                    this.PEDetAmtField = value;
                    this.RaisePropertyChanged("PEDetAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEDspCurrencySymbol {
            get {
                return this.PEDspCurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.PEDspCurrencySymbolField, value) != true)) {
                    this.PEDspCurrencySymbolField = value;
                    this.RaisePropertyChanged("PEDspCurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineField, value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackLineLineDesc {
            get {
                return this.PackLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PackLineLineDescField, value) != true)) {
                    this.PackLineLineDescField = value;
                    this.RaisePropertyChanged("PackLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackNumName {
            get {
                return this.PackNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PackNumNameField, value) != true)) {
                    this.PackNumNameField = value;
                    this.RaisePropertyChanged("PackNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartiallyDefer {
            get {
                return this.PartiallyDeferField;
            }
            set {
                if ((this.PartiallyDeferField.Equals(value) != true)) {
                    this.PartiallyDeferField = value;
                    this.RaisePropertyChanged("PartiallyDefer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhaseID {
            get {
                return this.PhaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PhaseIDField, value) != true)) {
                    this.PhaseIDField = value;
                    this.RaisePropertyChanged("PhaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Posted {
            get {
                return this.PostedField;
            }
            set {
                if ((this.PostedField.Equals(value) != true)) {
                    this.PostedField = value;
                    this.RaisePropertyChanged("Posted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricePerCode {
            get {
                return this.PricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PricePerCodeField, value) != true)) {
                    this.PricePerCodeField = value;
                    this.RaisePropertyChanged("PricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCodeDescription {
            get {
                return this.ProdCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeDescriptionField, value) != true)) {
                    this.ProdCodeDescriptionField = value;
                    this.RaisePropertyChanged("ProdCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectIDDescription {
            get {
                return this.ProjectIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDDescriptionField, value) != true)) {
                    this.ProjectIDDescriptionField = value;
                    this.RaisePropertyChanged("ProjectIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RACode {
            get {
                return this.RACodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RACodeField, value) != true)) {
                    this.RACodeField = value;
                    this.RaisePropertyChanged("RACode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RADesc {
            get {
                return this.RADescField;
            }
            set {
                if ((object.ReferenceEquals(this.RADescField, value) != true)) {
                    this.RADescField = value;
                    this.RaisePropertyChanged("RADesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RADtlID {
            get {
                return this.RADtlIDField;
            }
            set {
                if ((this.RADtlIDField.Equals(value) != true)) {
                    this.RADtlIDField = value;
                    this.RaisePropertyChanged("RADtlID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RAID {
            get {
                return this.RAIDField;
            }
            set {
                if ((this.RAIDField.Equals(value) != true)) {
                    this.RAIDField = value;
                    this.RaisePropertyChanged("RAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RASchedExists {
            get {
                return this.RASchedExistsField;
            }
            set {
                if ((this.RASchedExistsField.Equals(value) != true)) {
                    this.RASchedExistsField = value;
                    this.RaisePropertyChanged("RASchedExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMALine {
            get {
                return this.RMALineField;
            }
            set {
                if ((this.RMALineField.Equals(value) != true)) {
                    this.RMALineField = value;
                    this.RaisePropertyChanged("RMALine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMALineLineDesc {
            get {
                return this.RMALineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RMALineLineDescField, value) != true)) {
                    this.RMALineLineDescField = value;
                    this.RaisePropertyChanged("RMALineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMANum {
            get {
                return this.RMANumField;
            }
            set {
                if ((this.RMANumField.Equals(value) != true)) {
                    this.RMANumField = value;
                    this.RaisePropertyChanged("RMANum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Reclass {
            get {
                return this.ReclassField;
            }
            set {
                if ((this.ReclassField.Equals(value) != true)) {
                    this.ReclassField = value;
                    this.RaisePropertyChanged("Reclass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReclassCodeDescription {
            get {
                return this.ReclassCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReclassCodeDescriptionField, value) != true)) {
                    this.ReclassCodeDescriptionField = value;
                    this.RaisePropertyChanged("ReclassCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReclassCodeID {
            get {
                return this.ReclassCodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReclassCodeIDField, value) != true)) {
                    this.ReclassCodeIDField = value;
                    this.RaisePropertyChanged("ReclassCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReclassComments {
            get {
                return this.ReclassCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReclassCommentsField, value) != true)) {
                    this.ReclassCommentsField = value;
                    this.RaisePropertyChanged("ReclassComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReclassReasonCode {
            get {
                return this.ReclassReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReclassReasonCodeField, value) != true)) {
                    this.ReclassReasonCodeField = value;
                    this.RaisePropertyChanged("ReclassReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReclassReasonDescription {
            get {
                return this.ReclassReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReclassReasonDescriptionField, value) != true)) {
                    this.ReclassReasonDescriptionField = value;
                    this.RaisePropertyChanged("ReclassReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Reclassified {
            get {
                return this.ReclassifiedField;
            }
            set {
                if ((this.ReclassifiedField.Equals(value) != true)) {
                    this.ReclassifiedField = value;
                    this.RaisePropertyChanged("Reclassified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RenewalNbr {
            get {
                return this.RenewalNbrField;
            }
            set {
                if ((this.RenewalNbrField.Equals(value) != true)) {
                    this.RenewalNbrField = value;
                    this.RaisePropertyChanged("RenewalNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate1 {
            get {
                return this.RepRate1Field;
            }
            set {
                if ((this.RepRate1Field.Equals(value) != true)) {
                    this.RepRate1Field = value;
                    this.RaisePropertyChanged("RepRate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate2 {
            get {
                return this.RepRate2Field;
            }
            set {
                if ((this.RepRate2Field.Equals(value) != true)) {
                    this.RepRate2Field = value;
                    this.RaisePropertyChanged("RepRate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate3 {
            get {
                return this.RepRate3Field;
            }
            set {
                if ((this.RepRate3Field.Equals(value) != true)) {
                    this.RepRate3Field = value;
                    this.RaisePropertyChanged("RepRate3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate4 {
            get {
                return this.RepRate4Field;
            }
            set {
                if ((this.RepRate4Field.Equals(value) != true)) {
                    this.RepRate4Field = value;
                    this.RaisePropertyChanged("RepRate4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate5 {
            get {
                return this.RepRate5Field;
            }
            set {
                if ((this.RepRate5Field.Equals(value) != true)) {
                    this.RepRate5Field = value;
                    this.RaisePropertyChanged("RepRate5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit1 {
            get {
                return this.RepSplit1Field;
            }
            set {
                if ((this.RepSplit1Field.Equals(value) != true)) {
                    this.RepSplit1Field = value;
                    this.RaisePropertyChanged("RepSplit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit2 {
            get {
                return this.RepSplit2Field;
            }
            set {
                if ((this.RepSplit2Field.Equals(value) != true)) {
                    this.RepSplit2Field = value;
                    this.RaisePropertyChanged("RepSplit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit3 {
            get {
                return this.RepSplit3Field;
            }
            set {
                if ((this.RepSplit3Field.Equals(value) != true)) {
                    this.RepSplit3Field = value;
                    this.RaisePropertyChanged("RepSplit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit4 {
            get {
                return this.RepSplit4Field;
            }
            set {
                if ((this.RepSplit4Field.Equals(value) != true)) {
                    this.RepSplit4Field = value;
                    this.RaisePropertyChanged("RepSplit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit5 {
            get {
                return this.RepSplit5Field;
            }
            set {
                if ((this.RepSplit5Field.Equals(value) != true)) {
                    this.RepSplit5Field = value;
                    this.RaisePropertyChanged("RepSplit5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RevChargeApplied {
            get {
                return this.RevChargeAppliedField;
            }
            set {
                if ((this.RevChargeAppliedField.Equals(value) != true)) {
                    this.RevChargeAppliedField = value;
                    this.RaisePropertyChanged("RevChargeApplied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevChargeMethod {
            get {
                return this.RevChargeMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.RevChargeMethodField, value) != true)) {
                    this.RevChargeMethodField = value;
                    this.RaisePropertyChanged("RevChargeMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AdvGainLoss {
            get {
                return this.Rpt1AdvGainLossField;
            }
            set {
                if ((this.Rpt1AdvGainLossField.Equals(value) != true)) {
                    this.Rpt1AdvGainLossField = value;
                    this.RaisePropertyChanged("Rpt1AdvGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AdvanceBillCredit {
            get {
                return this.Rpt1AdvanceBillCreditField;
            }
            set {
                if ((this.Rpt1AdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt1AdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt1AdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DeferredRevAmt {
            get {
                return this.Rpt1DeferredRevAmtField;
            }
            set {
                if ((this.Rpt1DeferredRevAmtField.Equals(value) != true)) {
                    this.Rpt1DeferredRevAmtField = value;
                    this.RaisePropertyChanged("Rpt1DeferredRevAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Discount {
            get {
                return this.Rpt1DiscountField;
            }
            set {
                if ((this.Rpt1DiscountField.Equals(value) != true)) {
                    this.Rpt1DiscountField = value;
                    this.RaisePropertyChanged("Rpt1Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspAdvanceBillCredit {
            get {
                return this.Rpt1DspAdvanceBillCreditField;
            }
            set {
                if ((this.Rpt1DspAdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt1DspAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt1DspAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspDiscount {
            get {
                return this.Rpt1DspDiscountField;
            }
            set {
                if ((this.Rpt1DspDiscountField.Equals(value) != true)) {
                    this.Rpt1DspDiscountField = value;
                    this.RaisePropertyChanged("Rpt1DspDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspExtPrice {
            get {
                return this.Rpt1DspExtPriceField;
            }
            set {
                if ((this.Rpt1DspExtPriceField.Equals(value) != true)) {
                    this.Rpt1DspExtPriceField = value;
                    this.RaisePropertyChanged("Rpt1DspExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspLessDiscount {
            get {
                return this.Rpt1DspLessDiscountField;
            }
            set {
                if ((this.Rpt1DspLessDiscountField.Equals(value) != true)) {
                    this.Rpt1DspLessDiscountField = value;
                    this.RaisePropertyChanged("Rpt1DspLessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspLineTax {
            get {
                return this.Rpt1DspLineTaxField;
            }
            set {
                if ((this.Rpt1DspLineTaxField.Equals(value) != true)) {
                    this.Rpt1DspLineTaxField = value;
                    this.RaisePropertyChanged("Rpt1DspLineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspLineTotal {
            get {
                return this.Rpt1DspLineTotalField;
            }
            set {
                if ((this.Rpt1DspLineTotalField.Equals(value) != true)) {
                    this.Rpt1DspLineTotalField = value;
                    this.RaisePropertyChanged("Rpt1DspLineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspTotalMiscChrg {
            get {
                return this.Rpt1DspTotalMiscChrgField;
            }
            set {
                if ((this.Rpt1DspTotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt1DspTotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt1DspTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspUnitPrice {
            get {
                return this.Rpt1DspUnitPriceField;
            }
            set {
                if ((this.Rpt1DspUnitPriceField.Equals(value) != true)) {
                    this.Rpt1DspUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1DspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspWithholdAmt {
            get {
                return this.Rpt1DspWithholdAmtField;
            }
            set {
                if ((this.Rpt1DspWithholdAmtField.Equals(value) != true)) {
                    this.Rpt1DspWithholdAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspWithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ExtPrice {
            get {
                return this.Rpt1ExtPriceField;
            }
            set {
                if ((this.Rpt1ExtPriceField.Equals(value) != true)) {
                    this.Rpt1ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt1ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InAdvanceBillCredit {
            get {
                return this.Rpt1InAdvanceBillCreditField;
            }
            set {
                if ((this.Rpt1InAdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt1InAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt1InAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InDiscount {
            get {
                return this.Rpt1InDiscountField;
            }
            set {
                if ((this.Rpt1InDiscountField.Equals(value) != true)) {
                    this.Rpt1InDiscountField = value;
                    this.RaisePropertyChanged("Rpt1InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InExtPrice {
            get {
                return this.Rpt1InExtPriceField;
            }
            set {
                if ((this.Rpt1InExtPriceField.Equals(value) != true)) {
                    this.Rpt1InExtPriceField = value;
                    this.RaisePropertyChanged("Rpt1InExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InListPrice {
            get {
                return this.Rpt1InListPriceField;
            }
            set {
                if ((this.Rpt1InListPriceField.Equals(value) != true)) {
                    this.Rpt1InListPriceField = value;
                    this.RaisePropertyChanged("Rpt1InListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InOrdBasedPrice {
            get {
                return this.Rpt1InOrdBasedPriceField;
            }
            set {
                if ((this.Rpt1InOrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt1InOrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt1InOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InTotalMiscChrg {
            get {
                return this.Rpt1InTotalMiscChrgField;
            }
            set {
                if ((this.Rpt1InTotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt1InTotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt1InTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InUnitPrice {
            get {
                return this.Rpt1InUnitPriceField;
            }
            set {
                if ((this.Rpt1InUnitPriceField.Equals(value) != true)) {
                    this.Rpt1InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1LineTax {
            get {
                return this.Rpt1LineTaxField;
            }
            set {
                if ((this.Rpt1LineTaxField.Equals(value) != true)) {
                    this.Rpt1LineTaxField = value;
                    this.RaisePropertyChanged("Rpt1LineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1LineTotal {
            get {
                return this.Rpt1LineTotalField;
            }
            set {
                if ((this.Rpt1LineTotalField.Equals(value) != true)) {
                    this.Rpt1LineTotalField = value;
                    this.RaisePropertyChanged("Rpt1LineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ListPrice {
            get {
                return this.Rpt1ListPriceField;
            }
            set {
                if ((this.Rpt1ListPriceField.Equals(value) != true)) {
                    this.Rpt1ListPriceField = value;
                    this.RaisePropertyChanged("Rpt1ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1MXUnitPrice {
            get {
                return this.Rpt1MXUnitPriceField;
            }
            set {
                if ((this.Rpt1MXUnitPriceField.Equals(value) != true)) {
                    this.Rpt1MXUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1MXUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1OrdBasedPrice {
            get {
                return this.Rpt1OrdBasedPriceField;
            }
            set {
                if ((this.Rpt1OrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt1OrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt1OrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1PEDetAmt {
            get {
                return this.Rpt1PEDetAmtField;
            }
            set {
                if ((this.Rpt1PEDetAmtField.Equals(value) != true)) {
                    this.Rpt1PEDetAmtField = value;
                    this.RaisePropertyChanged("Rpt1PEDetAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalMiscChrg {
            get {
                return this.Rpt1TotalMiscChrgField;
            }
            set {
                if ((this.Rpt1TotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt1TotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt1TotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1UnitPrice {
            get {
                return this.Rpt1UnitPriceField;
            }
            set {
                if ((this.Rpt1UnitPriceField.Equals(value) != true)) {
                    this.Rpt1UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AdvGainLoss {
            get {
                return this.Rpt2AdvGainLossField;
            }
            set {
                if ((this.Rpt2AdvGainLossField.Equals(value) != true)) {
                    this.Rpt2AdvGainLossField = value;
                    this.RaisePropertyChanged("Rpt2AdvGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AdvanceBillCredit {
            get {
                return this.Rpt2AdvanceBillCreditField;
            }
            set {
                if ((this.Rpt2AdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt2AdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt2AdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DeferredRevAmt {
            get {
                return this.Rpt2DeferredRevAmtField;
            }
            set {
                if ((this.Rpt2DeferredRevAmtField.Equals(value) != true)) {
                    this.Rpt2DeferredRevAmtField = value;
                    this.RaisePropertyChanged("Rpt2DeferredRevAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Discount {
            get {
                return this.Rpt2DiscountField;
            }
            set {
                if ((this.Rpt2DiscountField.Equals(value) != true)) {
                    this.Rpt2DiscountField = value;
                    this.RaisePropertyChanged("Rpt2Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspAdvanceBillCredit {
            get {
                return this.Rpt2DspAdvanceBillCreditField;
            }
            set {
                if ((this.Rpt2DspAdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt2DspAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt2DspAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspDiscount {
            get {
                return this.Rpt2DspDiscountField;
            }
            set {
                if ((this.Rpt2DspDiscountField.Equals(value) != true)) {
                    this.Rpt2DspDiscountField = value;
                    this.RaisePropertyChanged("Rpt2DspDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspExtPrice {
            get {
                return this.Rpt2DspExtPriceField;
            }
            set {
                if ((this.Rpt2DspExtPriceField.Equals(value) != true)) {
                    this.Rpt2DspExtPriceField = value;
                    this.RaisePropertyChanged("Rpt2DspExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspLessDiscount {
            get {
                return this.Rpt2DspLessDiscountField;
            }
            set {
                if ((this.Rpt2DspLessDiscountField.Equals(value) != true)) {
                    this.Rpt2DspLessDiscountField = value;
                    this.RaisePropertyChanged("Rpt2DspLessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspLineTax {
            get {
                return this.Rpt2DspLineTaxField;
            }
            set {
                if ((this.Rpt2DspLineTaxField.Equals(value) != true)) {
                    this.Rpt2DspLineTaxField = value;
                    this.RaisePropertyChanged("Rpt2DspLineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspLineTotal {
            get {
                return this.Rpt2DspLineTotalField;
            }
            set {
                if ((this.Rpt2DspLineTotalField.Equals(value) != true)) {
                    this.Rpt2DspLineTotalField = value;
                    this.RaisePropertyChanged("Rpt2DspLineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspTotalMiscChrg {
            get {
                return this.Rpt2DspTotalMiscChrgField;
            }
            set {
                if ((this.Rpt2DspTotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt2DspTotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt2DspTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspUnitPrice {
            get {
                return this.Rpt2DspUnitPriceField;
            }
            set {
                if ((this.Rpt2DspUnitPriceField.Equals(value) != true)) {
                    this.Rpt2DspUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2DspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspWithholdAmt {
            get {
                return this.Rpt2DspWithholdAmtField;
            }
            set {
                if ((this.Rpt2DspWithholdAmtField.Equals(value) != true)) {
                    this.Rpt2DspWithholdAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspWithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ExtPrice {
            get {
                return this.Rpt2ExtPriceField;
            }
            set {
                if ((this.Rpt2ExtPriceField.Equals(value) != true)) {
                    this.Rpt2ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt2ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InAdvanceBillCredit {
            get {
                return this.Rpt2InAdvanceBillCreditField;
            }
            set {
                if ((this.Rpt2InAdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt2InAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt2InAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InDiscount {
            get {
                return this.Rpt2InDiscountField;
            }
            set {
                if ((this.Rpt2InDiscountField.Equals(value) != true)) {
                    this.Rpt2InDiscountField = value;
                    this.RaisePropertyChanged("Rpt2InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InExtPrice {
            get {
                return this.Rpt2InExtPriceField;
            }
            set {
                if ((this.Rpt2InExtPriceField.Equals(value) != true)) {
                    this.Rpt2InExtPriceField = value;
                    this.RaisePropertyChanged("Rpt2InExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InListPrice {
            get {
                return this.Rpt2InListPriceField;
            }
            set {
                if ((this.Rpt2InListPriceField.Equals(value) != true)) {
                    this.Rpt2InListPriceField = value;
                    this.RaisePropertyChanged("Rpt2InListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InOrdBasedPrice {
            get {
                return this.Rpt2InOrdBasedPriceField;
            }
            set {
                if ((this.Rpt2InOrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt2InOrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt2InOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InTotalMiscChrg {
            get {
                return this.Rpt2InTotalMiscChrgField;
            }
            set {
                if ((this.Rpt2InTotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt2InTotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt2InTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InUnitPrice {
            get {
                return this.Rpt2InUnitPriceField;
            }
            set {
                if ((this.Rpt2InUnitPriceField.Equals(value) != true)) {
                    this.Rpt2InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2LineTax {
            get {
                return this.Rpt2LineTaxField;
            }
            set {
                if ((this.Rpt2LineTaxField.Equals(value) != true)) {
                    this.Rpt2LineTaxField = value;
                    this.RaisePropertyChanged("Rpt2LineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2LineTotal {
            get {
                return this.Rpt2LineTotalField;
            }
            set {
                if ((this.Rpt2LineTotalField.Equals(value) != true)) {
                    this.Rpt2LineTotalField = value;
                    this.RaisePropertyChanged("Rpt2LineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ListPrice {
            get {
                return this.Rpt2ListPriceField;
            }
            set {
                if ((this.Rpt2ListPriceField.Equals(value) != true)) {
                    this.Rpt2ListPriceField = value;
                    this.RaisePropertyChanged("Rpt2ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2MXUnitPrice {
            get {
                return this.Rpt2MXUnitPriceField;
            }
            set {
                if ((this.Rpt2MXUnitPriceField.Equals(value) != true)) {
                    this.Rpt2MXUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2MXUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2OrdBasedPrice {
            get {
                return this.Rpt2OrdBasedPriceField;
            }
            set {
                if ((this.Rpt2OrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt2OrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt2OrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2PEDetAmt {
            get {
                return this.Rpt2PEDetAmtField;
            }
            set {
                if ((this.Rpt2PEDetAmtField.Equals(value) != true)) {
                    this.Rpt2PEDetAmtField = value;
                    this.RaisePropertyChanged("Rpt2PEDetAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalMiscChrg {
            get {
                return this.Rpt2TotalMiscChrgField;
            }
            set {
                if ((this.Rpt2TotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt2TotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt2TotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2UnitPrice {
            get {
                return this.Rpt2UnitPriceField;
            }
            set {
                if ((this.Rpt2UnitPriceField.Equals(value) != true)) {
                    this.Rpt2UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AdvGainLoss {
            get {
                return this.Rpt3AdvGainLossField;
            }
            set {
                if ((this.Rpt3AdvGainLossField.Equals(value) != true)) {
                    this.Rpt3AdvGainLossField = value;
                    this.RaisePropertyChanged("Rpt3AdvGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AdvanceBillCredit {
            get {
                return this.Rpt3AdvanceBillCreditField;
            }
            set {
                if ((this.Rpt3AdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt3AdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt3AdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DeferredRevAmt {
            get {
                return this.Rpt3DeferredRevAmtField;
            }
            set {
                if ((this.Rpt3DeferredRevAmtField.Equals(value) != true)) {
                    this.Rpt3DeferredRevAmtField = value;
                    this.RaisePropertyChanged("Rpt3DeferredRevAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Discount {
            get {
                return this.Rpt3DiscountField;
            }
            set {
                if ((this.Rpt3DiscountField.Equals(value) != true)) {
                    this.Rpt3DiscountField = value;
                    this.RaisePropertyChanged("Rpt3Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspAdvanceBillCredit {
            get {
                return this.Rpt3DspAdvanceBillCreditField;
            }
            set {
                if ((this.Rpt3DspAdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt3DspAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt3DspAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspDiscount {
            get {
                return this.Rpt3DspDiscountField;
            }
            set {
                if ((this.Rpt3DspDiscountField.Equals(value) != true)) {
                    this.Rpt3DspDiscountField = value;
                    this.RaisePropertyChanged("Rpt3DspDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspExtPrice {
            get {
                return this.Rpt3DspExtPriceField;
            }
            set {
                if ((this.Rpt3DspExtPriceField.Equals(value) != true)) {
                    this.Rpt3DspExtPriceField = value;
                    this.RaisePropertyChanged("Rpt3DspExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspLessDiscount {
            get {
                return this.Rpt3DspLessDiscountField;
            }
            set {
                if ((this.Rpt3DspLessDiscountField.Equals(value) != true)) {
                    this.Rpt3DspLessDiscountField = value;
                    this.RaisePropertyChanged("Rpt3DspLessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspLineTax {
            get {
                return this.Rpt3DspLineTaxField;
            }
            set {
                if ((this.Rpt3DspLineTaxField.Equals(value) != true)) {
                    this.Rpt3DspLineTaxField = value;
                    this.RaisePropertyChanged("Rpt3DspLineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspLineTotal {
            get {
                return this.Rpt3DspLineTotalField;
            }
            set {
                if ((this.Rpt3DspLineTotalField.Equals(value) != true)) {
                    this.Rpt3DspLineTotalField = value;
                    this.RaisePropertyChanged("Rpt3DspLineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspTotalMiscChrg {
            get {
                return this.Rpt3DspTotalMiscChrgField;
            }
            set {
                if ((this.Rpt3DspTotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt3DspTotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt3DspTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspUnitPrice {
            get {
                return this.Rpt3DspUnitPriceField;
            }
            set {
                if ((this.Rpt3DspUnitPriceField.Equals(value) != true)) {
                    this.Rpt3DspUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3DspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspWithholdAmt {
            get {
                return this.Rpt3DspWithholdAmtField;
            }
            set {
                if ((this.Rpt3DspWithholdAmtField.Equals(value) != true)) {
                    this.Rpt3DspWithholdAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspWithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ExtPrice {
            get {
                return this.Rpt3ExtPriceField;
            }
            set {
                if ((this.Rpt3ExtPriceField.Equals(value) != true)) {
                    this.Rpt3ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt3ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InAdvanceBillCredit {
            get {
                return this.Rpt3InAdvanceBillCreditField;
            }
            set {
                if ((this.Rpt3InAdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt3InAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt3InAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InDiscount {
            get {
                return this.Rpt3InDiscountField;
            }
            set {
                if ((this.Rpt3InDiscountField.Equals(value) != true)) {
                    this.Rpt3InDiscountField = value;
                    this.RaisePropertyChanged("Rpt3InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InExtPrice {
            get {
                return this.Rpt3InExtPriceField;
            }
            set {
                if ((this.Rpt3InExtPriceField.Equals(value) != true)) {
                    this.Rpt3InExtPriceField = value;
                    this.RaisePropertyChanged("Rpt3InExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InListPrice {
            get {
                return this.Rpt3InListPriceField;
            }
            set {
                if ((this.Rpt3InListPriceField.Equals(value) != true)) {
                    this.Rpt3InListPriceField = value;
                    this.RaisePropertyChanged("Rpt3InListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InOrdBasedPrice {
            get {
                return this.Rpt3InOrdBasedPriceField;
            }
            set {
                if ((this.Rpt3InOrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt3InOrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt3InOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InTotalMiscChrg {
            get {
                return this.Rpt3InTotalMiscChrgField;
            }
            set {
                if ((this.Rpt3InTotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt3InTotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt3InTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InUnitPrice {
            get {
                return this.Rpt3InUnitPriceField;
            }
            set {
                if ((this.Rpt3InUnitPriceField.Equals(value) != true)) {
                    this.Rpt3InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3LineTax {
            get {
                return this.Rpt3LineTaxField;
            }
            set {
                if ((this.Rpt3LineTaxField.Equals(value) != true)) {
                    this.Rpt3LineTaxField = value;
                    this.RaisePropertyChanged("Rpt3LineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3LineTotal {
            get {
                return this.Rpt3LineTotalField;
            }
            set {
                if ((this.Rpt3LineTotalField.Equals(value) != true)) {
                    this.Rpt3LineTotalField = value;
                    this.RaisePropertyChanged("Rpt3LineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ListPrice {
            get {
                return this.Rpt3ListPriceField;
            }
            set {
                if ((this.Rpt3ListPriceField.Equals(value) != true)) {
                    this.Rpt3ListPriceField = value;
                    this.RaisePropertyChanged("Rpt3ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3MXUnitPrice {
            get {
                return this.Rpt3MXUnitPriceField;
            }
            set {
                if ((this.Rpt3MXUnitPriceField.Equals(value) != true)) {
                    this.Rpt3MXUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3MXUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3OrdBasedPrice {
            get {
                return this.Rpt3OrdBasedPriceField;
            }
            set {
                if ((this.Rpt3OrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt3OrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt3OrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3PEDetAmt {
            get {
                return this.Rpt3PEDetAmtField;
            }
            set {
                if ((this.Rpt3PEDetAmtField.Equals(value) != true)) {
                    this.Rpt3PEDetAmtField = value;
                    this.RaisePropertyChanged("Rpt3PEDetAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalMiscChrg {
            get {
                return this.Rpt3TotalMiscChrgField;
            }
            set {
                if ((this.Rpt3TotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt3TotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt3TotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3UnitPrice {
            get {
                return this.Rpt3UnitPriceField;
            }
            set {
                if ((this.Rpt3UnitPriceField.Equals(value) != true)) {
                    this.Rpt3UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesCatID {
            get {
                return this.SalesCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesCatIDField, value) != true)) {
                    this.SalesCatIDField = value;
                    this.RaisePropertyChanged("SalesCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesCatIDDescription {
            get {
                return this.SalesCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesCatIDDescriptionField, value) != true)) {
                    this.SalesCatIDDescriptionField = value;
                    this.RaisePropertyChanged("SalesCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode1 {
            get {
                return this.SalesRepCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode1Field, value) != true)) {
                    this.SalesRepCode1Field = value;
                    this.RaisePropertyChanged("SalesRepCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode2 {
            get {
                return this.SalesRepCode2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode2Field, value) != true)) {
                    this.SalesRepCode2Field = value;
                    this.RaisePropertyChanged("SalesRepCode2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode3 {
            get {
                return this.SalesRepCode3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode3Field, value) != true)) {
                    this.SalesRepCode3Field = value;
                    this.RaisePropertyChanged("SalesRepCode3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode4 {
            get {
                return this.SalesRepCode4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode4Field, value) != true)) {
                    this.SalesRepCode4Field = value;
                    this.RaisePropertyChanged("SalesRepCode4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode5 {
            get {
                return this.SalesRepCode5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode5Field, value) != true)) {
                    this.SalesRepCode5Field = value;
                    this.RaisePropertyChanged("SalesRepCode5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName1 {
            get {
                return this.SalesRepName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName1Field, value) != true)) {
                    this.SalesRepName1Field = value;
                    this.RaisePropertyChanged("SalesRepName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName2 {
            get {
                return this.SalesRepName2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName2Field, value) != true)) {
                    this.SalesRepName2Field = value;
                    this.RaisePropertyChanged("SalesRepName2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName3 {
            get {
                return this.SalesRepName3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName3Field, value) != true)) {
                    this.SalesRepName3Field = value;
                    this.RaisePropertyChanged("SalesRepName3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName4 {
            get {
                return this.SalesRepName4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName4Field, value) != true)) {
                    this.SalesRepName4Field = value;
                    this.RaisePropertyChanged("SalesRepName4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName5 {
            get {
                return this.SalesRepName5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName5Field, value) != true)) {
                    this.SalesRepName5Field = value;
                    this.RaisePropertyChanged("SalesRepName5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingFactor {
            get {
                return this.SellingFactorField;
            }
            set {
                if ((this.SellingFactorField.Equals(value) != true)) {
                    this.SellingFactorField = value;
                    this.RaisePropertyChanged("SellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingFactorDirection {
            get {
                return this.SellingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingFactorDirectionField, value) != true)) {
                    this.SellingFactorDirectionField = value;
                    this.RaisePropertyChanged("SellingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingOrderQty {
            get {
                return this.SellingOrderQtyField;
            }
            set {
                if ((this.SellingOrderQtyField.Equals(value) != true)) {
                    this.SellingOrderQtyField = value;
                    this.RaisePropertyChanged("SellingOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingShipQty {
            get {
                return this.SellingShipQtyField;
            }
            set {
                if ((this.SellingShipQtyField.Equals(value) != true)) {
                    this.SellingShipQtyField = value;
                    this.RaisePropertyChanged("SellingShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactEMailAddress {
            get {
                return this.ShipToContactEMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactEMailAddressField, value) != true)) {
                    this.ShipToContactEMailAddressField = value;
                    this.RaisePropertyChanged("ShipToContactEMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactFaxNum {
            get {
                return this.ShipToContactFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactFaxNumField, value) != true)) {
                    this.ShipToContactFaxNumField = value;
                    this.RaisePropertyChanged("ShipToContactFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactName {
            get {
                return this.ShipToContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactNameField, value) != true)) {
                    this.ShipToContactNameField = value;
                    this.RaisePropertyChanged("ShipToContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactPhoneNum {
            get {
                return this.ShipToContactPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactPhoneNumField, value) != true)) {
                    this.ShipToContactPhoneNumField = value;
                    this.RaisePropertyChanged("ShipToContactPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustBTName {
            get {
                return this.ShipToCustBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustBTNameField, value) != true)) {
                    this.ShipToCustBTNameField = value;
                    this.RaisePropertyChanged("ShipToCustBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustCustID {
            get {
                return this.ShipToCustCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustCustIDField, value) != true)) {
                    this.ShipToCustCustIDField = value;
                    this.RaisePropertyChanged("ShipToCustCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustName {
            get {
                return this.ShipToCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustNameField, value) != true)) {
                    this.ShipToCustNameField = value;
                    this.RaisePropertyChanged("ShipToCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShpConNum {
            get {
                return this.ShpConNumField;
            }
            set {
                if ((this.ShpConNumField.Equals(value) != true)) {
                    this.ShpConNumField = value;
                    this.RaisePropertyChanged("ShpConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShpLegalNum {
            get {
                return this.ShpLegalNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShpLegalNumField, value) != true)) {
                    this.ShpLegalNumField = value;
                    this.RaisePropertyChanged("ShpLegalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustID {
            get {
                return this.SoldToCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustIDField, value) != true)) {
                    this.SoldToCustIDField = value;
                    this.RaisePropertyChanged("SoldToCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustName {
            get {
                return this.SoldToCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustNameField, value) != true)) {
                    this.SoldToCustNameField = value;
                    this.RaisePropertyChanged("SoldToCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubUnitCost {
            get {
                return this.SubUnitCostField;
            }
            set {
                if ((this.SubUnitCostField.Equals(value) != true)) {
                    this.SubUnitCostField = value;
                    this.RaisePropertyChanged("SubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatIDDescription {
            get {
                return this.TaxCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDDescriptionField, value) != true)) {
                    this.TaxCatIDDescriptionField = value;
                    this.RaisePropertyChanged("TaxCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TaxConnectCalc {
            get {
                return this.TaxConnectCalcField;
            }
            set {
                if ((this.TaxConnectCalcField.Equals(value) != true)) {
                    this.TaxConnectCalcField = value;
                    this.RaisePropertyChanged("TaxConnectCalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionDescription {
            get {
                return this.TaxRegionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionDescriptionField, value) != true)) {
                    this.TaxRegionDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCode {
            get {
                return this.TermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeField, value) != true)) {
                    this.TermsCodeField = value;
                    this.RaisePropertyChanged("TermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalMiscChrg {
            get {
                return this.TotalMiscChrgField;
            }
            set {
                if ((this.TotalMiscChrgField.Equals(value) != true)) {
                    this.TotalMiscChrgField = value;
                    this.RaisePropertyChanged("TotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseOTS {
            get {
                return this.UseOTSField;
            }
            set {
                if ((this.UseOTSField.Equals(value) != true)) {
                    this.UseOTSField = value;
                    this.RaisePropertyChanged("UseOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XPartNum {
            get {
                return this.XPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XPartNumField, value) != true)) {
                    this.XPartNumField = value;
                    this.RaisePropertyChanged("XPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRevisionNum {
            get {
                return this.XRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRevisionNumField, value) != true)) {
                    this.XRevisionNumField = value;
                    this.RaisePropertyChanged("XRevisionNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcDtlAttchRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlRASchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcDtlRASchRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AmortDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmortPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmortSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRASchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAmortAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspAmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspRevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspAmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspRevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalCalendarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalYearSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoldReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoldTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgAmortSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgInvcLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PostedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspAmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspRevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspAmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspRevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspAmortAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspRevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RevenueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeqDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAmortAmtField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmortAmt {
            get {
                return this.AmortAmtField;
            }
            set {
                if ((this.AmortAmtField.Equals(value) != true)) {
                    this.AmortAmtField = value;
                    this.RaisePropertyChanged("AmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AmortDate {
            get {
                return this.AmortDateField;
            }
            set {
                if ((this.AmortDateField.Equals(value) != true)) {
                    this.AmortDateField = value;
                    this.RaisePropertyChanged("AmortDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmortPercent {
            get {
                return this.AmortPercentField;
            }
            set {
                if ((this.AmortPercentField.Equals(value) != true)) {
                    this.AmortPercentField = value;
                    this.RaisePropertyChanged("AmortPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmortSeq {
            get {
                return this.AmortSeqField;
            }
            set {
                if ((this.AmortSeqField.Equals(value) != true)) {
                    this.AmortSeqField = value;
                    this.RaisePropertyChanged("AmortSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRASchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractNum {
            get {
                return this.ContractNumField;
            }
            set {
                if ((this.ContractNumField.Equals(value) != true)) {
                    this.ContractNumField = value;
                    this.RaisePropertyChanged("ContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAmortAmount {
            get {
                return this.DocAmortAmountField;
            }
            set {
                if ((this.DocAmortAmountField.Equals(value) != true)) {
                    this.DocAmortAmountField = value;
                    this.RaisePropertyChanged("DocAmortAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAmortAmt {
            get {
                return this.DocAmortAmtField;
            }
            set {
                if ((this.DocAmortAmtField.Equals(value) != true)) {
                    this.DocAmortAmtField = value;
                    this.RaisePropertyChanged("DocAmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspAmortAmt {
            get {
                return this.DocDspAmortAmtField;
            }
            set {
                if ((this.DocDspAmortAmtField.Equals(value) != true)) {
                    this.DocDspAmortAmtField = value;
                    this.RaisePropertyChanged("DocDspAmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspRevenueAmt {
            get {
                return this.DocDspRevenueAmtField;
            }
            set {
                if ((this.DocDspRevenueAmtField.Equals(value) != true)) {
                    this.DocDspRevenueAmtField = value;
                    this.RaisePropertyChanged("DocDspRevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRevenueAmt {
            get {
                return this.DocRevenueAmtField;
            }
            set {
                if ((this.DocRevenueAmtField.Equals(value) != true)) {
                    this.DocRevenueAmtField = value;
                    this.RaisePropertyChanged("DocRevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspAmortAmt {
            get {
                return this.DspAmortAmtField;
            }
            set {
                if ((this.DspAmortAmtField.Equals(value) != true)) {
                    this.DspAmortAmtField = value;
                    this.RaisePropertyChanged("DspAmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspRevenueAmt {
            get {
                return this.DspRevenueAmtField;
            }
            set {
                if ((this.DspRevenueAmtField.Equals(value) != true)) {
                    this.DspRevenueAmtField = value;
                    this.RaisePropertyChanged("DspRevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalCalendarID {
            get {
                return this.FiscalCalendarIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalCalendarIDField, value) != true)) {
                    this.FiscalCalendarIDField = value;
                    this.RaisePropertyChanged("FiscalCalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalPeriod {
            get {
                return this.FiscalPeriodField;
            }
            set {
                if ((this.FiscalPeriodField.Equals(value) != true)) {
                    this.FiscalPeriodField = value;
                    this.RaisePropertyChanged("FiscalPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalYear {
            get {
                return this.FiscalYearField;
            }
            set {
                if ((this.FiscalYearField.Equals(value) != true)) {
                    this.FiscalYearField = value;
                    this.RaisePropertyChanged("FiscalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalYearSuffix {
            get {
                return this.FiscalYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalYearSuffixField, value) != true)) {
                    this.FiscalYearSuffixField = value;
                    this.RaisePropertyChanged("FiscalYearSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hold {
            get {
                return this.HoldField;
            }
            set {
                if ((this.HoldField.Equals(value) != true)) {
                    this.HoldField = value;
                    this.RaisePropertyChanged("Hold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoldReasonCode {
            get {
                return this.HoldReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldReasonCodeField, value) != true)) {
                    this.HoldReasonCodeField = value;
                    this.RaisePropertyChanged("HoldReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoldText {
            get {
                return this.HoldTextField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldTextField, value) != true)) {
                    this.HoldTextField = value;
                    this.RaisePropertyChanged("HoldText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockStatus {
            get {
                return this.LockStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LockStatusField, value) != true)) {
                    this.LockStatusField = value;
                    this.RaisePropertyChanged("LockStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgAmortSeq {
            get {
                return this.OrgAmortSeqField;
            }
            set {
                if ((this.OrgAmortSeqField.Equals(value) != true)) {
                    this.OrgAmortSeqField = value;
                    this.RaisePropertyChanged("OrgAmortSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgInvcLine {
            get {
                return this.OrgInvcLineField;
            }
            set {
                if ((this.OrgInvcLineField.Equals(value) != true)) {
                    this.OrgInvcLineField = value;
                    this.RaisePropertyChanged("OrgInvcLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Posted {
            get {
                return this.PostedField;
            }
            set {
                if ((this.PostedField.Equals(value) != true)) {
                    this.PostedField = value;
                    this.RaisePropertyChanged("Posted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PostedDate {
            get {
                return this.PostedDateField;
            }
            set {
                if ((this.PostedDateField.Equals(value) != true)) {
                    this.PostedDateField = value;
                    this.RaisePropertyChanged("PostedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToPost {
            get {
                return this.ReadyToPostField;
            }
            set {
                if ((this.ReadyToPostField.Equals(value) != true)) {
                    this.ReadyToPostField = value;
                    this.RaisePropertyChanged("ReadyToPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RevenueAmt {
            get {
                return this.RevenueAmtField;
            }
            set {
                if ((this.RevenueAmtField.Equals(value) != true)) {
                    this.RevenueAmtField = value;
                    this.RaisePropertyChanged("RevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AmortAmt {
            get {
                return this.Rpt1AmortAmtField;
            }
            set {
                if ((this.Rpt1AmortAmtField.Equals(value) != true)) {
                    this.Rpt1AmortAmtField = value;
                    this.RaisePropertyChanged("Rpt1AmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspAmortAmt {
            get {
                return this.Rpt1DspAmortAmtField;
            }
            set {
                if ((this.Rpt1DspAmortAmtField.Equals(value) != true)) {
                    this.Rpt1DspAmortAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspAmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspRevenueAmt {
            get {
                return this.Rpt1DspRevenueAmtField;
            }
            set {
                if ((this.Rpt1DspRevenueAmtField.Equals(value) != true)) {
                    this.Rpt1DspRevenueAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspRevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1RevenueAmt {
            get {
                return this.Rpt1RevenueAmtField;
            }
            set {
                if ((this.Rpt1RevenueAmtField.Equals(value) != true)) {
                    this.Rpt1RevenueAmtField = value;
                    this.RaisePropertyChanged("Rpt1RevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AmortAmt {
            get {
                return this.Rpt2AmortAmtField;
            }
            set {
                if ((this.Rpt2AmortAmtField.Equals(value) != true)) {
                    this.Rpt2AmortAmtField = value;
                    this.RaisePropertyChanged("Rpt2AmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspAmortAmt {
            get {
                return this.Rpt2DspAmortAmtField;
            }
            set {
                if ((this.Rpt2DspAmortAmtField.Equals(value) != true)) {
                    this.Rpt2DspAmortAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspAmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspRevenueAmt {
            get {
                return this.Rpt2DspRevenueAmtField;
            }
            set {
                if ((this.Rpt2DspRevenueAmtField.Equals(value) != true)) {
                    this.Rpt2DspRevenueAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspRevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2RevenueAmt {
            get {
                return this.Rpt2RevenueAmtField;
            }
            set {
                if ((this.Rpt2RevenueAmtField.Equals(value) != true)) {
                    this.Rpt2RevenueAmtField = value;
                    this.RaisePropertyChanged("Rpt2RevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AmortAmt {
            get {
                return this.Rpt3AmortAmtField;
            }
            set {
                if ((this.Rpt3AmortAmtField.Equals(value) != true)) {
                    this.Rpt3AmortAmtField = value;
                    this.RaisePropertyChanged("Rpt3AmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspAmortAmt {
            get {
                return this.Rpt3DspAmortAmtField;
            }
            set {
                if ((this.Rpt3DspAmortAmtField.Equals(value) != true)) {
                    this.Rpt3DspAmortAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspAmortAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspRevenueAmt {
            get {
                return this.Rpt3DspRevenueAmtField;
            }
            set {
                if ((this.Rpt3DspRevenueAmtField.Equals(value) != true)) {
                    this.Rpt3DspRevenueAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspRevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3RevenueAmt {
            get {
                return this.Rpt3RevenueAmtField;
            }
            set {
                if ((this.Rpt3RevenueAmtField.Equals(value) != true)) {
                    this.Rpt3RevenueAmtField = value;
                    this.RaisePropertyChanged("Rpt3RevenueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeqDuration {
            get {
                return this.SeqDurationField;
            }
            set {
                if ((object.ReferenceEquals(this.SeqDurationField, value) != true)) {
                    this.SeqDurationField = value;
                    this.RaisePropertyChanged("SeqDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAmortAmt {
            get {
                return this.TotalAmortAmtField;
            }
            set {
                if ((this.TotalAmortAmtField.Equals(value) != true)) {
                    this.TotalAmortAmtField = value;
                    this.RaisePropertyChanged("TotalAmortAmt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlTGLCRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcDtlTGLCRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ABTUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string APInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ARInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BookCreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BookDebitAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COACodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COADescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTGLCRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CorrAccUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditStatAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DebitAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DebitStatAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalCalendarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalYearSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAccountAccountDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAccountGLAcctDispField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAccountGLShortAcctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLAcctContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLBookCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLBookDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsModifiedByUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JournalLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JournalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaborDtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaborHedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovementNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MovementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedToFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue11Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue12Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue13Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue14Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue15Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue16Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue17Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue18Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue19Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue20Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegValue9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatUOMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatisticalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysGLControlCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysGLControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TGLCTranNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TranDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TranNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserCanModifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABTUID {
            get {
                return this.ABTUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ABTUIDField, value) != true)) {
                    this.ABTUIDField = value;
                    this.RaisePropertyChanged("ABTUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APInvoiceNum {
            get {
                return this.APInvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.APInvoiceNumField, value) != true)) {
                    this.APInvoiceNumField = value;
                    this.RaisePropertyChanged("APInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ARInvoiceNum {
            get {
                return this.ARInvoiceNumField;
            }
            set {
                if ((this.ARInvoiceNumField.Equals(value) != true)) {
                    this.ARInvoiceNumField = value;
                    this.RaisePropertyChanged("ARInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BookCreditAmount {
            get {
                return this.BookCreditAmountField;
            }
            set {
                if ((this.BookCreditAmountField.Equals(value) != true)) {
                    this.BookCreditAmountField = value;
                    this.RaisePropertyChanged("BookCreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BookDebitAmount {
            get {
                return this.BookDebitAmountField;
            }
            set {
                if ((this.BookDebitAmountField.Equals(value) != true)) {
                    this.BookDebitAmountField = value;
                    this.RaisePropertyChanged("BookDebitAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookID {
            get {
                return this.BookIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BookIDField, value) != true)) {
                    this.BookIDField = value;
                    this.RaisePropertyChanged("BookID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COACode {
            get {
                return this.COACodeField;
            }
            set {
                if ((object.ReferenceEquals(this.COACodeField, value) != true)) {
                    this.COACodeField = value;
                    this.RaisePropertyChanged("COACode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COADescription {
            get {
                return this.COADescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.COADescriptionField, value) != true)) {
                    this.COADescriptionField = value;
                    this.RaisePropertyChanged("COADescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTGLCRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CorrAccUID {
            get {
                return this.CorrAccUIDField;
            }
            set {
                if ((this.CorrAccUIDField.Equals(value) != true)) {
                    this.CorrAccUIDField = value;
                    this.RaisePropertyChanged("CorrAccUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditAmount {
            get {
                return this.CreditAmountField;
            }
            set {
                if ((this.CreditAmountField.Equals(value) != true)) {
                    this.CreditAmountField = value;
                    this.RaisePropertyChanged("CreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditStatAmt {
            get {
                return this.CreditStatAmtField;
            }
            set {
                if ((this.CreditStatAmtField.Equals(value) != true)) {
                    this.CreditStatAmtField = value;
                    this.RaisePropertyChanged("CreditStatAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DebitAmount {
            get {
                return this.DebitAmountField;
            }
            set {
                if ((this.DebitAmountField.Equals(value) != true)) {
                    this.DebitAmountField = value;
                    this.RaisePropertyChanged("DebitAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DebitStatAmt {
            get {
                return this.DebitStatAmtField;
            }
            set {
                if ((this.DebitStatAmtField.Equals(value) != true)) {
                    this.DebitStatAmtField = value;
                    this.RaisePropertyChanged("DebitStatAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompanyID {
            get {
                return this.ExtCompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyIDField, value) != true)) {
                    this.ExtCompanyIDField = value;
                    this.RaisePropertyChanged("ExtCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalCalendarID {
            get {
                return this.FiscalCalendarIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalCalendarIDField, value) != true)) {
                    this.FiscalCalendarIDField = value;
                    this.RaisePropertyChanged("FiscalCalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalYear {
            get {
                return this.FiscalYearField;
            }
            set {
                if ((this.FiscalYearField.Equals(value) != true)) {
                    this.FiscalYearField = value;
                    this.RaisePropertyChanged("FiscalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalYearSuffix {
            get {
                return this.FiscalYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalYearSuffixField, value) != true)) {
                    this.FiscalYearSuffixField = value;
                    this.RaisePropertyChanged("FiscalYearSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAccount {
            get {
                return this.GLAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAccountField, value) != true)) {
                    this.GLAccountField = value;
                    this.RaisePropertyChanged("GLAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAccountAccountDesc {
            get {
                return this.GLAccountAccountDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAccountAccountDescField, value) != true)) {
                    this.GLAccountAccountDescField = value;
                    this.RaisePropertyChanged("GLAccountAccountDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAccountGLAcctDisp {
            get {
                return this.GLAccountGLAcctDispField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAccountGLAcctDispField, value) != true)) {
                    this.GLAccountGLAcctDispField = value;
                    this.RaisePropertyChanged("GLAccountGLAcctDisp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAccountGLShortAcct {
            get {
                return this.GLAccountGLShortAcctField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAccountGLShortAcctField, value) != true)) {
                    this.GLAccountGLShortAcctField = value;
                    this.RaisePropertyChanged("GLAccountGLShortAcct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLAcctContext {
            get {
                return this.GLAcctContextField;
            }
            set {
                if ((object.ReferenceEquals(this.GLAcctContextField, value) != true)) {
                    this.GLAcctContextField = value;
                    this.RaisePropertyChanged("GLAcctContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLBookCurrencyCode {
            get {
                return this.GLBookCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLBookCurrencyCodeField, value) != true)) {
                    this.GLBookCurrencyCodeField = value;
                    this.RaisePropertyChanged("GLBookCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLBookDescription {
            get {
                return this.GLBookDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GLBookDescriptionField, value) != true)) {
                    this.GLBookDescriptionField = value;
                    this.RaisePropertyChanged("GLBookDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternalCompany {
            get {
                return this.IsExternalCompanyField;
            }
            set {
                if ((this.IsExternalCompanyField.Equals(value) != true)) {
                    this.IsExternalCompanyField = value;
                    this.RaisePropertyChanged("IsExternalCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModifiedByUser {
            get {
                return this.IsModifiedByUserField;
            }
            set {
                if ((this.IsModifiedByUserField.Equals(value) != true)) {
                    this.IsModifiedByUserField = value;
                    this.RaisePropertyChanged("IsModifiedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalCode {
            get {
                return this.JournalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalCodeField, value) != true)) {
                    this.JournalCodeField = value;
                    this.RaisePropertyChanged("JournalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JournalLine {
            get {
                return this.JournalLineField;
            }
            set {
                if ((this.JournalLineField.Equals(value) != true)) {
                    this.JournalLineField = value;
                    this.RaisePropertyChanged("JournalLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JournalNum {
            get {
                return this.JournalNumField;
            }
            set {
                if ((this.JournalNumField.Equals(value) != true)) {
                    this.JournalNumField = value;
                    this.RaisePropertyChanged("JournalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key1 {
            get {
                return this.Key1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key1Field, value) != true)) {
                    this.Key1Field = value;
                    this.RaisePropertyChanged("Key1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key2 {
            get {
                return this.Key2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key2Field, value) != true)) {
                    this.Key2Field = value;
                    this.RaisePropertyChanged("Key2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key3 {
            get {
                return this.Key3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key3Field, value) != true)) {
                    this.Key3Field = value;
                    this.RaisePropertyChanged("Key3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key4 {
            get {
                return this.Key4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key4Field, value) != true)) {
                    this.Key4Field = value;
                    this.RaisePropertyChanged("Key4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key5 {
            get {
                return this.Key5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key5Field, value) != true)) {
                    this.Key5Field = value;
                    this.RaisePropertyChanged("Key5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key6 {
            get {
                return this.Key6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key6Field, value) != true)) {
                    this.Key6Field = value;
                    this.RaisePropertyChanged("Key6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LaborDtlSeq {
            get {
                return this.LaborDtlSeqField;
            }
            set {
                if ((this.LaborDtlSeqField.Equals(value) != true)) {
                    this.LaborDtlSeqField = value;
                    this.RaisePropertyChanged("LaborDtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LaborHedSeq {
            get {
                return this.LaborHedSeqField;
            }
            set {
                if ((this.LaborHedSeqField.Equals(value) != true)) {
                    this.LaborHedSeqField = value;
                    this.RaisePropertyChanged("LaborHedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovementNum {
            get {
                return this.MovementNumField;
            }
            set {
                if ((this.MovementNumField.Equals(value) != true)) {
                    this.MovementNumField = value;
                    this.RaisePropertyChanged("MovementNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MovementType {
            get {
                return this.MovementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MovementTypeField, value) != true)) {
                    this.MovementTypeField = value;
                    this.RaisePropertyChanged("MovementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordType {
            get {
                return this.RecordTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordTypeField, value) != true)) {
                    this.RecordTypeField = value;
                    this.RaisePropertyChanged("RecordType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedToFile {
            get {
                return this.RelatedToFileField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedToFileField, value) != true)) {
                    this.RelatedToFileField = value;
                    this.RaisePropertyChanged("RelatedToFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleUID {
            get {
                return this.RuleUIDField;
            }
            set {
                if ((this.RuleUIDField.Equals(value) != true)) {
                    this.RuleUIDField = value;
                    this.RaisePropertyChanged("RuleUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue1 {
            get {
                return this.SegValue1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue1Field, value) != true)) {
                    this.SegValue1Field = value;
                    this.RaisePropertyChanged("SegValue1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue10 {
            get {
                return this.SegValue10Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue10Field, value) != true)) {
                    this.SegValue10Field = value;
                    this.RaisePropertyChanged("SegValue10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue11 {
            get {
                return this.SegValue11Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue11Field, value) != true)) {
                    this.SegValue11Field = value;
                    this.RaisePropertyChanged("SegValue11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue12 {
            get {
                return this.SegValue12Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue12Field, value) != true)) {
                    this.SegValue12Field = value;
                    this.RaisePropertyChanged("SegValue12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue13 {
            get {
                return this.SegValue13Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue13Field, value) != true)) {
                    this.SegValue13Field = value;
                    this.RaisePropertyChanged("SegValue13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue14 {
            get {
                return this.SegValue14Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue14Field, value) != true)) {
                    this.SegValue14Field = value;
                    this.RaisePropertyChanged("SegValue14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue15 {
            get {
                return this.SegValue15Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue15Field, value) != true)) {
                    this.SegValue15Field = value;
                    this.RaisePropertyChanged("SegValue15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue16 {
            get {
                return this.SegValue16Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue16Field, value) != true)) {
                    this.SegValue16Field = value;
                    this.RaisePropertyChanged("SegValue16");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue17 {
            get {
                return this.SegValue17Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue17Field, value) != true)) {
                    this.SegValue17Field = value;
                    this.RaisePropertyChanged("SegValue17");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue18 {
            get {
                return this.SegValue18Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue18Field, value) != true)) {
                    this.SegValue18Field = value;
                    this.RaisePropertyChanged("SegValue18");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue19 {
            get {
                return this.SegValue19Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue19Field, value) != true)) {
                    this.SegValue19Field = value;
                    this.RaisePropertyChanged("SegValue19");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue2 {
            get {
                return this.SegValue2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue2Field, value) != true)) {
                    this.SegValue2Field = value;
                    this.RaisePropertyChanged("SegValue2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue20 {
            get {
                return this.SegValue20Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue20Field, value) != true)) {
                    this.SegValue20Field = value;
                    this.RaisePropertyChanged("SegValue20");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue3 {
            get {
                return this.SegValue3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue3Field, value) != true)) {
                    this.SegValue3Field = value;
                    this.RaisePropertyChanged("SegValue3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue4 {
            get {
                return this.SegValue4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue4Field, value) != true)) {
                    this.SegValue4Field = value;
                    this.RaisePropertyChanged("SegValue4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue5 {
            get {
                return this.SegValue5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue5Field, value) != true)) {
                    this.SegValue5Field = value;
                    this.RaisePropertyChanged("SegValue5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue6 {
            get {
                return this.SegValue6Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue6Field, value) != true)) {
                    this.SegValue6Field = value;
                    this.RaisePropertyChanged("SegValue6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue7 {
            get {
                return this.SegValue7Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue7Field, value) != true)) {
                    this.SegValue7Field = value;
                    this.RaisePropertyChanged("SegValue7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue8 {
            get {
                return this.SegValue8Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue8Field, value) != true)) {
                    this.SegValue8Field = value;
                    this.RaisePropertyChanged("SegValue8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegValue9 {
            get {
                return this.SegValue9Field;
            }
            set {
                if ((object.ReferenceEquals(this.SegValue9Field, value) != true)) {
                    this.SegValue9Field = value;
                    this.RaisePropertyChanged("SegValue9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatUOMCode {
            get {
                return this.StatUOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatUOMCodeField, value) != true)) {
                    this.StatUOMCodeField = value;
                    this.RaisePropertyChanged("StatUOMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Statistical {
            get {
                return this.StatisticalField;
            }
            set {
                if ((this.StatisticalField.Equals(value) != true)) {
                    this.StatisticalField = value;
                    this.RaisePropertyChanged("Statistical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SysDate {
            get {
                return this.SysDateField;
            }
            set {
                if ((this.SysDateField.Equals(value) != true)) {
                    this.SysDateField = value;
                    this.RaisePropertyChanged("SysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysGLControlCode {
            get {
                return this.SysGLControlCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SysGLControlCodeField, value) != true)) {
                    this.SysGLControlCodeField = value;
                    this.RaisePropertyChanged("SysGLControlCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysGLControlType {
            get {
                return this.SysGLControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SysGLControlTypeField, value) != true)) {
                    this.SysGLControlTypeField = value;
                    this.RaisePropertyChanged("SysGLControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysTime {
            get {
                return this.SysTimeField;
            }
            set {
                if ((this.SysTimeField.Equals(value) != true)) {
                    this.SysTimeField = value;
                    this.RaisePropertyChanged("SysTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TGLCTranNum {
            get {
                return this.TGLCTranNumField;
            }
            set {
                if ((this.TGLCTranNumField.Equals(value) != true)) {
                    this.TGLCTranNumField = value;
                    this.RaisePropertyChanged("TGLCTranNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TranDate {
            get {
                return this.TranDateField;
            }
            set {
                if ((this.TranDateField.Equals(value) != true)) {
                    this.TranDateField = value;
                    this.RaisePropertyChanged("TranDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TranNum {
            get {
                return this.TranNumField;
            }
            set {
                if ((this.TranNumField.Equals(value) != true)) {
                    this.TranNumField = value;
                    this.RaisePropertyChanged("TranNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranSource {
            get {
                return this.TranSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.TranSourceField, value) != true)) {
                    this.TranSourceField = value;
                    this.RaisePropertyChanged("TranSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransAmt {
            get {
                return this.TransAmtField;
            }
            set {
                if ((this.TransAmtField.Equals(value) != true)) {
                    this.TransAmtField = value;
                    this.RaisePropertyChanged("TransAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserCanModify {
            get {
                return this.UserCanModifyField;
            }
            set {
                if ((this.UserCanModifyField.Equals(value) != true)) {
                    this.UserCanModifyField = value;
                    this.RaisePropertyChanged("UserCanModify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcHeadRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcHeadRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGAuthorizationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AGAuthorizationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGDocumentLetterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGInvoicingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGInvoicingPointDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGLegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGPrintingControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGUseGoodDefaultMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARLOCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ARPNHeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARPromNoteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowChgAfterPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoGenPNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoPrintReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvailBTCustListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankForPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankForPINameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BillToInvoiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BillingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BlockedFinChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlockedFinChrgReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BlockedRemLettersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlockedRemLettersReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCStreetAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CHISRCodeLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CNConfirmDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIBankAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTICommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTICustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIExportAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CNGTIGrossInvcAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CNGTIInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTINoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTIStatus1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CNGTIStatus2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNGTITaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CNTaxInvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool COIFRSCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool COIFRSEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal COIFRSFinancialChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal COIFRSInterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int COIFRSNumberOfPeriodsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal COIFRSPresentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardmemberReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CollectionsCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CollectionsInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContractDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConvertedFromDepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyLatestInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CorrectionInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CounterARFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CumulativeBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CurrRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrRateGrpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentInstanceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustAgentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustAgentTaxRegNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustAllowOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustOnCreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CycleCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CycleInactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNCustNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DNPmtAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DebitNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredRevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DepositCreditEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DirectDebitingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableAplDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DispBalDNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayBillAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayCreditCardNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocCOIFRSFinancialChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocCOIFRSPresentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocCumulativeBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDNPmtAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepAppliedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDispBalDNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspPrepDepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMaxValueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPEChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPECommissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPEDetTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPEDischargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPEInterestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPENoPayPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPESUNATDepAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocPayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRemainTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReverseTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocSATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocSourceRecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocVrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocWHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocWithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentPrintedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DspInvoiceRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspPayDiscDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspPrepDepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EDIReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EInvExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EInvStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EInvTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EInvUpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ERSInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableAssignLegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSOCCDefaultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTranDocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableVoidLegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExchangeRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpirationMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpirationYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExportReportNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalCalendarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalYearSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GLPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GUIDateOfExportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDeductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIExportBillNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIExportBillTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIExportMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIExportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIFormatCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUITaxTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GenedFromRMAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLegNumCnfgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HoldInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstanceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvInCollectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAddedToGTIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIntrastatSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLatestRecurrenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPMForGenPITypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRecurringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRevisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalCodeJrnlDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JournalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastChrgCalcDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastRevNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LatestInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockTaxRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MXApprovalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MXApprovalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXCBBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MXCancelledDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXCertificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXCertificateSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXCertifiedTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXDigitalSealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MXExportCertOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXExportCertOriginNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXExportConfNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXExportCustDocCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXExportOperationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXFiscalFolioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXFolioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXIncotermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MXOriginalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MXOriginalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXOriginalFolioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXOriginalSeriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXOriginalStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXOriginalStringTFDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXPaidAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MXPartPmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXPaymentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MXPaymentNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXPostedTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXSATCertificateSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXSATSealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXSerieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXTaxRcptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXTaxRegimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MXTotalPaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MainSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxValueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedConfirmTaxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextDiscDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextInvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrdExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrigDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankBankAcctIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankBankIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankBankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankCheckingAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankIBANCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankLocalBICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankPayerRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurSupplierCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverpaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OvrDefTaxDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PBProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PEAPPayNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEBOEChangeStatusToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PEBOEIsMultiGenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PEBOEPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEBOEStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEBOEStatusDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEBankNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PEChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PECollectionsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PECommissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PEDebitNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEDebitNoteReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PEDetTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEDetTaxCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PEDischargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PEDischargeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEDspCurrencySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteePhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeTaxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEGuaranteeZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PEInCollectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PEInterestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PENoPayPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEReasonDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PERefDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PESUNATDepAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PESUNATDepDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PESUNATDepNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIBankAcctIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PICustBankDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIInitiationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PMUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackSlipNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayDatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PayDiscDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayDiscDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PayDiscPartPayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayDiscPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayMethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PayMethodSummarizePerCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayMethodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PaySchedEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostedRecogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrepDepositEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMANumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToCalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RealEstateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecalcAmtsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecalcBeforePostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecurSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecurringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecurringCycleMaximumValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecurringStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RefCancelledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RefCancelledByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RemainTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReminderSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReturnFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReversalDocAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReversalDocAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReverseTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RevisionAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RevisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1COIFRSFinancialChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1COIFRSPresentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1CumulativeBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspPrepDepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1MaxValueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1PEChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1PECommissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1PEDischargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1PEInterestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1PENoPayPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Rpt1PayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1PayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RemainTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReverseTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1SATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1SourceRecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1VrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1WHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1WithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2COIFRSFinancialChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2COIFRSPresentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2CumulativeBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspPrepDepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2MaxValueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2PEChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2PECommissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2PEDischargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2PEInterestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2PENoPayPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Rpt2PayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2PayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RemainTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReverseTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2SATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2SourceRecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxamtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2VrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2WHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2WithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3COIFRSFinancialChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3COIFRSPresentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3CumulativeBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspPrepDepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3MaxValueAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3PEChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3PECommissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3PEDischargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3PEInterestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3PENoPayPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Rpt3PayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3PayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RemainTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReverseTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3SATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3SourceRecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3VrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3WHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3WithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RvnJrnUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SEBankRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SkipRecurringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToAddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoldToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SoldToInvoiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SourceLastDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SourceRecurBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SummarizationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemTranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool THIsImmatAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TWDeclarePeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TWDeclareYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIExportDocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIExportRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIExportVerificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIRegNumBuyerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIRegNumSellerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWPeriodPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRateGrpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotFinChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalInstanceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnappliedCashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseAltBillToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseAltBillToIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSOCCDefaultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseTaxRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VNInvDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VNInvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WithTaxConfirmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRateLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> XRefContractDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dspSoldToCustIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ABAmt {
            get {
                return this.ABAmtField;
            }
            set {
                if ((this.ABAmtField.Equals(value) != true)) {
                    this.ABAmtField = value;
                    this.RaisePropertyChanged("ABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGAuthorizationCode {
            get {
                return this.AGAuthorizationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGAuthorizationCodeField, value) != true)) {
                    this.AGAuthorizationCodeField = value;
                    this.RaisePropertyChanged("AGAuthorizationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AGAuthorizationDate {
            get {
                return this.AGAuthorizationDateField;
            }
            set {
                if ((this.AGAuthorizationDateField.Equals(value) != true)) {
                    this.AGAuthorizationDateField = value;
                    this.RaisePropertyChanged("AGAuthorizationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGDocumentLetter {
            get {
                return this.AGDocumentLetterField;
            }
            set {
                if ((object.ReferenceEquals(this.AGDocumentLetterField, value) != true)) {
                    this.AGDocumentLetterField = value;
                    this.RaisePropertyChanged("AGDocumentLetter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGInvoicingPoint {
            get {
                return this.AGInvoicingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.AGInvoicingPointField, value) != true)) {
                    this.AGInvoicingPointField = value;
                    this.RaisePropertyChanged("AGInvoicingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGInvoicingPointDescription {
            get {
                return this.AGInvoicingPointDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AGInvoicingPointDescriptionField, value) != true)) {
                    this.AGInvoicingPointDescriptionField = value;
                    this.RaisePropertyChanged("AGInvoicingPointDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGLegalNumber {
            get {
                return this.AGLegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AGLegalNumberField, value) != true)) {
                    this.AGLegalNumberField = value;
                    this.RaisePropertyChanged("AGLegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGPrintingControlType {
            get {
                return this.AGPrintingControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGPrintingControlTypeField, value) != true)) {
                    this.AGPrintingControlTypeField = value;
                    this.RaisePropertyChanged("AGPrintingControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGUseGoodDefaultMark {
            get {
                return this.AGUseGoodDefaultMarkField;
            }
            set {
                if ((this.AGUseGoodDefaultMarkField.Equals(value) != true)) {
                    this.AGUseGoodDefaultMarkField = value;
                    this.RaisePropertyChanged("AGUseGoodDefaultMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARLOCID {
            get {
                return this.ARLOCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ARLOCIDField, value) != true)) {
                    this.ARLOCIDField = value;
                    this.RaisePropertyChanged("ARLOCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ARPNHeadNum {
            get {
                return this.ARPNHeadNumField;
            }
            set {
                if ((this.ARPNHeadNumField.Equals(value) != true)) {
                    this.ARPNHeadNumField = value;
                    this.RaisePropertyChanged("ARPNHeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARPromNoteID {
            get {
                return this.ARPromNoteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ARPromNoteIDField, value) != true)) {
                    this.ARPromNoteIDField = value;
                    this.RaisePropertyChanged("ARPromNoteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowChgAfterPrint {
            get {
                return this.AllowChgAfterPrintField;
            }
            set {
                if ((this.AllowChgAfterPrintField.Equals(value) != true)) {
                    this.AllowChgAfterPrintField = value;
                    this.RaisePropertyChanged("AllowChgAfterPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoGenPN {
            get {
                return this.AutoGenPNField;
            }
            set {
                if ((this.AutoGenPNField.Equals(value) != true)) {
                    this.AutoGenPNField = value;
                    this.RaisePropertyChanged("AutoGenPN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoPrintReady {
            get {
                return this.AutoPrintReadyField;
            }
            set {
                if ((this.AutoPrintReadyField.Equals(value) != true)) {
                    this.AutoPrintReadyField = value;
                    this.RaisePropertyChanged("AutoPrintReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailBTCustList {
            get {
                return this.AvailBTCustListField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailBTCustListField, value) != true)) {
                    this.AvailBTCustListField = value;
                    this.RaisePropertyChanged("AvailBTCustList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankForPI {
            get {
                return this.BankForPIField;
            }
            set {
                if ((object.ReferenceEquals(this.BankForPIField, value) != true)) {
                    this.BankForPIField = value;
                    this.RaisePropertyChanged("BankForPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankForPIName {
            get {
                return this.BankForPINameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankForPINameField, value) != true)) {
                    this.BankForPINameField = value;
                    this.RaisePropertyChanged("BankForPIName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillConNum {
            get {
                return this.BillConNumField;
            }
            set {
                if ((this.BillConNumField.Equals(value) != true)) {
                    this.BillConNumField = value;
                    this.RaisePropertyChanged("BillConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BillToInvoiceAddress {
            get {
                return this.BillToInvoiceAddressField;
            }
            set {
                if ((this.BillToInvoiceAddressField.Equals(value) != true)) {
                    this.BillToInvoiceAddressField = value;
                    this.RaisePropertyChanged("BillToInvoiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BillingDate {
            get {
                return this.BillingDateField;
            }
            set {
                if ((this.BillingDateField.Equals(value) != true)) {
                    this.BillingDateField = value;
                    this.RaisePropertyChanged("BillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingNumber {
            get {
                return this.BillingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingNumberField, value) != true)) {
                    this.BillingNumberField = value;
                    this.RaisePropertyChanged("BillingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BlockedFinChrg {
            get {
                return this.BlockedFinChrgField;
            }
            set {
                if ((this.BlockedFinChrgField.Equals(value) != true)) {
                    this.BlockedFinChrgField = value;
                    this.RaisePropertyChanged("BlockedFinChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockedFinChrgReason {
            get {
                return this.BlockedFinChrgReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockedFinChrgReasonField, value) != true)) {
                    this.BlockedFinChrgReasonField = value;
                    this.RaisePropertyChanged("BlockedFinChrgReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BlockedRemLetters {
            get {
                return this.BlockedRemLettersField;
            }
            set {
                if ((this.BlockedRemLettersField.Equals(value) != true)) {
                    this.BlockedRemLettersField = value;
                    this.RaisePropertyChanged("BlockedRemLetters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockedRemLettersReason {
            get {
                return this.BlockedRemLettersReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockedRemLettersReasonField, value) != true)) {
                    this.BlockedRemLettersReasonField = value;
                    this.RaisePropertyChanged("BlockedRemLettersReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchID {
            get {
                return this.BranchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchIDField, value) != true)) {
                    this.BranchIDField = value;
                    this.RaisePropertyChanged("BranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCStreetAddr {
            get {
                return this.CCStreetAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.CCStreetAddrField, value) != true)) {
                    this.CCStreetAddrField = value;
                    this.RaisePropertyChanged("CCStreetAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCZip {
            get {
                return this.CCZipField;
            }
            set {
                if ((object.ReferenceEquals(this.CCZipField, value) != true)) {
                    this.CCZipField = value;
                    this.RaisePropertyChanged("CCZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHISRCodeLine {
            get {
                return this.CHISRCodeLineField;
            }
            set {
                if ((object.ReferenceEquals(this.CHISRCodeLineField, value) != true)) {
                    this.CHISRCodeLineField = value;
                    this.RaisePropertyChanged("CHISRCodeLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMReason {
            get {
                return this.CMReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.CMReasonField, value) != true)) {
                    this.CMReasonField = value;
                    this.RaisePropertyChanged("CMReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMType {
            get {
                return this.CMTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CMTypeField, value) != true)) {
                    this.CMTypeField = value;
                    this.RaisePropertyChanged("CMType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CNConfirmDate {
            get {
                return this.CNConfirmDateField;
            }
            set {
                if ((this.CNConfirmDateField.Equals(value) != true)) {
                    this.CNConfirmDateField = value;
                    this.RaisePropertyChanged("CNConfirmDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIAction {
            get {
                return this.CNGTIActionField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIActionField, value) != true)) {
                    this.CNGTIActionField = value;
                    this.RaisePropertyChanged("CNGTIAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIAddress {
            get {
                return this.CNGTIAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIAddressField, value) != true)) {
                    this.CNGTIAddressField = value;
                    this.RaisePropertyChanged("CNGTIAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIBankAccount {
            get {
                return this.CNGTIBankAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIBankAccountField, value) != true)) {
                    this.CNGTIBankAccountField = value;
                    this.RaisePropertyChanged("CNGTIBankAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIComment {
            get {
                return this.CNGTICommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTICommentField, value) != true)) {
                    this.CNGTICommentField = value;
                    this.RaisePropertyChanged("CNGTIComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTICustomerName {
            get {
                return this.CNGTICustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTICustomerNameField, value) != true)) {
                    this.CNGTICustomerNameField = value;
                    this.RaisePropertyChanged("CNGTICustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIExportAddress {
            get {
                return this.CNGTIExportAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIExportAddressField, value) != true)) {
                    this.CNGTIExportAddressField = value;
                    this.RaisePropertyChanged("CNGTIExportAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CNGTIGrossInvcAmt {
            get {
                return this.CNGTIGrossInvcAmtField;
            }
            set {
                if ((this.CNGTIGrossInvcAmtField.Equals(value) != true)) {
                    this.CNGTIGrossInvcAmtField = value;
                    this.RaisePropertyChanged("CNGTIGrossInvcAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CNGTIInvoiceAmt {
            get {
                return this.CNGTIInvoiceAmtField;
            }
            set {
                if ((this.CNGTIInvoiceAmtField.Equals(value) != true)) {
                    this.CNGTIInvoiceAmtField = value;
                    this.RaisePropertyChanged("CNGTIInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTINote {
            get {
                return this.CNGTINoteField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTINoteField, value) != true)) {
                    this.CNGTINoteField = value;
                    this.RaisePropertyChanged("CNGTINote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIShipToNum {
            get {
                return this.CNGTIShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIShipToNumField, value) != true)) {
                    this.CNGTIShipToNumField = value;
                    this.RaisePropertyChanged("CNGTIShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTIStatus1 {
            get {
                return this.CNGTIStatus1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTIStatus1Field, value) != true)) {
                    this.CNGTIStatus1Field = value;
                    this.RaisePropertyChanged("CNGTIStatus1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CNGTIStatus2 {
            get {
                return this.CNGTIStatus2Field;
            }
            set {
                if ((this.CNGTIStatus2Field.Equals(value) != true)) {
                    this.CNGTIStatus2Field = value;
                    this.RaisePropertyChanged("CNGTIStatus2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNGTITaxCode {
            get {
                return this.CNGTITaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CNGTITaxCodeField, value) != true)) {
                    this.CNGTITaxCodeField = value;
                    this.RaisePropertyChanged("CNGTITaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CNTaxInvoiceType {
            get {
                return this.CNTaxInvoiceTypeField;
            }
            set {
                if ((this.CNTaxInvoiceTypeField.Equals(value) != true)) {
                    this.CNTaxInvoiceTypeField = value;
                    this.RaisePropertyChanged("CNTaxInvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COIFRSCalculation {
            get {
                return this.COIFRSCalculationField;
            }
            set {
                if ((this.COIFRSCalculationField.Equals(value) != true)) {
                    this.COIFRSCalculationField = value;
                    this.RaisePropertyChanged("COIFRSCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COIFRSEnabled {
            get {
                return this.COIFRSEnabledField;
            }
            set {
                if ((this.COIFRSEnabledField.Equals(value) != true)) {
                    this.COIFRSEnabledField = value;
                    this.RaisePropertyChanged("COIFRSEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal COIFRSFinancialCharge {
            get {
                return this.COIFRSFinancialChargeField;
            }
            set {
                if ((this.COIFRSFinancialChargeField.Equals(value) != true)) {
                    this.COIFRSFinancialChargeField = value;
                    this.RaisePropertyChanged("COIFRSFinancialCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal COIFRSInterestRate {
            get {
                return this.COIFRSInterestRateField;
            }
            set {
                if ((this.COIFRSInterestRateField.Equals(value) != true)) {
                    this.COIFRSInterestRateField = value;
                    this.RaisePropertyChanged("COIFRSInterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int COIFRSNumberOfPeriods {
            get {
                return this.COIFRSNumberOfPeriodsField;
            }
            set {
                if ((this.COIFRSNumberOfPeriodsField.Equals(value) != true)) {
                    this.COIFRSNumberOfPeriodsField = value;
                    this.RaisePropertyChanged("COIFRSNumberOfPeriods");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal COIFRSPresentValue {
            get {
                return this.COIFRSPresentValueField;
            }
            set {
                if ((this.COIFRSPresentValueField.Equals(value) != true)) {
                    this.COIFRSPresentValueField = value;
                    this.RaisePropertyChanged("COIFRSPresentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardID {
            get {
                return this.CardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CardIDField, value) != true)) {
                    this.CardIDField = value;
                    this.RaisePropertyChanged("CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardMemberName {
            get {
                return this.CardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardMemberNameField, value) != true)) {
                    this.CardMemberNameField = value;
                    this.RaisePropertyChanged("CardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeField, value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardTypeDescription {
            get {
                return this.CardTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeDescriptionField, value) != true)) {
                    this.CardTypeDescriptionField = value;
                    this.RaisePropertyChanged("CardTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardmemberReference {
            get {
                return this.CardmemberReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CardmemberReferenceField, value) != true)) {
                    this.CardmemberReferenceField = value;
                    this.RaisePropertyChanged("CardmemberReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDateTime {
            get {
                return this.ChangeDateTimeField;
            }
            set {
                if ((this.ChangeDateTimeField.Equals(value) != true)) {
                    this.ChangeDateTimeField = value;
                    this.RaisePropertyChanged("ChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckRef {
            get {
                return this.CheckRefField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckRefField, value) != true)) {
                    this.CheckRefField = value;
                    this.RaisePropertyChanged("CheckRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CollectionsCust {
            get {
                return this.CollectionsCustField;
            }
            set {
                if ((this.CollectionsCustField.Equals(value) != true)) {
                    this.CollectionsCustField = value;
                    this.RaisePropertyChanged("CollectionsCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CollectionsInv {
            get {
                return this.CollectionsInvField;
            }
            set {
                if ((this.CollectionsInvField.Equals(value) != true)) {
                    this.CollectionsInvField = value;
                    this.RaisePropertyChanged("CollectionsInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Consolidated {
            get {
                return this.ConsolidatedField;
            }
            set {
                if ((this.ConsolidatedField.Equals(value) != true)) {
                    this.ConsolidatedField = value;
                    this.RaisePropertyChanged("Consolidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmailAddr {
            get {
                return this.ContactEmailAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailAddrField, value) != true)) {
                    this.ContactEmailAddrField = value;
                    this.RaisePropertyChanged("ContactEmailAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactFaxNum {
            get {
                return this.ContactFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFaxNumField, value) != true)) {
                    this.ContactFaxNumField = value;
                    this.RaisePropertyChanged("ContactFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhoneNum {
            get {
                return this.ContactPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneNumField, value) != true)) {
                    this.ContactPhoneNumField = value;
                    this.RaisePropertyChanged("ContactPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContractDate {
            get {
                return this.ContractDateField;
            }
            set {
                if ((this.ContractDateField.Equals(value) != true)) {
                    this.ContractDateField = value;
                    this.RaisePropertyChanged("ContractDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractRef {
            get {
                return this.ContractRefField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractRefField, value) != true)) {
                    this.ContractRefField = value;
                    this.RaisePropertyChanged("ContractRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConvertedFromDep {
            get {
                return this.ConvertedFromDepField;
            }
            set {
                if ((this.ConvertedFromDepField.Equals(value) != true)) {
                    this.ConvertedFromDepField = value;
                    this.RaisePropertyChanged("ConvertedFromDep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyLatestInvoice {
            get {
                return this.CopyLatestInvoiceField;
            }
            set {
                if ((this.CopyLatestInvoiceField.Equals(value) != true)) {
                    this.CopyLatestInvoiceField = value;
                    this.RaisePropertyChanged("CopyLatestInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CorrectionInv {
            get {
                return this.CorrectionInvField;
            }
            set {
                if ((this.CorrectionInvField.Equals(value) != true)) {
                    this.CorrectionInvField = value;
                    this.RaisePropertyChanged("CorrectionInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CounterARForm {
            get {
                return this.CounterARFormField;
            }
            set {
                if ((this.CounterARFormField.Equals(value) != true)) {
                    this.CounterARFormField = value;
                    this.RaisePropertyChanged("CounterARForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditMemo {
            get {
                return this.CreditMemoField;
            }
            set {
                if ((this.CreditMemoField.Equals(value) != true)) {
                    this.CreditMemoField = value;
                    this.RaisePropertyChanged("CreditMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CumulativeBalance {
            get {
                return this.CumulativeBalanceField;
            }
            set {
                if ((this.CumulativeBalanceField.Equals(value) != true)) {
                    this.CumulativeBalanceField = value;
                    this.RaisePropertyChanged("CumulativeBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CurrRateDate {
            get {
                return this.CurrRateDateField;
            }
            set {
                if ((this.CurrRateDateField.Equals(value) != true)) {
                    this.CurrRateDateField = value;
                    this.RaisePropertyChanged("CurrRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrRateGrpDescription {
            get {
                return this.CurrRateGrpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrRateGrpDescriptionField, value) != true)) {
                    this.CurrRateGrpDescriptionField = value;
                    this.RaisePropertyChanged("CurrRateGrpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrDesc {
            get {
                return this.CurrencyCodeCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrDescField, value) != true)) {
                    this.CurrencyCodeCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrSymbol {
            get {
                return this.CurrencyCodeCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrSymbolField, value) != true)) {
                    this.CurrencyCodeCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrencyID {
            get {
                return this.CurrencyCodeCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrencyIDField, value) != true)) {
                    this.CurrencyCodeCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentInstanceNum {
            get {
                return this.CurrentInstanceNumField;
            }
            set {
                if ((this.CurrentInstanceNumField.Equals(value) != true)) {
                    this.CurrentInstanceNumField = value;
                    this.RaisePropertyChanged("CurrentInstanceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustAgentName {
            get {
                return this.CustAgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustAgentNameField, value) != true)) {
                    this.CustAgentNameField = value;
                    this.RaisePropertyChanged("CustAgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustAgentTaxRegNo {
            get {
                return this.CustAgentTaxRegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustAgentTaxRegNoField, value) != true)) {
                    this.CustAgentTaxRegNoField = value;
                    this.RaisePropertyChanged("CustAgentTaxRegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustAllowOTS {
            get {
                return this.CustAllowOTSField;
            }
            set {
                if ((this.CustAllowOTSField.Equals(value) != true)) {
                    this.CustAllowOTSField = value;
                    this.RaisePropertyChanged("CustAllowOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustOnCreditHold {
            get {
                return this.CustOnCreditHoldField;
            }
            set {
                if ((this.CustOnCreditHoldField.Equals(value) != true)) {
                    this.CustOnCreditHoldField = value;
                    this.RaisePropertyChanged("CustOnCreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBTName {
            get {
                return this.CustomerBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerBTNameField, value) != true)) {
                    this.CustomerBTNameField = value;
                    this.RaisePropertyChanged("CustomerBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CycleCode {
            get {
                return this.CycleCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CycleCodeField, value) != true)) {
                    this.CycleCodeField = value;
                    this.RaisePropertyChanged("CycleCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CycleInactive {
            get {
                return this.CycleInactiveField;
            }
            set {
                if ((this.CycleInactiveField.Equals(value) != true)) {
                    this.CycleInactiveField = value;
                    this.RaisePropertyChanged("CycleInactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNComments {
            get {
                return this.DNCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DNCommentsField, value) != true)) {
                    this.DNCommentsField = value;
                    this.RaisePropertyChanged("DNComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNCustNbr {
            get {
                return this.DNCustNbrField;
            }
            set {
                if ((object.ReferenceEquals(this.DNCustNbrField, value) != true)) {
                    this.DNCustNbrField = value;
                    this.RaisePropertyChanged("DNCustNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DNPmtAmt {
            get {
                return this.DNPmtAmtField;
            }
            set {
                if ((this.DNPmtAmtField.Equals(value) != true)) {
                    this.DNPmtAmtField = value;
                    this.RaisePropertyChanged("DNPmtAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DebitNote {
            get {
                return this.DebitNoteField;
            }
            set {
                if ((this.DebitNoteField.Equals(value) != true)) {
                    this.DebitNoteField = value;
                    this.RaisePropertyChanged("DebitNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deferred {
            get {
                return this.DeferredField;
            }
            set {
                if ((this.DeferredField.Equals(value) != true)) {
                    this.DeferredField = value;
                    this.RaisePropertyChanged("Deferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeferredRevenue {
            get {
                return this.DeferredRevenueField;
            }
            set {
                if ((this.DeferredRevenueField.Equals(value) != true)) {
                    this.DeferredRevenueField = value;
                    this.RaisePropertyChanged("DeferredRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepBal {
            get {
                return this.DepBalField;
            }
            set {
                if ((this.DepBalField.Equals(value) != true)) {
                    this.DepBalField = value;
                    this.RaisePropertyChanged("DepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepGainLoss {
            get {
                return this.DepGainLossField;
            }
            set {
                if ((this.DepGainLossField.Equals(value) != true)) {
                    this.DepGainLossField = value;
                    this.RaisePropertyChanged("DepGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepUnallocatedAmt {
            get {
                return this.DepUnallocatedAmtField;
            }
            set {
                if ((this.DepUnallocatedAmtField.Equals(value) != true)) {
                    this.DepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("DepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepositAmt {
            get {
                return this.DepositAmtField;
            }
            set {
                if ((this.DepositAmtField.Equals(value) != true)) {
                    this.DepositAmtField = value;
                    this.RaisePropertyChanged("DepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepositCredit {
            get {
                return this.DepositCreditField;
            }
            set {
                if ((this.DepositCreditField.Equals(value) != true)) {
                    this.DepositCreditField = value;
                    this.RaisePropertyChanged("DepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DepositCreditEnabled {
            get {
                return this.DepositCreditEnabledField;
            }
            set {
                if ((this.DepositCreditEnabledField.Equals(value) != true)) {
                    this.DepositCreditEnabledField = value;
                    this.RaisePropertyChanged("DepositCreditEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DirectDebiting {
            get {
                return this.DirectDebitingField;
            }
            set {
                if ((this.DirectDebitingField.Equals(value) != true)) {
                    this.DirectDebitingField = value;
                    this.RaisePropertyChanged("DirectDebiting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableAplDate {
            get {
                return this.DisableAplDateField;
            }
            set {
                if ((this.DisableAplDateField.Equals(value) != true)) {
                    this.DisableAplDateField = value;
                    this.RaisePropertyChanged("DisableAplDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DispBalDN {
            get {
                return this.DispBalDNField;
            }
            set {
                if ((this.DispBalDNField.Equals(value) != true)) {
                    this.DispBalDNField = value;
                    this.RaisePropertyChanged("DispBalDN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayBillAddr {
            get {
                return this.DisplayBillAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayBillAddrField, value) != true)) {
                    this.DisplayBillAddrField = value;
                    this.RaisePropertyChanged("DisplayBillAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayCreditCardNum {
            get {
                return this.DisplayCreditCardNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayCreditCardNumField, value) != true)) {
                    this.DisplayCreditCardNumField = value;
                    this.RaisePropertyChanged("DisplayCreditCardNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayCurrencyID {
            get {
                return this.DisplayCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayCurrencyIDField, value) != true)) {
                    this.DisplayCurrencyIDField = value;
                    this.RaisePropertyChanged("DisplayCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocABAmt {
            get {
                return this.DocABAmtField;
            }
            set {
                if ((this.DocABAmtField.Equals(value) != true)) {
                    this.DocABAmtField = value;
                    this.RaisePropertyChanged("DocABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocCOIFRSFinancialCharge {
            get {
                return this.DocCOIFRSFinancialChargeField;
            }
            set {
                if ((this.DocCOIFRSFinancialChargeField.Equals(value) != true)) {
                    this.DocCOIFRSFinancialChargeField = value;
                    this.RaisePropertyChanged("DocCOIFRSFinancialCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocCOIFRSPresentValue {
            get {
                return this.DocCOIFRSPresentValueField;
            }
            set {
                if ((this.DocCOIFRSPresentValueField.Equals(value) != true)) {
                    this.DocCOIFRSPresentValueField = value;
                    this.RaisePropertyChanged("DocCOIFRSPresentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocCumulativeBalance {
            get {
                return this.DocCumulativeBalanceField;
            }
            set {
                if ((this.DocCumulativeBalanceField.Equals(value) != true)) {
                    this.DocCumulativeBalanceField = value;
                    this.RaisePropertyChanged("DocCumulativeBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDNPmtAmt {
            get {
                return this.DocDNPmtAmtField;
            }
            set {
                if ((this.DocDNPmtAmtField.Equals(value) != true)) {
                    this.DocDNPmtAmtField = value;
                    this.RaisePropertyChanged("DocDNPmtAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepApplied {
            get {
                return this.DocDepAppliedField;
            }
            set {
                if ((this.DocDepAppliedField.Equals(value) != true)) {
                    this.DocDepAppliedField = value;
                    this.RaisePropertyChanged("DocDepApplied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepBal {
            get {
                return this.DocDepBalField;
            }
            set {
                if ((this.DocDepBalField.Equals(value) != true)) {
                    this.DocDepBalField = value;
                    this.RaisePropertyChanged("DocDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepUnallocatedAmt {
            get {
                return this.DocDepUnallocatedAmtField;
            }
            set {
                if ((this.DocDepUnallocatedAmtField.Equals(value) != true)) {
                    this.DocDepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("DocDepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepositAmt {
            get {
                return this.DocDepositAmtField;
            }
            set {
                if ((this.DocDepositAmtField.Equals(value) != true)) {
                    this.DocDepositAmtField = value;
                    this.RaisePropertyChanged("DocDepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepositCredit {
            get {
                return this.DocDepositCreditField;
            }
            set {
                if ((this.DocDepositCreditField.Equals(value) != true)) {
                    this.DocDepositCreditField = value;
                    this.RaisePropertyChanged("DocDepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDispBalDN {
            get {
                return this.DocDispBalDNField;
            }
            set {
                if ((this.DocDispBalDNField.Equals(value) != true)) {
                    this.DocDispBalDNField = value;
                    this.RaisePropertyChanged("DocDispBalDN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspPrepDeposit {
            get {
                return this.DocDspPrepDepositField;
            }
            set {
                if ((this.DocDspPrepDepositField.Equals(value) != true)) {
                    this.DocDspPrepDepositField = value;
                    this.RaisePropertyChanged("DocDspPrepDeposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspTaxAmt {
            get {
                return this.DocDspTaxAmtField;
            }
            set {
                if ((this.DocDspTaxAmtField.Equals(value) != true)) {
                    this.DocDspTaxAmtField = value;
                    this.RaisePropertyChanged("DocDspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoiceAmt {
            get {
                return this.DocInvoiceAmtField;
            }
            set {
                if ((this.DocInvoiceAmtField.Equals(value) != true)) {
                    this.DocInvoiceAmtField = value;
                    this.RaisePropertyChanged("DocInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoiceBal {
            get {
                return this.DocInvoiceBalField;
            }
            set {
                if ((this.DocInvoiceBalField.Equals(value) != true)) {
                    this.DocInvoiceBalField = value;
                    this.RaisePropertyChanged("DocInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMaxValueAmt {
            get {
                return this.DocMaxValueAmtField;
            }
            set {
                if ((this.DocMaxValueAmtField.Equals(value) != true)) {
                    this.DocMaxValueAmtField = value;
                    this.RaisePropertyChanged("DocMaxValueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPECharges {
            get {
                return this.DocPEChargesField;
            }
            set {
                if ((this.DocPEChargesField.Equals(value) != true)) {
                    this.DocPEChargesField = value;
                    this.RaisePropertyChanged("DocPECharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPECommissions {
            get {
                return this.DocPECommissionsField;
            }
            set {
                if ((this.DocPECommissionsField.Equals(value) != true)) {
                    this.DocPECommissionsField = value;
                    this.RaisePropertyChanged("DocPECommissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPEDetTaxAmt {
            get {
                return this.DocPEDetTaxAmtField;
            }
            set {
                if ((this.DocPEDetTaxAmtField.Equals(value) != true)) {
                    this.DocPEDetTaxAmtField = value;
                    this.RaisePropertyChanged("DocPEDetTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPEDischargeAmt {
            get {
                return this.DocPEDischargeAmtField;
            }
            set {
                if ((this.DocPEDischargeAmtField.Equals(value) != true)) {
                    this.DocPEDischargeAmtField = value;
                    this.RaisePropertyChanged("DocPEDischargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPEInterest {
            get {
                return this.DocPEInterestField;
            }
            set {
                if ((this.DocPEInterestField.Equals(value) != true)) {
                    this.DocPEInterestField = value;
                    this.RaisePropertyChanged("DocPEInterest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPENoPayPenalty {
            get {
                return this.DocPENoPayPenaltyField;
            }
            set {
                if ((this.DocPENoPayPenaltyField.Equals(value) != true)) {
                    this.DocPENoPayPenaltyField = value;
                    this.RaisePropertyChanged("DocPENoPayPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPESUNATDepAmt {
            get {
                return this.DocPESUNATDepAmtField;
            }
            set {
                if ((this.DocPESUNATDepAmtField.Equals(value) != true)) {
                    this.DocPESUNATDepAmtField = value;
                    this.RaisePropertyChanged("DocPESUNATDepAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocPayAmounts {
            get {
                return this.DocPayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocPayAmountsField, value) != true)) {
                    this.DocPayAmountsField = value;
                    this.RaisePropertyChanged("DocPayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPayDiscAmt {
            get {
                return this.DocPayDiscAmtField;
            }
            set {
                if ((this.DocPayDiscAmtField.Equals(value) != true)) {
                    this.DocPayDiscAmtField = value;
                    this.RaisePropertyChanged("DocPayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRecurBalance {
            get {
                return this.DocRecurBalanceField;
            }
            set {
                if ((this.DocRecurBalanceField.Equals(value) != true)) {
                    this.DocRecurBalanceField = value;
                    this.RaisePropertyChanged("DocRecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRemainTaxAmt {
            get {
                return this.DocRemainTaxAmtField;
            }
            set {
                if ((this.DocRemainTaxAmtField.Equals(value) != true)) {
                    this.DocRemainTaxAmtField = value;
                    this.RaisePropertyChanged("DocRemainTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReverseTaxAmt {
            get {
                return this.DocReverseTaxAmtField;
            }
            set {
                if ((this.DocReverseTaxAmtField.Equals(value) != true)) {
                    this.DocReverseTaxAmtField = value;
                    this.RaisePropertyChanged("DocReverseTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRounding {
            get {
                return this.DocRoundingField;
            }
            set {
                if ((this.DocRoundingField.Equals(value) != true)) {
                    this.DocRoundingField = value;
                    this.RaisePropertyChanged("DocRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocSATaxAmt {
            get {
                return this.DocSATaxAmtField;
            }
            set {
                if ((this.DocSATaxAmtField.Equals(value) != true)) {
                    this.DocSATaxAmtField = value;
                    this.RaisePropertyChanged("DocSATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocSourceRecurBalance {
            get {
                return this.DocSourceRecurBalanceField;
            }
            set {
                if ((this.DocSourceRecurBalanceField.Equals(value) != true)) {
                    this.DocSourceRecurBalanceField = value;
                    this.RaisePropertyChanged("DocSourceRecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocSubTotal {
            get {
                return this.DocSubTotalField;
            }
            set {
                if ((this.DocSubTotalField.Equals(value) != true)) {
                    this.DocSubTotalField = value;
                    this.RaisePropertyChanged("DocSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnpostedBal {
            get {
                return this.DocUnpostedBalField;
            }
            set {
                if ((this.DocUnpostedBalField.Equals(value) != true)) {
                    this.DocUnpostedBalField = value;
                    this.RaisePropertyChanged("DocUnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocVr {
            get {
                return this.DocVrField;
            }
            set {
                if ((this.DocVrField.Equals(value) != true)) {
                    this.DocVrField = value;
                    this.RaisePropertyChanged("DocVr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocWHTaxAmt {
            get {
                return this.DocWHTaxAmtField;
            }
            set {
                if ((this.DocWHTaxAmtField.Equals(value) != true)) {
                    this.DocWHTaxAmtField = value;
                    this.RaisePropertyChanged("DocWHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocWithholdAmt {
            get {
                return this.DocWithholdAmtField;
            }
            set {
                if ((this.DocWithholdAmtField.Equals(value) != true)) {
                    this.DocWithholdAmtField = value;
                    this.RaisePropertyChanged("DocWithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentPrinted {
            get {
                return this.DocumentPrintedField;
            }
            set {
                if ((this.DocumentPrintedField.Equals(value) != true)) {
                    this.DocumentPrintedField = value;
                    this.RaisePropertyChanged("DocumentPrinted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspABAmt {
            get {
                return this.DspABAmtField;
            }
            set {
                if ((this.DspABAmtField.Equals(value) != true)) {
                    this.DspABAmtField = value;
                    this.RaisePropertyChanged("DspABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDepBal {
            get {
                return this.DspDepBalField;
            }
            set {
                if ((this.DspDepBalField.Equals(value) != true)) {
                    this.DspDepBalField = value;
                    this.RaisePropertyChanged("DspDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDepCr {
            get {
                return this.DspDepCrField;
            }
            set {
                if ((this.DspDepCrField.Equals(value) != true)) {
                    this.DspDepCrField = value;
                    this.RaisePropertyChanged("DspDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocABAmt {
            get {
                return this.DspDocABAmtField;
            }
            set {
                if ((this.DspDocABAmtField.Equals(value) != true)) {
                    this.DspDocABAmtField = value;
                    this.RaisePropertyChanged("DspDocABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocDepBal {
            get {
                return this.DspDocDepBalField;
            }
            set {
                if ((this.DspDocDepBalField.Equals(value) != true)) {
                    this.DspDocDepBalField = value;
                    this.RaisePropertyChanged("DspDocDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocDepCr {
            get {
                return this.DspDocDepCrField;
            }
            set {
                if ((this.DspDocDepCrField.Equals(value) != true)) {
                    this.DspDocDepCrField = value;
                    this.RaisePropertyChanged("DspDocDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocInvoiceAmt {
            get {
                return this.DspDocInvoiceAmtField;
            }
            set {
                if ((this.DspDocInvoiceAmtField.Equals(value) != true)) {
                    this.DspDocInvoiceAmtField = value;
                    this.RaisePropertyChanged("DspDocInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocInvoiceBal {
            get {
                return this.DspDocInvoiceBalField;
            }
            set {
                if ((this.DspDocInvoiceBalField.Equals(value) != true)) {
                    this.DspDocInvoiceBalField = value;
                    this.RaisePropertyChanged("DspDocInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocRounding {
            get {
                return this.DspDocRoundingField;
            }
            set {
                if ((this.DspDocRoundingField.Equals(value) != true)) {
                    this.DspDocRoundingField = value;
                    this.RaisePropertyChanged("DspDocRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocSubTotal {
            get {
                return this.DspDocSubTotalField;
            }
            set {
                if ((this.DspDocSubTotalField.Equals(value) != true)) {
                    this.DspDocSubTotalField = value;
                    this.RaisePropertyChanged("DspDocSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspInvoiceAmt {
            get {
                return this.DspInvoiceAmtField;
            }
            set {
                if ((this.DspInvoiceAmtField.Equals(value) != true)) {
                    this.DspInvoiceAmtField = value;
                    this.RaisePropertyChanged("DspInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspInvoiceBal {
            get {
                return this.DspInvoiceBalField;
            }
            set {
                if ((this.DspInvoiceBalField.Equals(value) != true)) {
                    this.DspInvoiceBalField = value;
                    this.RaisePropertyChanged("DspInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DspInvoiceRef {
            get {
                return this.DspInvoiceRefField;
            }
            set {
                if ((this.DspInvoiceRefField.Equals(value) != true)) {
                    this.DspInvoiceRefField = value;
                    this.RaisePropertyChanged("DspInvoiceRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspPayDiscDays {
            get {
                return this.DspPayDiscDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.DspPayDiscDaysField, value) != true)) {
                    this.DspPayDiscDaysField = value;
                    this.RaisePropertyChanged("DspPayDiscDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspPrepDeposit {
            get {
                return this.DspPrepDepositField;
            }
            set {
                if ((this.DspPrepDepositField.Equals(value) != true)) {
                    this.DspPrepDepositField = value;
                    this.RaisePropertyChanged("DspPrepDeposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspRounding {
            get {
                return this.DspRoundingField;
            }
            set {
                if ((this.DspRoundingField.Equals(value) != true)) {
                    this.DspRoundingField = value;
                    this.RaisePropertyChanged("DspRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspSubTotal {
            get {
                return this.DspSubTotalField;
            }
            set {
                if ((this.DspSubTotalField.Equals(value) != true)) {
                    this.DspSubTotalField = value;
                    this.RaisePropertyChanged("DspSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspTaxAmt {
            get {
                return this.DspTaxAmtField;
            }
            set {
                if ((this.DspTaxAmtField.Equals(value) != true)) {
                    this.DspTaxAmtField = value;
                    this.RaisePropertyChanged("DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EDIReady {
            get {
                return this.EDIReadyField;
            }
            set {
                if ((this.EDIReadyField.Equals(value) != true)) {
                    this.EDIReadyField = value;
                    this.RaisePropertyChanged("EDIReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EInvException {
            get {
                return this.EInvExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EInvExceptionField, value) != true)) {
                    this.EInvExceptionField = value;
                    this.RaisePropertyChanged("EInvException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EInvStatus {
            get {
                return this.EInvStatusField;
            }
            set {
                if ((this.EInvStatusField.Equals(value) != true)) {
                    this.EInvStatusField = value;
                    this.RaisePropertyChanged("EInvStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EInvTimestamp {
            get {
                return this.EInvTimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.EInvTimestampField, value) != true)) {
                    this.EInvTimestampField = value;
                    this.RaisePropertyChanged("EInvTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EInvUpdatedBy {
            get {
                return this.EInvUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.EInvUpdatedByField, value) != true)) {
                    this.EInvUpdatedByField = value;
                    this.RaisePropertyChanged("EInvUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EInvoice {
            get {
                return this.EInvoiceField;
            }
            set {
                if ((this.EInvoiceField.Equals(value) != true)) {
                    this.EInvoiceField = value;
                    this.RaisePropertyChanged("EInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ERSInvoice {
            get {
                return this.ERSInvoiceField;
            }
            set {
                if ((this.ERSInvoiceField.Equals(value) != true)) {
                    this.ERSInvoiceField = value;
                    this.RaisePropertyChanged("ERSInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableAssignLegNum {
            get {
                return this.EnableAssignLegNumField;
            }
            set {
                if ((this.EnableAssignLegNumField.Equals(value) != true)) {
                    this.EnableAssignLegNumField = value;
                    this.RaisePropertyChanged("EnableAssignLegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSOCCDefaults {
            get {
                return this.EnableSOCCDefaultsField;
            }
            set {
                if ((this.EnableSOCCDefaultsField.Equals(value) != true)) {
                    this.EnableSOCCDefaultsField = value;
                    this.RaisePropertyChanged("EnableSOCCDefaults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTranDocType {
            get {
                return this.EnableTranDocTypeField;
            }
            set {
                if ((this.EnableTranDocTypeField.Equals(value) != true)) {
                    this.EnableTranDocTypeField = value;
                    this.RaisePropertyChanged("EnableTranDocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableVoidLegNum {
            get {
                return this.EnableVoidLegNumField;
            }
            set {
                if ((this.EnableVoidLegNumField.Equals(value) != true)) {
                    this.EnableVoidLegNumField = value;
                    this.RaisePropertyChanged("EnableVoidLegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExchangeRateDate {
            get {
                return this.ExchangeRateDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExchangeRateDateField, value) != true)) {
                    this.ExchangeRateDateField = value;
                    this.RaisePropertyChanged("ExchangeRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Excluded {
            get {
                return this.ExcludedField;
            }
            set {
                if ((this.ExcludedField.Equals(value) != true)) {
                    this.ExcludedField = value;
                    this.RaisePropertyChanged("Excluded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpirationMonth {
            get {
                return this.ExpirationMonthField;
            }
            set {
                if ((this.ExpirationMonthField.Equals(value) != true)) {
                    this.ExpirationMonthField = value;
                    this.RaisePropertyChanged("ExpirationMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpirationYear {
            get {
                return this.ExpirationYearField;
            }
            set {
                if ((this.ExpirationYearField.Equals(value) != true)) {
                    this.ExpirationYearField = value;
                    this.RaisePropertyChanged("ExpirationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExportReportNo {
            get {
                return this.ExportReportNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExportReportNoField, value) != true)) {
                    this.ExportReportNoField = value;
                    this.RaisePropertyChanged("ExportReportNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExportType {
            get {
                return this.ExportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExportTypeField, value) != true)) {
                    this.ExportTypeField = value;
                    this.RaisePropertyChanged("ExportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOB {
            get {
                return this.FOBField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBField, value) != true)) {
                    this.FOBField = value;
                    this.RaisePropertyChanged("FOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOBDescription {
            get {
                return this.FOBDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBDescriptionField, value) != true)) {
                    this.FOBDescriptionField = value;
                    this.RaisePropertyChanged("FOBDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalCalendarID {
            get {
                return this.FiscalCalendarIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalCalendarIDField, value) != true)) {
                    this.FiscalCalendarIDField = value;
                    this.RaisePropertyChanged("FiscalCalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalPeriod {
            get {
                return this.FiscalPeriodField;
            }
            set {
                if ((this.FiscalPeriodField.Equals(value) != true)) {
                    this.FiscalPeriodField = value;
                    this.RaisePropertyChanged("FiscalPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalYear {
            get {
                return this.FiscalYearField;
            }
            set {
                if ((this.FiscalYearField.Equals(value) != true)) {
                    this.FiscalYearField = value;
                    this.RaisePropertyChanged("FiscalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalYearSuffix {
            get {
                return this.FiscalYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalYearSuffixField, value) != true)) {
                    this.FiscalYearSuffixField = value;
                    this.RaisePropertyChanged("FiscalYearSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GLPosted {
            get {
                return this.GLPostedField;
            }
            set {
                if ((this.GLPostedField.Equals(value) != true)) {
                    this.GLPostedField = value;
                    this.RaisePropertyChanged("GLPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GUIDateOfExport {
            get {
                return this.GUIDateOfExportField;
            }
            set {
                if ((this.GUIDateOfExportField.Equals(value) != true)) {
                    this.GUIDateOfExportField = value;
                    this.RaisePropertyChanged("GUIDateOfExport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIDeductCode {
            get {
                return this.GUIDeductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDeductCodeField, value) != true)) {
                    this.GUIDeductCodeField = value;
                    this.RaisePropertyChanged("GUIDeductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIExportBillNumber {
            get {
                return this.GUIExportBillNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIExportBillNumberField, value) != true)) {
                    this.GUIExportBillNumberField = value;
                    this.RaisePropertyChanged("GUIExportBillNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIExportBillType {
            get {
                return this.GUIExportBillTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIExportBillTypeField, value) != true)) {
                    this.GUIExportBillTypeField = value;
                    this.RaisePropertyChanged("GUIExportBillType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIExportMark {
            get {
                return this.GUIExportMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIExportMarkField, value) != true)) {
                    this.GUIExportMarkField = value;
                    this.RaisePropertyChanged("GUIExportMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIExportType {
            get {
                return this.GUIExportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIExportTypeField, value) != true)) {
                    this.GUIExportTypeField = value;
                    this.RaisePropertyChanged("GUIExportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIFormatCode {
            get {
                return this.GUIFormatCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIFormatCodeField, value) != true)) {
                    this.GUIFormatCodeField = value;
                    this.RaisePropertyChanged("GUIFormatCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUITaxTypeCode {
            get {
                return this.GUITaxTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUITaxTypeCodeField, value) != true)) {
                    this.GUITaxTypeCodeField = value;
                    this.RaisePropertyChanged("GUITaxTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GenedFromRMA {
            get {
                return this.GenedFromRMAField;
            }
            set {
                if ((this.GenedFromRMAField.Equals(value) != true)) {
                    this.GenedFromRMAField = value;
                    this.RaisePropertyChanged("GenedFromRMA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasBank {
            get {
                return this.HasBankField;
            }
            set {
                if ((this.HasBankField.Equals(value) != true)) {
                    this.HasBankField = value;
                    this.RaisePropertyChanged("HasBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLegNumCnfg {
            get {
                return this.HasLegNumCnfgField;
            }
            set {
                if ((this.HasLegNumCnfgField.Equals(value) != true)) {
                    this.HasLegNumCnfgField = value;
                    this.RaisePropertyChanged("HasLegNumCnfg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeadNum {
            get {
                return this.HeadNumField;
            }
            set {
                if ((this.HeadNumField.Equals(value) != true)) {
                    this.HeadNumField = value;
                    this.RaisePropertyChanged("HeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HoldInvoice {
            get {
                return this.HoldInvoiceField;
            }
            set {
                if ((this.HoldInvoiceField.Equals(value) != true)) {
                    this.HoldInvoiceField = value;
                    this.RaisePropertyChanged("HoldInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstanceNum {
            get {
                return this.InstanceNumField;
            }
            set {
                if ((this.InstanceNumField.Equals(value) != true)) {
                    this.InstanceNumField = value;
                    this.RaisePropertyChanged("InstanceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvInCollections {
            get {
                return this.InvInCollectionsField;
            }
            set {
                if ((this.InvInCollectionsField.Equals(value) != true)) {
                    this.InvInCollectionsField = value;
                    this.RaisePropertyChanged("InvInCollections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceAmt {
            get {
                return this.InvoiceAmtField;
            }
            set {
                if ((this.InvoiceAmtField.Equals(value) != true)) {
                    this.InvoiceAmtField = value;
                    this.RaisePropertyChanged("InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceBal {
            get {
                return this.InvoiceBalField;
            }
            set {
                if ((this.InvoiceBalField.Equals(value) != true)) {
                    this.InvoiceBalField = value;
                    this.RaisePropertyChanged("InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceComment {
            get {
                return this.InvoiceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCommentField, value) != true)) {
                    this.InvoiceCommentField = value;
                    this.RaisePropertyChanged("InvoiceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoiceHeld {
            get {
                return this.InvoiceHeldField;
            }
            set {
                if ((this.InvoiceHeldField.Equals(value) != true)) {
                    this.InvoiceHeldField = value;
                    this.RaisePropertyChanged("InvoiceHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumList {
            get {
                return this.InvoiceNumListField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumListField, value) != true)) {
                    this.InvoiceNumListField = value;
                    this.RaisePropertyChanged("InvoiceNumList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceRef {
            get {
                return this.InvoiceRefField;
            }
            set {
                if ((this.InvoiceRefField.Equals(value) != true)) {
                    this.InvoiceRefField = value;
                    this.RaisePropertyChanged("InvoiceRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceSuffix {
            get {
                return this.InvoiceSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceSuffixField, value) != true)) {
                    this.InvoiceSuffixField = value;
                    this.RaisePropertyChanged("InvoiceSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceType {
            get {
                return this.InvoiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeField, value) != true)) {
                    this.InvoiceTypeField = value;
                    this.RaisePropertyChanged("InvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceTypeDesc {
            get {
                return this.InvoiceTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeDescField, value) != true)) {
                    this.InvoiceTypeDescField = value;
                    this.RaisePropertyChanged("InvoiceTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAddedToGTI {
            get {
                return this.IsAddedToGTIField;
            }
            set {
                if ((this.IsAddedToGTIField.Equals(value) != true)) {
                    this.IsAddedToGTIField = value;
                    this.RaisePropertyChanged("IsAddedToGTI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDK {
            get {
                return this.IsDKField;
            }
            set {
                if ((this.IsDKField.Equals(value) != true)) {
                    this.IsDKField = value;
                    this.RaisePropertyChanged("IsDK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIntrastatSensitive {
            get {
                return this.IsIntrastatSensitiveField;
            }
            set {
                if ((this.IsIntrastatSensitiveField.Equals(value) != true)) {
                    this.IsIntrastatSensitiveField = value;
                    this.RaisePropertyChanged("IsIntrastatSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLatestRecurrence {
            get {
                return this.IsLatestRecurrenceField;
            }
            set {
                if ((this.IsLatestRecurrenceField.Equals(value) != true)) {
                    this.IsLatestRecurrenceField = value;
                    this.RaisePropertyChanged("IsLatestRecurrence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLcked {
            get {
                return this.IsLckedField;
            }
            set {
                if ((this.IsLckedField.Equals(value) != true)) {
                    this.IsLckedField = value;
                    this.RaisePropertyChanged("IsLcked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPMForGenPIType {
            get {
                return this.IsPMForGenPITypeField;
            }
            set {
                if ((this.IsPMForGenPITypeField.Equals(value) != true)) {
                    this.IsPMForGenPITypeField = value;
                    this.RaisePropertyChanged("IsPMForGenPIType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecurring {
            get {
                return this.IsRecurringField;
            }
            set {
                if ((this.IsRecurringField.Equals(value) != true)) {
                    this.IsRecurringField = value;
                    this.RaisePropertyChanged("IsRecurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRevision {
            get {
                return this.IsRevisionField;
            }
            set {
                if ((this.IsRevisionField.Equals(value) != true)) {
                    this.IsRevisionField = value;
                    this.RaisePropertyChanged("IsRevision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalCode {
            get {
                return this.JournalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalCodeField, value) != true)) {
                    this.JournalCodeField = value;
                    this.RaisePropertyChanged("JournalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalCodeJrnlDescription {
            get {
                return this.JournalCodeJrnlDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalCodeJrnlDescriptionField, value) != true)) {
                    this.JournalCodeJrnlDescriptionField = value;
                    this.RaisePropertyChanged("JournalCodeJrnlDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JournalNum {
            get {
                return this.JournalNumField;
            }
            set {
                if ((this.JournalNumField.Equals(value) != true)) {
                    this.JournalNumField = value;
                    this.RaisePropertyChanged("JournalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastChrgCalcDate {
            get {
                return this.LastChrgCalcDateField;
            }
            set {
                if ((this.LastChrgCalcDateField.Equals(value) != true)) {
                    this.LastChrgCalcDateField = value;
                    this.RaisePropertyChanged("LastChrgCalcDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDate {
            get {
                return this.LastDateField;
            }
            set {
                if ((this.LastDateField.Equals(value) != true)) {
                    this.LastDateField = value;
                    this.RaisePropertyChanged("LastDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastRevNum {
            get {
                return this.LastRevNumField;
            }
            set {
                if ((this.LastRevNumField.Equals(value) != true)) {
                    this.LastRevNumField = value;
                    this.RaisePropertyChanged("LastRevNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LatestInvoice {
            get {
                return this.LatestInvoiceField;
            }
            set {
                if ((this.LatestInvoiceField.Equals(value) != true)) {
                    this.LatestInvoiceField = value;
                    this.RaisePropertyChanged("LatestInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineType {
            get {
                return this.LineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LineTypeField, value) != true)) {
                    this.LineTypeField = value;
                    this.RaisePropertyChanged("LineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockRate {
            get {
                return this.LockRateField;
            }
            set {
                if ((this.LockRateField.Equals(value) != true)) {
                    this.LockRateField = value;
                    this.RaisePropertyChanged("LockRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockStatus {
            get {
                return this.LockStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LockStatusField, value) != true)) {
                    this.LockStatusField = value;
                    this.RaisePropertyChanged("LockStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockTaxRate {
            get {
                return this.LockTaxRateField;
            }
            set {
                if ((this.LockTaxRateField.Equals(value) != true)) {
                    this.LockTaxRateField = value;
                    this.RaisePropertyChanged("LockTaxRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXAccountNumber {
            get {
                return this.MXAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MXAccountNumberField, value) != true)) {
                    this.MXAccountNumberField = value;
                    this.RaisePropertyChanged("MXAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MXApprovalNum {
            get {
                return this.MXApprovalNumField;
            }
            set {
                if ((this.MXApprovalNumField.Equals(value) != true)) {
                    this.MXApprovalNumField = value;
                    this.RaisePropertyChanged("MXApprovalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MXApprovalYear {
            get {
                return this.MXApprovalYearField;
            }
            set {
                if ((this.MXApprovalYearField.Equals(value) != true)) {
                    this.MXApprovalYearField = value;
                    this.RaisePropertyChanged("MXApprovalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXCBB {
            get {
                return this.MXCBBField;
            }
            set {
                if ((object.ReferenceEquals(this.MXCBBField, value) != true)) {
                    this.MXCBBField = value;
                    this.RaisePropertyChanged("MXCBB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MXCancelledDate {
            get {
                return this.MXCancelledDateField;
            }
            set {
                if ((this.MXCancelledDateField.Equals(value) != true)) {
                    this.MXCancelledDateField = value;
                    this.RaisePropertyChanged("MXCancelledDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXCertificate {
            get {
                return this.MXCertificateField;
            }
            set {
                if ((object.ReferenceEquals(this.MXCertificateField, value) != true)) {
                    this.MXCertificateField = value;
                    this.RaisePropertyChanged("MXCertificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXCertificateSN {
            get {
                return this.MXCertificateSNField;
            }
            set {
                if ((object.ReferenceEquals(this.MXCertificateSNField, value) != true)) {
                    this.MXCertificateSNField = value;
                    this.RaisePropertyChanged("MXCertificateSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXCertifiedTimestamp {
            get {
                return this.MXCertifiedTimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.MXCertifiedTimestampField, value) != true)) {
                    this.MXCertifiedTimestampField = value;
                    this.RaisePropertyChanged("MXCertifiedTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXDigitalSeal {
            get {
                return this.MXDigitalSealField;
            }
            set {
                if ((object.ReferenceEquals(this.MXDigitalSealField, value) != true)) {
                    this.MXDigitalSealField = value;
                    this.RaisePropertyChanged("MXDigitalSeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MXExportCertOrigin {
            get {
                return this.MXExportCertOriginField;
            }
            set {
                if ((this.MXExportCertOriginField.Equals(value) != true)) {
                    this.MXExportCertOriginField = value;
                    this.RaisePropertyChanged("MXExportCertOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXExportCertOriginNum {
            get {
                return this.MXExportCertOriginNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MXExportCertOriginNumField, value) != true)) {
                    this.MXExportCertOriginNumField = value;
                    this.RaisePropertyChanged("MXExportCertOriginNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXExportConfNum {
            get {
                return this.MXExportConfNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MXExportConfNumField, value) != true)) {
                    this.MXExportConfNumField = value;
                    this.RaisePropertyChanged("MXExportConfNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXExportCustDocCode {
            get {
                return this.MXExportCustDocCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MXExportCustDocCodeField, value) != true)) {
                    this.MXExportCustDocCodeField = value;
                    this.RaisePropertyChanged("MXExportCustDocCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXExportOperationType {
            get {
                return this.MXExportOperationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MXExportOperationTypeField, value) != true)) {
                    this.MXExportOperationTypeField = value;
                    this.RaisePropertyChanged("MXExportOperationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXFiscalFolio {
            get {
                return this.MXFiscalFolioField;
            }
            set {
                if ((object.ReferenceEquals(this.MXFiscalFolioField, value) != true)) {
                    this.MXFiscalFolioField = value;
                    this.RaisePropertyChanged("MXFiscalFolio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXFolio {
            get {
                return this.MXFolioField;
            }
            set {
                if ((object.ReferenceEquals(this.MXFolioField, value) != true)) {
                    this.MXFolioField = value;
                    this.RaisePropertyChanged("MXFolio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXIncoterm {
            get {
                return this.MXIncotermField;
            }
            set {
                if ((object.ReferenceEquals(this.MXIncotermField, value) != true)) {
                    this.MXIncotermField = value;
                    this.RaisePropertyChanged("MXIncoterm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MXOriginalAmount {
            get {
                return this.MXOriginalAmountField;
            }
            set {
                if ((this.MXOriginalAmountField.Equals(value) != true)) {
                    this.MXOriginalAmountField = value;
                    this.RaisePropertyChanged("MXOriginalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MXOriginalDate {
            get {
                return this.MXOriginalDateField;
            }
            set {
                if ((this.MXOriginalDateField.Equals(value) != true)) {
                    this.MXOriginalDateField = value;
                    this.RaisePropertyChanged("MXOriginalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXOriginalFolio {
            get {
                return this.MXOriginalFolioField;
            }
            set {
                if ((object.ReferenceEquals(this.MXOriginalFolioField, value) != true)) {
                    this.MXOriginalFolioField = value;
                    this.RaisePropertyChanged("MXOriginalFolio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXOriginalSeries {
            get {
                return this.MXOriginalSeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.MXOriginalSeriesField, value) != true)) {
                    this.MXOriginalSeriesField = value;
                    this.RaisePropertyChanged("MXOriginalSeries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXOriginalString {
            get {
                return this.MXOriginalStringField;
            }
            set {
                if ((object.ReferenceEquals(this.MXOriginalStringField, value) != true)) {
                    this.MXOriginalStringField = value;
                    this.RaisePropertyChanged("MXOriginalString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXOriginalStringTFD {
            get {
                return this.MXOriginalStringTFDField;
            }
            set {
                if ((object.ReferenceEquals(this.MXOriginalStringTFDField, value) != true)) {
                    this.MXOriginalStringTFDField = value;
                    this.RaisePropertyChanged("MXOriginalStringTFD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXPaidAs {
            get {
                return this.MXPaidAsField;
            }
            set {
                if ((object.ReferenceEquals(this.MXPaidAsField, value) != true)) {
                    this.MXPaidAsField = value;
                    this.RaisePropertyChanged("MXPaidAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MXPartPmt {
            get {
                return this.MXPartPmtField;
            }
            set {
                if ((this.MXPartPmtField.Equals(value) != true)) {
                    this.MXPartPmtField = value;
                    this.RaisePropertyChanged("MXPartPmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXPaymentName {
            get {
                return this.MXPaymentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MXPaymentNameField, value) != true)) {
                    this.MXPaymentNameField = value;
                    this.RaisePropertyChanged("MXPaymentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MXPaymentNum {
            get {
                return this.MXPaymentNumField;
            }
            set {
                if ((this.MXPaymentNumField.Equals(value) != true)) {
                    this.MXPaymentNumField = value;
                    this.RaisePropertyChanged("MXPaymentNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXPostedTimeStamp {
            get {
                return this.MXPostedTimeStampField;
            }
            set {
                if ((object.ReferenceEquals(this.MXPostedTimeStampField, value) != true)) {
                    this.MXPostedTimeStampField = value;
                    this.RaisePropertyChanged("MXPostedTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXSATCertificateSN {
            get {
                return this.MXSATCertificateSNField;
            }
            set {
                if ((object.ReferenceEquals(this.MXSATCertificateSNField, value) != true)) {
                    this.MXSATCertificateSNField = value;
                    this.RaisePropertyChanged("MXSATCertificateSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXSATSeal {
            get {
                return this.MXSATSealField;
            }
            set {
                if ((object.ReferenceEquals(this.MXSATSealField, value) != true)) {
                    this.MXSATSealField = value;
                    this.RaisePropertyChanged("MXSATSeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXSerie {
            get {
                return this.MXSerieField;
            }
            set {
                if ((object.ReferenceEquals(this.MXSerieField, value) != true)) {
                    this.MXSerieField = value;
                    this.RaisePropertyChanged("MXSerie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXTaxRcptType {
            get {
                return this.MXTaxRcptTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MXTaxRcptTypeField, value) != true)) {
                    this.MXTaxRcptTypeField = value;
                    this.RaisePropertyChanged("MXTaxRcptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXTaxRegime {
            get {
                return this.MXTaxRegimeField;
            }
            set {
                if ((object.ReferenceEquals(this.MXTaxRegimeField, value) != true)) {
                    this.MXTaxRegimeField = value;
                    this.RaisePropertyChanged("MXTaxRegime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MXTotalPayments {
            get {
                return this.MXTotalPaymentsField;
            }
            set {
                if ((this.MXTotalPaymentsField.Equals(value) != true)) {
                    this.MXTotalPaymentsField = value;
                    this.RaisePropertyChanged("MXTotalPayments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MainSite {
            get {
                return this.MainSiteField;
            }
            set {
                if ((this.MainSiteField.Equals(value) != true)) {
                    this.MainSiteField = value;
                    this.RaisePropertyChanged("MainSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxValueAmt {
            get {
                return this.MaxValueAmtField;
            }
            set {
                if ((this.MaxValueAmtField.Equals(value) != true)) {
                    this.MaxValueAmtField = value;
                    this.RaisePropertyChanged("MaxValueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedConfirmTaxes {
            get {
                return this.NeedConfirmTaxesField;
            }
            set {
                if ((this.NeedConfirmTaxesField.Equals(value) != true)) {
                    this.NeedConfirmTaxesField = value;
                    this.RaisePropertyChanged("NeedConfirmTaxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextDiscDate {
            get {
                return this.NextDiscDateField;
            }
            set {
                if ((this.NextDiscDateField.Equals(value) != true)) {
                    this.NextDiscDateField = value;
                    this.RaisePropertyChanged("NextDiscDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextInvoiceDate {
            get {
                return this.NextInvoiceDateField;
            }
            set {
                if ((this.NextInvoiceDateField.Equals(value) != true)) {
                    this.NextInvoiceDateField = value;
                    this.RaisePropertyChanged("NextInvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenInvoice {
            get {
                return this.OpenInvoiceField;
            }
            set {
                if ((this.OpenInvoiceField.Equals(value) != true)) {
                    this.OpenInvoiceField = value;
                    this.RaisePropertyChanged("OpenInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrdExchangeRate {
            get {
                return this.OrdExchangeRateField;
            }
            set {
                if ((this.OrdExchangeRateField.Equals(value) != true)) {
                    this.OrdExchangeRateField = value;
                    this.RaisePropertyChanged("OrdExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrigDueDate {
            get {
                return this.OrigDueDateField;
            }
            set {
                if ((this.OrigDueDateField.Equals(value) != true)) {
                    this.OrigDueDateField = value;
                    this.RaisePropertyChanged("OrigDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBank {
            get {
                return this.OurBankField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankField, value) != true)) {
                    this.OurBankField = value;
                    this.RaisePropertyChanged("OurBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankBankAcctID {
            get {
                return this.OurBankBankAcctIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankBankAcctIDField, value) != true)) {
                    this.OurBankBankAcctIDField = value;
                    this.RaisePropertyChanged("OurBankBankAcctID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankBankIdentifier {
            get {
                return this.OurBankBankIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankBankIdentifierField, value) != true)) {
                    this.OurBankBankIdentifierField = value;
                    this.RaisePropertyChanged("OurBankBankIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankBankName {
            get {
                return this.OurBankBankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankBankNameField, value) != true)) {
                    this.OurBankBankNameField = value;
                    this.RaisePropertyChanged("OurBankBankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankCheckingAccount {
            get {
                return this.OurBankCheckingAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankCheckingAccountField, value) != true)) {
                    this.OurBankCheckingAccountField = value;
                    this.RaisePropertyChanged("OurBankCheckingAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankDescription {
            get {
                return this.OurBankDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankDescriptionField, value) != true)) {
                    this.OurBankDescriptionField = value;
                    this.RaisePropertyChanged("OurBankDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankIBANCode {
            get {
                return this.OurBankIBANCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankIBANCodeField, value) != true)) {
                    this.OurBankIBANCodeField = value;
                    this.RaisePropertyChanged("OurBankIBANCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankLocalBIC {
            get {
                return this.OurBankLocalBICField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankLocalBICField, value) != true)) {
                    this.OurBankLocalBICField = value;
                    this.RaisePropertyChanged("OurBankLocalBIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankPayerRef {
            get {
                return this.OurBankPayerRefField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankPayerRefField, value) != true)) {
                    this.OurBankPayerRefField = value;
                    this.RaisePropertyChanged("OurBankPayerRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankTypeCode {
            get {
                return this.OurBankTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankTypeCodeField, value) != true)) {
                    this.OurBankTypeCodeField = value;
                    this.RaisePropertyChanged("OurBankTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurSupplierCode {
            get {
                return this.OurSupplierCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurSupplierCodeField, value) != true)) {
                    this.OurSupplierCodeField = value;
                    this.RaisePropertyChanged("OurSupplierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Overpaid {
            get {
                return this.OverpaidField;
            }
            set {
                if ((this.OverpaidField.Equals(value) != true)) {
                    this.OverpaidField = value;
                    this.RaisePropertyChanged("Overpaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideEndDate {
            get {
                return this.OverrideEndDateField;
            }
            set {
                if ((this.OverrideEndDateField.Equals(value) != true)) {
                    this.OverrideEndDateField = value;
                    this.RaisePropertyChanged("OverrideEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OvrDefTaxDate {
            get {
                return this.OvrDefTaxDateField;
            }
            set {
                if ((this.OvrDefTaxDateField.Equals(value) != true)) {
                    this.OvrDefTaxDateField = value;
                    this.RaisePropertyChanged("OvrDefTaxDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PBProjectID {
            get {
                return this.PBProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PBProjectIDField, value) != true)) {
                    this.PBProjectIDField = value;
                    this.RaisePropertyChanged("PBProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PEAPPayNum {
            get {
                return this.PEAPPayNumField;
            }
            set {
                if ((this.PEAPPayNumField.Equals(value) != true)) {
                    this.PEAPPayNumField = value;
                    this.RaisePropertyChanged("PEAPPayNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEBOEChangeStatusTo {
            get {
                return this.PEBOEChangeStatusToField;
            }
            set {
                if ((object.ReferenceEquals(this.PEBOEChangeStatusToField, value) != true)) {
                    this.PEBOEChangeStatusToField = value;
                    this.RaisePropertyChanged("PEBOEChangeStatusTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PEBOEIsMultiGen {
            get {
                return this.PEBOEIsMultiGenField;
            }
            set {
                if ((this.PEBOEIsMultiGenField.Equals(value) != true)) {
                    this.PEBOEIsMultiGenField = value;
                    this.RaisePropertyChanged("PEBOEIsMultiGen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PEBOEPosted {
            get {
                return this.PEBOEPostedField;
            }
            set {
                if ((this.PEBOEPostedField.Equals(value) != true)) {
                    this.PEBOEPostedField = value;
                    this.RaisePropertyChanged("PEBOEPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEBOEStatus {
            get {
                return this.PEBOEStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PEBOEStatusField, value) != true)) {
                    this.PEBOEStatusField = value;
                    this.RaisePropertyChanged("PEBOEStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEBOEStatusDesc {
            get {
                return this.PEBOEStatusDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PEBOEStatusDescField, value) != true)) {
                    this.PEBOEStatusDescField = value;
                    this.RaisePropertyChanged("PEBOEStatusDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEBankNumber {
            get {
                return this.PEBankNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PEBankNumberField, value) != true)) {
                    this.PEBankNumberField = value;
                    this.RaisePropertyChanged("PEBankNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PECharges {
            get {
                return this.PEChargesField;
            }
            set {
                if ((this.PEChargesField.Equals(value) != true)) {
                    this.PEChargesField = value;
                    this.RaisePropertyChanged("PECharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PECollectionsDate {
            get {
                return this.PECollectionsDateField;
            }
            set {
                if ((this.PECollectionsDateField.Equals(value) != true)) {
                    this.PECollectionsDateField = value;
                    this.RaisePropertyChanged("PECollectionsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PECommissions {
            get {
                return this.PECommissionsField;
            }
            set {
                if ((this.PECommissionsField.Equals(value) != true)) {
                    this.PECommissionsField = value;
                    this.RaisePropertyChanged("PECommissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PEDebitNote {
            get {
                return this.PEDebitNoteField;
            }
            set {
                if ((this.PEDebitNoteField.Equals(value) != true)) {
                    this.PEDebitNoteField = value;
                    this.RaisePropertyChanged("PEDebitNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEDebitNoteReasonCode {
            get {
                return this.PEDebitNoteReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PEDebitNoteReasonCodeField, value) != true)) {
                    this.PEDebitNoteReasonCodeField = value;
                    this.RaisePropertyChanged("PEDebitNoteReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PEDetTaxAmt {
            get {
                return this.PEDetTaxAmtField;
            }
            set {
                if ((this.PEDetTaxAmtField.Equals(value) != true)) {
                    this.PEDetTaxAmtField = value;
                    this.RaisePropertyChanged("PEDetTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEDetTaxCurrencyCode {
            get {
                return this.PEDetTaxCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PEDetTaxCurrencyCodeField, value) != true)) {
                    this.PEDetTaxCurrencyCodeField = value;
                    this.RaisePropertyChanged("PEDetTaxCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PEDischargeAmt {
            get {
                return this.PEDischargeAmtField;
            }
            set {
                if ((this.PEDischargeAmtField.Equals(value) != true)) {
                    this.PEDischargeAmtField = value;
                    this.RaisePropertyChanged("PEDischargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PEDischargeDate {
            get {
                return this.PEDischargeDateField;
            }
            set {
                if ((this.PEDischargeDateField.Equals(value) != true)) {
                    this.PEDischargeDateField = value;
                    this.RaisePropertyChanged("PEDischargeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEDspCurrencySymbol {
            get {
                return this.PEDspCurrencySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.PEDspCurrencySymbolField, value) != true)) {
                    this.PEDspCurrencySymbolField = value;
                    this.RaisePropertyChanged("PEDspCurrencySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeAddress1 {
            get {
                return this.PEGuaranteeAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeAddress1Field, value) != true)) {
                    this.PEGuaranteeAddress1Field = value;
                    this.RaisePropertyChanged("PEGuaranteeAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeAddress2 {
            get {
                return this.PEGuaranteeAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeAddress2Field, value) != true)) {
                    this.PEGuaranteeAddress2Field = value;
                    this.RaisePropertyChanged("PEGuaranteeAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeAddress3 {
            get {
                return this.PEGuaranteeAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeAddress3Field, value) != true)) {
                    this.PEGuaranteeAddress3Field = value;
                    this.RaisePropertyChanged("PEGuaranteeAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeCity {
            get {
                return this.PEGuaranteeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeCityField, value) != true)) {
                    this.PEGuaranteeCityField = value;
                    this.RaisePropertyChanged("PEGuaranteeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeCountry {
            get {
                return this.PEGuaranteeCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeCountryField, value) != true)) {
                    this.PEGuaranteeCountryField = value;
                    this.RaisePropertyChanged("PEGuaranteeCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeName {
            get {
                return this.PEGuaranteeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeNameField, value) != true)) {
                    this.PEGuaranteeNameField = value;
                    this.RaisePropertyChanged("PEGuaranteeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteePhoneNum {
            get {
                return this.PEGuaranteePhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteePhoneNumField, value) != true)) {
                    this.PEGuaranteePhoneNumField = value;
                    this.RaisePropertyChanged("PEGuaranteePhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeState {
            get {
                return this.PEGuaranteeStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeStateField, value) != true)) {
                    this.PEGuaranteeStateField = value;
                    this.RaisePropertyChanged("PEGuaranteeState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeTaxID {
            get {
                return this.PEGuaranteeTaxIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeTaxIDField, value) != true)) {
                    this.PEGuaranteeTaxIDField = value;
                    this.RaisePropertyChanged("PEGuaranteeTaxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEGuaranteeZip {
            get {
                return this.PEGuaranteeZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PEGuaranteeZipField, value) != true)) {
                    this.PEGuaranteeZipField = value;
                    this.RaisePropertyChanged("PEGuaranteeZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PEInCollections {
            get {
                return this.PEInCollectionsField;
            }
            set {
                if ((this.PEInCollectionsField.Equals(value) != true)) {
                    this.PEInCollectionsField = value;
                    this.RaisePropertyChanged("PEInCollections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PEInterest {
            get {
                return this.PEInterestField;
            }
            set {
                if ((this.PEInterestField.Equals(value) != true)) {
                    this.PEInterestField = value;
                    this.RaisePropertyChanged("PEInterest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PENoPayPenalty {
            get {
                return this.PENoPayPenaltyField;
            }
            set {
                if ((this.PENoPayPenaltyField.Equals(value) != true)) {
                    this.PENoPayPenaltyField = value;
                    this.RaisePropertyChanged("PENoPayPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEReasonCode {
            get {
                return this.PEReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PEReasonCodeField, value) != true)) {
                    this.PEReasonCodeField = value;
                    this.RaisePropertyChanged("PEReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEReasonDesc {
            get {
                return this.PEReasonDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PEReasonDescField, value) != true)) {
                    this.PEReasonDescField = value;
                    this.RaisePropertyChanged("PEReasonDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERefDocID {
            get {
                return this.PERefDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERefDocIDField, value) != true)) {
                    this.PERefDocIDField = value;
                    this.RaisePropertyChanged("PERefDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PESUNATDepAmt {
            get {
                return this.PESUNATDepAmtField;
            }
            set {
                if ((this.PESUNATDepAmtField.Equals(value) != true)) {
                    this.PESUNATDepAmtField = value;
                    this.RaisePropertyChanged("PESUNATDepAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PESUNATDepDate {
            get {
                return this.PESUNATDepDateField;
            }
            set {
                if ((this.PESUNATDepDateField.Equals(value) != true)) {
                    this.PESUNATDepDateField = value;
                    this.RaisePropertyChanged("PESUNATDepDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PESUNATDepNum {
            get {
                return this.PESUNATDepNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PESUNATDepNumField, value) != true)) {
                    this.PESUNATDepNumField = value;
                    this.RaisePropertyChanged("PESUNATDepNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIBankAcctID {
            get {
                return this.PIBankAcctIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PIBankAcctIDField, value) != true)) {
                    this.PIBankAcctIDField = value;
                    this.RaisePropertyChanged("PIBankAcctID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PICustBankDtl {
            get {
                return this.PICustBankDtlField;
            }
            set {
                if ((this.PICustBankDtlField.Equals(value) != true)) {
                    this.PICustBankDtlField = value;
                    this.RaisePropertyChanged("PICustBankDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIInitiation {
            get {
                return this.PIInitiationField;
            }
            set {
                if ((object.ReferenceEquals(this.PIInitiationField, value) != true)) {
                    this.PIInitiationField = value;
                    this.RaisePropertyChanged("PIInitiation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIPayment {
            get {
                return this.PIPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.PIPaymentField, value) != true)) {
                    this.PIPaymentField = value;
                    this.RaisePropertyChanged("PIPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PMUID {
            get {
                return this.PMUIDField;
            }
            set {
                if ((this.PMUIDField.Equals(value) != true)) {
                    this.PMUIDField = value;
                    this.RaisePropertyChanged("PMUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumField, value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackSlipNum {
            get {
                return this.PackSlipNumField;
            }
            set {
                if ((this.PackSlipNumField.Equals(value) != true)) {
                    this.PackSlipNumField = value;
                    this.RaisePropertyChanged("PackSlipNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayAmounts {
            get {
                return this.PayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.PayAmountsField, value) != true)) {
                    this.PayAmountsField = value;
                    this.RaisePropertyChanged("PayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayDates {
            get {
                return this.PayDatesField;
            }
            set {
                if ((object.ReferenceEquals(this.PayDatesField, value) != true)) {
                    this.PayDatesField = value;
                    this.RaisePropertyChanged("PayDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PayDiscAmt {
            get {
                return this.PayDiscAmtField;
            }
            set {
                if ((this.PayDiscAmtField.Equals(value) != true)) {
                    this.PayDiscAmtField = value;
                    this.RaisePropertyChanged("PayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PayDiscDate {
            get {
                return this.PayDiscDateField;
            }
            set {
                if ((this.PayDiscDateField.Equals(value) != true)) {
                    this.PayDiscDateField = value;
                    this.RaisePropertyChanged("PayDiscDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayDiscDays {
            get {
                return this.PayDiscDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.PayDiscDaysField, value) != true)) {
                    this.PayDiscDaysField = value;
                    this.RaisePropertyChanged("PayDiscDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PayDiscPartPay {
            get {
                return this.PayDiscPartPayField;
            }
            set {
                if ((this.PayDiscPartPayField.Equals(value) != true)) {
                    this.PayDiscPartPayField = value;
                    this.RaisePropertyChanged("PayDiscPartPay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayDiscPer {
            get {
                return this.PayDiscPerField;
            }
            set {
                if ((object.ReferenceEquals(this.PayDiscPerField, value) != true)) {
                    this.PayDiscPerField = value;
                    this.RaisePropertyChanged("PayDiscPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayMethodName {
            get {
                return this.PayMethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayMethodNameField, value) != true)) {
                    this.PayMethodNameField = value;
                    this.RaisePropertyChanged("PayMethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PayMethodSummarizePerCustomer {
            get {
                return this.PayMethodSummarizePerCustomerField;
            }
            set {
                if ((this.PayMethodSummarizePerCustomerField.Equals(value) != true)) {
                    this.PayMethodSummarizePerCustomerField = value;
                    this.RaisePropertyChanged("PayMethodSummarizePerCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayMethodType {
            get {
                return this.PayMethodTypeField;
            }
            set {
                if ((this.PayMethodTypeField.Equals(value) != true)) {
                    this.PayMethodTypeField = value;
                    this.RaisePropertyChanged("PayMethodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PaySchedEnabled {
            get {
                return this.PaySchedEnabledField;
            }
            set {
                if ((this.PaySchedEnabledField.Equals(value) != true)) {
                    this.PaySchedEnabledField = value;
                    this.RaisePropertyChanged("PaySchedEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Posted {
            get {
                return this.PostedField;
            }
            set {
                if ((this.PostedField.Equals(value) != true)) {
                    this.PostedField = value;
                    this.RaisePropertyChanged("Posted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PostedRecog {
            get {
                return this.PostedRecogField;
            }
            set {
                if ((this.PostedRecogField.Equals(value) != true)) {
                    this.PostedRecogField = value;
                    this.RaisePropertyChanged("PostedRecog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrepDepositEnabled {
            get {
                return this.PrepDepositEnabledField;
            }
            set {
                if ((this.PrepDepositEnabledField.Equals(value) != true)) {
                    this.PrepDepositEnabledField = value;
                    this.RaisePropertyChanged("PrepDepositEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessCard {
            get {
                return this.ProcessCardField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessCardField, value) != true)) {
                    this.ProcessCardField = value;
                    this.RaisePropertyChanged("ProcessCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectDescription {
            get {
                return this.ProjectDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectDescriptionField, value) != true)) {
                    this.ProjectDescriptionField = value;
                    this.RaisePropertyChanged("ProjectDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMANum {
            get {
                return this.RMANumField;
            }
            set {
                if ((this.RMANumField.Equals(value) != true)) {
                    this.RMANumField = value;
                    this.RaisePropertyChanged("RMANum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToBill {
            get {
                return this.ReadyToBillField;
            }
            set {
                if ((this.ReadyToBillField.Equals(value) != true)) {
                    this.ReadyToBillField = value;
                    this.RaisePropertyChanged("ReadyToBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToCalc {
            get {
                return this.ReadyToCalcField;
            }
            set {
                if ((this.ReadyToCalcField.Equals(value) != true)) {
                    this.ReadyToCalcField = value;
                    this.RaisePropertyChanged("ReadyToCalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RealEstateNo {
            get {
                return this.RealEstateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RealEstateNoField, value) != true)) {
                    this.RealEstateNoField = value;
                    this.RaisePropertyChanged("RealEstateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecalcAmts {
            get {
                return this.RecalcAmtsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecalcAmtsField, value) != true)) {
                    this.RecalcAmtsField = value;
                    this.RaisePropertyChanged("RecalcAmts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecalcBeforePost {
            get {
                return this.RecalcBeforePostField;
            }
            set {
                if ((this.RecalcBeforePostField.Equals(value) != true)) {
                    this.RecalcBeforePostField = value;
                    this.RaisePropertyChanged("RecalcBeforePost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RecurBalance {
            get {
                return this.RecurBalanceField;
            }
            set {
                if ((this.RecurBalanceField.Equals(value) != true)) {
                    this.RecurBalanceField = value;
                    this.RaisePropertyChanged("RecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecurSource {
            get {
                return this.RecurSourceField;
            }
            set {
                if ((this.RecurSourceField.Equals(value) != true)) {
                    this.RecurSourceField = value;
                    this.RaisePropertyChanged("RecurSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Recurring {
            get {
                return this.RecurringField;
            }
            set {
                if ((this.RecurringField.Equals(value) != true)) {
                    this.RecurringField = value;
                    this.RaisePropertyChanged("Recurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecurringCycleMaximumValue {
            get {
                return this.RecurringCycleMaximumValueField;
            }
            set {
                if ((this.RecurringCycleMaximumValueField.Equals(value) != true)) {
                    this.RecurringCycleMaximumValueField = value;
                    this.RaisePropertyChanged("RecurringCycleMaximumValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecurringState {
            get {
                return this.RecurringStateField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurringStateField, value) != true)) {
                    this.RecurringStateField = value;
                    this.RaisePropertyChanged("RecurringState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RefCancelled {
            get {
                return this.RefCancelledField;
            }
            set {
                if ((this.RefCancelledField.Equals(value) != true)) {
                    this.RefCancelledField = value;
                    this.RaisePropertyChanged("RefCancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RefCancelledBy {
            get {
                return this.RefCancelledByField;
            }
            set {
                if ((this.RefCancelledByField.Equals(value) != true)) {
                    this.RefCancelledByField = value;
                    this.RaisePropertyChanged("RefCancelledBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RemainTaxAmt {
            get {
                return this.RemainTaxAmtField;
            }
            set {
                if ((this.RemainTaxAmtField.Equals(value) != true)) {
                    this.RemainTaxAmtField = value;
                    this.RaisePropertyChanged("RemainTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReminderSeq {
            get {
                return this.ReminderSeqField;
            }
            set {
                if ((this.ReminderSeqField.Equals(value) != true)) {
                    this.ReminderSeqField = value;
                    this.RaisePropertyChanged("ReminderSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm1 {
            get {
                return this.RepComm1Field;
            }
            set {
                if ((this.RepComm1Field.Equals(value) != true)) {
                    this.RepComm1Field = value;
                    this.RaisePropertyChanged("RepComm1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm2 {
            get {
                return this.RepComm2Field;
            }
            set {
                if ((this.RepComm2Field.Equals(value) != true)) {
                    this.RepComm2Field = value;
                    this.RaisePropertyChanged("RepComm2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm3 {
            get {
                return this.RepComm3Field;
            }
            set {
                if ((this.RepComm3Field.Equals(value) != true)) {
                    this.RepComm3Field = value;
                    this.RaisePropertyChanged("RepComm3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm4 {
            get {
                return this.RepComm4Field;
            }
            set {
                if ((this.RepComm4Field.Equals(value) != true)) {
                    this.RepComm4Field = value;
                    this.RaisePropertyChanged("RepComm4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm5 {
            get {
                return this.RepComm5Field;
            }
            set {
                if ((this.RepComm5Field.Equals(value) != true)) {
                    this.RepComm5Field = value;
                    this.RaisePropertyChanged("RepComm5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate1 {
            get {
                return this.RepRate1Field;
            }
            set {
                if ((this.RepRate1Field.Equals(value) != true)) {
                    this.RepRate1Field = value;
                    this.RaisePropertyChanged("RepRate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate2 {
            get {
                return this.RepRate2Field;
            }
            set {
                if ((this.RepRate2Field.Equals(value) != true)) {
                    this.RepRate2Field = value;
                    this.RaisePropertyChanged("RepRate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate3 {
            get {
                return this.RepRate3Field;
            }
            set {
                if ((this.RepRate3Field.Equals(value) != true)) {
                    this.RepRate3Field = value;
                    this.RaisePropertyChanged("RepRate3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate4 {
            get {
                return this.RepRate4Field;
            }
            set {
                if ((this.RepRate4Field.Equals(value) != true)) {
                    this.RepRate4Field = value;
                    this.RaisePropertyChanged("RepRate4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate5 {
            get {
                return this.RepRate5Field;
            }
            set {
                if ((this.RepRate5Field.Equals(value) != true)) {
                    this.RepRate5Field = value;
                    this.RaisePropertyChanged("RepRate5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales1 {
            get {
                return this.RepSales1Field;
            }
            set {
                if ((this.RepSales1Field.Equals(value) != true)) {
                    this.RepSales1Field = value;
                    this.RaisePropertyChanged("RepSales1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales2 {
            get {
                return this.RepSales2Field;
            }
            set {
                if ((this.RepSales2Field.Equals(value) != true)) {
                    this.RepSales2Field = value;
                    this.RaisePropertyChanged("RepSales2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales3 {
            get {
                return this.RepSales3Field;
            }
            set {
                if ((this.RepSales3Field.Equals(value) != true)) {
                    this.RepSales3Field = value;
                    this.RaisePropertyChanged("RepSales3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales4 {
            get {
                return this.RepSales4Field;
            }
            set {
                if ((this.RepSales4Field.Equals(value) != true)) {
                    this.RepSales4Field = value;
                    this.RaisePropertyChanged("RepSales4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales5 {
            get {
                return this.RepSales5Field;
            }
            set {
                if ((this.RepSales5Field.Equals(value) != true)) {
                    this.RepSales5Field = value;
                    this.RaisePropertyChanged("RepSales5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit1 {
            get {
                return this.RepSplit1Field;
            }
            set {
                if ((this.RepSplit1Field.Equals(value) != true)) {
                    this.RepSplit1Field = value;
                    this.RaisePropertyChanged("RepSplit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit2 {
            get {
                return this.RepSplit2Field;
            }
            set {
                if ((this.RepSplit2Field.Equals(value) != true)) {
                    this.RepSplit2Field = value;
                    this.RaisePropertyChanged("RepSplit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit3 {
            get {
                return this.RepSplit3Field;
            }
            set {
                if ((this.RepSplit3Field.Equals(value) != true)) {
                    this.RepSplit3Field = value;
                    this.RaisePropertyChanged("RepSplit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit4 {
            get {
                return this.RepSplit4Field;
            }
            set {
                if ((this.RepSplit4Field.Equals(value) != true)) {
                    this.RepSplit4Field = value;
                    this.RaisePropertyChanged("RepSplit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit5 {
            get {
                return this.RepSplit5Field;
            }
            set {
                if ((this.RepSplit5Field.Equals(value) != true)) {
                    this.RepSplit5Field = value;
                    this.RaisePropertyChanged("RepSplit5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetInvoiceNum {
            get {
                return this.RetInvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RetInvoiceNumField, value) != true)) {
                    this.RetInvoiceNumField = value;
                    this.RaisePropertyChanged("RetInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReturnFlag {
            get {
                return this.ReturnFlagField;
            }
            set {
                if ((this.ReturnFlagField.Equals(value) != true)) {
                    this.ReturnFlagField = value;
                    this.RaisePropertyChanged("ReturnFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReversalDocAmount {
            get {
                return this.ReversalDocAmountField;
            }
            set {
                if ((this.ReversalDocAmountField.Equals(value) != true)) {
                    this.ReversalDocAmountField = value;
                    this.RaisePropertyChanged("ReversalDocAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReversalDocAmt {
            get {
                return this.ReversalDocAmtField;
            }
            set {
                if ((this.ReversalDocAmtField.Equals(value) != true)) {
                    this.ReversalDocAmtField = value;
                    this.RaisePropertyChanged("ReversalDocAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReverseTaxAmt {
            get {
                return this.ReverseTaxAmtField;
            }
            set {
                if ((this.ReverseTaxAmtField.Equals(value) != true)) {
                    this.ReverseTaxAmtField = value;
                    this.RaisePropertyChanged("ReverseTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RevisionAllowed {
            get {
                return this.RevisionAllowedField;
            }
            set {
                if ((this.RevisionAllowedField.Equals(value) != true)) {
                    this.RevisionAllowedField = value;
                    this.RaisePropertyChanged("RevisionAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RevisionDate {
            get {
                return this.RevisionDateField;
            }
            set {
                if ((this.RevisionDateField.Equals(value) != true)) {
                    this.RevisionDateField = value;
                    this.RaisePropertyChanged("RevisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((this.RevisionNumField.Equals(value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rounding {
            get {
                return this.RoundingField;
            }
            set {
                if ((this.RoundingField.Equals(value) != true)) {
                    this.RoundingField = value;
                    this.RaisePropertyChanged("Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ABAmt {
            get {
                return this.Rpt1ABAmtField;
            }
            set {
                if ((this.Rpt1ABAmtField.Equals(value) != true)) {
                    this.Rpt1ABAmtField = value;
                    this.RaisePropertyChanged("Rpt1ABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1COIFRSFinancialCharge {
            get {
                return this.Rpt1COIFRSFinancialChargeField;
            }
            set {
                if ((this.Rpt1COIFRSFinancialChargeField.Equals(value) != true)) {
                    this.Rpt1COIFRSFinancialChargeField = value;
                    this.RaisePropertyChanged("Rpt1COIFRSFinancialCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1COIFRSPresentValue {
            get {
                return this.Rpt1COIFRSPresentValueField;
            }
            set {
                if ((this.Rpt1COIFRSPresentValueField.Equals(value) != true)) {
                    this.Rpt1COIFRSPresentValueField = value;
                    this.RaisePropertyChanged("Rpt1COIFRSPresentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1CumulativeBalance {
            get {
                return this.Rpt1CumulativeBalanceField;
            }
            set {
                if ((this.Rpt1CumulativeBalanceField.Equals(value) != true)) {
                    this.Rpt1CumulativeBalanceField = value;
                    this.RaisePropertyChanged("Rpt1CumulativeBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepBal {
            get {
                return this.Rpt1DepBalField;
            }
            set {
                if ((this.Rpt1DepBalField.Equals(value) != true)) {
                    this.Rpt1DepBalField = value;
                    this.RaisePropertyChanged("Rpt1DepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepGainLoss {
            get {
                return this.Rpt1DepGainLossField;
            }
            set {
                if ((this.Rpt1DepGainLossField.Equals(value) != true)) {
                    this.Rpt1DepGainLossField = value;
                    this.RaisePropertyChanged("Rpt1DepGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepUnallocatedAmt {
            get {
                return this.Rpt1DepUnallocatedAmtField;
            }
            set {
                if ((this.Rpt1DepUnallocatedAmtField.Equals(value) != true)) {
                    this.Rpt1DepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("Rpt1DepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepositAmt {
            get {
                return this.Rpt1DepositAmtField;
            }
            set {
                if ((this.Rpt1DepositAmtField.Equals(value) != true)) {
                    this.Rpt1DepositAmtField = value;
                    this.RaisePropertyChanged("Rpt1DepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepositCredit {
            get {
                return this.Rpt1DepositCreditField;
            }
            set {
                if ((this.Rpt1DepositCreditField.Equals(value) != true)) {
                    this.Rpt1DepositCreditField = value;
                    this.RaisePropertyChanged("Rpt1DepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspABAmt {
            get {
                return this.Rpt1DspABAmtField;
            }
            set {
                if ((this.Rpt1DspABAmtField.Equals(value) != true)) {
                    this.Rpt1DspABAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspDepBal {
            get {
                return this.Rpt1DspDepBalField;
            }
            set {
                if ((this.Rpt1DspDepBalField.Equals(value) != true)) {
                    this.Rpt1DspDepBalField = value;
                    this.RaisePropertyChanged("Rpt1DspDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspDepCr {
            get {
                return this.Rpt1DspDepCrField;
            }
            set {
                if ((this.Rpt1DspDepCrField.Equals(value) != true)) {
                    this.Rpt1DspDepCrField = value;
                    this.RaisePropertyChanged("Rpt1DspDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspInvoiceAmt {
            get {
                return this.Rpt1DspInvoiceAmtField;
            }
            set {
                if ((this.Rpt1DspInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt1DspInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspInvoiceBal {
            get {
                return this.Rpt1DspInvoiceBalField;
            }
            set {
                if ((this.Rpt1DspInvoiceBalField.Equals(value) != true)) {
                    this.Rpt1DspInvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt1DspInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspPrepDeposit {
            get {
                return this.Rpt1DspPrepDepositField;
            }
            set {
                if ((this.Rpt1DspPrepDepositField.Equals(value) != true)) {
                    this.Rpt1DspPrepDepositField = value;
                    this.RaisePropertyChanged("Rpt1DspPrepDeposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspRounding {
            get {
                return this.Rpt1DspRoundingField;
            }
            set {
                if ((this.Rpt1DspRoundingField.Equals(value) != true)) {
                    this.Rpt1DspRoundingField = value;
                    this.RaisePropertyChanged("Rpt1DspRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspSubTotal {
            get {
                return this.Rpt1DspSubTotalField;
            }
            set {
                if ((this.Rpt1DspSubTotalField.Equals(value) != true)) {
                    this.Rpt1DspSubTotalField = value;
                    this.RaisePropertyChanged("Rpt1DspSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspTaxAmt {
            get {
                return this.Rpt1DspTaxAmtField;
            }
            set {
                if ((this.Rpt1DspTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DspTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InvoiceAmt {
            get {
                return this.Rpt1InvoiceAmtField;
            }
            set {
                if ((this.Rpt1InvoiceAmtField.Equals(value) != true)) {
                    this.Rpt1InvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt1InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InvoiceBal {
            get {
                return this.Rpt1InvoiceBalField;
            }
            set {
                if ((this.Rpt1InvoiceBalField.Equals(value) != true)) {
                    this.Rpt1InvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt1InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1MaxValueAmt {
            get {
                return this.Rpt1MaxValueAmtField;
            }
            set {
                if ((this.Rpt1MaxValueAmtField.Equals(value) != true)) {
                    this.Rpt1MaxValueAmtField = value;
                    this.RaisePropertyChanged("Rpt1MaxValueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1PECharges {
            get {
                return this.Rpt1PEChargesField;
            }
            set {
                if ((this.Rpt1PEChargesField.Equals(value) != true)) {
                    this.Rpt1PEChargesField = value;
                    this.RaisePropertyChanged("Rpt1PECharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1PECommissions {
            get {
                return this.Rpt1PECommissionsField;
            }
            set {
                if ((this.Rpt1PECommissionsField.Equals(value) != true)) {
                    this.Rpt1PECommissionsField = value;
                    this.RaisePropertyChanged("Rpt1PECommissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1PEDischargeAmt {
            get {
                return this.Rpt1PEDischargeAmtField;
            }
            set {
                if ((this.Rpt1PEDischargeAmtField.Equals(value) != true)) {
                    this.Rpt1PEDischargeAmtField = value;
                    this.RaisePropertyChanged("Rpt1PEDischargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1PEInterest {
            get {
                return this.Rpt1PEInterestField;
            }
            set {
                if ((this.Rpt1PEInterestField.Equals(value) != true)) {
                    this.Rpt1PEInterestField = value;
                    this.RaisePropertyChanged("Rpt1PEInterest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1PENoPayPenalty {
            get {
                return this.Rpt1PENoPayPenaltyField;
            }
            set {
                if ((this.Rpt1PENoPayPenaltyField.Equals(value) != true)) {
                    this.Rpt1PENoPayPenaltyField = value;
                    this.RaisePropertyChanged("Rpt1PENoPayPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rpt1PayAmounts {
            get {
                return this.Rpt1PayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.Rpt1PayAmountsField, value) != true)) {
                    this.Rpt1PayAmountsField = value;
                    this.RaisePropertyChanged("Rpt1PayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1PayDiscAmt {
            get {
                return this.Rpt1PayDiscAmtField;
            }
            set {
                if ((this.Rpt1PayDiscAmtField.Equals(value) != true)) {
                    this.Rpt1PayDiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1PayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1RecurBalance {
            get {
                return this.Rpt1RecurBalanceField;
            }
            set {
                if ((this.Rpt1RecurBalanceField.Equals(value) != true)) {
                    this.Rpt1RecurBalanceField = value;
                    this.RaisePropertyChanged("Rpt1RecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1RemainTaxAmt {
            get {
                return this.Rpt1RemainTaxAmtField;
            }
            set {
                if ((this.Rpt1RemainTaxAmtField.Equals(value) != true)) {
                    this.Rpt1RemainTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1RemainTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReverseTaxAmt {
            get {
                return this.Rpt1ReverseTaxAmtField;
            }
            set {
                if ((this.Rpt1ReverseTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ReverseTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReverseTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Rounding {
            get {
                return this.Rpt1RoundingField;
            }
            set {
                if ((this.Rpt1RoundingField.Equals(value) != true)) {
                    this.Rpt1RoundingField = value;
                    this.RaisePropertyChanged("Rpt1Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1SATaxAmt {
            get {
                return this.Rpt1SATaxAmtField;
            }
            set {
                if ((this.Rpt1SATaxAmtField.Equals(value) != true)) {
                    this.Rpt1SATaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1SATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1SourceRecurBalance {
            get {
                return this.Rpt1SourceRecurBalanceField;
            }
            set {
                if ((this.Rpt1SourceRecurBalanceField.Equals(value) != true)) {
                    this.Rpt1SourceRecurBalanceField = value;
                    this.RaisePropertyChanged("Rpt1SourceRecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1SubTotal {
            get {
                return this.Rpt1SubTotalField;
            }
            set {
                if ((this.Rpt1SubTotalField.Equals(value) != true)) {
                    this.Rpt1SubTotalField = value;
                    this.RaisePropertyChanged("Rpt1SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1UnpostedBal {
            get {
                return this.Rpt1UnpostedBalField;
            }
            set {
                if ((this.Rpt1UnpostedBalField.Equals(value) != true)) {
                    this.Rpt1UnpostedBalField = value;
                    this.RaisePropertyChanged("Rpt1UnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Vr {
            get {
                return this.Rpt1VrField;
            }
            set {
                if ((this.Rpt1VrField.Equals(value) != true)) {
                    this.Rpt1VrField = value;
                    this.RaisePropertyChanged("Rpt1Vr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1WHTaxAmt {
            get {
                return this.Rpt1WHTaxAmtField;
            }
            set {
                if ((this.Rpt1WHTaxAmtField.Equals(value) != true)) {
                    this.Rpt1WHTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1WHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1WithholdAmt {
            get {
                return this.Rpt1WithholdAmtField;
            }
            set {
                if ((this.Rpt1WithholdAmtField.Equals(value) != true)) {
                    this.Rpt1WithholdAmtField = value;
                    this.RaisePropertyChanged("Rpt1WithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ABAmt {
            get {
                return this.Rpt2ABAmtField;
            }
            set {
                if ((this.Rpt2ABAmtField.Equals(value) != true)) {
                    this.Rpt2ABAmtField = value;
                    this.RaisePropertyChanged("Rpt2ABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2COIFRSFinancialCharge {
            get {
                return this.Rpt2COIFRSFinancialChargeField;
            }
            set {
                if ((this.Rpt2COIFRSFinancialChargeField.Equals(value) != true)) {
                    this.Rpt2COIFRSFinancialChargeField = value;
                    this.RaisePropertyChanged("Rpt2COIFRSFinancialCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2COIFRSPresentValue {
            get {
                return this.Rpt2COIFRSPresentValueField;
            }
            set {
                if ((this.Rpt2COIFRSPresentValueField.Equals(value) != true)) {
                    this.Rpt2COIFRSPresentValueField = value;
                    this.RaisePropertyChanged("Rpt2COIFRSPresentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2CumulativeBalance {
            get {
                return this.Rpt2CumulativeBalanceField;
            }
            set {
                if ((this.Rpt2CumulativeBalanceField.Equals(value) != true)) {
                    this.Rpt2CumulativeBalanceField = value;
                    this.RaisePropertyChanged("Rpt2CumulativeBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepBal {
            get {
                return this.Rpt2DepBalField;
            }
            set {
                if ((this.Rpt2DepBalField.Equals(value) != true)) {
                    this.Rpt2DepBalField = value;
                    this.RaisePropertyChanged("Rpt2DepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepGainLoss {
            get {
                return this.Rpt2DepGainLossField;
            }
            set {
                if ((this.Rpt2DepGainLossField.Equals(value) != true)) {
                    this.Rpt2DepGainLossField = value;
                    this.RaisePropertyChanged("Rpt2DepGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepUnallocatedAmt {
            get {
                return this.Rpt2DepUnallocatedAmtField;
            }
            set {
                if ((this.Rpt2DepUnallocatedAmtField.Equals(value) != true)) {
                    this.Rpt2DepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("Rpt2DepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepositAmt {
            get {
                return this.Rpt2DepositAmtField;
            }
            set {
                if ((this.Rpt2DepositAmtField.Equals(value) != true)) {
                    this.Rpt2DepositAmtField = value;
                    this.RaisePropertyChanged("Rpt2DepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepositCredit {
            get {
                return this.Rpt2DepositCreditField;
            }
            set {
                if ((this.Rpt2DepositCreditField.Equals(value) != true)) {
                    this.Rpt2DepositCreditField = value;
                    this.RaisePropertyChanged("Rpt2DepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspABAmt {
            get {
                return this.Rpt2DspABAmtField;
            }
            set {
                if ((this.Rpt2DspABAmtField.Equals(value) != true)) {
                    this.Rpt2DspABAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspDepBal {
            get {
                return this.Rpt2DspDepBalField;
            }
            set {
                if ((this.Rpt2DspDepBalField.Equals(value) != true)) {
                    this.Rpt2DspDepBalField = value;
                    this.RaisePropertyChanged("Rpt2DspDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspDepCr {
            get {
                return this.Rpt2DspDepCrField;
            }
            set {
                if ((this.Rpt2DspDepCrField.Equals(value) != true)) {
                    this.Rpt2DspDepCrField = value;
                    this.RaisePropertyChanged("Rpt2DspDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspInvoiceAmt {
            get {
                return this.Rpt2DspInvoiceAmtField;
            }
            set {
                if ((this.Rpt2DspInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt2DspInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspInvoiceBal {
            get {
                return this.Rpt2DspInvoiceBalField;
            }
            set {
                if ((this.Rpt2DspInvoiceBalField.Equals(value) != true)) {
                    this.Rpt2DspInvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt2DspInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspPrepDeposit {
            get {
                return this.Rpt2DspPrepDepositField;
            }
            set {
                if ((this.Rpt2DspPrepDepositField.Equals(value) != true)) {
                    this.Rpt2DspPrepDepositField = value;
                    this.RaisePropertyChanged("Rpt2DspPrepDeposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspRounding {
            get {
                return this.Rpt2DspRoundingField;
            }
            set {
                if ((this.Rpt2DspRoundingField.Equals(value) != true)) {
                    this.Rpt2DspRoundingField = value;
                    this.RaisePropertyChanged("Rpt2DspRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspSubTotal {
            get {
                return this.Rpt2DspSubTotalField;
            }
            set {
                if ((this.Rpt2DspSubTotalField.Equals(value) != true)) {
                    this.Rpt2DspSubTotalField = value;
                    this.RaisePropertyChanged("Rpt2DspSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspTaxAmt {
            get {
                return this.Rpt2DspTaxAmtField;
            }
            set {
                if ((this.Rpt2DspTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DspTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InvoiceAmt {
            get {
                return this.Rpt2InvoiceAmtField;
            }
            set {
                if ((this.Rpt2InvoiceAmtField.Equals(value) != true)) {
                    this.Rpt2InvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt2InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InvoiceBal {
            get {
                return this.Rpt2InvoiceBalField;
            }
            set {
                if ((this.Rpt2InvoiceBalField.Equals(value) != true)) {
                    this.Rpt2InvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt2InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2MaxValueAmt {
            get {
                return this.Rpt2MaxValueAmtField;
            }
            set {
                if ((this.Rpt2MaxValueAmtField.Equals(value) != true)) {
                    this.Rpt2MaxValueAmtField = value;
                    this.RaisePropertyChanged("Rpt2MaxValueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2PECharges {
            get {
                return this.Rpt2PEChargesField;
            }
            set {
                if ((this.Rpt2PEChargesField.Equals(value) != true)) {
                    this.Rpt2PEChargesField = value;
                    this.RaisePropertyChanged("Rpt2PECharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2PECommissions {
            get {
                return this.Rpt2PECommissionsField;
            }
            set {
                if ((this.Rpt2PECommissionsField.Equals(value) != true)) {
                    this.Rpt2PECommissionsField = value;
                    this.RaisePropertyChanged("Rpt2PECommissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2PEDischargeAmt {
            get {
                return this.Rpt2PEDischargeAmtField;
            }
            set {
                if ((this.Rpt2PEDischargeAmtField.Equals(value) != true)) {
                    this.Rpt2PEDischargeAmtField = value;
                    this.RaisePropertyChanged("Rpt2PEDischargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2PEInterest {
            get {
                return this.Rpt2PEInterestField;
            }
            set {
                if ((this.Rpt2PEInterestField.Equals(value) != true)) {
                    this.Rpt2PEInterestField = value;
                    this.RaisePropertyChanged("Rpt2PEInterest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2PENoPayPenalty {
            get {
                return this.Rpt2PENoPayPenaltyField;
            }
            set {
                if ((this.Rpt2PENoPayPenaltyField.Equals(value) != true)) {
                    this.Rpt2PENoPayPenaltyField = value;
                    this.RaisePropertyChanged("Rpt2PENoPayPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rpt2PayAmounts {
            get {
                return this.Rpt2PayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.Rpt2PayAmountsField, value) != true)) {
                    this.Rpt2PayAmountsField = value;
                    this.RaisePropertyChanged("Rpt2PayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2PayDiscAmt {
            get {
                return this.Rpt2PayDiscAmtField;
            }
            set {
                if ((this.Rpt2PayDiscAmtField.Equals(value) != true)) {
                    this.Rpt2PayDiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2PayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2RecurBalance {
            get {
                return this.Rpt2RecurBalanceField;
            }
            set {
                if ((this.Rpt2RecurBalanceField.Equals(value) != true)) {
                    this.Rpt2RecurBalanceField = value;
                    this.RaisePropertyChanged("Rpt2RecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2RemainTaxAmt {
            get {
                return this.Rpt2RemainTaxAmtField;
            }
            set {
                if ((this.Rpt2RemainTaxAmtField.Equals(value) != true)) {
                    this.Rpt2RemainTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2RemainTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReverseTaxAmt {
            get {
                return this.Rpt2ReverseTaxAmtField;
            }
            set {
                if ((this.Rpt2ReverseTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ReverseTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReverseTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Rounding {
            get {
                return this.Rpt2RoundingField;
            }
            set {
                if ((this.Rpt2RoundingField.Equals(value) != true)) {
                    this.Rpt2RoundingField = value;
                    this.RaisePropertyChanged("Rpt2Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2SATaxAmt {
            get {
                return this.Rpt2SATaxAmtField;
            }
            set {
                if ((this.Rpt2SATaxAmtField.Equals(value) != true)) {
                    this.Rpt2SATaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2SATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2SourceRecurBalance {
            get {
                return this.Rpt2SourceRecurBalanceField;
            }
            set {
                if ((this.Rpt2SourceRecurBalanceField.Equals(value) != true)) {
                    this.Rpt2SourceRecurBalanceField = value;
                    this.RaisePropertyChanged("Rpt2SourceRecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2SubTotal {
            get {
                return this.Rpt2SubTotalField;
            }
            set {
                if ((this.Rpt2SubTotalField.Equals(value) != true)) {
                    this.Rpt2SubTotalField = value;
                    this.RaisePropertyChanged("Rpt2SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Taxamt {
            get {
                return this.Rpt2TaxamtField;
            }
            set {
                if ((this.Rpt2TaxamtField.Equals(value) != true)) {
                    this.Rpt2TaxamtField = value;
                    this.RaisePropertyChanged("Rpt2Taxamt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2UnpostedBal {
            get {
                return this.Rpt2UnpostedBalField;
            }
            set {
                if ((this.Rpt2UnpostedBalField.Equals(value) != true)) {
                    this.Rpt2UnpostedBalField = value;
                    this.RaisePropertyChanged("Rpt2UnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Vr {
            get {
                return this.Rpt2VrField;
            }
            set {
                if ((this.Rpt2VrField.Equals(value) != true)) {
                    this.Rpt2VrField = value;
                    this.RaisePropertyChanged("Rpt2Vr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2WHTaxAmt {
            get {
                return this.Rpt2WHTaxAmtField;
            }
            set {
                if ((this.Rpt2WHTaxAmtField.Equals(value) != true)) {
                    this.Rpt2WHTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2WHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2WithholdAmt {
            get {
                return this.Rpt2WithholdAmtField;
            }
            set {
                if ((this.Rpt2WithholdAmtField.Equals(value) != true)) {
                    this.Rpt2WithholdAmtField = value;
                    this.RaisePropertyChanged("Rpt2WithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ABAmt {
            get {
                return this.Rpt3ABAmtField;
            }
            set {
                if ((this.Rpt3ABAmtField.Equals(value) != true)) {
                    this.Rpt3ABAmtField = value;
                    this.RaisePropertyChanged("Rpt3ABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3COIFRSFinancialCharge {
            get {
                return this.Rpt3COIFRSFinancialChargeField;
            }
            set {
                if ((this.Rpt3COIFRSFinancialChargeField.Equals(value) != true)) {
                    this.Rpt3COIFRSFinancialChargeField = value;
                    this.RaisePropertyChanged("Rpt3COIFRSFinancialCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3COIFRSPresentValue {
            get {
                return this.Rpt3COIFRSPresentValueField;
            }
            set {
                if ((this.Rpt3COIFRSPresentValueField.Equals(value) != true)) {
                    this.Rpt3COIFRSPresentValueField = value;
                    this.RaisePropertyChanged("Rpt3COIFRSPresentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3CumulativeBalance {
            get {
                return this.Rpt3CumulativeBalanceField;
            }
            set {
                if ((this.Rpt3CumulativeBalanceField.Equals(value) != true)) {
                    this.Rpt3CumulativeBalanceField = value;
                    this.RaisePropertyChanged("Rpt3CumulativeBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepBal {
            get {
                return this.Rpt3DepBalField;
            }
            set {
                if ((this.Rpt3DepBalField.Equals(value) != true)) {
                    this.Rpt3DepBalField = value;
                    this.RaisePropertyChanged("Rpt3DepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepGainLoss {
            get {
                return this.Rpt3DepGainLossField;
            }
            set {
                if ((this.Rpt3DepGainLossField.Equals(value) != true)) {
                    this.Rpt3DepGainLossField = value;
                    this.RaisePropertyChanged("Rpt3DepGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepUnallocatedAmt {
            get {
                return this.Rpt3DepUnallocatedAmtField;
            }
            set {
                if ((this.Rpt3DepUnallocatedAmtField.Equals(value) != true)) {
                    this.Rpt3DepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("Rpt3DepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepositAmt {
            get {
                return this.Rpt3DepositAmtField;
            }
            set {
                if ((this.Rpt3DepositAmtField.Equals(value) != true)) {
                    this.Rpt3DepositAmtField = value;
                    this.RaisePropertyChanged("Rpt3DepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepositCredit {
            get {
                return this.Rpt3DepositCreditField;
            }
            set {
                if ((this.Rpt3DepositCreditField.Equals(value) != true)) {
                    this.Rpt3DepositCreditField = value;
                    this.RaisePropertyChanged("Rpt3DepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspABAmt {
            get {
                return this.Rpt3DspABAmtField;
            }
            set {
                if ((this.Rpt3DspABAmtField.Equals(value) != true)) {
                    this.Rpt3DspABAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspDepBal {
            get {
                return this.Rpt3DspDepBalField;
            }
            set {
                if ((this.Rpt3DspDepBalField.Equals(value) != true)) {
                    this.Rpt3DspDepBalField = value;
                    this.RaisePropertyChanged("Rpt3DspDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspDepCr {
            get {
                return this.Rpt3DspDepCrField;
            }
            set {
                if ((this.Rpt3DspDepCrField.Equals(value) != true)) {
                    this.Rpt3DspDepCrField = value;
                    this.RaisePropertyChanged("Rpt3DspDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspInvoiceAmt {
            get {
                return this.Rpt3DspInvoiceAmtField;
            }
            set {
                if ((this.Rpt3DspInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt3DspInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspInvoiceBal {
            get {
                return this.Rpt3DspInvoiceBalField;
            }
            set {
                if ((this.Rpt3DspInvoiceBalField.Equals(value) != true)) {
                    this.Rpt3DspInvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt3DspInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspPrepDeposit {
            get {
                return this.Rpt3DspPrepDepositField;
            }
            set {
                if ((this.Rpt3DspPrepDepositField.Equals(value) != true)) {
                    this.Rpt3DspPrepDepositField = value;
                    this.RaisePropertyChanged("Rpt3DspPrepDeposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspRounding {
            get {
                return this.Rpt3DspRoundingField;
            }
            set {
                if ((this.Rpt3DspRoundingField.Equals(value) != true)) {
                    this.Rpt3DspRoundingField = value;
                    this.RaisePropertyChanged("Rpt3DspRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspSubTotal {
            get {
                return this.Rpt3DspSubTotalField;
            }
            set {
                if ((this.Rpt3DspSubTotalField.Equals(value) != true)) {
                    this.Rpt3DspSubTotalField = value;
                    this.RaisePropertyChanged("Rpt3DspSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspTaxAmt {
            get {
                return this.Rpt3DspTaxAmtField;
            }
            set {
                if ((this.Rpt3DspTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DspTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InvoiceAmt {
            get {
                return this.Rpt3InvoiceAmtField;
            }
            set {
                if ((this.Rpt3InvoiceAmtField.Equals(value) != true)) {
                    this.Rpt3InvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt3InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InvoiceBal {
            get {
                return this.Rpt3InvoiceBalField;
            }
            set {
                if ((this.Rpt3InvoiceBalField.Equals(value) != true)) {
                    this.Rpt3InvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt3InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3MaxValueAmt {
            get {
                return this.Rpt3MaxValueAmtField;
            }
            set {
                if ((this.Rpt3MaxValueAmtField.Equals(value) != true)) {
                    this.Rpt3MaxValueAmtField = value;
                    this.RaisePropertyChanged("Rpt3MaxValueAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3PECharges {
            get {
                return this.Rpt3PEChargesField;
            }
            set {
                if ((this.Rpt3PEChargesField.Equals(value) != true)) {
                    this.Rpt3PEChargesField = value;
                    this.RaisePropertyChanged("Rpt3PECharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3PECommissions {
            get {
                return this.Rpt3PECommissionsField;
            }
            set {
                if ((this.Rpt3PECommissionsField.Equals(value) != true)) {
                    this.Rpt3PECommissionsField = value;
                    this.RaisePropertyChanged("Rpt3PECommissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3PEDischargeAmt {
            get {
                return this.Rpt3PEDischargeAmtField;
            }
            set {
                if ((this.Rpt3PEDischargeAmtField.Equals(value) != true)) {
                    this.Rpt3PEDischargeAmtField = value;
                    this.RaisePropertyChanged("Rpt3PEDischargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3PEInterest {
            get {
                return this.Rpt3PEInterestField;
            }
            set {
                if ((this.Rpt3PEInterestField.Equals(value) != true)) {
                    this.Rpt3PEInterestField = value;
                    this.RaisePropertyChanged("Rpt3PEInterest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3PENoPayPenalty {
            get {
                return this.Rpt3PENoPayPenaltyField;
            }
            set {
                if ((this.Rpt3PENoPayPenaltyField.Equals(value) != true)) {
                    this.Rpt3PENoPayPenaltyField = value;
                    this.RaisePropertyChanged("Rpt3PENoPayPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rpt3PayAmounts {
            get {
                return this.Rpt3PayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.Rpt3PayAmountsField, value) != true)) {
                    this.Rpt3PayAmountsField = value;
                    this.RaisePropertyChanged("Rpt3PayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3PayDiscAmt {
            get {
                return this.Rpt3PayDiscAmtField;
            }
            set {
                if ((this.Rpt3PayDiscAmtField.Equals(value) != true)) {
                    this.Rpt3PayDiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3PayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3RecurBalance {
            get {
                return this.Rpt3RecurBalanceField;
            }
            set {
                if ((this.Rpt3RecurBalanceField.Equals(value) != true)) {
                    this.Rpt3RecurBalanceField = value;
                    this.RaisePropertyChanged("Rpt3RecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3RemainTaxAmt {
            get {
                return this.Rpt3RemainTaxAmtField;
            }
            set {
                if ((this.Rpt3RemainTaxAmtField.Equals(value) != true)) {
                    this.Rpt3RemainTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3RemainTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReverseTaxAmt {
            get {
                return this.Rpt3ReverseTaxAmtField;
            }
            set {
                if ((this.Rpt3ReverseTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ReverseTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReverseTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Rounding {
            get {
                return this.Rpt3RoundingField;
            }
            set {
                if ((this.Rpt3RoundingField.Equals(value) != true)) {
                    this.Rpt3RoundingField = value;
                    this.RaisePropertyChanged("Rpt3Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3SATaxAmt {
            get {
                return this.Rpt3SATaxAmtField;
            }
            set {
                if ((this.Rpt3SATaxAmtField.Equals(value) != true)) {
                    this.Rpt3SATaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3SATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3SourceRecurBalance {
            get {
                return this.Rpt3SourceRecurBalanceField;
            }
            set {
                if ((this.Rpt3SourceRecurBalanceField.Equals(value) != true)) {
                    this.Rpt3SourceRecurBalanceField = value;
                    this.RaisePropertyChanged("Rpt3SourceRecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3SubTotal {
            get {
                return this.Rpt3SubTotalField;
            }
            set {
                if ((this.Rpt3SubTotalField.Equals(value) != true)) {
                    this.Rpt3SubTotalField = value;
                    this.RaisePropertyChanged("Rpt3SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3UnpostedBal {
            get {
                return this.Rpt3UnpostedBalField;
            }
            set {
                if ((this.Rpt3UnpostedBalField.Equals(value) != true)) {
                    this.Rpt3UnpostedBalField = value;
                    this.RaisePropertyChanged("Rpt3UnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Vr {
            get {
                return this.Rpt3VrField;
            }
            set {
                if ((this.Rpt3VrField.Equals(value) != true)) {
                    this.Rpt3VrField = value;
                    this.RaisePropertyChanged("Rpt3Vr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3WHTaxAmt {
            get {
                return this.Rpt3WHTaxAmtField;
            }
            set {
                if ((this.Rpt3WHTaxAmtField.Equals(value) != true)) {
                    this.Rpt3WHTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3WHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3WithholdAmt {
            get {
                return this.Rpt3WithholdAmtField;
            }
            set {
                if ((this.Rpt3WithholdAmtField.Equals(value) != true)) {
                    this.Rpt3WithholdAmtField = value;
                    this.RaisePropertyChanged("Rpt3WithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RvnJrnUID {
            get {
                return this.RvnJrnUIDField;
            }
            set {
                if ((this.RvnJrnUIDField.Equals(value) != true)) {
                    this.RvnJrnUIDField = value;
                    this.RaisePropertyChanged("RvnJrnUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SATaxAmt {
            get {
                return this.SATaxAmtField;
            }
            set {
                if ((this.SATaxAmtField.Equals(value) != true)) {
                    this.SATaxAmtField = value;
                    this.RaisePropertyChanged("SATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SEBankRef {
            get {
                return this.SEBankRefField;
            }
            set {
                if ((object.ReferenceEquals(this.SEBankRefField, value) != true)) {
                    this.SEBankRefField = value;
                    this.RaisePropertyChanged("SEBankRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode1 {
            get {
                return this.SalesRepCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode1Field, value) != true)) {
                    this.SalesRepCode1Field = value;
                    this.RaisePropertyChanged("SalesRepCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode2 {
            get {
                return this.SalesRepCode2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode2Field, value) != true)) {
                    this.SalesRepCode2Field = value;
                    this.RaisePropertyChanged("SalesRepCode2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode3 {
            get {
                return this.SalesRepCode3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode3Field, value) != true)) {
                    this.SalesRepCode3Field = value;
                    this.RaisePropertyChanged("SalesRepCode3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode4 {
            get {
                return this.SalesRepCode4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode4Field, value) != true)) {
                    this.SalesRepCode4Field = value;
                    this.RaisePropertyChanged("SalesRepCode4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode5 {
            get {
                return this.SalesRepCode5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode5Field, value) != true)) {
                    this.SalesRepCode5Field = value;
                    this.RaisePropertyChanged("SalesRepCode5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepList {
            get {
                return this.SalesRepListField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepListField, value) != true)) {
                    this.SalesRepListField = value;
                    this.RaisePropertyChanged("SalesRepList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName1 {
            get {
                return this.SalesRepName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName1Field, value) != true)) {
                    this.SalesRepName1Field = value;
                    this.RaisePropertyChanged("SalesRepName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName2 {
            get {
                return this.SalesRepName2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName2Field, value) != true)) {
                    this.SalesRepName2Field = value;
                    this.RaisePropertyChanged("SalesRepName2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName3 {
            get {
                return this.SalesRepName3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName3Field, value) != true)) {
                    this.SalesRepName3Field = value;
                    this.RaisePropertyChanged("SalesRepName3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName4 {
            get {
                return this.SalesRepName4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName4Field, value) != true)) {
                    this.SalesRepName4Field = value;
                    this.RaisePropertyChanged("SalesRepName4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName5 {
            get {
                return this.SalesRepName5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName5Field, value) != true)) {
                    this.SalesRepName5Field = value;
                    this.RaisePropertyChanged("SalesRepName5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SkipRecurring {
            get {
                return this.SkipRecurringField;
            }
            set {
                if ((this.SkipRecurringField.Equals(value) != true)) {
                    this.SkipRecurringField = value;
                    this.RaisePropertyChanged("SkipRecurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToAddressList {
            get {
                return this.SoldToAddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToAddressListField, value) != true)) {
                    this.SoldToAddressListField = value;
                    this.RaisePropertyChanged("SoldToAddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustID {
            get {
                return this.SoldToCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustIDField, value) != true)) {
                    this.SoldToCustIDField = value;
                    this.RaisePropertyChanged("SoldToCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoldToCustNum {
            get {
                return this.SoldToCustNumField;
            }
            set {
                if ((this.SoldToCustNumField.Equals(value) != true)) {
                    this.SoldToCustNumField = value;
                    this.RaisePropertyChanged("SoldToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustomerName {
            get {
                return this.SoldToCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustomerNameField, value) != true)) {
                    this.SoldToCustomerNameField = value;
                    this.RaisePropertyChanged("SoldToCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SoldToInvoiceAddress {
            get {
                return this.SoldToInvoiceAddressField;
            }
            set {
                if ((this.SoldToInvoiceAddressField.Equals(value) != true)) {
                    this.SoldToInvoiceAddressField = value;
                    this.RaisePropertyChanged("SoldToInvoiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceInvoiceNum {
            get {
                return this.SourceInvoiceNumField;
            }
            set {
                if ((this.SourceInvoiceNumField.Equals(value) != true)) {
                    this.SourceInvoiceNumField = value;
                    this.RaisePropertyChanged("SourceInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SourceLastDate {
            get {
                return this.SourceLastDateField;
            }
            set {
                if ((this.SourceLastDateField.Equals(value) != true)) {
                    this.SourceLastDateField = value;
                    this.RaisePropertyChanged("SourceLastDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SourceRecurBalance {
            get {
                return this.SourceRecurBalanceField;
            }
            set {
                if ((this.SourceRecurBalanceField.Equals(value) != true)) {
                    this.SourceRecurBalanceField = value;
                    this.RaisePropertyChanged("SourceRecurBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartUp {
            get {
                return this.StartUpField;
            }
            set {
                if ((this.StartUpField.Equals(value) != true)) {
                    this.StartUpField = value;
                    this.RaisePropertyChanged("StartUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubTotal {
            get {
                return this.SubTotalField;
            }
            set {
                if ((this.SubTotalField.Equals(value) != true)) {
                    this.SubTotalField = value;
                    this.RaisePropertyChanged("SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SummarizationDate {
            get {
                return this.SummarizationDateField;
            }
            set {
                if ((this.SummarizationDateField.Equals(value) != true)) {
                    this.SummarizationDateField = value;
                    this.RaisePropertyChanged("SummarizationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemTranType {
            get {
                return this.SystemTranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemTranTypeField, value) != true)) {
                    this.SystemTranTypeField = value;
                    this.RaisePropertyChanged("SystemTranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool THIsImmatAdjustment {
            get {
                return this.THIsImmatAdjustmentField;
            }
            set {
                if ((this.THIsImmatAdjustmentField.Equals(value) != true)) {
                    this.THIsImmatAdjustmentField = value;
                    this.RaisePropertyChanged("THIsImmatAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TWDeclarePeriod {
            get {
                return this.TWDeclarePeriodField;
            }
            set {
                if ((this.TWDeclarePeriodField.Equals(value) != true)) {
                    this.TWDeclarePeriodField = value;
                    this.RaisePropertyChanged("TWDeclarePeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TWDeclareYear {
            get {
                return this.TWDeclareYearField;
            }
            set {
                if ((this.TWDeclareYearField.Equals(value) != true)) {
                    this.TWDeclareYearField = value;
                    this.RaisePropertyChanged("TWDeclareYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIExportDocumentName {
            get {
                return this.TWGUIExportDocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIExportDocumentNameField, value) != true)) {
                    this.TWGUIExportDocumentNameField = value;
                    this.RaisePropertyChanged("TWGUIExportDocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIExportRemarks {
            get {
                return this.TWGUIExportRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIExportRemarksField, value) != true)) {
                    this.TWGUIExportRemarksField = value;
                    this.RaisePropertyChanged("TWGUIExportRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIExportVerification {
            get {
                return this.TWGUIExportVerificationField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIExportVerificationField, value) != true)) {
                    this.TWGUIExportVerificationField = value;
                    this.RaisePropertyChanged("TWGUIExportVerification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIGroup {
            get {
                return this.TWGUIGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIGroupField, value) != true)) {
                    this.TWGUIGroupField = value;
                    this.RaisePropertyChanged("TWGUIGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIRegNumBuyer {
            get {
                return this.TWGUIRegNumBuyerField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIRegNumBuyerField, value) != true)) {
                    this.TWGUIRegNumBuyerField = value;
                    this.RaisePropertyChanged("TWGUIRegNumBuyer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIRegNumSeller {
            get {
                return this.TWGUIRegNumSellerField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIRegNumSellerField, value) != true)) {
                    this.TWGUIRegNumSellerField = value;
                    this.RaisePropertyChanged("TWGUIRegNumSeller");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGenerationType {
            get {
                return this.TWGenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGenerationTypeField, value) != true)) {
                    this.TWGenerationTypeField = value;
                    this.RaisePropertyChanged("TWGenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWPeriodPrefix {
            get {
                return this.TWPeriodPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.TWPeriodPrefixField, value) != true)) {
                    this.TWPeriodPrefixField = value;
                    this.RaisePropertyChanged("TWPeriodPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxExchangeRate {
            get {
                return this.TaxExchangeRateField;
            }
            set {
                if ((this.TaxExchangeRateField.Equals(value) != true)) {
                    this.TaxExchangeRateField = value;
                    this.RaisePropertyChanged("TaxExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxPoint {
            get {
                return this.TaxPointField;
            }
            set {
                if ((this.TaxPointField.Equals(value) != true)) {
                    this.TaxPointField = value;
                    this.RaisePropertyChanged("TaxPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRateGrpCode {
            get {
                return this.TaxRateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRateGrpCodeField, value) != true)) {
                    this.TaxRateGrpCodeField = value;
                    this.RaisePropertyChanged("TaxRateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRateGrpDescription {
            get {
                return this.TaxRateGrpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRateGrpDescriptionField, value) != true)) {
                    this.TaxRateGrpDescriptionField = value;
                    this.RaisePropertyChanged("TaxRateGrpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionDescription {
            get {
                return this.TaxRegionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionDescriptionField, value) != true)) {
                    this.TaxRegionDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCode {
            get {
                return this.TermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeField, value) != true)) {
                    this.TermsCodeField = value;
                    this.RaisePropertyChanged("TermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCodeDescription {
            get {
                return this.TermsCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeDescriptionField, value) != true)) {
                    this.TermsCodeDescriptionField = value;
                    this.RaisePropertyChanged("TermsCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotFinChrg {
            get {
                return this.TotFinChrgField;
            }
            set {
                if ((this.TotFinChrgField.Equals(value) != true)) {
                    this.TotFinChrgField = value;
                    this.RaisePropertyChanged("TotFinChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalInstanceNum {
            get {
                return this.TotalInstanceNumField;
            }
            set {
                if ((this.TotalInstanceNumField.Equals(value) != true)) {
                    this.TotalInstanceNumField = value;
                    this.RaisePropertyChanged("TotalInstanceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeDescription {
            get {
                return this.TranDocTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeDescriptionField, value) != true)) {
                    this.TranDocTypeDescriptionField = value;
                    this.RaisePropertyChanged("TranDocTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransApplyDate {
            get {
                return this.TransApplyDateField;
            }
            set {
                if ((this.TransApplyDateField.Equals(value) != true)) {
                    this.TransApplyDateField = value;
                    this.RaisePropertyChanged("TransApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnappliedCash {
            get {
                return this.UnappliedCashField;
            }
            set {
                if ((this.UnappliedCashField.Equals(value) != true)) {
                    this.UnappliedCashField = value;
                    this.RaisePropertyChanged("UnappliedCash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnpostedBal {
            get {
                return this.UnpostedBalField;
            }
            set {
                if ((this.UnpostedBalField.Equals(value) != true)) {
                    this.UnpostedBalField = value;
                    this.RaisePropertyChanged("UnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAltBillTo {
            get {
                return this.UseAltBillToField;
            }
            set {
                if ((this.UseAltBillToField.Equals(value) != true)) {
                    this.UseAltBillToField = value;
                    this.RaisePropertyChanged("UseAltBillTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAltBillToID {
            get {
                return this.UseAltBillToIDField;
            }
            set {
                if ((this.UseAltBillToIDField.Equals(value) != true)) {
                    this.UseAltBillToIDField = value;
                    this.RaisePropertyChanged("UseAltBillToID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSOCCDefaults {
            get {
                return this.UseSOCCDefaultsField;
            }
            set {
                if ((this.UseSOCCDefaultsField.Equals(value) != true)) {
                    this.UseSOCCDefaultsField = value;
                    this.RaisePropertyChanged("UseSOCCDefaults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseTaxRate {
            get {
                return this.UseTaxRateField;
            }
            set {
                if ((this.UseTaxRateField.Equals(value) != true)) {
                    this.UseTaxRateField = value;
                    this.RaisePropertyChanged("UseTaxRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VNInvDescription {
            get {
                return this.VNInvDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VNInvDescriptionField, value) != true)) {
                    this.VNInvDescriptionField = value;
                    this.RaisePropertyChanged("VNInvDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VNInvoiceType {
            get {
                return this.VNInvoiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VNInvoiceTypeField, value) != true)) {
                    this.VNInvoiceTypeField = value;
                    this.RaisePropertyChanged("VNInvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Vr {
            get {
                return this.VrField;
            }
            set {
                if ((this.VrField.Equals(value) != true)) {
                    this.VrField = value;
                    this.RaisePropertyChanged("Vr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WHTaxAmt {
            get {
                return this.WHTaxAmtField;
            }
            set {
                if ((this.WHTaxAmtField.Equals(value) != true)) {
                    this.WHTaxAmtField = value;
                    this.RaisePropertyChanged("WHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WithTaxConfirm {
            get {
                return this.WithTaxConfirmField;
            }
            set {
                if ((this.WithTaxConfirmField.Equals(value) != true)) {
                    this.WithTaxConfirmField = value;
                    this.RaisePropertyChanged("WithTaxConfirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WithholdAmt {
            get {
                return this.WithholdAmtField;
            }
            set {
                if ((this.WithholdAmtField.Equals(value) != true)) {
                    this.WithholdAmtField = value;
                    this.RaisePropertyChanged("WithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRateLabel {
            get {
                return this.XRateLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XRateLabelField, value) != true)) {
                    this.XRateLabelField = value;
                    this.RaisePropertyChanged("XRateLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> XRefContractDate {
            get {
                return this.XRefContractDateField;
            }
            set {
                if ((this.XRefContractDateField.Equals(value) != true)) {
                    this.XRefContractDateField = value;
                    this.RaisePropertyChanged("XRefContractDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefContractNum {
            get {
                return this.XRefContractNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefContractNumField, value) != true)) {
                    this.XRefContractNumField = value;
                    this.RaisePropertyChanged("XRefContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefInvoiceNum {
            get {
                return this.XRefInvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefInvoiceNumField, value) != true)) {
                    this.XRefInvoiceNumField = value;
                    this.RaisePropertyChanged("XRefInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dspSoldToCustID {
            get {
                return this.dspSoldToCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.dspSoldToCustIDField, value) != true)) {
                    this.dspSoldToCustIDField = value;
                    this.RaisePropertyChanged("dspSoldToCustID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcHeadAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcHeadAttchRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcMiscRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcMiscRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcMiscRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncomeTaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgInvcLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgInvcSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDateTime {
            get {
                return this.ChangeDateTimeField;
            }
            set {
                if ((this.ChangeDateTimeField.Equals(value) != true)) {
                    this.ChangeDateTimeField = value;
                    this.RaisePropertyChanged("ChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcMiscRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInMiscAmt {
            get {
                return this.DocInMiscAmtField;
            }
            set {
                if ((this.DocInMiscAmtField.Equals(value) != true)) {
                    this.DocInMiscAmtField = value;
                    this.RaisePropertyChanged("DocInMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMiscAmt {
            get {
                return this.DocMiscAmtField;
            }
            set {
                if ((this.DocMiscAmtField.Equals(value) != true)) {
                    this.DocMiscAmtField = value;
                    this.RaisePropertyChanged("DocMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocMiscAmt {
            get {
                return this.DspDocMiscAmtField;
            }
            set {
                if ((this.DspDocMiscAmtField.Equals(value) != true)) {
                    this.DspDocMiscAmtField = value;
                    this.RaisePropertyChanged("DspDocMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspMiscAmt {
            get {
                return this.DspMiscAmtField;
            }
            set {
                if ((this.DspMiscAmtField.Equals(value) != true)) {
                    this.DspMiscAmtField = value;
                    this.RaisePropertyChanged("DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InMiscAmt {
            get {
                return this.InMiscAmtField;
            }
            set {
                if ((this.InMiscAmtField.Equals(value) != true)) {
                    this.InMiscAmtField = value;
                    this.RaisePropertyChanged("InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomeTaxCode {
            get {
                return this.IncomeTaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomeTaxCodeField, value) != true)) {
                    this.IncomeTaxCodeField = value;
                    this.RaisePropertyChanged("IncomeTaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceLineLineDesc {
            get {
                return this.InvoiceLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceLineLineDescField, value) != true)) {
                    this.InvoiceLineLineDescField = value;
                    this.RaisePropertyChanged("InvoiceLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumCardMemberName {
            get {
                return this.InvoiceNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumCardMemberNameField, value) != true)) {
                    this.InvoiceNumCardMemberNameField = value;
                    this.RaisePropertyChanged("InvoiceNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumTermsCode {
            get {
                return this.InvoiceNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumTermsCodeField, value) != true)) {
                    this.InvoiceNumTermsCodeField = value;
                    this.RaisePropertyChanged("InvoiceNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscAmt {
            get {
                return this.MiscAmtField;
            }
            set {
                if ((this.MiscAmtField.Equals(value) != true)) {
                    this.MiscAmtField = value;
                    this.RaisePropertyChanged("MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeDescription {
            get {
                return this.MiscCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeDescriptionField, value) != true)) {
                    this.MiscCodeDescriptionField = value;
                    this.RaisePropertyChanged("MiscCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgInvcLine {
            get {
                return this.OrgInvcLineField;
            }
            set {
                if ((this.OrgInvcLineField.Equals(value) != true)) {
                    this.OrgInvcLineField = value;
                    this.RaisePropertyChanged("OrgInvcLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgInvcSeq {
            get {
                return this.OrgInvcSeqField;
            }
            set {
                if ((this.OrgInvcSeqField.Equals(value) != true)) {
                    this.OrgInvcSeqField = value;
                    this.RaisePropertyChanged("OrgInvcSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspMiscAmt {
            get {
                return this.Rpt1DspMiscAmtField;
            }
            set {
                if ((this.Rpt1DspMiscAmtField.Equals(value) != true)) {
                    this.Rpt1DspMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InMiscAmt {
            get {
                return this.Rpt1InMiscAmtField;
            }
            set {
                if ((this.Rpt1InMiscAmtField.Equals(value) != true)) {
                    this.Rpt1InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1MiscAmt {
            get {
                return this.Rpt1MiscAmtField;
            }
            set {
                if ((this.Rpt1MiscAmtField.Equals(value) != true)) {
                    this.Rpt1MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspMiscAmt {
            get {
                return this.Rpt2DspMiscAmtField;
            }
            set {
                if ((this.Rpt2DspMiscAmtField.Equals(value) != true)) {
                    this.Rpt2DspMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InMiscAmt {
            get {
                return this.Rpt2InMiscAmtField;
            }
            set {
                if ((this.Rpt2InMiscAmtField.Equals(value) != true)) {
                    this.Rpt2InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2MiscAmt {
            get {
                return this.Rpt2MiscAmtField;
            }
            set {
                if ((this.Rpt2MiscAmtField.Equals(value) != true)) {
                    this.Rpt2MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspMiscAmt {
            get {
                return this.Rpt3DspMiscAmtField;
            }
            set {
                if ((this.Rpt3DspMiscAmtField.Equals(value) != true)) {
                    this.Rpt3DspMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InMiscAmt {
            get {
                return this.Rpt3InMiscAmtField;
            }
            set {
                if ((this.Rpt3InMiscAmtField.Equals(value) != true)) {
                    this.Rpt3InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3MiscAmt {
            get {
                return this.Rpt3MiscAmtField;
            }
            set {
                if ((this.Rpt3MiscAmtField.Equals(value) != true)) {
                    this.Rpt3MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatIDDescription {
            get {
                return this.TaxCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDDescriptionField, value) != true)) {
                    this.TaxCatIDDescriptionField = value;
                    this.RaisePropertyChanged("TaxCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcTaxRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllocDepECAcqSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllocDepInvcLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllocDepInvcNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllocDepRateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllocDepTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApplyConfirmDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApplyConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConfirmDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmDocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmLegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DefTaxDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescCollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAllocTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovementNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedConfirmationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgInvcLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RateCodeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateTextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReverseByInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AllocDepTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AllocDepTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AllocDepTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool STPProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesTaxDescDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxConfirmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxFutureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxReverseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllocDepECAcqSeq {
            get {
                return this.AllocDepECAcqSeqField;
            }
            set {
                if ((this.AllocDepECAcqSeqField.Equals(value) != true)) {
                    this.AllocDepECAcqSeqField = value;
                    this.RaisePropertyChanged("AllocDepECAcqSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllocDepInvcLine {
            get {
                return this.AllocDepInvcLineField;
            }
            set {
                if ((this.AllocDepInvcLineField.Equals(value) != true)) {
                    this.AllocDepInvcLineField = value;
                    this.RaisePropertyChanged("AllocDepInvcLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllocDepInvcNum {
            get {
                return this.AllocDepInvcNumField;
            }
            set {
                if ((this.AllocDepInvcNumField.Equals(value) != true)) {
                    this.AllocDepInvcNumField = value;
                    this.RaisePropertyChanged("AllocDepInvcNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllocDepRateCode {
            get {
                return this.AllocDepRateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AllocDepRateCodeField, value) != true)) {
                    this.AllocDepRateCodeField = value;
                    this.RaisePropertyChanged("AllocDepRateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllocDepTaxBal {
            get {
                return this.AllocDepTaxBalField;
            }
            set {
                if ((this.AllocDepTaxBalField.Equals(value) != true)) {
                    this.AllocDepTaxBalField = value;
                    this.RaisePropertyChanged("AllocDepTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApplyConfirmDate {
            get {
                return this.ApplyConfirmDateField;
            }
            set {
                if ((this.ApplyConfirmDateField.Equals(value) != true)) {
                    this.ApplyConfirmDateField = value;
                    this.RaisePropertyChanged("ApplyConfirmDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApplyConfirmationDate {
            get {
                return this.ApplyConfirmationDateField;
            }
            set {
                if ((this.ApplyConfirmationDateField.Equals(value) != true)) {
                    this.ApplyConfirmationDateField = value;
                    this.RaisePropertyChanged("ApplyConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDateTime {
            get {
                return this.ChangeDateTimeField;
            }
            set {
                if ((this.ChangeDateTimeField.Equals(value) != true)) {
                    this.ChangeDateTimeField = value;
                    this.RaisePropertyChanged("ChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConfirmDate {
            get {
                return this.ConfirmDateField;
            }
            set {
                if ((this.ConfirmDateField.Equals(value) != true)) {
                    this.ConfirmDateField = value;
                    this.RaisePropertyChanged("ConfirmDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmDocType {
            get {
                return this.ConfirmDocTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmDocTypeField, value) != true)) {
                    this.ConfirmDocTypeField = value;
                    this.RaisePropertyChanged("ConfirmDocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmLegalNumber {
            get {
                return this.ConfirmLegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmLegalNumberField, value) != true)) {
                    this.ConfirmLegalNumberField = value;
                    this.RaisePropertyChanged("ConfirmLegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConfirmationDate {
            get {
                return this.ConfirmationDateField;
            }
            set {
                if ((this.ConfirmationDateField.Equals(value) != true)) {
                    this.ConfirmationDateField = value;
                    this.RaisePropertyChanged("ConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DefTaxDate {
            get {
                return this.DefTaxDateField;
            }
            set {
                if ((this.DefTaxDateField.Equals(value) != true)) {
                    this.DefTaxDateField = value;
                    this.RaisePropertyChanged("DefTaxDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescCollectionType {
            get {
                return this.DescCollectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescCollectionTypeField, value) != true)) {
                    this.DescCollectionTypeField = value;
                    this.RaisePropertyChanged("DescCollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAllocTaxBal {
            get {
                return this.DocAllocTaxBalField;
            }
            set {
                if ((this.DocAllocTaxBalField.Equals(value) != true)) {
                    this.DocAllocTaxBalField = value;
                    this.RaisePropertyChanged("DocAllocTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocFixedAmount {
            get {
                return this.DspDocFixedAmountField;
            }
            set {
                if ((this.DspDocFixedAmountField.Equals(value) != true)) {
                    this.DspDocFixedAmountField = value;
                    this.RaisePropertyChanged("DspDocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocReportableAmt {
            get {
                return this.DspDocReportableAmtField;
            }
            set {
                if ((this.DspDocReportableAmtField.Equals(value) != true)) {
                    this.DspDocReportableAmtField = value;
                    this.RaisePropertyChanged("DspDocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocTaxAmt {
            get {
                return this.DspDocTaxAmtField;
            }
            set {
                if ((this.DspDocTaxAmtField.Equals(value) != true)) {
                    this.DspDocTaxAmtField = value;
                    this.RaisePropertyChanged("DspDocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocTaxAmtVar {
            get {
                return this.DspDocTaxAmtVarField;
            }
            set {
                if ((this.DspDocTaxAmtVarField.Equals(value) != true)) {
                    this.DspDocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DspDocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocTaxableAmt {
            get {
                return this.DspDocTaxableAmtField;
            }
            set {
                if ((this.DspDocTaxableAmtField.Equals(value) != true)) {
                    this.DspDocTaxableAmtField = value;
                    this.RaisePropertyChanged("DspDocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspFixedAmount {
            get {
                return this.DspFixedAmountField;
            }
            set {
                if ((this.DspFixedAmountField.Equals(value) != true)) {
                    this.DspFixedAmountField = value;
                    this.RaisePropertyChanged("DspFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspReportableAmt {
            get {
                return this.DspReportableAmtField;
            }
            set {
                if ((this.DspReportableAmtField.Equals(value) != true)) {
                    this.DspReportableAmtField = value;
                    this.RaisePropertyChanged("DspReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspTaxAmt {
            get {
                return this.DspTaxAmtField;
            }
            set {
                if ((this.DspTaxAmtField.Equals(value) != true)) {
                    this.DspTaxAmtField = value;
                    this.RaisePropertyChanged("DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspTaxAmtVar {
            get {
                return this.DspTaxAmtVarField;
            }
            set {
                if ((this.DspTaxAmtVarField.Equals(value) != true)) {
                    this.DspTaxAmtVarField = value;
                    this.RaisePropertyChanged("DspTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspTaxableAmt {
            get {
                return this.DspTaxableAmtField;
            }
            set {
                if ((this.DspTaxableAmtField.Equals(value) != true)) {
                    this.DspTaxableAmtField = value;
                    this.RaisePropertyChanged("DspTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceLineLineDesc {
            get {
                return this.InvoiceLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceLineLineDescField, value) != true)) {
                    this.InvoiceLineLineDescField = value;
                    this.RaisePropertyChanged("InvoiceLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumCardMemberName {
            get {
                return this.InvoiceNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumCardMemberNameField, value) != true)) {
                    this.InvoiceNumCardMemberNameField = value;
                    this.RaisePropertyChanged("InvoiceNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumTermsCode {
            get {
                return this.InvoiceNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumTermsCodeField, value) != true)) {
                    this.InvoiceNumTermsCodeField = value;
                    this.RaisePropertyChanged("InvoiceNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovementNum {
            get {
                return this.MovementNumField;
            }
            set {
                if ((this.MovementNumField.Equals(value) != true)) {
                    this.MovementNumField = value;
                    this.RaisePropertyChanged("MovementNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedConfirmation {
            get {
                return this.NeedConfirmationField;
            }
            set {
                if ((this.NeedConfirmationField.Equals(value) != true)) {
                    this.NeedConfirmationField = value;
                    this.RaisePropertyChanged("NeedConfirmation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgInvcLine {
            get {
                return this.OrgInvcLineField;
            }
            set {
                if ((this.OrgInvcLineField.Equals(value) != true)) {
                    this.OrgInvcLineField = value;
                    this.RaisePropertyChanged("OrgInvcLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RateCodeAmt {
            get {
                return this.RateCodeAmtField;
            }
            set {
                if ((this.RateCodeAmtField.Equals(value) != true)) {
                    this.RateCodeAmtField = value;
                    this.RaisePropertyChanged("RateCodeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateTextCode {
            get {
                return this.RateTextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateTextCodeField, value) != true)) {
                    this.RateTextCodeField = value;
                    this.RaisePropertyChanged("RateTextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReverseByInvoiceNum {
            get {
                return this.ReverseByInvoiceNumField;
            }
            set {
                if ((this.ReverseByInvoiceNumField.Equals(value) != true)) {
                    this.ReverseByInvoiceNumField = value;
                    this.RaisePropertyChanged("ReverseByInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AllocDepTaxBal {
            get {
                return this.Rpt1AllocDepTaxBalField;
            }
            set {
                if ((this.Rpt1AllocDepTaxBalField.Equals(value) != true)) {
                    this.Rpt1AllocDepTaxBalField = value;
                    this.RaisePropertyChanged("Rpt1AllocDepTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspFixedAmount {
            get {
                return this.Rpt1DspFixedAmountField;
            }
            set {
                if ((this.Rpt1DspFixedAmountField.Equals(value) != true)) {
                    this.Rpt1DspFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1DspFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspReportableAmt {
            get {
                return this.Rpt1DspReportableAmtField;
            }
            set {
                if ((this.Rpt1DspReportableAmtField.Equals(value) != true)) {
                    this.Rpt1DspReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspTaxAmt {
            get {
                return this.Rpt1DspTaxAmtField;
            }
            set {
                if ((this.Rpt1DspTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DspTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspTaxAmtVar {
            get {
                return this.Rpt1DspTaxAmtVarField;
            }
            set {
                if ((this.Rpt1DspTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1DspTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1DspTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspTaxableAmt {
            get {
                return this.Rpt1DspTaxableAmtField;
            }
            set {
                if ((this.Rpt1DspTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DspTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AllocDepTaxBal {
            get {
                return this.Rpt2AllocDepTaxBalField;
            }
            set {
                if ((this.Rpt2AllocDepTaxBalField.Equals(value) != true)) {
                    this.Rpt2AllocDepTaxBalField = value;
                    this.RaisePropertyChanged("Rpt2AllocDepTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspFixedAmount {
            get {
                return this.Rpt2DspFixedAmountField;
            }
            set {
                if ((this.Rpt2DspFixedAmountField.Equals(value) != true)) {
                    this.Rpt2DspFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2DspFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspReportableAmt {
            get {
                return this.Rpt2DspReportableAmtField;
            }
            set {
                if ((this.Rpt2DspReportableAmtField.Equals(value) != true)) {
                    this.Rpt2DspReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspTaxAmt {
            get {
                return this.Rpt2DspTaxAmtField;
            }
            set {
                if ((this.Rpt2DspTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DspTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspTaxAmtVar {
            get {
                return this.Rpt2DspTaxAmtVarField;
            }
            set {
                if ((this.Rpt2DspTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2DspTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2DspTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspTaxableAmt {
            get {
                return this.Rpt2DspTaxableAmtField;
            }
            set {
                if ((this.Rpt2DspTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DspTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AllocDepTaxBal {
            get {
                return this.Rpt3AllocDepTaxBalField;
            }
            set {
                if ((this.Rpt3AllocDepTaxBalField.Equals(value) != true)) {
                    this.Rpt3AllocDepTaxBalField = value;
                    this.RaisePropertyChanged("Rpt3AllocDepTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspFixedAmount {
            get {
                return this.Rpt3DspFixedAmountField;
            }
            set {
                if ((this.Rpt3DspFixedAmountField.Equals(value) != true)) {
                    this.Rpt3DspFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3DspFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspReportableAmt {
            get {
                return this.Rpt3DspReportableAmtField;
            }
            set {
                if ((this.Rpt3DspReportableAmtField.Equals(value) != true)) {
                    this.Rpt3DspReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspTaxAmt {
            get {
                return this.Rpt3DspTaxAmtField;
            }
            set {
                if ((this.Rpt3DspTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DspTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspTaxAmtVar {
            get {
                return this.Rpt3DspTaxAmtVarField;
            }
            set {
                if ((this.Rpt3DspTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3DspTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3DspTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspTaxableAmt {
            get {
                return this.Rpt3DspTaxableAmtField;
            }
            set {
                if ((this.Rpt3DspTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DspTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool STPProcessed {
            get {
                return this.STPProcessedField;
            }
            set {
                if ((this.STPProcessedField.Equals(value) != true)) {
                    this.STPProcessedField = value;
                    this.RaisePropertyChanged("STPProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesTaxDescDescription {
            get {
                return this.SalesTaxDescDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesTaxDescDescriptionField, value) != true)) {
                    this.SalesTaxDescDescriptionField = value;
                    this.RaisePropertyChanged("SalesTaxDescDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TaxConfirm {
            get {
                return this.TaxConfirmField;
            }
            set {
                if ((this.TaxConfirmField.Equals(value) != true)) {
                    this.TaxConfirmField = value;
                    this.RaisePropertyChanged("TaxConfirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxDescription {
            get {
                return this.TaxDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxDescriptionField, value) != true)) {
                    this.TaxDescriptionField = value;
                    this.RaisePropertyChanged("TaxDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TaxFuture {
            get {
                return this.TaxFutureField;
            }
            set {
                if ((this.TaxFutureField.Equals(value) != true)) {
                    this.TaxFutureField = value;
                    this.RaisePropertyChanged("TaxFuture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxReverseDate {
            get {
                return this.TaxReverseDateField;
            }
            set {
                if ((this.TaxReverseDateField.Equals(value) != true)) {
                    this.TaxReverseDateField = value;
                    this.RaisePropertyChanged("TaxReverseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxTotal {
            get {
                return this.TaxTotalField;
            }
            set {
                if ((this.TaxTotalField.Equals(value) != true)) {
                    this.TaxTotalField = value;
                    this.RaisePropertyChanged("TaxTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxConnectStatusRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class TaxConnectStatusRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.TaxConnectStatusRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ETCOfflineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TCStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.TaxConnectStatusRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ETCOffline {
            get {
                return this.ETCOfflineField;
            }
            set {
                if ((this.ETCOfflineField.Equals(value) != true)) {
                    this.ETCOfflineField = value;
                    this.RaisePropertyChanged("ETCOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TCStatus {
            get {
                return this.TCStatusField;
            }
            set {
                if ((this.TCStatusField.Equals(value) != true)) {
                    this.TCStatusField = value;
                    this.RaisePropertyChanged("TCStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARSelectedDropShipRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARSelectedDropShipRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARSelectedDropShipRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShippedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnselectDropShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARSelectedDropShipRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoicedStatus {
            get {
                return this.InvoicedStatusField;
            }
            set {
                if ((this.InvoicedStatusField.Equals(value) != true)) {
                    this.InvoicedStatusField = value;
                    this.RaisePropertyChanged("InvoicedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShippedStatus {
            get {
                return this.ShippedStatusField;
            }
            set {
                if ((this.ShippedStatusField.Equals(value) != true)) {
                    this.ShippedStatusField = value;
                    this.RaisePropertyChanged("ShippedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnselectDropShipment {
            get {
                return this.UnselectDropShipmentField;
            }
            set {
                if ((this.UnselectDropShipmentField.Equals(value) != true)) {
                    this.UnselectDropShipmentField = value;
                    this.RaisePropertyChanged("UnselectDropShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARUninvoicedDropShipRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARUninvoicedDropShipRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARUninvoicedDropShipRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectDropShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShippedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARUninvoicedDropShipRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoicedStatus {
            get {
                return this.InvoicedStatusField;
            }
            set {
                if ((this.InvoicedStatusField.Equals(value) != true)) {
                    this.InvoicedStatusField = value;
                    this.RaisePropertyChanged("InvoicedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SelectDropShipment {
            get {
                return this.SelectDropShipmentField;
            }
            set {
                if ((this.SelectDropShipmentField.Equals(value) != true)) {
                    this.SelectDropShipmentField = value;
                    this.RaisePropertyChanged("SelectDropShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShippedStatus {
            get {
                return this.ShippedStatusField;
            }
            set {
                if ((this.ShippedStatusField.Equals(value) != true)) {
                    this.ShippedStatusField = value;
                    this.RaisePropertyChanged("ShippedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PEHedTaxSumRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PEHedTaxSumRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllocDepInvcNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.PEHedTaxSumRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HedNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllocDepInvcNum {
            get {
                return this.AllocDepInvcNumField;
            }
            set {
                if ((this.AllocDepInvcNumField.Equals(value) != true)) {
                    this.AllocDepInvcNumField = value;
                    this.RaisePropertyChanged("AllocDepInvcNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.PEHedTaxSumRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HedNum {
            get {
                return this.HedNumField;
            }
            set {
                if ((this.HedNumField.Equals(value) != true)) {
                    this.HedNumField = value;
                    this.RaisePropertyChanged("HedNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxDescription {
            get {
                return this.TaxDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxDescriptionField, value) != true)) {
                    this.TaxDescriptionField = value;
                    this.RaisePropertyChanged("TaxDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PEInvcTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PEInvcTaxRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.PEInvcTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.PEInvcTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RebateInvRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RebateInvRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.RebateInvRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RebateDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RebateIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.RebateInvRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RebateDesc {
            get {
                return this.RebateDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RebateDescField, value) != true)) {
                    this.RebateDescField = value;
                    this.RaisePropertyChanged("RebateDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RebateID {
            get {
                return this.RebateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RebateIDField, value) != true)) {
                    this.RebateIDField = value;
                    this.RaisePropertyChanged("RebateID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetRecInvSourceRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetRecInvSourceRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BillingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredRevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustomerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BillingDate {
            get {
                return this.BillingDateField;
            }
            set {
                if ((this.BillingDateField.Equals(value) != true)) {
                    this.BillingDateField = value;
                    this.RaisePropertyChanged("BillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deferred {
            get {
                return this.DeferredField;
            }
            set {
                if ((this.DeferredField.Equals(value) != true)) {
                    this.DeferredField = value;
                    this.RaisePropertyChanged("Deferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeferredRevenue {
            get {
                return this.DeferredRevenueField;
            }
            set {
                if ((this.DeferredRevenueField.Equals(value) != true)) {
                    this.DeferredRevenueField = value;
                    this.RaisePropertyChanged("DeferredRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoiceAmt {
            get {
                return this.DocInvoiceAmtField;
            }
            set {
                if ((this.DocInvoiceAmtField.Equals(value) != true)) {
                    this.DocInvoiceAmtField = value;
                    this.RaisePropertyChanged("DocInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceAmt {
            get {
                return this.InvoiceAmtField;
            }
            set {
                if ((this.InvoiceAmtField.Equals(value) != true)) {
                    this.InvoiceAmtField = value;
                    this.RaisePropertyChanged("InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoiceHeld {
            get {
                return this.InvoiceHeldField;
            }
            set {
                if ((this.InvoiceHeldField.Equals(value) != true)) {
                    this.InvoiceHeldField = value;
                    this.RaisePropertyChanged("InvoiceHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustomerName {
            get {
                return this.SoldToCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustomerNameField, value) != true)) {
                    this.SoldToCustomerNameField = value;
                    this.RaisePropertyChanged("SoldToCustomerName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcRecurrRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcRecurrRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcRecurrRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InstanceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcRecurrRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoiceAmt {
            get {
                return this.DocInvoiceAmtField;
            }
            set {
                if ((this.DocInvoiceAmtField.Equals(value) != true)) {
                    this.DocInvoiceAmtField = value;
                    this.RaisePropertyChanged("DocInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InstanceNum {
            get {
                return this.InstanceNumField;
            }
            set {
                if ((this.InstanceNumField.Equals(value) != true)) {
                    this.InstanceNumField = value;
                    this.RaisePropertyChanged("InstanceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceAmt {
            get {
                return this.InvoiceAmtField;
            }
            set {
                if ((this.InvoiceAmtField.Equals(value) != true)) {
                    this.InvoiceAmtField = value;
                    this.RaisePropertyChanged("InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoiceHeld {
            get {
                return this.InvoiceHeldField;
            }
            set {
                if ((this.InvoiceHeldField.Equals(value) != true)) {
                    this.InvoiceHeldField = value;
                    this.RaisePropertyChanged("InvoiceHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceRef {
            get {
                return this.InvoiceRefField;
            }
            set {
                if ((this.InvoiceRefField.Equals(value) != true)) {
                    this.InvoiceRefField = value;
                    this.RaisePropertyChanged("InvoiceRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceSuffix {
            get {
                return this.InvoiceSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceSuffixField, value) != true)) {
                    this.InvoiceSuffixField = value;
                    this.RaisePropertyChanged("InvoiceSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Posted {
            get {
                return this.PostedField;
            }
            set {
                if ((this.PostedField.Equals(value) != true)) {
                    this.PostedField = value;
                    this.RaisePropertyChanged("Posted");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlPackRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcDtlPackRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlPackRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCLbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JCSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MXSellingShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BurUnitCost {
            get {
                return this.BurUnitCostField;
            }
            set {
                if ((this.BurUnitCostField.Equals(value) != true)) {
                    this.BurUnitCostField = value;
                    this.RaisePropertyChanged("BurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlPackRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCBurUnitCost {
            get {
                return this.JCBurUnitCostField;
            }
            set {
                if ((this.JCBurUnitCostField.Equals(value) != true)) {
                    this.JCBurUnitCostField = value;
                    this.RaisePropertyChanged("JCBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCLbrUnitCost {
            get {
                return this.JCLbrUnitCostField;
            }
            set {
                if ((this.JCLbrUnitCostField.Equals(value) != true)) {
                    this.JCLbrUnitCostField = value;
                    this.RaisePropertyChanged("JCLbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCMtlBurUnitCost {
            get {
                return this.JCMtlBurUnitCostField;
            }
            set {
                if ((this.JCMtlBurUnitCostField.Equals(value) != true)) {
                    this.JCMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("JCMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCMtlUnitCost {
            get {
                return this.JCMtlUnitCostField;
            }
            set {
                if ((this.JCMtlUnitCostField.Equals(value) != true)) {
                    this.JCMtlUnitCostField = value;
                    this.RaisePropertyChanged("JCMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JCSubUnitCost {
            get {
                return this.JCSubUnitCostField;
            }
            set {
                if ((this.JCSubUnitCostField.Equals(value) != true)) {
                    this.JCSubUnitCostField = value;
                    this.RaisePropertyChanged("JCSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LbrUnitCost {
            get {
                return this.LbrUnitCostField;
            }
            set {
                if ((this.LbrUnitCostField.Equals(value) != true)) {
                    this.LbrUnitCostField = value;
                    this.RaisePropertyChanged("LbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MXSellingShipQty {
            get {
                return this.MXSellingShipQtyField;
            }
            set {
                if ((this.MXSellingShipQtyField.Equals(value) != true)) {
                    this.MXSellingShipQtyField = value;
                    this.RaisePropertyChanged("MXSellingShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlBurUnitCost {
            get {
                return this.MtlBurUnitCostField;
            }
            set {
                if ((this.MtlBurUnitCostField.Equals(value) != true)) {
                    this.MtlBurUnitCostField = value;
                    this.RaisePropertyChanged("MtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlUnitCost {
            get {
                return this.MtlUnitCostField;
            }
            set {
                if ((this.MtlUnitCostField.Equals(value) != true)) {
                    this.MtlUnitCostField = value;
                    this.RaisePropertyChanged("MtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurOrderQty {
            get {
                return this.OurOrderQtyField;
            }
            set {
                if ((this.OurOrderQtyField.Equals(value) != true)) {
                    this.OurOrderQtyField = value;
                    this.RaisePropertyChanged("OurOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurShipQty {
            get {
                return this.OurShipQtyField;
            }
            set {
                if ((this.OurShipQtyField.Equals(value) != true)) {
                    this.OurShipQtyField = value;
                    this.RaisePropertyChanged("OurShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingOrderQty {
            get {
                return this.SellingOrderQtyField;
            }
            set {
                if ((this.SellingOrderQtyField.Equals(value) != true)) {
                    this.SellingOrderQtyField = value;
                    this.RaisePropertyChanged("SellingOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingShipQty {
            get {
                return this.SellingShipQtyField;
            }
            set {
                if ((this.SellingShipQtyField.Equals(value) != true)) {
                    this.SellingShipQtyField = value;
                    this.RaisePropertyChanged("SellingShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubUnitCost {
            get {
                return this.SubUnitCostField;
            }
            set {
                if ((this.SubUnitCostField.Equals(value) != true)) {
                    this.SubUnitCostField = value;
                    this.RaisePropertyChanged("SubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcHeadListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcHeadListRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARLOCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARPromNoteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowChgAfterPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoPrintReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvailBTCustListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BillToInvoiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BillingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BlockedFinChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlockedFinChrgReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BlockedRemLettersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlockedRemLettersReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCStreetAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardmemberReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContractDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CorrectionInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CurrRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrRateGrpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustAgentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustAgentTaxRegNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustAllowOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustOnCreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNCustNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DNPmtAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DebitNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeferredRevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DepositCreditEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableAplDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DispBalDNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayBillAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayCreditCardNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDNPmtAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepAppliedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDispBalDNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocPayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocSATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocVrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocWHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocWithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentPrintedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDocSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DspInvoiceRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EDIReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ERSInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableAssignLegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSOCCDefaultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTranDocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableVoidLegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpirationMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpirationYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExportReportNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalCalendarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalYearSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GLPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GUIDateOfExportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDeductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIExportBillNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIExportBillTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIExportMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIExportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIFormatCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUITaxTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GenedFromRMAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLegNumCnfgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalCodeJrnlDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JournalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastChrgCalcDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastRevNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockTaxRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MainSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeedConfirmTaxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextDiscDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrigDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankCheckingAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankIBANCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankPayerRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OvrDefTaxDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PBProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PMUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackSlipNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayDatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PayDiscDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayDiscDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PayDiscPartPayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayDiscPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayMethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PayMethodSummarizePerCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayMethodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PaySchedEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMANumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToCalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RealEstateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecalcAmtsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecalcBeforePostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RefCancelledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RefCancelledByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReminderSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepComm5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepSales5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReversalDocAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReversalDocAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RevisionAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RevisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Rpt1PayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1PayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1SATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1VrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1WHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1WithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Rpt2PayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2PayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2SATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxamtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2VrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2WHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2WithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepGainLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepUnallocatedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepositAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepositCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspABAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspDepCrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspSubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Rpt3PayAmountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3PayDiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3SATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3VrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3WHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3WithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RvnJrnUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SEBankRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToAddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoldToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SoldToInvoiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SummarizationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemTranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TWDeclarePeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TWDeclareYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWPeriodPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRateGrpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotFinChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnappliedCashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnpostedBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseAltBillToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSOCCDefaultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseTaxRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WithholdAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRateLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> XRefContractDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dspSoldToCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isRevisionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ABAmt {
            get {
                return this.ABAmtField;
            }
            set {
                if ((this.ABAmtField.Equals(value) != true)) {
                    this.ABAmtField = value;
                    this.RaisePropertyChanged("ABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARLOCID {
            get {
                return this.ARLOCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ARLOCIDField, value) != true)) {
                    this.ARLOCIDField = value;
                    this.RaisePropertyChanged("ARLOCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARPromNoteID {
            get {
                return this.ARPromNoteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ARPromNoteIDField, value) != true)) {
                    this.ARPromNoteIDField = value;
                    this.RaisePropertyChanged("ARPromNoteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowChgAfterPrint {
            get {
                return this.AllowChgAfterPrintField;
            }
            set {
                if ((this.AllowChgAfterPrintField.Equals(value) != true)) {
                    this.AllowChgAfterPrintField = value;
                    this.RaisePropertyChanged("AllowChgAfterPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoPrintReady {
            get {
                return this.AutoPrintReadyField;
            }
            set {
                if ((this.AutoPrintReadyField.Equals(value) != true)) {
                    this.AutoPrintReadyField = value;
                    this.RaisePropertyChanged("AutoPrintReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailBTCustList {
            get {
                return this.AvailBTCustListField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailBTCustListField, value) != true)) {
                    this.AvailBTCustListField = value;
                    this.RaisePropertyChanged("AvailBTCustList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillConNum {
            get {
                return this.BillConNumField;
            }
            set {
                if ((this.BillConNumField.Equals(value) != true)) {
                    this.BillConNumField = value;
                    this.RaisePropertyChanged("BillConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BillToInvoiceAddress {
            get {
                return this.BillToInvoiceAddressField;
            }
            set {
                if ((this.BillToInvoiceAddressField.Equals(value) != true)) {
                    this.BillToInvoiceAddressField = value;
                    this.RaisePropertyChanged("BillToInvoiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BillingDate {
            get {
                return this.BillingDateField;
            }
            set {
                if ((this.BillingDateField.Equals(value) != true)) {
                    this.BillingDateField = value;
                    this.RaisePropertyChanged("BillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingNumber {
            get {
                return this.BillingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingNumberField, value) != true)) {
                    this.BillingNumberField = value;
                    this.RaisePropertyChanged("BillingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BlockedFinChrg {
            get {
                return this.BlockedFinChrgField;
            }
            set {
                if ((this.BlockedFinChrgField.Equals(value) != true)) {
                    this.BlockedFinChrgField = value;
                    this.RaisePropertyChanged("BlockedFinChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockedFinChrgReason {
            get {
                return this.BlockedFinChrgReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockedFinChrgReasonField, value) != true)) {
                    this.BlockedFinChrgReasonField = value;
                    this.RaisePropertyChanged("BlockedFinChrgReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BlockedRemLetters {
            get {
                return this.BlockedRemLettersField;
            }
            set {
                if ((this.BlockedRemLettersField.Equals(value) != true)) {
                    this.BlockedRemLettersField = value;
                    this.RaisePropertyChanged("BlockedRemLetters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockedRemLettersReason {
            get {
                return this.BlockedRemLettersReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockedRemLettersReasonField, value) != true)) {
                    this.BlockedRemLettersReasonField = value;
                    this.RaisePropertyChanged("BlockedRemLettersReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchID {
            get {
                return this.BranchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchIDField, value) != true)) {
                    this.BranchIDField = value;
                    this.RaisePropertyChanged("BranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCStreetAddr {
            get {
                return this.CCStreetAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.CCStreetAddrField, value) != true)) {
                    this.CCStreetAddrField = value;
                    this.RaisePropertyChanged("CCStreetAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCZip {
            get {
                return this.CCZipField;
            }
            set {
                if ((object.ReferenceEquals(this.CCZipField, value) != true)) {
                    this.CCZipField = value;
                    this.RaisePropertyChanged("CCZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMType {
            get {
                return this.CMTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CMTypeField, value) != true)) {
                    this.CMTypeField = value;
                    this.RaisePropertyChanged("CMType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardID {
            get {
                return this.CardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CardIDField, value) != true)) {
                    this.CardIDField = value;
                    this.RaisePropertyChanged("CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardMemberName {
            get {
                return this.CardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardMemberNameField, value) != true)) {
                    this.CardMemberNameField = value;
                    this.RaisePropertyChanged("CardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeField, value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardTypeDescription {
            get {
                return this.CardTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeDescriptionField, value) != true)) {
                    this.CardTypeDescriptionField = value;
                    this.RaisePropertyChanged("CardTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardmemberReference {
            get {
                return this.CardmemberReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CardmemberReferenceField, value) != true)) {
                    this.CardmemberReferenceField = value;
                    this.RaisePropertyChanged("CardmemberReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckRef {
            get {
                return this.CheckRefField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckRefField, value) != true)) {
                    this.CheckRefField = value;
                    this.RaisePropertyChanged("CheckRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Consolidated {
            get {
                return this.ConsolidatedField;
            }
            set {
                if ((this.ConsolidatedField.Equals(value) != true)) {
                    this.ConsolidatedField = value;
                    this.RaisePropertyChanged("Consolidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmailAddr {
            get {
                return this.ContactEmailAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailAddrField, value) != true)) {
                    this.ContactEmailAddrField = value;
                    this.RaisePropertyChanged("ContactEmailAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactFaxNum {
            get {
                return this.ContactFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFaxNumField, value) != true)) {
                    this.ContactFaxNumField = value;
                    this.RaisePropertyChanged("ContactFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhoneNum {
            get {
                return this.ContactPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneNumField, value) != true)) {
                    this.ContactPhoneNumField = value;
                    this.RaisePropertyChanged("ContactPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContractDate {
            get {
                return this.ContractDateField;
            }
            set {
                if ((this.ContractDateField.Equals(value) != true)) {
                    this.ContractDateField = value;
                    this.RaisePropertyChanged("ContractDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractRef {
            get {
                return this.ContractRefField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractRefField, value) != true)) {
                    this.ContractRefField = value;
                    this.RaisePropertyChanged("ContractRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CorrectionInv {
            get {
                return this.CorrectionInvField;
            }
            set {
                if ((this.CorrectionInvField.Equals(value) != true)) {
                    this.CorrectionInvField = value;
                    this.RaisePropertyChanged("CorrectionInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditMemo {
            get {
                return this.CreditMemoField;
            }
            set {
                if ((this.CreditMemoField.Equals(value) != true)) {
                    this.CreditMemoField = value;
                    this.RaisePropertyChanged("CreditMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CurrRateDate {
            get {
                return this.CurrRateDateField;
            }
            set {
                if ((this.CurrRateDateField.Equals(value) != true)) {
                    this.CurrRateDateField = value;
                    this.RaisePropertyChanged("CurrRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrRateGrpDescription {
            get {
                return this.CurrRateGrpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrRateGrpDescriptionField, value) != true)) {
                    this.CurrRateGrpDescriptionField = value;
                    this.RaisePropertyChanged("CurrRateGrpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrDesc {
            get {
                return this.CurrencyCodeCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrDescField, value) != true)) {
                    this.CurrencyCodeCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrSymbol {
            get {
                return this.CurrencyCodeCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrSymbolField, value) != true)) {
                    this.CurrencyCodeCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrencyID {
            get {
                return this.CurrencyCodeCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrencyIDField, value) != true)) {
                    this.CurrencyCodeCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustAgentName {
            get {
                return this.CustAgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustAgentNameField, value) != true)) {
                    this.CustAgentNameField = value;
                    this.RaisePropertyChanged("CustAgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustAgentTaxRegNo {
            get {
                return this.CustAgentTaxRegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustAgentTaxRegNoField, value) != true)) {
                    this.CustAgentTaxRegNoField = value;
                    this.RaisePropertyChanged("CustAgentTaxRegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustAllowOTS {
            get {
                return this.CustAllowOTSField;
            }
            set {
                if ((this.CustAllowOTSField.Equals(value) != true)) {
                    this.CustAllowOTSField = value;
                    this.RaisePropertyChanged("CustAllowOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustOnCreditHold {
            get {
                return this.CustOnCreditHoldField;
            }
            set {
                if ((this.CustOnCreditHoldField.Equals(value) != true)) {
                    this.CustOnCreditHoldField = value;
                    this.RaisePropertyChanged("CustOnCreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBTName {
            get {
                return this.CustomerBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerBTNameField, value) != true)) {
                    this.CustomerBTNameField = value;
                    this.RaisePropertyChanged("CustomerBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNComments {
            get {
                return this.DNCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DNCommentsField, value) != true)) {
                    this.DNCommentsField = value;
                    this.RaisePropertyChanged("DNComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNCustNbr {
            get {
                return this.DNCustNbrField;
            }
            set {
                if ((object.ReferenceEquals(this.DNCustNbrField, value) != true)) {
                    this.DNCustNbrField = value;
                    this.RaisePropertyChanged("DNCustNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DNPmtAmt {
            get {
                return this.DNPmtAmtField;
            }
            set {
                if ((this.DNPmtAmtField.Equals(value) != true)) {
                    this.DNPmtAmtField = value;
                    this.RaisePropertyChanged("DNPmtAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DebitNote {
            get {
                return this.DebitNoteField;
            }
            set {
                if ((this.DebitNoteField.Equals(value) != true)) {
                    this.DebitNoteField = value;
                    this.RaisePropertyChanged("DebitNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deferred {
            get {
                return this.DeferredField;
            }
            set {
                if ((this.DeferredField.Equals(value) != true)) {
                    this.DeferredField = value;
                    this.RaisePropertyChanged("Deferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeferredRevenue {
            get {
                return this.DeferredRevenueField;
            }
            set {
                if ((this.DeferredRevenueField.Equals(value) != true)) {
                    this.DeferredRevenueField = value;
                    this.RaisePropertyChanged("DeferredRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepBal {
            get {
                return this.DepBalField;
            }
            set {
                if ((this.DepBalField.Equals(value) != true)) {
                    this.DepBalField = value;
                    this.RaisePropertyChanged("DepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepGainLoss {
            get {
                return this.DepGainLossField;
            }
            set {
                if ((this.DepGainLossField.Equals(value) != true)) {
                    this.DepGainLossField = value;
                    this.RaisePropertyChanged("DepGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepUnallocatedAmt {
            get {
                return this.DepUnallocatedAmtField;
            }
            set {
                if ((this.DepUnallocatedAmtField.Equals(value) != true)) {
                    this.DepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("DepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepositAmt {
            get {
                return this.DepositAmtField;
            }
            set {
                if ((this.DepositAmtField.Equals(value) != true)) {
                    this.DepositAmtField = value;
                    this.RaisePropertyChanged("DepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepositCredit {
            get {
                return this.DepositCreditField;
            }
            set {
                if ((this.DepositCreditField.Equals(value) != true)) {
                    this.DepositCreditField = value;
                    this.RaisePropertyChanged("DepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DepositCreditEnabled {
            get {
                return this.DepositCreditEnabledField;
            }
            set {
                if ((this.DepositCreditEnabledField.Equals(value) != true)) {
                    this.DepositCreditEnabledField = value;
                    this.RaisePropertyChanged("DepositCreditEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableAplDate {
            get {
                return this.DisableAplDateField;
            }
            set {
                if ((this.DisableAplDateField.Equals(value) != true)) {
                    this.DisableAplDateField = value;
                    this.RaisePropertyChanged("DisableAplDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DispBalDN {
            get {
                return this.DispBalDNField;
            }
            set {
                if ((this.DispBalDNField.Equals(value) != true)) {
                    this.DispBalDNField = value;
                    this.RaisePropertyChanged("DispBalDN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayBillAddr {
            get {
                return this.DisplayBillAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayBillAddrField, value) != true)) {
                    this.DisplayBillAddrField = value;
                    this.RaisePropertyChanged("DisplayBillAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayCreditCardNum {
            get {
                return this.DisplayCreditCardNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayCreditCardNumField, value) != true)) {
                    this.DisplayCreditCardNumField = value;
                    this.RaisePropertyChanged("DisplayCreditCardNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayCurrencyID {
            get {
                return this.DisplayCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayCurrencyIDField, value) != true)) {
                    this.DisplayCurrencyIDField = value;
                    this.RaisePropertyChanged("DisplayCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocABAmt {
            get {
                return this.DocABAmtField;
            }
            set {
                if ((this.DocABAmtField.Equals(value) != true)) {
                    this.DocABAmtField = value;
                    this.RaisePropertyChanged("DocABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDNPmtAmt {
            get {
                return this.DocDNPmtAmtField;
            }
            set {
                if ((this.DocDNPmtAmtField.Equals(value) != true)) {
                    this.DocDNPmtAmtField = value;
                    this.RaisePropertyChanged("DocDNPmtAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepApplied {
            get {
                return this.DocDepAppliedField;
            }
            set {
                if ((this.DocDepAppliedField.Equals(value) != true)) {
                    this.DocDepAppliedField = value;
                    this.RaisePropertyChanged("DocDepApplied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepBal {
            get {
                return this.DocDepBalField;
            }
            set {
                if ((this.DocDepBalField.Equals(value) != true)) {
                    this.DocDepBalField = value;
                    this.RaisePropertyChanged("DocDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepUnallocatedAmt {
            get {
                return this.DocDepUnallocatedAmtField;
            }
            set {
                if ((this.DocDepUnallocatedAmtField.Equals(value) != true)) {
                    this.DocDepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("DocDepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepositAmt {
            get {
                return this.DocDepositAmtField;
            }
            set {
                if ((this.DocDepositAmtField.Equals(value) != true)) {
                    this.DocDepositAmtField = value;
                    this.RaisePropertyChanged("DocDepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepositCredit {
            get {
                return this.DocDepositCreditField;
            }
            set {
                if ((this.DocDepositCreditField.Equals(value) != true)) {
                    this.DocDepositCreditField = value;
                    this.RaisePropertyChanged("DocDepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDispBalDN {
            get {
                return this.DocDispBalDNField;
            }
            set {
                if ((this.DocDispBalDNField.Equals(value) != true)) {
                    this.DocDispBalDNField = value;
                    this.RaisePropertyChanged("DocDispBalDN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspTaxAmt {
            get {
                return this.DocDspTaxAmtField;
            }
            set {
                if ((this.DocDspTaxAmtField.Equals(value) != true)) {
                    this.DocDspTaxAmtField = value;
                    this.RaisePropertyChanged("DocDspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoiceAmt {
            get {
                return this.DocInvoiceAmtField;
            }
            set {
                if ((this.DocInvoiceAmtField.Equals(value) != true)) {
                    this.DocInvoiceAmtField = value;
                    this.RaisePropertyChanged("DocInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoiceBal {
            get {
                return this.DocInvoiceBalField;
            }
            set {
                if ((this.DocInvoiceBalField.Equals(value) != true)) {
                    this.DocInvoiceBalField = value;
                    this.RaisePropertyChanged("DocInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocPayAmounts {
            get {
                return this.DocPayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocPayAmountsField, value) != true)) {
                    this.DocPayAmountsField = value;
                    this.RaisePropertyChanged("DocPayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPayDiscAmt {
            get {
                return this.DocPayDiscAmtField;
            }
            set {
                if ((this.DocPayDiscAmtField.Equals(value) != true)) {
                    this.DocPayDiscAmtField = value;
                    this.RaisePropertyChanged("DocPayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRounding {
            get {
                return this.DocRoundingField;
            }
            set {
                if ((this.DocRoundingField.Equals(value) != true)) {
                    this.DocRoundingField = value;
                    this.RaisePropertyChanged("DocRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocSATaxAmt {
            get {
                return this.DocSATaxAmtField;
            }
            set {
                if ((this.DocSATaxAmtField.Equals(value) != true)) {
                    this.DocSATaxAmtField = value;
                    this.RaisePropertyChanged("DocSATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocSubTotal {
            get {
                return this.DocSubTotalField;
            }
            set {
                if ((this.DocSubTotalField.Equals(value) != true)) {
                    this.DocSubTotalField = value;
                    this.RaisePropertyChanged("DocSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnpostedBal {
            get {
                return this.DocUnpostedBalField;
            }
            set {
                if ((this.DocUnpostedBalField.Equals(value) != true)) {
                    this.DocUnpostedBalField = value;
                    this.RaisePropertyChanged("DocUnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocVr {
            get {
                return this.DocVrField;
            }
            set {
                if ((this.DocVrField.Equals(value) != true)) {
                    this.DocVrField = value;
                    this.RaisePropertyChanged("DocVr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocWHTaxAmt {
            get {
                return this.DocWHTaxAmtField;
            }
            set {
                if ((this.DocWHTaxAmtField.Equals(value) != true)) {
                    this.DocWHTaxAmtField = value;
                    this.RaisePropertyChanged("DocWHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocWithholdAmt {
            get {
                return this.DocWithholdAmtField;
            }
            set {
                if ((this.DocWithholdAmtField.Equals(value) != true)) {
                    this.DocWithholdAmtField = value;
                    this.RaisePropertyChanged("DocWithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentPrinted {
            get {
                return this.DocumentPrintedField;
            }
            set {
                if ((this.DocumentPrintedField.Equals(value) != true)) {
                    this.DocumentPrintedField = value;
                    this.RaisePropertyChanged("DocumentPrinted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspABAmt {
            get {
                return this.DspABAmtField;
            }
            set {
                if ((this.DspABAmtField.Equals(value) != true)) {
                    this.DspABAmtField = value;
                    this.RaisePropertyChanged("DspABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDepBal {
            get {
                return this.DspDepBalField;
            }
            set {
                if ((this.DspDepBalField.Equals(value) != true)) {
                    this.DspDepBalField = value;
                    this.RaisePropertyChanged("DspDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDepCr {
            get {
                return this.DspDepCrField;
            }
            set {
                if ((this.DspDepCrField.Equals(value) != true)) {
                    this.DspDepCrField = value;
                    this.RaisePropertyChanged("DspDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocABAmt {
            get {
                return this.DspDocABAmtField;
            }
            set {
                if ((this.DspDocABAmtField.Equals(value) != true)) {
                    this.DspDocABAmtField = value;
                    this.RaisePropertyChanged("DspDocABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocDepBal {
            get {
                return this.DspDocDepBalField;
            }
            set {
                if ((this.DspDocDepBalField.Equals(value) != true)) {
                    this.DspDocDepBalField = value;
                    this.RaisePropertyChanged("DspDocDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocDepCr {
            get {
                return this.DspDocDepCrField;
            }
            set {
                if ((this.DspDocDepCrField.Equals(value) != true)) {
                    this.DspDocDepCrField = value;
                    this.RaisePropertyChanged("DspDocDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocInvoiceAmt {
            get {
                return this.DspDocInvoiceAmtField;
            }
            set {
                if ((this.DspDocInvoiceAmtField.Equals(value) != true)) {
                    this.DspDocInvoiceAmtField = value;
                    this.RaisePropertyChanged("DspDocInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocInvoiceBal {
            get {
                return this.DspDocInvoiceBalField;
            }
            set {
                if ((this.DspDocInvoiceBalField.Equals(value) != true)) {
                    this.DspDocInvoiceBalField = value;
                    this.RaisePropertyChanged("DspDocInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocRounding {
            get {
                return this.DspDocRoundingField;
            }
            set {
                if ((this.DspDocRoundingField.Equals(value) != true)) {
                    this.DspDocRoundingField = value;
                    this.RaisePropertyChanged("DspDocRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDocSubTotal {
            get {
                return this.DspDocSubTotalField;
            }
            set {
                if ((this.DspDocSubTotalField.Equals(value) != true)) {
                    this.DspDocSubTotalField = value;
                    this.RaisePropertyChanged("DspDocSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspInvoiceAmt {
            get {
                return this.DspInvoiceAmtField;
            }
            set {
                if ((this.DspInvoiceAmtField.Equals(value) != true)) {
                    this.DspInvoiceAmtField = value;
                    this.RaisePropertyChanged("DspInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspInvoiceBal {
            get {
                return this.DspInvoiceBalField;
            }
            set {
                if ((this.DspInvoiceBalField.Equals(value) != true)) {
                    this.DspInvoiceBalField = value;
                    this.RaisePropertyChanged("DspInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DspInvoiceRef {
            get {
                return this.DspInvoiceRefField;
            }
            set {
                if ((this.DspInvoiceRefField.Equals(value) != true)) {
                    this.DspInvoiceRefField = value;
                    this.RaisePropertyChanged("DspInvoiceRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspRounding {
            get {
                return this.DspRoundingField;
            }
            set {
                if ((this.DspRoundingField.Equals(value) != true)) {
                    this.DspRoundingField = value;
                    this.RaisePropertyChanged("DspRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspSubTotal {
            get {
                return this.DspSubTotalField;
            }
            set {
                if ((this.DspSubTotalField.Equals(value) != true)) {
                    this.DspSubTotalField = value;
                    this.RaisePropertyChanged("DspSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspTaxAmt {
            get {
                return this.DspTaxAmtField;
            }
            set {
                if ((this.DspTaxAmtField.Equals(value) != true)) {
                    this.DspTaxAmtField = value;
                    this.RaisePropertyChanged("DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EDIReady {
            get {
                return this.EDIReadyField;
            }
            set {
                if ((this.EDIReadyField.Equals(value) != true)) {
                    this.EDIReadyField = value;
                    this.RaisePropertyChanged("EDIReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ERSInvoice {
            get {
                return this.ERSInvoiceField;
            }
            set {
                if ((this.ERSInvoiceField.Equals(value) != true)) {
                    this.ERSInvoiceField = value;
                    this.RaisePropertyChanged("ERSInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableAssignLegNum {
            get {
                return this.EnableAssignLegNumField;
            }
            set {
                if ((this.EnableAssignLegNumField.Equals(value) != true)) {
                    this.EnableAssignLegNumField = value;
                    this.RaisePropertyChanged("EnableAssignLegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSOCCDefaults {
            get {
                return this.EnableSOCCDefaultsField;
            }
            set {
                if ((this.EnableSOCCDefaultsField.Equals(value) != true)) {
                    this.EnableSOCCDefaultsField = value;
                    this.RaisePropertyChanged("EnableSOCCDefaults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTranDocType {
            get {
                return this.EnableTranDocTypeField;
            }
            set {
                if ((this.EnableTranDocTypeField.Equals(value) != true)) {
                    this.EnableTranDocTypeField = value;
                    this.RaisePropertyChanged("EnableTranDocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableVoidLegNum {
            get {
                return this.EnableVoidLegNumField;
            }
            set {
                if ((this.EnableVoidLegNumField.Equals(value) != true)) {
                    this.EnableVoidLegNumField = value;
                    this.RaisePropertyChanged("EnableVoidLegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Excluded {
            get {
                return this.ExcludedField;
            }
            set {
                if ((this.ExcludedField.Equals(value) != true)) {
                    this.ExcludedField = value;
                    this.RaisePropertyChanged("Excluded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpirationMonth {
            get {
                return this.ExpirationMonthField;
            }
            set {
                if ((this.ExpirationMonthField.Equals(value) != true)) {
                    this.ExpirationMonthField = value;
                    this.RaisePropertyChanged("ExpirationMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpirationYear {
            get {
                return this.ExpirationYearField;
            }
            set {
                if ((this.ExpirationYearField.Equals(value) != true)) {
                    this.ExpirationYearField = value;
                    this.RaisePropertyChanged("ExpirationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExportReportNo {
            get {
                return this.ExportReportNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExportReportNoField, value) != true)) {
                    this.ExportReportNoField = value;
                    this.RaisePropertyChanged("ExportReportNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExportType {
            get {
                return this.ExportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExportTypeField, value) != true)) {
                    this.ExportTypeField = value;
                    this.RaisePropertyChanged("ExportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOB {
            get {
                return this.FOBField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBField, value) != true)) {
                    this.FOBField = value;
                    this.RaisePropertyChanged("FOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOBDescription {
            get {
                return this.FOBDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBDescriptionField, value) != true)) {
                    this.FOBDescriptionField = value;
                    this.RaisePropertyChanged("FOBDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalCalendarID {
            get {
                return this.FiscalCalendarIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalCalendarIDField, value) != true)) {
                    this.FiscalCalendarIDField = value;
                    this.RaisePropertyChanged("FiscalCalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalPeriod {
            get {
                return this.FiscalPeriodField;
            }
            set {
                if ((this.FiscalPeriodField.Equals(value) != true)) {
                    this.FiscalPeriodField = value;
                    this.RaisePropertyChanged("FiscalPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalYear {
            get {
                return this.FiscalYearField;
            }
            set {
                if ((this.FiscalYearField.Equals(value) != true)) {
                    this.FiscalYearField = value;
                    this.RaisePropertyChanged("FiscalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalYearSuffix {
            get {
                return this.FiscalYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalYearSuffixField, value) != true)) {
                    this.FiscalYearSuffixField = value;
                    this.RaisePropertyChanged("FiscalYearSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GLPosted {
            get {
                return this.GLPostedField;
            }
            set {
                if ((this.GLPostedField.Equals(value) != true)) {
                    this.GLPostedField = value;
                    this.RaisePropertyChanged("GLPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GUIDateOfExport {
            get {
                return this.GUIDateOfExportField;
            }
            set {
                if ((this.GUIDateOfExportField.Equals(value) != true)) {
                    this.GUIDateOfExportField = value;
                    this.RaisePropertyChanged("GUIDateOfExport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIDeductCode {
            get {
                return this.GUIDeductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDeductCodeField, value) != true)) {
                    this.GUIDeductCodeField = value;
                    this.RaisePropertyChanged("GUIDeductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIExportBillNumber {
            get {
                return this.GUIExportBillNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIExportBillNumberField, value) != true)) {
                    this.GUIExportBillNumberField = value;
                    this.RaisePropertyChanged("GUIExportBillNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIExportBillType {
            get {
                return this.GUIExportBillTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIExportBillTypeField, value) != true)) {
                    this.GUIExportBillTypeField = value;
                    this.RaisePropertyChanged("GUIExportBillType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIExportMark {
            get {
                return this.GUIExportMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIExportMarkField, value) != true)) {
                    this.GUIExportMarkField = value;
                    this.RaisePropertyChanged("GUIExportMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIExportType {
            get {
                return this.GUIExportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIExportTypeField, value) != true)) {
                    this.GUIExportTypeField = value;
                    this.RaisePropertyChanged("GUIExportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUIFormatCode {
            get {
                return this.GUIFormatCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIFormatCodeField, value) != true)) {
                    this.GUIFormatCodeField = value;
                    this.RaisePropertyChanged("GUIFormatCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUITaxTypeCode {
            get {
                return this.GUITaxTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GUITaxTypeCodeField, value) != true)) {
                    this.GUITaxTypeCodeField = value;
                    this.RaisePropertyChanged("GUITaxTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GenedFromRMA {
            get {
                return this.GenedFromRMAField;
            }
            set {
                if ((this.GenedFromRMAField.Equals(value) != true)) {
                    this.GenedFromRMAField = value;
                    this.RaisePropertyChanged("GenedFromRMA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLegNumCnfg {
            get {
                return this.HasLegNumCnfgField;
            }
            set {
                if ((this.HasLegNumCnfgField.Equals(value) != true)) {
                    this.HasLegNumCnfgField = value;
                    this.RaisePropertyChanged("HasLegNumCnfg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeadNum {
            get {
                return this.HeadNumField;
            }
            set {
                if ((this.HeadNumField.Equals(value) != true)) {
                    this.HeadNumField = value;
                    this.RaisePropertyChanged("HeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceAmt {
            get {
                return this.InvoiceAmtField;
            }
            set {
                if ((this.InvoiceAmtField.Equals(value) != true)) {
                    this.InvoiceAmtField = value;
                    this.RaisePropertyChanged("InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceBal {
            get {
                return this.InvoiceBalField;
            }
            set {
                if ((this.InvoiceBalField.Equals(value) != true)) {
                    this.InvoiceBalField = value;
                    this.RaisePropertyChanged("InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceComment {
            get {
                return this.InvoiceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCommentField, value) != true)) {
                    this.InvoiceCommentField = value;
                    this.RaisePropertyChanged("InvoiceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoiceHeld {
            get {
                return this.InvoiceHeldField;
            }
            set {
                if ((this.InvoiceHeldField.Equals(value) != true)) {
                    this.InvoiceHeldField = value;
                    this.RaisePropertyChanged("InvoiceHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceRef {
            get {
                return this.InvoiceRefField;
            }
            set {
                if ((this.InvoiceRefField.Equals(value) != true)) {
                    this.InvoiceRefField = value;
                    this.RaisePropertyChanged("InvoiceRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceSuffix {
            get {
                return this.InvoiceSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceSuffixField, value) != true)) {
                    this.InvoiceSuffixField = value;
                    this.RaisePropertyChanged("InvoiceSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceType {
            get {
                return this.InvoiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeField, value) != true)) {
                    this.InvoiceTypeField = value;
                    this.RaisePropertyChanged("InvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceTypeDesc {
            get {
                return this.InvoiceTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeDescField, value) != true)) {
                    this.InvoiceTypeDescField = value;
                    this.RaisePropertyChanged("InvoiceTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLcked {
            get {
                return this.IsLckedField;
            }
            set {
                if ((this.IsLckedField.Equals(value) != true)) {
                    this.IsLckedField = value;
                    this.RaisePropertyChanged("IsLcked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalCode {
            get {
                return this.JournalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalCodeField, value) != true)) {
                    this.JournalCodeField = value;
                    this.RaisePropertyChanged("JournalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalCodeJrnlDescription {
            get {
                return this.JournalCodeJrnlDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalCodeJrnlDescriptionField, value) != true)) {
                    this.JournalCodeJrnlDescriptionField = value;
                    this.RaisePropertyChanged("JournalCodeJrnlDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JournalNum {
            get {
                return this.JournalNumField;
            }
            set {
                if ((this.JournalNumField.Equals(value) != true)) {
                    this.JournalNumField = value;
                    this.RaisePropertyChanged("JournalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastChrgCalcDate {
            get {
                return this.LastChrgCalcDateField;
            }
            set {
                if ((this.LastChrgCalcDateField.Equals(value) != true)) {
                    this.LastChrgCalcDateField = value;
                    this.RaisePropertyChanged("LastChrgCalcDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastRevNum {
            get {
                return this.LastRevNumField;
            }
            set {
                if ((this.LastRevNumField.Equals(value) != true)) {
                    this.LastRevNumField = value;
                    this.RaisePropertyChanged("LastRevNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineType {
            get {
                return this.LineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LineTypeField, value) != true)) {
                    this.LineTypeField = value;
                    this.RaisePropertyChanged("LineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockRate {
            get {
                return this.LockRateField;
            }
            set {
                if ((this.LockRateField.Equals(value) != true)) {
                    this.LockRateField = value;
                    this.RaisePropertyChanged("LockRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockStatus {
            get {
                return this.LockStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LockStatusField, value) != true)) {
                    this.LockStatusField = value;
                    this.RaisePropertyChanged("LockStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockTaxRate {
            get {
                return this.LockTaxRateField;
            }
            set {
                if ((this.LockTaxRateField.Equals(value) != true)) {
                    this.LockTaxRateField = value;
                    this.RaisePropertyChanged("LockTaxRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MainSite {
            get {
                return this.MainSiteField;
            }
            set {
                if ((this.MainSiteField.Equals(value) != true)) {
                    this.MainSiteField = value;
                    this.RaisePropertyChanged("MainSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedConfirmTaxes {
            get {
                return this.NeedConfirmTaxesField;
            }
            set {
                if ((this.NeedConfirmTaxesField.Equals(value) != true)) {
                    this.NeedConfirmTaxesField = value;
                    this.RaisePropertyChanged("NeedConfirmTaxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextDiscDate {
            get {
                return this.NextDiscDateField;
            }
            set {
                if ((this.NextDiscDateField.Equals(value) != true)) {
                    this.NextDiscDateField = value;
                    this.RaisePropertyChanged("NextDiscDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenInvoice {
            get {
                return this.OpenInvoiceField;
            }
            set {
                if ((this.OpenInvoiceField.Equals(value) != true)) {
                    this.OpenInvoiceField = value;
                    this.RaisePropertyChanged("OpenInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrigDueDate {
            get {
                return this.OrigDueDateField;
            }
            set {
                if ((this.OrigDueDateField.Equals(value) != true)) {
                    this.OrigDueDateField = value;
                    this.RaisePropertyChanged("OrigDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBank {
            get {
                return this.OurBankField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankField, value) != true)) {
                    this.OurBankField = value;
                    this.RaisePropertyChanged("OurBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankCheckingAccount {
            get {
                return this.OurBankCheckingAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankCheckingAccountField, value) != true)) {
                    this.OurBankCheckingAccountField = value;
                    this.RaisePropertyChanged("OurBankCheckingAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankDescription {
            get {
                return this.OurBankDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankDescriptionField, value) != true)) {
                    this.OurBankDescriptionField = value;
                    this.RaisePropertyChanged("OurBankDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankIBANCode {
            get {
                return this.OurBankIBANCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankIBANCodeField, value) != true)) {
                    this.OurBankIBANCodeField = value;
                    this.RaisePropertyChanged("OurBankIBANCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankPayerRef {
            get {
                return this.OurBankPayerRefField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankPayerRefField, value) != true)) {
                    this.OurBankPayerRefField = value;
                    this.RaisePropertyChanged("OurBankPayerRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OvrDefTaxDate {
            get {
                return this.OvrDefTaxDateField;
            }
            set {
                if ((this.OvrDefTaxDateField.Equals(value) != true)) {
                    this.OvrDefTaxDateField = value;
                    this.RaisePropertyChanged("OvrDefTaxDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PBProjectID {
            get {
                return this.PBProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PBProjectIDField, value) != true)) {
                    this.PBProjectIDField = value;
                    this.RaisePropertyChanged("PBProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIPayment {
            get {
                return this.PIPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.PIPaymentField, value) != true)) {
                    this.PIPaymentField = value;
                    this.RaisePropertyChanged("PIPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PMUID {
            get {
                return this.PMUIDField;
            }
            set {
                if ((this.PMUIDField.Equals(value) != true)) {
                    this.PMUIDField = value;
                    this.RaisePropertyChanged("PMUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumField, value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackSlipNum {
            get {
                return this.PackSlipNumField;
            }
            set {
                if ((this.PackSlipNumField.Equals(value) != true)) {
                    this.PackSlipNumField = value;
                    this.RaisePropertyChanged("PackSlipNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayAmounts {
            get {
                return this.PayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.PayAmountsField, value) != true)) {
                    this.PayAmountsField = value;
                    this.RaisePropertyChanged("PayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayDates {
            get {
                return this.PayDatesField;
            }
            set {
                if ((object.ReferenceEquals(this.PayDatesField, value) != true)) {
                    this.PayDatesField = value;
                    this.RaisePropertyChanged("PayDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PayDiscAmt {
            get {
                return this.PayDiscAmtField;
            }
            set {
                if ((this.PayDiscAmtField.Equals(value) != true)) {
                    this.PayDiscAmtField = value;
                    this.RaisePropertyChanged("PayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PayDiscDate {
            get {
                return this.PayDiscDateField;
            }
            set {
                if ((this.PayDiscDateField.Equals(value) != true)) {
                    this.PayDiscDateField = value;
                    this.RaisePropertyChanged("PayDiscDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayDiscDays {
            get {
                return this.PayDiscDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.PayDiscDaysField, value) != true)) {
                    this.PayDiscDaysField = value;
                    this.RaisePropertyChanged("PayDiscDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PayDiscPartPay {
            get {
                return this.PayDiscPartPayField;
            }
            set {
                if ((this.PayDiscPartPayField.Equals(value) != true)) {
                    this.PayDiscPartPayField = value;
                    this.RaisePropertyChanged("PayDiscPartPay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayDiscPer {
            get {
                return this.PayDiscPerField;
            }
            set {
                if ((object.ReferenceEquals(this.PayDiscPerField, value) != true)) {
                    this.PayDiscPerField = value;
                    this.RaisePropertyChanged("PayDiscPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayMethodName {
            get {
                return this.PayMethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayMethodNameField, value) != true)) {
                    this.PayMethodNameField = value;
                    this.RaisePropertyChanged("PayMethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PayMethodSummarizePerCustomer {
            get {
                return this.PayMethodSummarizePerCustomerField;
            }
            set {
                if ((this.PayMethodSummarizePerCustomerField.Equals(value) != true)) {
                    this.PayMethodSummarizePerCustomerField = value;
                    this.RaisePropertyChanged("PayMethodSummarizePerCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayMethodType {
            get {
                return this.PayMethodTypeField;
            }
            set {
                if ((this.PayMethodTypeField.Equals(value) != true)) {
                    this.PayMethodTypeField = value;
                    this.RaisePropertyChanged("PayMethodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PaySchedEnabled {
            get {
                return this.PaySchedEnabledField;
            }
            set {
                if ((this.PaySchedEnabledField.Equals(value) != true)) {
                    this.PaySchedEnabledField = value;
                    this.RaisePropertyChanged("PaySchedEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Posted {
            get {
                return this.PostedField;
            }
            set {
                if ((this.PostedField.Equals(value) != true)) {
                    this.PostedField = value;
                    this.RaisePropertyChanged("Posted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessCard {
            get {
                return this.ProcessCardField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessCardField, value) != true)) {
                    this.ProcessCardField = value;
                    this.RaisePropertyChanged("ProcessCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectDescription {
            get {
                return this.ProjectDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectDescriptionField, value) != true)) {
                    this.ProjectDescriptionField = value;
                    this.RaisePropertyChanged("ProjectDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMANum {
            get {
                return this.RMANumField;
            }
            set {
                if ((this.RMANumField.Equals(value) != true)) {
                    this.RMANumField = value;
                    this.RaisePropertyChanged("RMANum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToBill {
            get {
                return this.ReadyToBillField;
            }
            set {
                if ((this.ReadyToBillField.Equals(value) != true)) {
                    this.ReadyToBillField = value;
                    this.RaisePropertyChanged("ReadyToBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToCalc {
            get {
                return this.ReadyToCalcField;
            }
            set {
                if ((this.ReadyToCalcField.Equals(value) != true)) {
                    this.ReadyToCalcField = value;
                    this.RaisePropertyChanged("ReadyToCalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RealEstateNo {
            get {
                return this.RealEstateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RealEstateNoField, value) != true)) {
                    this.RealEstateNoField = value;
                    this.RaisePropertyChanged("RealEstateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecalcAmts {
            get {
                return this.RecalcAmtsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecalcAmtsField, value) != true)) {
                    this.RecalcAmtsField = value;
                    this.RaisePropertyChanged("RecalcAmts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecalcBeforePost {
            get {
                return this.RecalcBeforePostField;
            }
            set {
                if ((this.RecalcBeforePostField.Equals(value) != true)) {
                    this.RecalcBeforePostField = value;
                    this.RaisePropertyChanged("RecalcBeforePost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RefCancelled {
            get {
                return this.RefCancelledField;
            }
            set {
                if ((this.RefCancelledField.Equals(value) != true)) {
                    this.RefCancelledField = value;
                    this.RaisePropertyChanged("RefCancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RefCancelledBy {
            get {
                return this.RefCancelledByField;
            }
            set {
                if ((this.RefCancelledByField.Equals(value) != true)) {
                    this.RefCancelledByField = value;
                    this.RaisePropertyChanged("RefCancelledBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReminderSeq {
            get {
                return this.ReminderSeqField;
            }
            set {
                if ((this.ReminderSeqField.Equals(value) != true)) {
                    this.ReminderSeqField = value;
                    this.RaisePropertyChanged("ReminderSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm1 {
            get {
                return this.RepComm1Field;
            }
            set {
                if ((this.RepComm1Field.Equals(value) != true)) {
                    this.RepComm1Field = value;
                    this.RaisePropertyChanged("RepComm1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm2 {
            get {
                return this.RepComm2Field;
            }
            set {
                if ((this.RepComm2Field.Equals(value) != true)) {
                    this.RepComm2Field = value;
                    this.RaisePropertyChanged("RepComm2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm3 {
            get {
                return this.RepComm3Field;
            }
            set {
                if ((this.RepComm3Field.Equals(value) != true)) {
                    this.RepComm3Field = value;
                    this.RaisePropertyChanged("RepComm3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm4 {
            get {
                return this.RepComm4Field;
            }
            set {
                if ((this.RepComm4Field.Equals(value) != true)) {
                    this.RepComm4Field = value;
                    this.RaisePropertyChanged("RepComm4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepComm5 {
            get {
                return this.RepComm5Field;
            }
            set {
                if ((this.RepComm5Field.Equals(value) != true)) {
                    this.RepComm5Field = value;
                    this.RaisePropertyChanged("RepComm5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate1 {
            get {
                return this.RepRate1Field;
            }
            set {
                if ((this.RepRate1Field.Equals(value) != true)) {
                    this.RepRate1Field = value;
                    this.RaisePropertyChanged("RepRate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate2 {
            get {
                return this.RepRate2Field;
            }
            set {
                if ((this.RepRate2Field.Equals(value) != true)) {
                    this.RepRate2Field = value;
                    this.RaisePropertyChanged("RepRate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate3 {
            get {
                return this.RepRate3Field;
            }
            set {
                if ((this.RepRate3Field.Equals(value) != true)) {
                    this.RepRate3Field = value;
                    this.RaisePropertyChanged("RepRate3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate4 {
            get {
                return this.RepRate4Field;
            }
            set {
                if ((this.RepRate4Field.Equals(value) != true)) {
                    this.RepRate4Field = value;
                    this.RaisePropertyChanged("RepRate4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate5 {
            get {
                return this.RepRate5Field;
            }
            set {
                if ((this.RepRate5Field.Equals(value) != true)) {
                    this.RepRate5Field = value;
                    this.RaisePropertyChanged("RepRate5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales1 {
            get {
                return this.RepSales1Field;
            }
            set {
                if ((this.RepSales1Field.Equals(value) != true)) {
                    this.RepSales1Field = value;
                    this.RaisePropertyChanged("RepSales1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales2 {
            get {
                return this.RepSales2Field;
            }
            set {
                if ((this.RepSales2Field.Equals(value) != true)) {
                    this.RepSales2Field = value;
                    this.RaisePropertyChanged("RepSales2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales3 {
            get {
                return this.RepSales3Field;
            }
            set {
                if ((this.RepSales3Field.Equals(value) != true)) {
                    this.RepSales3Field = value;
                    this.RaisePropertyChanged("RepSales3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales4 {
            get {
                return this.RepSales4Field;
            }
            set {
                if ((this.RepSales4Field.Equals(value) != true)) {
                    this.RepSales4Field = value;
                    this.RaisePropertyChanged("RepSales4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepSales5 {
            get {
                return this.RepSales5Field;
            }
            set {
                if ((this.RepSales5Field.Equals(value) != true)) {
                    this.RepSales5Field = value;
                    this.RaisePropertyChanged("RepSales5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit1 {
            get {
                return this.RepSplit1Field;
            }
            set {
                if ((this.RepSplit1Field.Equals(value) != true)) {
                    this.RepSplit1Field = value;
                    this.RaisePropertyChanged("RepSplit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit2 {
            get {
                return this.RepSplit2Field;
            }
            set {
                if ((this.RepSplit2Field.Equals(value) != true)) {
                    this.RepSplit2Field = value;
                    this.RaisePropertyChanged("RepSplit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit3 {
            get {
                return this.RepSplit3Field;
            }
            set {
                if ((this.RepSplit3Field.Equals(value) != true)) {
                    this.RepSplit3Field = value;
                    this.RaisePropertyChanged("RepSplit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit4 {
            get {
                return this.RepSplit4Field;
            }
            set {
                if ((this.RepSplit4Field.Equals(value) != true)) {
                    this.RepSplit4Field = value;
                    this.RaisePropertyChanged("RepSplit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit5 {
            get {
                return this.RepSplit5Field;
            }
            set {
                if ((this.RepSplit5Field.Equals(value) != true)) {
                    this.RepSplit5Field = value;
                    this.RaisePropertyChanged("RepSplit5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetInvoiceNum {
            get {
                return this.RetInvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RetInvoiceNumField, value) != true)) {
                    this.RetInvoiceNumField = value;
                    this.RaisePropertyChanged("RetInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReversalDocAmount {
            get {
                return this.ReversalDocAmountField;
            }
            set {
                if ((this.ReversalDocAmountField.Equals(value) != true)) {
                    this.ReversalDocAmountField = value;
                    this.RaisePropertyChanged("ReversalDocAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReversalDocAmt {
            get {
                return this.ReversalDocAmtField;
            }
            set {
                if ((this.ReversalDocAmtField.Equals(value) != true)) {
                    this.ReversalDocAmtField = value;
                    this.RaisePropertyChanged("ReversalDocAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RevisionAllowed {
            get {
                return this.RevisionAllowedField;
            }
            set {
                if ((this.RevisionAllowedField.Equals(value) != true)) {
                    this.RevisionAllowedField = value;
                    this.RaisePropertyChanged("RevisionAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RevisionDate {
            get {
                return this.RevisionDateField;
            }
            set {
                if ((this.RevisionDateField.Equals(value) != true)) {
                    this.RevisionDateField = value;
                    this.RaisePropertyChanged("RevisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((this.RevisionNumField.Equals(value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rounding {
            get {
                return this.RoundingField;
            }
            set {
                if ((this.RoundingField.Equals(value) != true)) {
                    this.RoundingField = value;
                    this.RaisePropertyChanged("Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ABAmt {
            get {
                return this.Rpt1ABAmtField;
            }
            set {
                if ((this.Rpt1ABAmtField.Equals(value) != true)) {
                    this.Rpt1ABAmtField = value;
                    this.RaisePropertyChanged("Rpt1ABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepBal {
            get {
                return this.Rpt1DepBalField;
            }
            set {
                if ((this.Rpt1DepBalField.Equals(value) != true)) {
                    this.Rpt1DepBalField = value;
                    this.RaisePropertyChanged("Rpt1DepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepGainLoss {
            get {
                return this.Rpt1DepGainLossField;
            }
            set {
                if ((this.Rpt1DepGainLossField.Equals(value) != true)) {
                    this.Rpt1DepGainLossField = value;
                    this.RaisePropertyChanged("Rpt1DepGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepUnallocatedAmt {
            get {
                return this.Rpt1DepUnallocatedAmtField;
            }
            set {
                if ((this.Rpt1DepUnallocatedAmtField.Equals(value) != true)) {
                    this.Rpt1DepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("Rpt1DepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepositAmt {
            get {
                return this.Rpt1DepositAmtField;
            }
            set {
                if ((this.Rpt1DepositAmtField.Equals(value) != true)) {
                    this.Rpt1DepositAmtField = value;
                    this.RaisePropertyChanged("Rpt1DepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepositCredit {
            get {
                return this.Rpt1DepositCreditField;
            }
            set {
                if ((this.Rpt1DepositCreditField.Equals(value) != true)) {
                    this.Rpt1DepositCreditField = value;
                    this.RaisePropertyChanged("Rpt1DepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspABAmt {
            get {
                return this.Rpt1DspABAmtField;
            }
            set {
                if ((this.Rpt1DspABAmtField.Equals(value) != true)) {
                    this.Rpt1DspABAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspDepBal {
            get {
                return this.Rpt1DspDepBalField;
            }
            set {
                if ((this.Rpt1DspDepBalField.Equals(value) != true)) {
                    this.Rpt1DspDepBalField = value;
                    this.RaisePropertyChanged("Rpt1DspDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspDepCr {
            get {
                return this.Rpt1DspDepCrField;
            }
            set {
                if ((this.Rpt1DspDepCrField.Equals(value) != true)) {
                    this.Rpt1DspDepCrField = value;
                    this.RaisePropertyChanged("Rpt1DspDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspInvoiceAmt {
            get {
                return this.Rpt1DspInvoiceAmtField;
            }
            set {
                if ((this.Rpt1DspInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt1DspInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspInvoiceBal {
            get {
                return this.Rpt1DspInvoiceBalField;
            }
            set {
                if ((this.Rpt1DspInvoiceBalField.Equals(value) != true)) {
                    this.Rpt1DspInvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt1DspInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspRounding {
            get {
                return this.Rpt1DspRoundingField;
            }
            set {
                if ((this.Rpt1DspRoundingField.Equals(value) != true)) {
                    this.Rpt1DspRoundingField = value;
                    this.RaisePropertyChanged("Rpt1DspRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspSubTotal {
            get {
                return this.Rpt1DspSubTotalField;
            }
            set {
                if ((this.Rpt1DspSubTotalField.Equals(value) != true)) {
                    this.Rpt1DspSubTotalField = value;
                    this.RaisePropertyChanged("Rpt1DspSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspTaxAmt {
            get {
                return this.Rpt1DspTaxAmtField;
            }
            set {
                if ((this.Rpt1DspTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DspTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InvoiceAmt {
            get {
                return this.Rpt1InvoiceAmtField;
            }
            set {
                if ((this.Rpt1InvoiceAmtField.Equals(value) != true)) {
                    this.Rpt1InvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt1InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InvoiceBal {
            get {
                return this.Rpt1InvoiceBalField;
            }
            set {
                if ((this.Rpt1InvoiceBalField.Equals(value) != true)) {
                    this.Rpt1InvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt1InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rpt1PayAmounts {
            get {
                return this.Rpt1PayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.Rpt1PayAmountsField, value) != true)) {
                    this.Rpt1PayAmountsField = value;
                    this.RaisePropertyChanged("Rpt1PayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1PayDiscAmt {
            get {
                return this.Rpt1PayDiscAmtField;
            }
            set {
                if ((this.Rpt1PayDiscAmtField.Equals(value) != true)) {
                    this.Rpt1PayDiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1PayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Rounding {
            get {
                return this.Rpt1RoundingField;
            }
            set {
                if ((this.Rpt1RoundingField.Equals(value) != true)) {
                    this.Rpt1RoundingField = value;
                    this.RaisePropertyChanged("Rpt1Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1SATaxAmt {
            get {
                return this.Rpt1SATaxAmtField;
            }
            set {
                if ((this.Rpt1SATaxAmtField.Equals(value) != true)) {
                    this.Rpt1SATaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1SATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1SubTotal {
            get {
                return this.Rpt1SubTotalField;
            }
            set {
                if ((this.Rpt1SubTotalField.Equals(value) != true)) {
                    this.Rpt1SubTotalField = value;
                    this.RaisePropertyChanged("Rpt1SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1UnpostedBal {
            get {
                return this.Rpt1UnpostedBalField;
            }
            set {
                if ((this.Rpt1UnpostedBalField.Equals(value) != true)) {
                    this.Rpt1UnpostedBalField = value;
                    this.RaisePropertyChanged("Rpt1UnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Vr {
            get {
                return this.Rpt1VrField;
            }
            set {
                if ((this.Rpt1VrField.Equals(value) != true)) {
                    this.Rpt1VrField = value;
                    this.RaisePropertyChanged("Rpt1Vr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1WHTaxAmt {
            get {
                return this.Rpt1WHTaxAmtField;
            }
            set {
                if ((this.Rpt1WHTaxAmtField.Equals(value) != true)) {
                    this.Rpt1WHTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1WHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1WithholdAmt {
            get {
                return this.Rpt1WithholdAmtField;
            }
            set {
                if ((this.Rpt1WithholdAmtField.Equals(value) != true)) {
                    this.Rpt1WithholdAmtField = value;
                    this.RaisePropertyChanged("Rpt1WithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ABAmt {
            get {
                return this.Rpt2ABAmtField;
            }
            set {
                if ((this.Rpt2ABAmtField.Equals(value) != true)) {
                    this.Rpt2ABAmtField = value;
                    this.RaisePropertyChanged("Rpt2ABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepBal {
            get {
                return this.Rpt2DepBalField;
            }
            set {
                if ((this.Rpt2DepBalField.Equals(value) != true)) {
                    this.Rpt2DepBalField = value;
                    this.RaisePropertyChanged("Rpt2DepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepGainLoss {
            get {
                return this.Rpt2DepGainLossField;
            }
            set {
                if ((this.Rpt2DepGainLossField.Equals(value) != true)) {
                    this.Rpt2DepGainLossField = value;
                    this.RaisePropertyChanged("Rpt2DepGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepUnallocatedAmt {
            get {
                return this.Rpt2DepUnallocatedAmtField;
            }
            set {
                if ((this.Rpt2DepUnallocatedAmtField.Equals(value) != true)) {
                    this.Rpt2DepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("Rpt2DepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepositAmt {
            get {
                return this.Rpt2DepositAmtField;
            }
            set {
                if ((this.Rpt2DepositAmtField.Equals(value) != true)) {
                    this.Rpt2DepositAmtField = value;
                    this.RaisePropertyChanged("Rpt2DepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepositCredit {
            get {
                return this.Rpt2DepositCreditField;
            }
            set {
                if ((this.Rpt2DepositCreditField.Equals(value) != true)) {
                    this.Rpt2DepositCreditField = value;
                    this.RaisePropertyChanged("Rpt2DepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspABAmt {
            get {
                return this.Rpt2DspABAmtField;
            }
            set {
                if ((this.Rpt2DspABAmtField.Equals(value) != true)) {
                    this.Rpt2DspABAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspDepBal {
            get {
                return this.Rpt2DspDepBalField;
            }
            set {
                if ((this.Rpt2DspDepBalField.Equals(value) != true)) {
                    this.Rpt2DspDepBalField = value;
                    this.RaisePropertyChanged("Rpt2DspDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspDepCr {
            get {
                return this.Rpt2DspDepCrField;
            }
            set {
                if ((this.Rpt2DspDepCrField.Equals(value) != true)) {
                    this.Rpt2DspDepCrField = value;
                    this.RaisePropertyChanged("Rpt2DspDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspInvoiceAmt {
            get {
                return this.Rpt2DspInvoiceAmtField;
            }
            set {
                if ((this.Rpt2DspInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt2DspInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspInvoiceBal {
            get {
                return this.Rpt2DspInvoiceBalField;
            }
            set {
                if ((this.Rpt2DspInvoiceBalField.Equals(value) != true)) {
                    this.Rpt2DspInvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt2DspInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspRounding {
            get {
                return this.Rpt2DspRoundingField;
            }
            set {
                if ((this.Rpt2DspRoundingField.Equals(value) != true)) {
                    this.Rpt2DspRoundingField = value;
                    this.RaisePropertyChanged("Rpt2DspRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspSubTotal {
            get {
                return this.Rpt2DspSubTotalField;
            }
            set {
                if ((this.Rpt2DspSubTotalField.Equals(value) != true)) {
                    this.Rpt2DspSubTotalField = value;
                    this.RaisePropertyChanged("Rpt2DspSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspTaxAmt {
            get {
                return this.Rpt2DspTaxAmtField;
            }
            set {
                if ((this.Rpt2DspTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DspTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InvoiceAmt {
            get {
                return this.Rpt2InvoiceAmtField;
            }
            set {
                if ((this.Rpt2InvoiceAmtField.Equals(value) != true)) {
                    this.Rpt2InvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt2InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InvoiceBal {
            get {
                return this.Rpt2InvoiceBalField;
            }
            set {
                if ((this.Rpt2InvoiceBalField.Equals(value) != true)) {
                    this.Rpt2InvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt2InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rpt2PayAmounts {
            get {
                return this.Rpt2PayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.Rpt2PayAmountsField, value) != true)) {
                    this.Rpt2PayAmountsField = value;
                    this.RaisePropertyChanged("Rpt2PayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2PayDiscAmt {
            get {
                return this.Rpt2PayDiscAmtField;
            }
            set {
                if ((this.Rpt2PayDiscAmtField.Equals(value) != true)) {
                    this.Rpt2PayDiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2PayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Rounding {
            get {
                return this.Rpt2RoundingField;
            }
            set {
                if ((this.Rpt2RoundingField.Equals(value) != true)) {
                    this.Rpt2RoundingField = value;
                    this.RaisePropertyChanged("Rpt2Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2SATaxAmt {
            get {
                return this.Rpt2SATaxAmtField;
            }
            set {
                if ((this.Rpt2SATaxAmtField.Equals(value) != true)) {
                    this.Rpt2SATaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2SATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2SubTotal {
            get {
                return this.Rpt2SubTotalField;
            }
            set {
                if ((this.Rpt2SubTotalField.Equals(value) != true)) {
                    this.Rpt2SubTotalField = value;
                    this.RaisePropertyChanged("Rpt2SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Taxamt {
            get {
                return this.Rpt2TaxamtField;
            }
            set {
                if ((this.Rpt2TaxamtField.Equals(value) != true)) {
                    this.Rpt2TaxamtField = value;
                    this.RaisePropertyChanged("Rpt2Taxamt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2UnpostedBal {
            get {
                return this.Rpt2UnpostedBalField;
            }
            set {
                if ((this.Rpt2UnpostedBalField.Equals(value) != true)) {
                    this.Rpt2UnpostedBalField = value;
                    this.RaisePropertyChanged("Rpt2UnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Vr {
            get {
                return this.Rpt2VrField;
            }
            set {
                if ((this.Rpt2VrField.Equals(value) != true)) {
                    this.Rpt2VrField = value;
                    this.RaisePropertyChanged("Rpt2Vr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2WHTaxAmt {
            get {
                return this.Rpt2WHTaxAmtField;
            }
            set {
                if ((this.Rpt2WHTaxAmtField.Equals(value) != true)) {
                    this.Rpt2WHTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2WHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2WithholdAmt {
            get {
                return this.Rpt2WithholdAmtField;
            }
            set {
                if ((this.Rpt2WithholdAmtField.Equals(value) != true)) {
                    this.Rpt2WithholdAmtField = value;
                    this.RaisePropertyChanged("Rpt2WithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ABAmt {
            get {
                return this.Rpt3ABAmtField;
            }
            set {
                if ((this.Rpt3ABAmtField.Equals(value) != true)) {
                    this.Rpt3ABAmtField = value;
                    this.RaisePropertyChanged("Rpt3ABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepBal {
            get {
                return this.Rpt3DepBalField;
            }
            set {
                if ((this.Rpt3DepBalField.Equals(value) != true)) {
                    this.Rpt3DepBalField = value;
                    this.RaisePropertyChanged("Rpt3DepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepGainLoss {
            get {
                return this.Rpt3DepGainLossField;
            }
            set {
                if ((this.Rpt3DepGainLossField.Equals(value) != true)) {
                    this.Rpt3DepGainLossField = value;
                    this.RaisePropertyChanged("Rpt3DepGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepUnallocatedAmt {
            get {
                return this.Rpt3DepUnallocatedAmtField;
            }
            set {
                if ((this.Rpt3DepUnallocatedAmtField.Equals(value) != true)) {
                    this.Rpt3DepUnallocatedAmtField = value;
                    this.RaisePropertyChanged("Rpt3DepUnallocatedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepositAmt {
            get {
                return this.Rpt3DepositAmtField;
            }
            set {
                if ((this.Rpt3DepositAmtField.Equals(value) != true)) {
                    this.Rpt3DepositAmtField = value;
                    this.RaisePropertyChanged("Rpt3DepositAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepositCredit {
            get {
                return this.Rpt3DepositCreditField;
            }
            set {
                if ((this.Rpt3DepositCreditField.Equals(value) != true)) {
                    this.Rpt3DepositCreditField = value;
                    this.RaisePropertyChanged("Rpt3DepositCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspABAmt {
            get {
                return this.Rpt3DspABAmtField;
            }
            set {
                if ((this.Rpt3DspABAmtField.Equals(value) != true)) {
                    this.Rpt3DspABAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspABAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspDepBal {
            get {
                return this.Rpt3DspDepBalField;
            }
            set {
                if ((this.Rpt3DspDepBalField.Equals(value) != true)) {
                    this.Rpt3DspDepBalField = value;
                    this.RaisePropertyChanged("Rpt3DspDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspDepCr {
            get {
                return this.Rpt3DspDepCrField;
            }
            set {
                if ((this.Rpt3DspDepCrField.Equals(value) != true)) {
                    this.Rpt3DspDepCrField = value;
                    this.RaisePropertyChanged("Rpt3DspDepCr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspInvoiceAmt {
            get {
                return this.Rpt3DspInvoiceAmtField;
            }
            set {
                if ((this.Rpt3DspInvoiceAmtField.Equals(value) != true)) {
                    this.Rpt3DspInvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspInvoiceBal {
            get {
                return this.Rpt3DspInvoiceBalField;
            }
            set {
                if ((this.Rpt3DspInvoiceBalField.Equals(value) != true)) {
                    this.Rpt3DspInvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt3DspInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspRounding {
            get {
                return this.Rpt3DspRoundingField;
            }
            set {
                if ((this.Rpt3DspRoundingField.Equals(value) != true)) {
                    this.Rpt3DspRoundingField = value;
                    this.RaisePropertyChanged("Rpt3DspRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspSubTotal {
            get {
                return this.Rpt3DspSubTotalField;
            }
            set {
                if ((this.Rpt3DspSubTotalField.Equals(value) != true)) {
                    this.Rpt3DspSubTotalField = value;
                    this.RaisePropertyChanged("Rpt3DspSubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspTaxAmt {
            get {
                return this.Rpt3DspTaxAmtField;
            }
            set {
                if ((this.Rpt3DspTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DspTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InvoiceAmt {
            get {
                return this.Rpt3InvoiceAmtField;
            }
            set {
                if ((this.Rpt3InvoiceAmtField.Equals(value) != true)) {
                    this.Rpt3InvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt3InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InvoiceBal {
            get {
                return this.Rpt3InvoiceBalField;
            }
            set {
                if ((this.Rpt3InvoiceBalField.Equals(value) != true)) {
                    this.Rpt3InvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt3InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rpt3PayAmounts {
            get {
                return this.Rpt3PayAmountsField;
            }
            set {
                if ((object.ReferenceEquals(this.Rpt3PayAmountsField, value) != true)) {
                    this.Rpt3PayAmountsField = value;
                    this.RaisePropertyChanged("Rpt3PayAmounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3PayDiscAmt {
            get {
                return this.Rpt3PayDiscAmtField;
            }
            set {
                if ((this.Rpt3PayDiscAmtField.Equals(value) != true)) {
                    this.Rpt3PayDiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3PayDiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Rounding {
            get {
                return this.Rpt3RoundingField;
            }
            set {
                if ((this.Rpt3RoundingField.Equals(value) != true)) {
                    this.Rpt3RoundingField = value;
                    this.RaisePropertyChanged("Rpt3Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3SATaxAmt {
            get {
                return this.Rpt3SATaxAmtField;
            }
            set {
                if ((this.Rpt3SATaxAmtField.Equals(value) != true)) {
                    this.Rpt3SATaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3SATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3SubTotal {
            get {
                return this.Rpt3SubTotalField;
            }
            set {
                if ((this.Rpt3SubTotalField.Equals(value) != true)) {
                    this.Rpt3SubTotalField = value;
                    this.RaisePropertyChanged("Rpt3SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3UnpostedBal {
            get {
                return this.Rpt3UnpostedBalField;
            }
            set {
                if ((this.Rpt3UnpostedBalField.Equals(value) != true)) {
                    this.Rpt3UnpostedBalField = value;
                    this.RaisePropertyChanged("Rpt3UnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Vr {
            get {
                return this.Rpt3VrField;
            }
            set {
                if ((this.Rpt3VrField.Equals(value) != true)) {
                    this.Rpt3VrField = value;
                    this.RaisePropertyChanged("Rpt3Vr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3WHTaxAmt {
            get {
                return this.Rpt3WHTaxAmtField;
            }
            set {
                if ((this.Rpt3WHTaxAmtField.Equals(value) != true)) {
                    this.Rpt3WHTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3WHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3WithholdAmt {
            get {
                return this.Rpt3WithholdAmtField;
            }
            set {
                if ((this.Rpt3WithholdAmtField.Equals(value) != true)) {
                    this.Rpt3WithholdAmtField = value;
                    this.RaisePropertyChanged("Rpt3WithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RvnJrnUID {
            get {
                return this.RvnJrnUIDField;
            }
            set {
                if ((this.RvnJrnUIDField.Equals(value) != true)) {
                    this.RvnJrnUIDField = value;
                    this.RaisePropertyChanged("RvnJrnUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SATaxAmt {
            get {
                return this.SATaxAmtField;
            }
            set {
                if ((this.SATaxAmtField.Equals(value) != true)) {
                    this.SATaxAmtField = value;
                    this.RaisePropertyChanged("SATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SEBankRef {
            get {
                return this.SEBankRefField;
            }
            set {
                if ((object.ReferenceEquals(this.SEBankRefField, value) != true)) {
                    this.SEBankRefField = value;
                    this.RaisePropertyChanged("SEBankRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode1 {
            get {
                return this.SalesRepCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode1Field, value) != true)) {
                    this.SalesRepCode1Field = value;
                    this.RaisePropertyChanged("SalesRepCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode2 {
            get {
                return this.SalesRepCode2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode2Field, value) != true)) {
                    this.SalesRepCode2Field = value;
                    this.RaisePropertyChanged("SalesRepCode2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode3 {
            get {
                return this.SalesRepCode3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode3Field, value) != true)) {
                    this.SalesRepCode3Field = value;
                    this.RaisePropertyChanged("SalesRepCode3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode4 {
            get {
                return this.SalesRepCode4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode4Field, value) != true)) {
                    this.SalesRepCode4Field = value;
                    this.RaisePropertyChanged("SalesRepCode4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode5 {
            get {
                return this.SalesRepCode5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode5Field, value) != true)) {
                    this.SalesRepCode5Field = value;
                    this.RaisePropertyChanged("SalesRepCode5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepList {
            get {
                return this.SalesRepListField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepListField, value) != true)) {
                    this.SalesRepListField = value;
                    this.RaisePropertyChanged("SalesRepList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName1 {
            get {
                return this.SalesRepName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName1Field, value) != true)) {
                    this.SalesRepName1Field = value;
                    this.RaisePropertyChanged("SalesRepName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName2 {
            get {
                return this.SalesRepName2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName2Field, value) != true)) {
                    this.SalesRepName2Field = value;
                    this.RaisePropertyChanged("SalesRepName2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName3 {
            get {
                return this.SalesRepName3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName3Field, value) != true)) {
                    this.SalesRepName3Field = value;
                    this.RaisePropertyChanged("SalesRepName3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName4 {
            get {
                return this.SalesRepName4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName4Field, value) != true)) {
                    this.SalesRepName4Field = value;
                    this.RaisePropertyChanged("SalesRepName4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName5 {
            get {
                return this.SalesRepName5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName5Field, value) != true)) {
                    this.SalesRepName5Field = value;
                    this.RaisePropertyChanged("SalesRepName5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToAddressList {
            get {
                return this.SoldToAddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToAddressListField, value) != true)) {
                    this.SoldToAddressListField = value;
                    this.RaisePropertyChanged("SoldToAddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustID {
            get {
                return this.SoldToCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustIDField, value) != true)) {
                    this.SoldToCustIDField = value;
                    this.RaisePropertyChanged("SoldToCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoldToCustNum {
            get {
                return this.SoldToCustNumField;
            }
            set {
                if ((this.SoldToCustNumField.Equals(value) != true)) {
                    this.SoldToCustNumField = value;
                    this.RaisePropertyChanged("SoldToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustomerName {
            get {
                return this.SoldToCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustomerNameField, value) != true)) {
                    this.SoldToCustomerNameField = value;
                    this.RaisePropertyChanged("SoldToCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SoldToInvoiceAddress {
            get {
                return this.SoldToInvoiceAddressField;
            }
            set {
                if ((this.SoldToInvoiceAddressField.Equals(value) != true)) {
                    this.SoldToInvoiceAddressField = value;
                    this.RaisePropertyChanged("SoldToInvoiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartUp {
            get {
                return this.StartUpField;
            }
            set {
                if ((this.StartUpField.Equals(value) != true)) {
                    this.StartUpField = value;
                    this.RaisePropertyChanged("StartUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubTotal {
            get {
                return this.SubTotalField;
            }
            set {
                if ((this.SubTotalField.Equals(value) != true)) {
                    this.SubTotalField = value;
                    this.RaisePropertyChanged("SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SummarizationDate {
            get {
                return this.SummarizationDateField;
            }
            set {
                if ((this.SummarizationDateField.Equals(value) != true)) {
                    this.SummarizationDateField = value;
                    this.RaisePropertyChanged("SummarizationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemTranType {
            get {
                return this.SystemTranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemTranTypeField, value) != true)) {
                    this.SystemTranTypeField = value;
                    this.RaisePropertyChanged("SystemTranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TWDeclarePeriod {
            get {
                return this.TWDeclarePeriodField;
            }
            set {
                if ((this.TWDeclarePeriodField.Equals(value) != true)) {
                    this.TWDeclarePeriodField = value;
                    this.RaisePropertyChanged("TWDeclarePeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TWDeclareYear {
            get {
                return this.TWDeclareYearField;
            }
            set {
                if ((this.TWDeclareYearField.Equals(value) != true)) {
                    this.TWDeclareYearField = value;
                    this.RaisePropertyChanged("TWDeclareYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIGroup {
            get {
                return this.TWGUIGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIGroupField, value) != true)) {
                    this.TWGUIGroupField = value;
                    this.RaisePropertyChanged("TWGUIGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGenerationType {
            get {
                return this.TWGenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGenerationTypeField, value) != true)) {
                    this.TWGenerationTypeField = value;
                    this.RaisePropertyChanged("TWGenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWPeriodPrefix {
            get {
                return this.TWPeriodPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.TWPeriodPrefixField, value) != true)) {
                    this.TWPeriodPrefixField = value;
                    this.RaisePropertyChanged("TWPeriodPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxExchangeRate {
            get {
                return this.TaxExchangeRateField;
            }
            set {
                if ((this.TaxExchangeRateField.Equals(value) != true)) {
                    this.TaxExchangeRateField = value;
                    this.RaisePropertyChanged("TaxExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxPoint {
            get {
                return this.TaxPointField;
            }
            set {
                if ((this.TaxPointField.Equals(value) != true)) {
                    this.TaxPointField = value;
                    this.RaisePropertyChanged("TaxPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRateGrpCode {
            get {
                return this.TaxRateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRateGrpCodeField, value) != true)) {
                    this.TaxRateGrpCodeField = value;
                    this.RaisePropertyChanged("TaxRateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRateGrpDescription {
            get {
                return this.TaxRateGrpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRateGrpDescriptionField, value) != true)) {
                    this.TaxRateGrpDescriptionField = value;
                    this.RaisePropertyChanged("TaxRateGrpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionDescription {
            get {
                return this.TaxRegionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionDescriptionField, value) != true)) {
                    this.TaxRegionDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCode {
            get {
                return this.TermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeField, value) != true)) {
                    this.TermsCodeField = value;
                    this.RaisePropertyChanged("TermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCodeDescription {
            get {
                return this.TermsCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeDescriptionField, value) != true)) {
                    this.TermsCodeDescriptionField = value;
                    this.RaisePropertyChanged("TermsCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotFinChrg {
            get {
                return this.TotFinChrgField;
            }
            set {
                if ((this.TotFinChrgField.Equals(value) != true)) {
                    this.TotFinChrgField = value;
                    this.RaisePropertyChanged("TotFinChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeDescription {
            get {
                return this.TranDocTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeDescriptionField, value) != true)) {
                    this.TranDocTypeDescriptionField = value;
                    this.RaisePropertyChanged("TranDocTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransApplyDate {
            get {
                return this.TransApplyDateField;
            }
            set {
                if ((this.TransApplyDateField.Equals(value) != true)) {
                    this.TransApplyDateField = value;
                    this.RaisePropertyChanged("TransApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnappliedCash {
            get {
                return this.UnappliedCashField;
            }
            set {
                if ((this.UnappliedCashField.Equals(value) != true)) {
                    this.UnappliedCashField = value;
                    this.RaisePropertyChanged("UnappliedCash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnpostedBal {
            get {
                return this.UnpostedBalField;
            }
            set {
                if ((this.UnpostedBalField.Equals(value) != true)) {
                    this.UnpostedBalField = value;
                    this.RaisePropertyChanged("UnpostedBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAltBillTo {
            get {
                return this.UseAltBillToField;
            }
            set {
                if ((this.UseAltBillToField.Equals(value) != true)) {
                    this.UseAltBillToField = value;
                    this.RaisePropertyChanged("UseAltBillTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSOCCDefaults {
            get {
                return this.UseSOCCDefaultsField;
            }
            set {
                if ((this.UseSOCCDefaultsField.Equals(value) != true)) {
                    this.UseSOCCDefaultsField = value;
                    this.RaisePropertyChanged("UseSOCCDefaults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseTaxRate {
            get {
                return this.UseTaxRateField;
            }
            set {
                if ((this.UseTaxRateField.Equals(value) != true)) {
                    this.UseTaxRateField = value;
                    this.RaisePropertyChanged("UseTaxRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Vr {
            get {
                return this.VrField;
            }
            set {
                if ((this.VrField.Equals(value) != true)) {
                    this.VrField = value;
                    this.RaisePropertyChanged("Vr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WHTaxAmt {
            get {
                return this.WHTaxAmtField;
            }
            set {
                if ((this.WHTaxAmtField.Equals(value) != true)) {
                    this.WHTaxAmtField = value;
                    this.RaisePropertyChanged("WHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WithholdAmt {
            get {
                return this.WithholdAmtField;
            }
            set {
                if ((this.WithholdAmtField.Equals(value) != true)) {
                    this.WithholdAmtField = value;
                    this.RaisePropertyChanged("WithholdAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRateLabel {
            get {
                return this.XRateLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.XRateLabelField, value) != true)) {
                    this.XRateLabelField = value;
                    this.RaisePropertyChanged("XRateLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> XRefContractDate {
            get {
                return this.XRefContractDateField;
            }
            set {
                if ((this.XRefContractDateField.Equals(value) != true)) {
                    this.XRefContractDateField = value;
                    this.RaisePropertyChanged("XRefContractDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefContractNum {
            get {
                return this.XRefContractNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefContractNumField, value) != true)) {
                    this.XRefContractNumField = value;
                    this.RaisePropertyChanged("XRefContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefInvoiceNum {
            get {
                return this.XRefInvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefInvoiceNumField, value) != true)) {
                    this.XRefInvoiceNumField = value;
                    this.RaisePropertyChanged("XRefInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dspSoldToCustID {
            get {
                return this.dspSoldToCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.dspSoldToCustIDField, value) != true)) {
                    this.dspSoldToCustIDField = value;
                    this.RaisePropertyChanged("dspSoldToCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isRevision {
            get {
                return this.isRevisionField;
            }
            set {
                if ((this.isRevisionField.Equals(value) != true)) {
                    this.isRevisionField = value;
                    this.RaisePropertyChanged("isRevision");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcHeadTransferListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcHeadTransferListRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTransferListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedForActionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTransferListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditMemo {
            get {
                return this.CreditMemoField;
            }
            set {
                if ((this.CreditMemoField.Equals(value) != true)) {
                    this.CreditMemoField = value;
                    this.RaisePropertyChanged("CreditMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoiceAmt {
            get {
                return this.DocInvoiceAmtField;
            }
            set {
                if ((this.DocInvoiceAmtField.Equals(value) != true)) {
                    this.DocInvoiceAmtField = value;
                    this.RaisePropertyChanged("DocInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceAmt {
            get {
                return this.InvoiceAmtField;
            }
            set {
                if ((this.InvoiceAmtField.Equals(value) != true)) {
                    this.InvoiceAmtField = value;
                    this.RaisePropertyChanged("InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoiceHeld {
            get {
                return this.InvoiceHeldField;
            }
            set {
                if ((this.InvoiceHeldField.Equals(value) != true)) {
                    this.InvoiceHeldField = value;
                    this.RaisePropertyChanged("InvoiceHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceType {
            get {
                return this.InvoiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeField, value) != true)) {
                    this.InvoiceTypeField = value;
                    this.RaisePropertyChanged("InvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SelectedForAction {
            get {
                return this.SelectedForActionField;
            }
            set {
                if ((this.SelectedForActionField.Equals(value) != true)) {
                    this.SelectedForActionField = value;
                    this.RaisePropertyChanged("SelectedForAction");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LegalNumGenOptsRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowDspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowTransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeID2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransYearSuffixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspTransYear {
            get {
                return this.DspTransYearField;
            }
            set {
                if ((object.ReferenceEquals(this.DspTransYearField, value) != true)) {
                    this.DspTransYearField = value;
                    this.RaisePropertyChanged("DspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePrefix {
            get {
                return this.EnablePrefixField;
            }
            set {
                if ((this.EnablePrefixField.Equals(value) != true)) {
                    this.EnablePrefixField = value;
                    this.RaisePropertyChanged("EnablePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSuffix {
            get {
                return this.EnableSuffixField;
            }
            set {
                if ((this.EnableSuffixField.Equals(value) != true)) {
                    this.EnableSuffixField = value;
                    this.RaisePropertyChanged("EnableSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationType {
            get {
                return this.GenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationTypeField, value) != true)) {
                    this.GenerationTypeField = value;
                    this.RaisePropertyChanged("GenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberID {
            get {
                return this.LegalNumberIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberIDField, value) != true)) {
                    this.LegalNumberIDField = value;
                    this.RaisePropertyChanged("LegalNumberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOption {
            get {
                return this.NumberOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOptionField, value) != true)) {
                    this.NumberOptionField = value;
                    this.RaisePropertyChanged("NumberOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberSuffix {
            get {
                return this.NumberSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberSuffixField, value) != true)) {
                    this.NumberSuffixField = value;
                    this.RaisePropertyChanged("NumberSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodPrefix {
            get {
                return this.PeriodPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodPrefixField, value) != true)) {
                    this.PeriodPrefixField = value;
                    this.RaisePropertyChanged("PeriodPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrefixList {
            get {
                return this.PrefixListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixListField, value) != true)) {
                    this.PrefixListField = value;
                    this.RaisePropertyChanged("PrefixList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowDspTransYear {
            get {
                return this.ShowDspTransYearField;
            }
            set {
                if ((this.ShowDspTransYearField.Equals(value) != true)) {
                    this.ShowDspTransYearField = value;
                    this.RaisePropertyChanged("ShowDspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowTransPeriod {
            get {
                return this.ShowTransPeriodField;
            }
            set {
                if ((this.ShowTransPeriodField.Equals(value) != true)) {
                    this.ShowTransPeriodField = value;
                    this.RaisePropertyChanged("ShowTransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID2 {
            get {
                return this.TranDocTypeID2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeID2Field, value) != true)) {
                    this.TranDocTypeID2Field = value;
                    this.RaisePropertyChanged("TranDocTypeID2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransPeriod {
            get {
                return this.TransPeriodField;
            }
            set {
                if ((this.TransPeriodField.Equals(value) != true)) {
                    this.TransPeriodField = value;
                    this.RaisePropertyChanged("TransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransYear {
            get {
                return this.TransYearField;
            }
            set {
                if ((this.TransYearField.Equals(value) != true)) {
                    this.TransYearField = value;
                    this.RaisePropertyChanged("TransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransYearSuffix {
            get {
                return this.TransYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.TransYearSuffixField, value) != true)) {
                    this.TransYearSuffixField = value;
                    this.RaisePropertyChanged("TransYearSuffix");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetLinesRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetLinesRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocLineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocLineTotal {
            get {
                return this.DocLineTotalField;
            }
            set {
                if ((this.DocLineTotalField.Equals(value) != true)) {
                    this.DocLineTotalField = value;
                    this.RaisePropertyChanged("DocLineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Part {
            get {
                return this.PartField;
            }
            set {
                if ((object.ReferenceEquals(this.PartField, value) != true)) {
                    this.PartField = value;
                    this.RaisePropertyChanged("Part");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingShipQty {
            get {
                return this.SellingShipQtyField;
            }
            set {
                if ((this.SellingShipQtyField.Equals(value) != true)) {
                    this.SellingShipQtyField = value;
                    this.RaisePropertyChanged("SellingShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCAddressRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ETCAddressRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ACWPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierRouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierRouteDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ETCAddressRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FipsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidPostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidRegionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ACWPercentage {
            get {
                return this.ACWPercentageField;
            }
            set {
                if ((this.ACWPercentageField.Equals(value) != true)) {
                    this.ACWPercentageField = value;
                    this.RaisePropertyChanged("ACWPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSource {
            get {
                return this.AddrSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceField, value) != true)) {
                    this.AddrSourceField = value;
                    this.RaisePropertyChanged("AddrSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSourceID {
            get {
                return this.AddrSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceIDField, value) != true)) {
                    this.AddrSourceIDField = value;
                    this.RaisePropertyChanged("AddrSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressCode {
            get {
                return this.AddressCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressCodeField, value) != true)) {
                    this.AddressCodeField = value;
                    this.RaisePropertyChanged("AddressCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeField, value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressTypeDesc {
            get {
                return this.AddressTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeDescField, value) != true)) {
                    this.AddressTypeDescField = value;
                    this.RaisePropertyChanged("AddressTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierRoute {
            get {
                return this.CarrierRouteField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierRouteField, value) != true)) {
                    this.CarrierRouteField = value;
                    this.RaisePropertyChanged("CarrierRoute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierRouteDesc {
            get {
                return this.CarrierRouteDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierRouteDescField, value) != true)) {
                    this.CarrierRouteDescField = value;
                    this.RaisePropertyChanged("CarrierRouteDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ETCAddressRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryNum {
            get {
                return this.CountryNumField;
            }
            set {
                if ((this.CountryNumField.Equals(value) != true)) {
                    this.CountryNumField = value;
                    this.RaisePropertyChanged("CountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FipsCode {
            get {
                return this.FipsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FipsCodeField, value) != true)) {
                    this.FipsCodeField = value;
                    this.RaisePropertyChanged("FipsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line1 {
            get {
                return this.Line1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line1Field, value) != true)) {
                    this.Line1Field = value;
                    this.RaisePropertyChanged("Line1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line2 {
            get {
                return this.Line2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line2Field, value) != true)) {
                    this.Line2Field = value;
                    this.RaisePropertyChanged("Line2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line3 {
            get {
                return this.Line3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line3Field, value) != true)) {
                    this.Line3Field = value;
                    this.RaisePropertyChanged("Line3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCountry {
            get {
                return this.OTSCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCountryField, value) != true)) {
                    this.OTSCountryField = value;
                    this.RaisePropertyChanged("OTSCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostNet {
            get {
                return this.PostNetField;
            }
            set {
                if ((object.ReferenceEquals(this.PostNetField, value) != true)) {
                    this.PostNetField = value;
                    this.RaisePropertyChanged("PostNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestID {
            get {
                return this.RequestIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIDField, value) != true)) {
                    this.RequestIDField = value;
                    this.RaisePropertyChanged("RequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultCodeField, value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultSeq {
            get {
                return this.ResultSeqField;
            }
            set {
                if ((this.ResultSeqField.Equals(value) != true)) {
                    this.ResultSeqField = value;
                    this.RaisePropertyChanged("ResultSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateAddr {
            get {
                return this.UpdateAddrField;
            }
            set {
                if ((this.UpdateAddrField.Equals(value) != true)) {
                    this.UpdateAddrField = value;
                    this.RaisePropertyChanged("UpdateAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateAllowed {
            get {
                return this.UpdateAllowedField;
            }
            set {
                if ((this.UpdateAllowedField.Equals(value) != true)) {
                    this.UpdateAllowedField = value;
                    this.RaisePropertyChanged("UpdateAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidCity {
            get {
                return this.ValidCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidCityField, value) != true)) {
                    this.ValidCityField = value;
                    this.RaisePropertyChanged("ValidCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidCountry {
            get {
                return this.ValidCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidCountryField, value) != true)) {
                    this.ValidCountryField = value;
                    this.RaisePropertyChanged("ValidCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine1 {
            get {
                return this.ValidLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine1Field, value) != true)) {
                    this.ValidLine1Field = value;
                    this.RaisePropertyChanged("ValidLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine2 {
            get {
                return this.ValidLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine2Field, value) != true)) {
                    this.ValidLine2Field = value;
                    this.RaisePropertyChanged("ValidLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine3 {
            get {
                return this.ValidLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine3Field, value) != true)) {
                    this.ValidLine3Field = value;
                    this.RaisePropertyChanged("ValidLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine4 {
            get {
                return this.ValidLine4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine4Field, value) != true)) {
                    this.ValidLine4Field = value;
                    this.RaisePropertyChanged("ValidLine4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidPostalCode {
            get {
                return this.ValidPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidPostalCodeField, value) != true)) {
                    this.ValidPostalCodeField = value;
                    this.RaisePropertyChanged("ValidPostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidRegion {
            get {
                return this.ValidRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidRegionField, value) != true)) {
                    this.ValidRegionField = value;
                    this.RaisePropertyChanged("ValidRegion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCMessageRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ETCMessageRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ETCMessageRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelplinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefersToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSource {
            get {
                return this.AddrSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceField, value) != true)) {
                    this.AddrSourceField = value;
                    this.RaisePropertyChanged("AddrSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSourceID {
            get {
                return this.AddrSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceIDField, value) != true)) {
                    this.AddrSourceIDField = value;
                    this.RaisePropertyChanged("AddrSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ETCMessageRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Helplink {
            get {
                return this.HelplinkField;
            }
            set {
                if ((object.ReferenceEquals(this.HelplinkField, value) != true)) {
                    this.HelplinkField = value;
                    this.RaisePropertyChanged("Helplink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefersTo {
            get {
                return this.RefersToField;
            }
            set {
                if ((object.ReferenceEquals(this.RefersToField, value) != true)) {
                    this.RefersToField = value;
                    this.RaisePropertyChanged("RefersTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestID {
            get {
                return this.RequestIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIDField, value) != true)) {
                    this.RequestIDField = value;
                    this.RaisePropertyChanged("RequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((object.ReferenceEquals(this.SeverityField, value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetDepRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetDepRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTranAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TranDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckRef {
            get {
                return this.CheckRefField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckRefField, value) != true)) {
                    this.CheckRefField = value;
                    this.RaisePropertyChanged("CheckRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTranAmt {
            get {
                return this.DocTranAmtField;
            }
            set {
                if ((this.DocTranAmtField.Equals(value) != true)) {
                    this.DocTranAmtField = value;
                    this.RaisePropertyChanged("DocTranAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeadNum {
            get {
                return this.HeadNumField;
            }
            set {
                if ((this.HeadNumField.Equals(value) != true)) {
                    this.HeadNumField = value;
                    this.RaisePropertyChanged("HeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TranDate {
            get {
                return this.TranDateField;
            }
            set {
                if ((this.TranDateField.Equals(value) != true)) {
                    this.TranDateField = value;
                    this.RaisePropertyChanged("TranDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcReminderRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcReminderRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcReminderRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FinChargeAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinChargeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LetterNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcReminderRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FinChargeAmt {
            get {
                return this.FinChargeAmtField;
            }
            set {
                if ((this.FinChargeAmtField.Equals(value) != true)) {
                    this.FinChargeAmtField = value;
                    this.RaisePropertyChanged("FinChargeAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinChargeCode {
            get {
                return this.FinChargeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FinChargeCodeField, value) != true)) {
                    this.FinChargeCodeField = value;
                    this.RaisePropertyChanged("FinChargeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GenDate {
            get {
                return this.GenDateField;
            }
            set {
                if ((this.GenDateField.Equals(value) != true)) {
                    this.GenDateField = value;
                    this.RaisePropertyChanged("GenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceAmt {
            get {
                return this.InvoiceAmtField;
            }
            set {
                if ((this.InvoiceAmtField.Equals(value) != true)) {
                    this.InvoiceAmtField = value;
                    this.RaisePropertyChanged("InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceBal {
            get {
                return this.InvoiceBalField;
            }
            set {
                if ((this.InvoiceBalField.Equals(value) != true)) {
                    this.InvoiceBalField = value;
                    this.RaisePropertyChanged("InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceType {
            get {
                return this.InvoiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeField, value) != true)) {
                    this.InvoiceTypeField = value;
                    this.RaisePropertyChanged("InvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LetterNum {
            get {
                return this.LetterNumField;
            }
            set {
                if ((this.LetterNumField.Equals(value) != true)) {
                    this.LetterNumField = value;
                    this.RaisePropertyChanged("LetterNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((this.PaymentsField.Equals(value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetMilestoneRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetMilestoneRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BillingAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BillingRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MilestoneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BillingAmount {
            get {
                return this.BillingAmountField;
            }
            set {
                if ((this.BillingAmountField.Equals(value) != true)) {
                    this.BillingAmountField = value;
                    this.RaisePropertyChanged("BillingAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BillingRequired {
            get {
                return this.BillingRequiredField;
            }
            set {
                if ((this.BillingRequiredField.Equals(value) != true)) {
                    this.BillingRequiredField = value;
                    this.RaisePropertyChanged("BillingRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingType {
            get {
                return this.BillingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingTypeField, value) != true)) {
                    this.BillingTypeField = value;
                    this.RaisePropertyChanged("BillingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingTypeDescription {
            get {
                return this.BillingTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingTypeDescriptionField, value) != true)) {
                    this.BillingTypeDescriptionField = value;
                    this.RaisePropertyChanged("BillingTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Complete {
            get {
                return this.CompleteField;
            }
            set {
                if ((this.CompleteField.Equals(value) != true)) {
                    this.CompleteField = value;
                    this.RaisePropertyChanged("Complete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MilestoneID {
            get {
                return this.MilestoneIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MilestoneIDField, value) != true)) {
                    this.MilestoneIDField = value;
                    this.RaisePropertyChanged("MilestoneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetPBRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetPBRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConInvMethField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TmpInvcNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConInvMeth {
            get {
                return this.ConInvMethField;
            }
            set {
                if ((object.ReferenceEquals(this.ConInvMethField, value) != true)) {
                    this.ConInvMethField = value;
                    this.RaisePropertyChanged("ConInvMeth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConReference {
            get {
                return this.ConReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ConReferenceField, value) != true)) {
                    this.ConReferenceField = value;
                    this.RaisePropertyChanged("ConReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TmpInvcNum {
            get {
                return this.TmpInvcNumField;
            }
            set {
                if ((this.TmpInvcNumField.Equals(value) != true)) {
                    this.TmpInvcNumField = value;
                    this.RaisePropertyChanged("TmpInvcNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetFSContRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetFSContRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContVoidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContractTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocContractTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LaborField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LastInvGenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrcConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrcConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricePerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecurringFreqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecurringInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RenewalNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ContractTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ContractTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ContractTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShpConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContVoid {
            get {
                return this.ContVoidField;
            }
            set {
                if ((this.ContVoidField.Equals(value) != true)) {
                    this.ContVoidField = value;
                    this.RaisePropertyChanged("ContVoid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractNum {
            get {
                return this.ContractNumField;
            }
            set {
                if ((this.ContractNumField.Equals(value) != true)) {
                    this.ContractNumField = value;
                    this.RaisePropertyChanged("ContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContractTotal {
            get {
                return this.ContractTotalField;
            }
            set {
                if ((this.ContractTotalField.Equals(value) != true)) {
                    this.ContractTotalField = value;
                    this.RaisePropertyChanged("ContractTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractType {
            get {
                return this.ContractTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractTypeField, value) != true)) {
                    this.ContractTypeField = value;
                    this.RaisePropertyChanged("ContractType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustName {
            get {
                return this.CustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNameField, value) != true)) {
                    this.CustNameField = value;
                    this.RaisePropertyChanged("CustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocContractTotal {
            get {
                return this.DocContractTotalField;
            }
            set {
                if ((this.DocContractTotalField.Equals(value) != true)) {
                    this.DocContractTotalField = value;
                    this.RaisePropertyChanged("DocContractTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((this.EntryDateField.Equals(value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpireDate {
            get {
                return this.ExpireDateField;
            }
            set {
                if ((this.ExpireDateField.Equals(value) != true)) {
                    this.ExpireDateField = value;
                    this.RaisePropertyChanged("ExpireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Labor {
            get {
                return this.LaborField;
            }
            set {
                if ((this.LaborField.Equals(value) != true)) {
                    this.LaborField = value;
                    this.RaisePropertyChanged("Labor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LastInvGen {
            get {
                return this.LastInvGenField;
            }
            set {
                if ((this.LastInvGenField.Equals(value) != true)) {
                    this.LastInvGenField = value;
                    this.RaisePropertyChanged("LastInvGen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Material {
            get {
                return this.MaterialField;
            }
            set {
                if ((this.MaterialField.Equals(value) != true)) {
                    this.MaterialField = value;
                    this.RaisePropertyChanged("Material");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Misc {
            get {
                return this.MiscField;
            }
            set {
                if ((this.MiscField.Equals(value) != true)) {
                    this.MiscField = value;
                    this.RaisePropertyChanged("Misc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier {
            get {
                return this.ModifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifierField, value) != true)) {
                    this.ModifierField = value;
                    this.RaisePropertyChanged("Modifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnSite {
            get {
                return this.OnSiteField;
            }
            set {
                if ((this.OnSiteField.Equals(value) != true)) {
                    this.OnSiteField = value;
                    this.RaisePropertyChanged("OnSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrcConName {
            get {
                return this.PrcConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrcConNameField, value) != true)) {
                    this.PrcConNameField = value;
                    this.RaisePropertyChanged("PrcConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrcConNum {
            get {
                return this.PrcConNumField;
            }
            set {
                if ((this.PrcConNumField.Equals(value) != true)) {
                    this.PrcConNumField = value;
                    this.RaisePropertyChanged("PrcConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricePer {
            get {
                return this.PricePerField;
            }
            set {
                if ((object.ReferenceEquals(this.PricePerField, value) != true)) {
                    this.PricePerField = value;
                    this.RaisePropertyChanged("PricePer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecurringFreq {
            get {
                return this.RecurringFreqField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurringFreqField, value) != true)) {
                    this.RecurringFreqField = value;
                    this.RaisePropertyChanged("RecurringFreq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecurringInv {
            get {
                return this.RecurringInvField;
            }
            set {
                if ((this.RecurringInvField.Equals(value) != true)) {
                    this.RecurringInvField = value;
                    this.RaisePropertyChanged("RecurringInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RenewalNbr {
            get {
                return this.RenewalNbrField;
            }
            set {
                if ((this.RenewalNbrField.Equals(value) != true)) {
                    this.RenewalNbrField = value;
                    this.RaisePropertyChanged("RenewalNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ContractTotal {
            get {
                return this.Rpt1ContractTotalField;
            }
            set {
                if ((this.Rpt1ContractTotalField.Equals(value) != true)) {
                    this.Rpt1ContractTotalField = value;
                    this.RaisePropertyChanged("Rpt1ContractTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ContractTotal {
            get {
                return this.Rpt2ContractTotalField;
            }
            set {
                if ((this.Rpt2ContractTotalField.Equals(value) != true)) {
                    this.Rpt2ContractTotalField = value;
                    this.RaisePropertyChanged("Rpt2ContractTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ContractTotal {
            get {
                return this.Rpt3ContractTotalField;
            }
            set {
                if ((this.Rpt3ContractTotalField.Equals(value) != true)) {
                    this.Rpt3ContractTotalField = value;
                    this.RaisePropertyChanged("Rpt3ContractTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToName {
            get {
                return this.ShipToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNameField, value) != true)) {
                    this.ShipToNameField = value;
                    this.RaisePropertyChanged("ShipToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShpConNum {
            get {
                return this.ShpConNumField;
            }
            set {
                if ((this.ShpConNumField.Equals(value) != true)) {
                    this.ShpConNumField = value;
                    this.RaisePropertyChanged("ShpConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetRMARow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetRMARow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool COSPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMARowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMALineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMANumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COSPosted {
            get {
                return this.COSPostedField;
            }
            set {
                if ((this.COSPostedField.Equals(value) != true)) {
                    this.COSPostedField = value;
                    this.RaisePropertyChanged("COSPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMARowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDiscount {
            get {
                return this.DocDiscountField;
            }
            set {
                if ((this.DocDiscountField.Equals(value) != true)) {
                    this.DocDiscountField = value;
                    this.RaisePropertyChanged("DocDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocExtPrice {
            get {
                return this.DocExtPriceField;
            }
            set {
                if ((this.DocExtPriceField.Equals(value) != true)) {
                    this.DocExtPriceField = value;
                    this.RaisePropertyChanged("DocExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalMiscChrg {
            get {
                return this.DocTotalMiscChrgField;
            }
            set {
                if ((this.DocTotalMiscChrgField.Equals(value) != true)) {
                    this.DocTotalMiscChrgField = value;
                    this.RaisePropertyChanged("DocTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurShipQty {
            get {
                return this.OurShipQtyField;
            }
            set {
                if ((this.OurShipQtyField.Equals(value) != true)) {
                    this.OurShipQtyField = value;
                    this.RaisePropertyChanged("OurShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricePerCode {
            get {
                return this.PricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PricePerCodeField, value) != true)) {
                    this.PricePerCodeField = value;
                    this.RaisePropertyChanged("PricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMALine {
            get {
                return this.RMALineField;
            }
            set {
                if ((this.RMALineField.Equals(value) != true)) {
                    this.RMALineField = value;
                    this.RaisePropertyChanged("RMALine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMANum {
            get {
                return this.RMANumField;
            }
            set {
                if ((this.RMANumField.Equals(value) != true)) {
                    this.RMANumField = value;
                    this.RaisePropertyChanged("RMANum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingShipQty {
            get {
                return this.SellingShipQtyField;
            }
            set {
                if ((this.SellingShipQtyField.Equals(value) != true)) {
                    this.SellingShipQtyField = value;
                    this.RaisePropertyChanged("SellingShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcCustTrkRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InvcCustTrkRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllocDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllocDepTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BillToInvoiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNCustNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAllocDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAllocDepTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocLineAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocLineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LineAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetInvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AllocDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AllocDepTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1LineAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1LineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AllocDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AllocDepTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2LineAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2LineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AdvanceBillCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AllocDepBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AllocDepTaxBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InvoiceAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InvoiceBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3LineAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3LineTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShpConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToAddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoldToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SoldToInvoiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalMiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRevisionNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AdvanceBillCredit {
            get {
                return this.AdvanceBillCreditField;
            }
            set {
                if ((this.AdvanceBillCreditField.Equals(value) != true)) {
                    this.AdvanceBillCreditField = value;
                    this.RaisePropertyChanged("AdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllocDepBal {
            get {
                return this.AllocDepBalField;
            }
            set {
                if ((this.AllocDepBalField.Equals(value) != true)) {
                    this.AllocDepBalField = value;
                    this.RaisePropertyChanged("AllocDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllocDepTaxBal {
            get {
                return this.AllocDepTaxBalField;
            }
            set {
                if ((this.AllocDepTaxBalField.Equals(value) != true)) {
                    this.AllocDepTaxBalField = value;
                    this.RaisePropertyChanged("AllocDepTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillConNum {
            get {
                return this.BillConNumField;
            }
            set {
                if ((this.BillConNumField.Equals(value) != true)) {
                    this.BillConNumField = value;
                    this.RaisePropertyChanged("BillConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BillToInvoiceAddress {
            get {
                return this.BillToInvoiceAddressField;
            }
            set {
                if ((this.BillToInvoiceAddressField.Equals(value) != true)) {
                    this.BillToInvoiceAddressField = value;
                    this.RaisePropertyChanged("BillToInvoiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckRef {
            get {
                return this.CheckRefField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckRefField, value) != true)) {
                    this.CheckRefField = value;
                    this.RaisePropertyChanged("CheckRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Consolidated {
            get {
                return this.ConsolidatedField;
            }
            set {
                if ((this.ConsolidatedField.Equals(value) != true)) {
                    this.ConsolidatedField = value;
                    this.RaisePropertyChanged("Consolidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractRef {
            get {
                return this.ContractRefField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractRefField, value) != true)) {
                    this.ContractRefField = value;
                    this.RaisePropertyChanged("ContractRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditMemo {
            get {
                return this.CreditMemoField;
            }
            set {
                if ((this.CreditMemoField.Equals(value) != true)) {
                    this.CreditMemoField = value;
                    this.RaisePropertyChanged("CreditMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustName {
            get {
                return this.CustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNameField, value) != true)) {
                    this.CustNameField = value;
                    this.RaisePropertyChanged("CustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNComments {
            get {
                return this.DNCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DNCommentsField, value) != true)) {
                    this.DNCommentsField = value;
                    this.RaisePropertyChanged("DNComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNCustNbr {
            get {
                return this.DNCustNbrField;
            }
            set {
                if ((object.ReferenceEquals(this.DNCustNbrField, value) != true)) {
                    this.DNCustNbrField = value;
                    this.RaisePropertyChanged("DNCustNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAdvanceBillCredit {
            get {
                return this.DocAdvanceBillCreditField;
            }
            set {
                if ((this.DocAdvanceBillCreditField.Equals(value) != true)) {
                    this.DocAdvanceBillCreditField = value;
                    this.RaisePropertyChanged("DocAdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAllocDepBal {
            get {
                return this.DocAllocDepBalField;
            }
            set {
                if ((this.DocAllocDepBalField.Equals(value) != true)) {
                    this.DocAllocDepBalField = value;
                    this.RaisePropertyChanged("DocAllocDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAllocDepTaxBal {
            get {
                return this.DocAllocDepTaxBalField;
            }
            set {
                if ((this.DocAllocDepTaxBalField.Equals(value) != true)) {
                    this.DocAllocDepTaxBalField = value;
                    this.RaisePropertyChanged("DocAllocDepTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDiscount {
            get {
                return this.DocDiscountField;
            }
            set {
                if ((this.DocDiscountField.Equals(value) != true)) {
                    this.DocDiscountField = value;
                    this.RaisePropertyChanged("DocDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocExtPrice {
            get {
                return this.DocExtPriceField;
            }
            set {
                if ((this.DocExtPriceField.Equals(value) != true)) {
                    this.DocExtPriceField = value;
                    this.RaisePropertyChanged("DocExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoiceAmt {
            get {
                return this.DocInvoiceAmtField;
            }
            set {
                if ((this.DocInvoiceAmtField.Equals(value) != true)) {
                    this.DocInvoiceAmtField = value;
                    this.RaisePropertyChanged("DocInvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInvoiceBal {
            get {
                return this.DocInvoiceBalField;
            }
            set {
                if ((this.DocInvoiceBalField.Equals(value) != true)) {
                    this.DocInvoiceBalField = value;
                    this.RaisePropertyChanged("DocInvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocLineAmount {
            get {
                return this.DocLineAmountField;
            }
            set {
                if ((this.DocLineAmountField.Equals(value) != true)) {
                    this.DocLineAmountField = value;
                    this.RaisePropertyChanged("DocLineAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocLineTotal {
            get {
                return this.DocLineTotalField;
            }
            set {
                if ((this.DocLineTotalField.Equals(value) != true)) {
                    this.DocLineTotalField = value;
                    this.RaisePropertyChanged("DocLineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalMiscChrg {
            get {
                return this.DocTotalMiscChrgField;
            }
            set {
                if ((this.DocTotalMiscChrgField.Equals(value) != true)) {
                    this.DocTotalMiscChrgField = value;
                    this.RaisePropertyChanged("DocTotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtPrice {
            get {
                return this.ExtPriceField;
            }
            set {
                if ((this.ExtPriceField.Equals(value) != true)) {
                    this.ExtPriceField = value;
                    this.RaisePropertyChanged("ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceAmt {
            get {
                return this.InvoiceAmtField;
            }
            set {
                if ((this.InvoiceAmtField.Equals(value) != true)) {
                    this.InvoiceAmtField = value;
                    this.RaisePropertyChanged("InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvoiceBal {
            get {
                return this.InvoiceBalField;
            }
            set {
                if ((this.InvoiceBalField.Equals(value) != true)) {
                    this.InvoiceBalField = value;
                    this.RaisePropertyChanged("InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoiceHeld {
            get {
                return this.InvoiceHeldField;
            }
            set {
                if ((this.InvoiceHeldField.Equals(value) != true)) {
                    this.InvoiceHeldField = value;
                    this.RaisePropertyChanged("InvoiceHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceSuffix {
            get {
                return this.InvoiceSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceSuffixField, value) != true)) {
                    this.InvoiceSuffixField = value;
                    this.RaisePropertyChanged("InvoiceSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceType {
            get {
                return this.InvoiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeField, value) != true)) {
                    this.InvoiceTypeField = value;
                    this.RaisePropertyChanged("InvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LineAmount {
            get {
                return this.LineAmountField;
            }
            set {
                if ((this.LineAmountField.Equals(value) != true)) {
                    this.LineAmountField = value;
                    this.RaisePropertyChanged("LineAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LineTotal {
            get {
                return this.LineTotalField;
            }
            set {
                if ((this.LineTotalField.Equals(value) != true)) {
                    this.LineTotalField = value;
                    this.RaisePropertyChanged("LineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenInvoice {
            get {
                return this.OpenInvoiceField;
            }
            set {
                if ((this.OpenInvoiceField.Equals(value) != true)) {
                    this.OpenInvoiceField = value;
                    this.RaisePropertyChanged("OpenInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineField, value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumField, value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCodeDescription {
            get {
                return this.ProdCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeDescriptionField, value) != true)) {
                    this.ProdCodeDescriptionField = value;
                    this.RaisePropertyChanged("ProdCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetInvoiceNum {
            get {
                return this.RetInvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RetInvoiceNumField, value) != true)) {
                    this.RetInvoiceNumField = value;
                    this.RaisePropertyChanged("RetInvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AdvanceBillCredit {
            get {
                return this.Rpt1AdvanceBillCreditField;
            }
            set {
                if ((this.Rpt1AdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt1AdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt1AdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AllocDepBal {
            get {
                return this.Rpt1AllocDepBalField;
            }
            set {
                if ((this.Rpt1AllocDepBalField.Equals(value) != true)) {
                    this.Rpt1AllocDepBalField = value;
                    this.RaisePropertyChanged("Rpt1AllocDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AllocDepTaxBal {
            get {
                return this.Rpt1AllocDepTaxBalField;
            }
            set {
                if ((this.Rpt1AllocDepTaxBalField.Equals(value) != true)) {
                    this.Rpt1AllocDepTaxBalField = value;
                    this.RaisePropertyChanged("Rpt1AllocDepTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Discount {
            get {
                return this.Rpt1DiscountField;
            }
            set {
                if ((this.Rpt1DiscountField.Equals(value) != true)) {
                    this.Rpt1DiscountField = value;
                    this.RaisePropertyChanged("Rpt1Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ExtPrice {
            get {
                return this.Rpt1ExtPriceField;
            }
            set {
                if ((this.Rpt1ExtPriceField.Equals(value) != true)) {
                    this.Rpt1ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt1ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InvoiceAmt {
            get {
                return this.Rpt1InvoiceAmtField;
            }
            set {
                if ((this.Rpt1InvoiceAmtField.Equals(value) != true)) {
                    this.Rpt1InvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt1InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InvoiceBal {
            get {
                return this.Rpt1InvoiceBalField;
            }
            set {
                if ((this.Rpt1InvoiceBalField.Equals(value) != true)) {
                    this.Rpt1InvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt1InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1LineAmount {
            get {
                return this.Rpt1LineAmountField;
            }
            set {
                if ((this.Rpt1LineAmountField.Equals(value) != true)) {
                    this.Rpt1LineAmountField = value;
                    this.RaisePropertyChanged("Rpt1LineAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1LineTotal {
            get {
                return this.Rpt1LineTotalField;
            }
            set {
                if ((this.Rpt1LineTotalField.Equals(value) != true)) {
                    this.Rpt1LineTotalField = value;
                    this.RaisePropertyChanged("Rpt1LineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalMiscChrg {
            get {
                return this.Rpt1TotalMiscChrgField;
            }
            set {
                if ((this.Rpt1TotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt1TotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt1TotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AdvanceBillCredit {
            get {
                return this.Rpt2AdvanceBillCreditField;
            }
            set {
                if ((this.Rpt2AdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt2AdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt2AdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AllocDepBal {
            get {
                return this.Rpt2AllocDepBalField;
            }
            set {
                if ((this.Rpt2AllocDepBalField.Equals(value) != true)) {
                    this.Rpt2AllocDepBalField = value;
                    this.RaisePropertyChanged("Rpt2AllocDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AllocDepTaxBal {
            get {
                return this.Rpt2AllocDepTaxBalField;
            }
            set {
                if ((this.Rpt2AllocDepTaxBalField.Equals(value) != true)) {
                    this.Rpt2AllocDepTaxBalField = value;
                    this.RaisePropertyChanged("Rpt2AllocDepTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Discount {
            get {
                return this.Rpt2DiscountField;
            }
            set {
                if ((this.Rpt2DiscountField.Equals(value) != true)) {
                    this.Rpt2DiscountField = value;
                    this.RaisePropertyChanged("Rpt2Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ExtPrice {
            get {
                return this.Rpt2ExtPriceField;
            }
            set {
                if ((this.Rpt2ExtPriceField.Equals(value) != true)) {
                    this.Rpt2ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt2ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InvoiceAmt {
            get {
                return this.Rpt2InvoiceAmtField;
            }
            set {
                if ((this.Rpt2InvoiceAmtField.Equals(value) != true)) {
                    this.Rpt2InvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt2InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InvoiceBal {
            get {
                return this.Rpt2InvoiceBalField;
            }
            set {
                if ((this.Rpt2InvoiceBalField.Equals(value) != true)) {
                    this.Rpt2InvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt2InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2LineAmount {
            get {
                return this.Rpt2LineAmountField;
            }
            set {
                if ((this.Rpt2LineAmountField.Equals(value) != true)) {
                    this.Rpt2LineAmountField = value;
                    this.RaisePropertyChanged("Rpt2LineAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2LineTotal {
            get {
                return this.Rpt2LineTotalField;
            }
            set {
                if ((this.Rpt2LineTotalField.Equals(value) != true)) {
                    this.Rpt2LineTotalField = value;
                    this.RaisePropertyChanged("Rpt2LineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalMiscChrg {
            get {
                return this.Rpt2TotalMiscChrgField;
            }
            set {
                if ((this.Rpt2TotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt2TotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt2TotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AdvanceBillCredit {
            get {
                return this.Rpt3AdvanceBillCreditField;
            }
            set {
                if ((this.Rpt3AdvanceBillCreditField.Equals(value) != true)) {
                    this.Rpt3AdvanceBillCreditField = value;
                    this.RaisePropertyChanged("Rpt3AdvanceBillCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AllocDepBal {
            get {
                return this.Rpt3AllocDepBalField;
            }
            set {
                if ((this.Rpt3AllocDepBalField.Equals(value) != true)) {
                    this.Rpt3AllocDepBalField = value;
                    this.RaisePropertyChanged("Rpt3AllocDepBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AllocDepTaxBal {
            get {
                return this.Rpt3AllocDepTaxBalField;
            }
            set {
                if ((this.Rpt3AllocDepTaxBalField.Equals(value) != true)) {
                    this.Rpt3AllocDepTaxBalField = value;
                    this.RaisePropertyChanged("Rpt3AllocDepTaxBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Discount {
            get {
                return this.Rpt3DiscountField;
            }
            set {
                if ((this.Rpt3DiscountField.Equals(value) != true)) {
                    this.Rpt3DiscountField = value;
                    this.RaisePropertyChanged("Rpt3Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ExtPrice {
            get {
                return this.Rpt3ExtPriceField;
            }
            set {
                if ((this.Rpt3ExtPriceField.Equals(value) != true)) {
                    this.Rpt3ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt3ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InvoiceAmt {
            get {
                return this.Rpt3InvoiceAmtField;
            }
            set {
                if ((this.Rpt3InvoiceAmtField.Equals(value) != true)) {
                    this.Rpt3InvoiceAmtField = value;
                    this.RaisePropertyChanged("Rpt3InvoiceAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InvoiceBal {
            get {
                return this.Rpt3InvoiceBalField;
            }
            set {
                if ((this.Rpt3InvoiceBalField.Equals(value) != true)) {
                    this.Rpt3InvoiceBalField = value;
                    this.RaisePropertyChanged("Rpt3InvoiceBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3LineAmount {
            get {
                return this.Rpt3LineAmountField;
            }
            set {
                if ((this.Rpt3LineAmountField.Equals(value) != true)) {
                    this.Rpt3LineAmountField = value;
                    this.RaisePropertyChanged("Rpt3LineAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3LineTotal {
            get {
                return this.Rpt3LineTotalField;
            }
            set {
                if ((this.Rpt3LineTotalField.Equals(value) != true)) {
                    this.Rpt3LineTotalField = value;
                    this.RaisePropertyChanged("Rpt3LineTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalMiscChrg {
            get {
                return this.Rpt3TotalMiscChrgField;
            }
            set {
                if ((this.Rpt3TotalMiscChrgField.Equals(value) != true)) {
                    this.Rpt3TotalMiscChrgField = value;
                    this.RaisePropertyChanged("Rpt3TotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToName {
            get {
                return this.ShipToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNameField, value) != true)) {
                    this.ShipToNameField = value;
                    this.RaisePropertyChanged("ShipToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShpConNum {
            get {
                return this.ShpConNumField;
            }
            set {
                if ((this.ShpConNumField.Equals(value) != true)) {
                    this.ShpConNumField = value;
                    this.RaisePropertyChanged("ShpConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToAddressList {
            get {
                return this.SoldToAddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToAddressListField, value) != true)) {
                    this.SoldToAddressListField = value;
                    this.RaisePropertyChanged("SoldToAddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustID {
            get {
                return this.SoldToCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustIDField, value) != true)) {
                    this.SoldToCustIDField = value;
                    this.RaisePropertyChanged("SoldToCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoldToCustNum {
            get {
                return this.SoldToCustNumField;
            }
            set {
                if ((this.SoldToCustNumField.Equals(value) != true)) {
                    this.SoldToCustNumField = value;
                    this.RaisePropertyChanged("SoldToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustomerName {
            get {
                return this.SoldToCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustomerNameField, value) != true)) {
                    this.SoldToCustomerNameField = value;
                    this.RaisePropertyChanged("SoldToCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SoldToInvoiceAddress {
            get {
                return this.SoldToInvoiceAddressField;
            }
            set {
                if ((this.SoldToInvoiceAddressField.Equals(value) != true)) {
                    this.SoldToInvoiceAddressField = value;
                    this.RaisePropertyChanged("SoldToInvoiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalMiscChrg {
            get {
                return this.TotalMiscChrgField;
            }
            set {
                if ((this.TotalMiscChrgField.Equals(value) != true)) {
                    this.TotalMiscChrgField = value;
                    this.RaisePropertyChanged("TotalMiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XPartNum {
            get {
                return this.XPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XPartNumField, value) != true)) {
                    this.XPartNumField = value;
                    this.RaisePropertyChanged("XPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRevisionNum {
            get {
                return this.XRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRevisionNumField, value) != true)) {
                    this.XRevisionNumField = value;
                    this.RaisePropertyChanged("XRevisionNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetShipRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ARInvGetShipRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillFreqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidateSOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GenerateInvoiceFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OneInvPerPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackSlipNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PendingOrdCmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PendingStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalesOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SalesOrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShippedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillFreq {
            get {
                return this.BillFreqField;
            }
            set {
                if ((object.ReferenceEquals(this.BillFreqField, value) != true)) {
                    this.BillFreqField = value;
                    this.RaisePropertyChanged("BillFreq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidateSO {
            get {
                return this.ConsolidateSOField;
            }
            set {
                if ((this.ConsolidateSOField.Equals(value) != true)) {
                    this.ConsolidateSOField = value;
                    this.RaisePropertyChanged("ConsolidateSO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GenerateInvoiceFlag {
            get {
                return this.GenerateInvoiceFlagField;
            }
            set {
                if ((this.GenerateInvoiceFlagField.Equals(value) != true)) {
                    this.GenerateInvoiceFlagField = value;
                    this.RaisePropertyChanged("GenerateInvoiceFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvoicedStatus {
            get {
                return this.InvoicedStatusField;
            }
            set {
                if ((this.InvoicedStatusField.Equals(value) != true)) {
                    this.InvoicedStatusField = value;
                    this.RaisePropertyChanged("InvoicedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OneInvPerPS {
            get {
                return this.OneInvPerPSField;
            }
            set {
                if ((this.OneInvPerPSField.Equals(value) != true)) {
                    this.OneInvPerPSField = value;
                    this.RaisePropertyChanged("OneInvPerPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumField, value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackSlipNum {
            get {
                return this.PackSlipNumField;
            }
            set {
                if ((this.PackSlipNumField.Equals(value) != true)) {
                    this.PackSlipNumField = value;
                    this.RaisePropertyChanged("PackSlipNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PendingOrdCmp {
            get {
                return this.PendingOrdCmpField;
            }
            set {
                if ((this.PendingOrdCmpField.Equals(value) != true)) {
                    this.PendingOrdCmpField = value;
                    this.RaisePropertyChanged("PendingOrdCmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PendingStatus {
            get {
                return this.PendingStatusField;
            }
            set {
                if ((this.PendingStatusField.Equals(value) != true)) {
                    this.PendingStatusField = value;
                    this.RaisePropertyChanged("PendingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToInvoice {
            get {
                return this.ReadyToInvoiceField;
            }
            set {
                if ((this.ReadyToInvoiceField.Equals(value) != true)) {
                    this.ReadyToInvoiceField = value;
                    this.RaisePropertyChanged("ReadyToInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesOrder {
            get {
                return this.SalesOrderField;
            }
            set {
                if ((this.SalesOrderField.Equals(value) != true)) {
                    this.SalesOrderField = value;
                    this.RaisePropertyChanged("SalesOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SalesOrderDate {
            get {
                return this.SalesOrderDateField;
            }
            set {
                if ((this.SalesOrderDateField.Equals(value) != true)) {
                    this.SalesOrderDateField = value;
                    this.RaisePropertyChanged("SalesOrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShippedStatus {
            get {
                return this.ShippedStatusField;
            }
            set {
                if ((this.ShippedStatusField.Equals(value) != true)) {
                    this.ShippedStatusField = value;
                    this.RaisePropertyChanged("ShippedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidedStatus {
            get {
                return this.VoidedStatusField;
            }
            set {
                if ((this.VoidedStatusField.Equals(value) != true)) {
                    this.VoidedStatusField = value;
                    this.RaisePropertyChanged("VoidedStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MXTaxRcptErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class MXTaxRcptErrorRow : EpicorConsole.Epicor.ARInvoiceSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.MXTaxRcptErrorRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.MXTaxRcptErrorRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorSeq {
            get {
                return this.ErrorSeqField;
            }
            set {
                if ((this.ErrorSeqField.Equals(value) != true)) {
                    this.ErrorSeqField = value;
                    this.RaisePropertyChanged("ErrorSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvPayActivityRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvPayActivityRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeadNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceRef = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Posted = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYear = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalPeriod = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLPosted = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckRef = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTranAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discount = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDiscount = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRate = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLRefType = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLRefCode = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebitNote = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNComments = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNAmount = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDnAmount = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GainLossType = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevalueDate = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevalueBal = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRevalueBal = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1RevalueBal = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2RevalueBal = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3RevalueBal = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCode = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocToRef = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefToBase = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefToBaseRate = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispInvAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispInvDiscount = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispTranType = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispRef = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispCustAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispCustDiscount = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispCurrencyCode = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCurrencySymbol = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDispInvAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DispInvAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DispInvAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DispInvAmt = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DispInvDiscount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDispInvDiscount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DispInvDiscount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DispInvDiscount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOEInvoiceNum = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 58,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvPaySchedRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvPaySchedRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineNumber = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayAmt = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPayAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySymbol = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassFlag = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxPayAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxDocPayAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCurrencySymbol = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PayAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PayAmt = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PayAmt = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCurrencyID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AllocDepositRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum AllocDepositRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrePayType = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepInvoiceNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepGroupID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepHeadNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepApplyDate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrePayStatus = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAllocAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AllocAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AllocAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AllocAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAllocBal = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocBal = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AllocBal = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AllocBal = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AllocBal = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAllocTaxBal = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocTaxBal = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AllocTaxBal = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AllocTaxBal = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AllocTaxBal = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepCheckRef = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDocumentAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DocumentAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DocumentAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DocumentAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 42,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HedTaxSumRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum HedTaxSumRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HedNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxDescription = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepInvcNum = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 29,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcChrgRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcChrgRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargePercent = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceInvoiceNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocChargeAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ChargeAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ChargeAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ChargeAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReminderPreview = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LetterNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspChargeAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspChargeAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspChargeAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspChargeAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocChargeAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutstandingBalance = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOutstandingBalance = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1OutstandingBalance = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2OutstandingBalance = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3OutstandingBalance = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 36,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDeferredRevRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcDeferredRevRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Revenue = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recognized = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unrecognized = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Distributed = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Remaining = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRevenue = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Revenue = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Revenue = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Revenue = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDistributed = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Distributed = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Distributed = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Distributed = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRecognized = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Recognized = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Recognized = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Recognized = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRemaining = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Remaining = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Remaining = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Remaining = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Unrecognized = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Unrecognized = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Unrecognized = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnrecognized = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 33,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcDtlRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPartNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRevisionNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExempt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commissionable = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscountPercent = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitPrice = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnitPrice = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePerCode = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurOrderQty = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtPrice = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocExtPrice = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discount = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDiscount = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalMiscChrg = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalMiscChrg = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurShipQty = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvanceBillCredit = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAdvanceBillCredit = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceComment = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpConNum = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlUnitCost = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LbrUnitCost = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BurUnitCost = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubUnitCost = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlBurUnitCost = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COSPostingReqd = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COSPosted = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCode = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallNum = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallCode = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMANum = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMALine = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesCatID = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYear = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalPeriod = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalCode = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalNum = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingOrderQty = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingShipQty = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactor = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MilestoneID = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListPrice = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocListPrice = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrdBasedPrice = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOrdBasedPrice = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvGainLoss = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactorDirection = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate1 = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate2 = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate3 = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate4 = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate5 = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit1 = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit2 = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit3 = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit4 = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit5 = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCMtlUnitCost = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCLbrUnitCost = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCBurUnitCost = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCSubUnitCost = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCMtlBurUnitCost = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevChargeMethod = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideReverseCharge = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevChargeApplied = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxConnectCalc = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetDfltTaxIds = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AdvanceBillCredit = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AdvanceBillCredit = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AdvanceBillCredit = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Discount = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Discount = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Discount = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ExtPrice = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ExtPrice = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ExtPrice = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ListPrice = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ListPrice = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ListPrice = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1OrdBasedPrice = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2OrdBasedPrice = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3OrdBasedPrice = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalMiscChrg = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalMiscChrg = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalMiscChrg = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1UnitPrice = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2UnitPrice = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3UnitPrice = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AdvGainLoss = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AdvGainLoss = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AdvGainLoss = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYearSuffix = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalCalendarID = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseOTS = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSName = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress1 = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress2 = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress3 = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCity = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSState = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSZIP = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSResaleID = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSTaxRegionCode = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSContact = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSFaxNum = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSPhoneNum = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCountryNum = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallLine = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShipPackLine = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShipPackSlip = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinChargeCode = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABTUID = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InUnitPrice = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInUnitPrice = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InExtPrice = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInExtPrice = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InDiscount = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInDiscount = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InTotalMiscChrg = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInTotalMiscChrg = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InListPrice = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInListPrice = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InOrdBasedPrice = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInOrdBasedPrice = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InDiscount = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InDiscount = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InDiscount = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InExtPrice = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InExtPrice = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InExtPrice = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InListPrice = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InListPrice = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InListPrice = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InOrdBasedPrice = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InOrdBasedPrice = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InOrdBasedPrice = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InTotalMiscChrg = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InTotalMiscChrg = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InTotalMiscChrg = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InUnitPrice = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InUnitPrice = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InUnitPrice = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorrectionDtl = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssetNum = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisposalNum = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncomeTaxCode = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PBLineType = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLineRef = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceRef = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PBInvoiceLine = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RAID = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RADtlID = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredRev = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RACode = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefRevStart = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeDefRev = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RenewalNbr = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefRevPosted = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkedInvcUnitPrice = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspWithholdAmt = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspWithholdAmt = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspWithholdAmt = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspWithholdAmt = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspWithholdAmt = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkedCurrencyCode = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhaseID = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEBOEHeadNum = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXSellingShipQty = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXUnitPrice = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMXUnitPrice = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1MXUnitPrice = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2MXUnitPrice = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3MXUnitPrice = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustCostCenter = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEIsServices = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEIsSecurityFinancialDerivative = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEInternationalSecuritiesID = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEIsInvestment = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEPayStatCode = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefRevEndDate = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityUseCode = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reclassified = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartiallyDefer = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredPercent = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reclass = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredOnly = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReclassCodeID = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReclassReasonCode = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReclassComments = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredRevAmt = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDeferredRevAmt = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DeferredRevAmt = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DeferredRevAmt = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DeferredRevAmt = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeReclass = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEDenomination = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShipPONum = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInAdvanceBillCredit = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAdvanceBillCredit = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InAdvanceBillCredit = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InAdvanceBillCredit = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InAdvanceBillCredit = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MYIndustryCode = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DockingStation = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidateLines = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowReclassify = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowTaxCodeUpd = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowUpdPartDefer = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillToCustID = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustName = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDateTime = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckAmortAmounts = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIDescription1 = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIDescription2 = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIDescription3 = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIDiscountTaxAmount = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIIUM = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTINetAmount = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIPartDescription = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTISpecification = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTITaxAmount = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTITaxCode = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTITaxPercent = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTITotalAmount = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIUnitPrice = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractSuspended = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustName = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteRASchedule = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispGLAcct = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispPONum = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispShipToAddr = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspUnitPrice = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLessDiscount = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLineTax = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLineTotal = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPEDetAmt = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShipment = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspAdvanceBillCredit = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDiscount = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocAdvanceBillCredit = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocDiscount = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocExtPrice = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocLessDiscount = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocLineTax = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocLineTotal = 284,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocTotalMiscChrg = 285,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspExtPrice = 286,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspInvoiceRef = 287,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspLessDiscount = 288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspLineTax = 289,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspLineTotal = 290,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspOurShipQty = 291,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspSellingShipQty = 292,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTaxExempt = 293,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTotalMiscChrg = 294,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspUnitPrice = 295,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 296,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableDspWithholdAmt = 297,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableRMADelete = 298,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableRMAUpdate = 299,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLTranAmt = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLTranDate = 301,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 302,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 303,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvLegalNum = 304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceDate = 305,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceType = 306,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsCommisBtnSensitive = 307,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsIntrastatSensitive = 308,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsTaxBtnSensitive = 309,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessDiscount = 310,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineTax = 311,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineTotal = 312,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkedCurrencySymbol = 313,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenInvoice = 314,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderUM = 315,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigTaxCat = 316,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDetAmt = 317,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDspCurrencySymbol = 318,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Posted = 319,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RADesc = 320,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RASchedExists = 321,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspAdvanceBillCredit = 322,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspDiscount = 323,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspExtPrice = 324,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspLessDiscount = 325,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspLineTax = 326,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspLineTotal = 327,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspTotalMiscChrg = 328,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspUnitPrice = 329,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1LineTax = 330,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1LineTotal = 331,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PEDetAmt = 332,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspAdvanceBillCredit = 333,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspDiscount = 334,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspExtPrice = 335,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspLessDiscount = 336,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspLineTax = 337,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspLineTotal = 338,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspTotalMiscChrg = 339,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspUnitPrice = 340,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2LineTax = 341,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2LineTotal = 342,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PEDetAmt = 343,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspAdvanceBillCredit = 344,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspDiscount = 345,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspExtPrice = 346,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspLessDiscount = 347,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspLineTax = 348,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspLineTotal = 349,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspTotalMiscChrg = 350,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspUnitPrice = 351,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3LineTax = 352,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3LineTotal = 353,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PEDetAmt = 354,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode1 = 355,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode2 = 356,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode3 = 357,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode4 = 358,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode5 = 359,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName1 = 360,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName2 = 361,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName3 = 362,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName4 = 363,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName5 = 364,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactEMailAddress = 365,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactFaxNum = 366,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactName = 367,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactPhoneNum = 368,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpLegalNum = 369,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustID = 370,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustName = 371,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCode = 372,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvBillEnabled = 373,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXCustomsDuty = 374,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 375,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallCodeCallDescription = 376,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCodeContractDescription = 377,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractNumSuspended = 378,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustCntName = 379,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustCntMiddleName = 380,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustCntFirstName = 381,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustCntFaxNum = 382,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustCntCorpName = 383,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustCntPhoneNum = 384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustCntLastName = 385,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 386,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 387,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumAllowShipTo3 = 388,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 389,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncomeTaxDescription = 390,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNumTermsCode = 391,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNumCardMemberName = 392,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalCodeJrnlDescription = 393,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MilestoneIDDescription = 394,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLineLineDesc = 395,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 396,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 397,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCntryDescription = 398,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLineLineDesc = 399,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNumName = 400,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 401,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 402,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 403,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 404,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 405,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 406,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 407,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 408,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCodeDescription = 409,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectIDDescription = 410,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReclassCodeDescription = 411,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReclassReasonDescription = 412,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMALineLineDesc = 413,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesCatIDDescription = 414,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustCustID = 415,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustName = 416,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustBTName = 417,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 418,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 419,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatIDDescription = 420,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionDescription = 421,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 422,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 423,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcDtlAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlRASchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcDtlRASchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmortSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalCalendarID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYear = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYearSuffix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalPeriod = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmortDate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmortPercent = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmortAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AmortAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AmortAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AmortAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAmortAmount = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hold = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoldReasonCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoldText = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Posted = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostedDate = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgAmortSeq = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgInvcLine = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAmortAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspAmortAmt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspRevenueAmt = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRevenueAmt = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspAmortAmt = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspRevenueAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToPost = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevenueAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspAmortAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspRevenueAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1RevenueAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspAmortAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspRevenueAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2RevenueAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspAmortAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspRevenueAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3RevenueAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selected = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqDuration = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalAmortAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsLocked = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockStatus = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 54,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlTGLCRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcDtlTGLCRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelatedToFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key1 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key2 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key3 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key4 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key5 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key6 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TGLCTranNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAcctContext = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COACode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAccount = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserCanModify = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue1 = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue2 = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue3 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue4 = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue5 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue6 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue7 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue8 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue9 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue10 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue11 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue12 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue13 = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue14 = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue15 = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue16 = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue17 = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue18 = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue19 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SegValue20 = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysGLControlType = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysGLControlCode = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompanyID = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsExternalCompany = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYear = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalCode = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalNum = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalLine = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDate = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranSource = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborHedSeq = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborDtlSeq = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysDate = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysTime = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranNum = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARInvoiceNum = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APInvoiceNum = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateDate = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYearSuffix = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalCalendarID = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditAmount = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebitAmount = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookCreditAmount = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookDebitAmount = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecordType = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorrAccUID = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABTUID = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RuleUID = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Statistical = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatUOMCode = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebitStatAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditStatAmt = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsModifiedByUser = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MovementNum = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MovementType = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COADescription = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAccountGLAcctDisp = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAccountGLShortAcct = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLAccountAccountDesc = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLBookDescription = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLBookCurrencyCode = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 86,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcHeadRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcHeadRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenInvoice = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClosedDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditMemo = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnappliedCash = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckRef = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceSuffix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Posted = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceType = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredRevenue = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOB = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCode = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceDate = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYear = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalPeriod = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLPosted = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceComment = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoiceAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceBal = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoiceBal = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnpostedBal = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnpostedBal = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCredit = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepositCredit = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepList = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceRef = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCancelled = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCancelledBy = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartUp = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDates = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayAmounts = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPayAmounts = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscDate = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPayDiscAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillConNum = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceHeld = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRate = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockRate = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalNum = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalCode = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineType = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMANum = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardMemberName = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardNumber = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardType = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationMonth = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationYear = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardID = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardmemberReference = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalID = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefInvoiceNum = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepGainLoss = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNComments = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNCustNbr = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebitNote = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustNum = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Consolidated = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillToInvoiceAddress = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToInvoiceAddress = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessCard = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm1 = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm2 = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm3 = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm4 = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm5 = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate1 = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate2 = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate3 = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate4 = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate5 = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales1 = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales2 = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales3 = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales4 = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales5 = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit1 = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit2 = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit3 = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit4 = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit5 = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CMType = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCStreetAddr = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCZip = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToCalc = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoPrintReady = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIReady = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecalcBeforePost = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rounding = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRounding = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepositCredit = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepositCredit = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepositCredit = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InvoiceAmt = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InvoiceAmt = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InvoiceAmt = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InvoiceBal = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InvoiceBal = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InvoiceBal = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PayAmounts = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PayAmounts = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PayAmounts = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PayDiscAmt = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PayDiscAmt = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PayDiscAmt = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Rounding = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Rounding = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Rounding = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1UnpostedBal = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2UnpostedBal = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3UnpostedBal = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpCode = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepApplied = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepGainLoss = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepGainLoss = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepGainLoss = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyDate = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYearSuffix = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalCalendarID = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxPoint = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastChrgCalcDate = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotFinChrg = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentPrinted = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscDays = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscPer = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedFinChrg = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedFinChrgReason = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithholdAmt = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocWithholdAmt = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1WithholdAmt = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2WithholdAmt = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3WithholdAmt = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedRemLetters = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscPartPay = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedRemLettersReason = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrRateDate = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PIPayment = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PMUID = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseAltBillTo = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorrectionInv = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateGrpCode = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockTaxRate = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEBankRef = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUITaxTypeCode = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIFormatCode = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIDeductCode = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReversalDocAmount = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigDueDate = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeadNum = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARLOCID = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractRef = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBank = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractDate = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PBProjectID = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositAmt = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIExportBillNumber = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepositAmt = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIDateOfExport = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepositAmt = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIExportType = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepositAmt = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIExportMark = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepositAmt = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIExportBillType = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepUnallocatedAmt = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SummarizationDate = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepUnallocatedAmt = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingDate = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepUnallocatedAmt = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingNumber = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepUnallocatedAmt = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToBill = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepUnallocatedAmt = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OvrDefTaxDate = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefContractNum = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefContractDate = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainSite = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteCode = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BranchID = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustAgentName = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustAgentTaxRegNo = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportType = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportReportNo = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RealEstateNo = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Excluded = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deferred = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CycleCode = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Duration = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndDate = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxValueAmt = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMaxValueAmt = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1MaxValueAmt = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2MaxValueAmt = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3MaxValueAmt = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoldInvoice = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CopyLatestInvoice = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideEndDate = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CycleInactive = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurSource = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstanceNum = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurBalance = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRecurBalance = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1RecurBalance = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2RecurBalance = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3RecurBalance = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastDate = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurringState = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsRecurring = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNumList = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsAddedToGTI = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CHISRCodeLine = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CMReason = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THIsImmatAdjustment = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGAuthorizationCode = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGAuthorizationDate = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGUseGoodDefaultMark = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGDocumentLetter = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGInvoicingPoint = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGLegalNumber = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGPrintingControlType = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionDate = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWDeclareYear = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWDeclarePeriod = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGenerationType = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIGroup = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWPeriodPrefix = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvInCollections = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionsCust = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterARForm = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostedRecog = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNConfirmDate = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXSATSeal = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXSerie = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXTaxRcptType = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXFiscalFolio = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXTotalPayments = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXFolio = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXCertifiedTimestamp = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXSATCertificateSN = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXDigitalSeal = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXPostedTimeStamp = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXCertificate = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXApprovalYear = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXCBB = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXApprovalNum = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXOriginalStringTFD = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXPaymentNum = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXPaidAs = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXCertificateSN = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXOriginalAmount = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXAccountNumber = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXOriginalDate = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXOriginalSeries = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXOriginalFolio = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXTaxRegime = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXOriginalString = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXPaymentName = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EInvoice = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EInvStatus = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EInvTimestamp = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EInvUpdatedBy = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EInvException = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithTaxConfirm = 284,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseAltBillToID = 285,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXCancelledDate = 286,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Overpaid = 287,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrdExchangeRate = 288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEAPPayNum = 289,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEBankNumber = 290,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PECharges = 291,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PECommissions = 292,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDetTaxAmt = 293,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDetTaxCurrencyCode = 294,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDischargeAmt = 295,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDischargeDate = 296,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEInterest = 297,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PENoPayPenalty = 298,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PESUNATDepAmt = 299,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PESUNATDepDate = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PESUNATDepNum = 301,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEBOEPosted = 302,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPEInterest = 303,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPECommissions = 304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPECharges = 305,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPENoPayPenalty = 306,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPEDischargeAmt = 307,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPEDetTaxAmt = 308,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PEInterest = 309,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PECommissions = 310,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PECharges = 311,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PENoPayPenalty = 312,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PEDischargeAmt = 313,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PEInterest = 314,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PECommissions = 315,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PECharges = 316,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PENoPayPenalty = 317,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PEDischargeAmt = 318,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PEInterest = 319,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PECommissions = 320,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PECharges = 321,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PENoPayPenalty = 322,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PEDischargeAmt = 323,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurSupplierCode = 324,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeName = 325,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeAddress1 = 326,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeAddress2 = 327,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeAddress3 = 328,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeCity = 329,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeState = 330,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeZip = 331,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeCountry = 332,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteeTaxID = 333,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEGuaranteePhoneNum = 334,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEBOEStatus = 335,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEBOEIsMultiGen = 336,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PERefDocID = 337,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEReasonCode = 338,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEReasonDesc = 339,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIRegNumSeller = 340,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIRegNumBuyer = 341,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIExportDocumentName = 342,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIExportRemarks = 343,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIExportVerification = 344,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDebitNoteReasonCode = 345,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDebitNote = 346,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXPartPmt = 347,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABAmt = 348,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowChgAfterPrint = 349,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARPNHeadNum = 350,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARPromNoteID = 351,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoGenPN = 352,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvailBTCustList = 353,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankForPI = 354,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankForPIName = 355,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 356,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 357,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDateTime = 358,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIAction = 359,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIAddress = 360,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIBankAccount = 361,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIComment = 362,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTICustomerName = 363,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIExportAddress = 364,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIGrossInvcAmt = 365,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIInvoiceAmt = 366,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTINote = 367,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIShipToNum = 368,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIStatus1 = 369,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTIStatus2 = 370,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNGTITaxCode = 371,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COIFRSCalculation = 372,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COIFRSFinancialCharge = 373,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COIFRSInterestRate = 374,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COIFRSNumberOfPeriods = 375,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COIFRSPresentValue = 376,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionsInv = 377,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactEmailAddr = 378,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactFaxNum = 379,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactName = 380,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactPhoneNum = 381,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvertedFromDep = 382,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CumulativeBalance = 383,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentInstanceNum = 385,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustAllowOTS = 386,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustOnCreditHold = 387,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepBal = 388,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCreditEnabled = 389,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DirectDebiting = 390,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableAplDate = 391,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispBalDN = 392,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayBillAddr = 393,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayCreditCardNum = 394,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayCurrencyID = 395,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 396,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNPmtAmt = 397,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocABAmt = 398,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCOIFRSFinancialCharge = 399,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCOIFRSPresentValue = 400,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCumulativeBalance = 401,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepBal = 402,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDispBalDN = 403,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 404,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDNPmtAmt = 405,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspPrepDeposit = 406,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspTaxAmt = 407,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPESUNATDepAmt = 408,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRemainTaxAmt = 409,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReverseTaxAmt = 410,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocSATaxAmt = 411,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocSourceRecurBalance = 412,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocSubTotal = 413,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 414,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocVr = 415,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocWHTaxAmt = 416,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspABAmt = 417,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDepBal = 418,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDepCr = 419,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocABAmt = 420,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocDepBal = 421,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocDepCr = 422,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocInvoiceAmt = 423,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocInvoiceBal = 424,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocRounding = 425,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocSubTotal = 426,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspInvoiceAmt = 427,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspInvoiceBal = 428,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspInvoiceRef = 429,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspPayDiscDays = 430,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspPrepDeposit = 431,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspRounding = 432,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dspSoldToCustID = 433,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspSubTotal = 434,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTaxAmt = 435,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableAssignLegNum = 436,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSOCCDefaults = 437,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTranDocType = 438,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableVoidLegNum = 439,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERSInvoice = 440,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRateDate = 441,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenedFromRMA = 442,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasBank = 443,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasLegNumCnfg = 444,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceTypeDesc = 445,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsDK = 446,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsIntrastatSensitive = 447,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsLatestRecurrence = 448,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsLcked = 449,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsPMForGenPIType = 450,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsRevision = 451,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastRevNum = 452,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LatestInvoice = 453,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockStatus = 454,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedConfirmTaxes = 455,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextDiscDate = 456,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextInvoiceDate = 457,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlipNum = 458,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaySchedEnabled = 459,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEBOEChangeStatusTo = 460,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEBOEStatusDesc = 461,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PECollectionsDate = 462,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEDspCurrencySymbol = 463,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEInCollections = 464,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PIBankAcctID = 465,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PICustBankDtl = 466,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PIInitiation = 467,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrepDepositEnabled = 468,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecalcAmts = 469,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recurring = 470,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemainTaxAmt = 471,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReminderSeq = 472,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RetInvoiceNum = 473,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnFlag = 474,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReversalDocAmt = 475,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseTaxAmt = 476,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionAllowed = 477,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ABAmt = 478,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1COIFRSFinancialCharge = 479,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1COIFRSPresentValue = 480,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1CumulativeBalance = 481,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepBal = 482,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspABAmt = 483,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspDepBal = 484,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspDepCr = 485,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspInvoiceAmt = 486,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspInvoiceBal = 487,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspPrepDeposit = 488,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspRounding = 489,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspSubTotal = 490,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspTaxAmt = 491,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1RemainTaxAmt = 492,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReverseTaxAmt = 493,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1SATaxAmt = 494,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1SourceRecurBalance = 495,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1SubTotal = 496,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 497,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Vr = 498,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1WHTaxAmt = 499,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ABAmt = 500,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2COIFRSFinancialCharge = 501,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2COIFRSPresentValue = 502,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2CumulativeBalance = 503,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepBal = 504,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspABAmt = 505,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspDepBal = 506,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspDepCr = 507,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspInvoiceAmt = 508,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspInvoiceBal = 509,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspPrepDeposit = 510,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspRounding = 511,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspSubTotal = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspTaxAmt = 513,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2RemainTaxAmt = 514,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReverseTaxAmt = 515,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2SATaxAmt = 516,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2SourceRecurBalance = 517,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2SubTotal = 518,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Taxamt = 519,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Vr = 520,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2WHTaxAmt = 521,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ABAmt = 522,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3COIFRSFinancialCharge = 523,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3COIFRSPresentValue = 524,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3CumulativeBalance = 525,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepBal = 526,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspABAmt = 527,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspDepBal = 528,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspDepCr = 529,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspInvoiceAmt = 530,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspInvoiceBal = 531,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspPrepDeposit = 532,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspRounding = 533,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspSubTotal = 534,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspTaxAmt = 535,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3RemainTaxAmt = 536,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReverseTaxAmt = 537,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3SATaxAmt = 538,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3SourceRecurBalance = 539,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3SubTotal = 540,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 541,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Vr = 542,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3WHTaxAmt = 543,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RvnJrnUID = 544,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode1 = 545,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode2 = 546,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode3 = 547,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode4 = 548,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode5 = 549,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName1 = 550,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName2 = 551,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName3 = 552,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName4 = 553,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName5 = 554,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SATaxAmt = 555,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipRecurring = 556,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToAddressList = 557,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustID = 558,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustomerName = 559,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceInvoiceNum = 560,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceLastDate = 561,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRecurBalance = 562,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubTotal = 563,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemTranType = 564,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 565,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExchangeRate = 566,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalInstanceNum = 567,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransApplyDate = 568,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseSOCCDefaults = 569,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseTaxRate = 570,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VNInvDescription = 571,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VNInvoiceType = 572,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vr = 573,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WHTaxAmt = 574,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRateLabel = 575,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COIFRSEnabled = 576,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXExportCertOrigin = 577,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXExportCertOriginNum = 578,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXExportConfNum = 579,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXExportCustDocCode = 580,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXExportOperationType = 581,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXIncoterm = 582,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNTaxInvoiceType = 583,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 584,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGInvoicingPointDescription = 585,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardTypeDescription = 586,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrencyID = 587,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrSymbol = 588,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrDesc = 589,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrRateGrpDescription = 590,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 591,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBTName = 592,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 593,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOBDescription = 594,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalCodeJrnlDescription = 595,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 596,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 597,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankPayerRef = 598,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankBankIdentifier = 599,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankTypeCode = 600,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankBankAcctID = 601,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankCheckingAccount = 602,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankBankName = 603,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankIBANCode = 604,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankLocalBIC = 605,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankDescription = 606,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodName = 607,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodSummarizePerCustomer = 608,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodType = 609,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 610,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectDescription = 611,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurringCycleMaximumValue = 612,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateGrpDescription = 613,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionDescription = 614,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCodeDescription = 615,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeDescription = 616,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 617,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 618,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcHeadAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcHeadAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcMiscRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcMiscRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMiscAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1MiscAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2MiscAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3MiscAmt = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InMiscAmt = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInMiscAmt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InMiscAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InMiscAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InMiscAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percentage = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Type = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncomeTaxCode = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgInvcLine = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgInvcSeq = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspMiscAmt = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocMiscAmt = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspMiscAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspMiscAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspMiscAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDateTime = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLineLineDesc = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNumCardMemberName = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNumTermsCode = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeDescription = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatIDDescription = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 45,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateTextCode = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxDate = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxFuture = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STPProcessed = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgInvcLine = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MovementNum = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmationDate = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyConfirmationDate = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxConfirm = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepInvcNum = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepInvcLine = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepRateCode = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepECAcqSeq = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepTaxBal = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAllocTaxBal = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AllocDepTaxBal = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AllocDepTaxBal = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AllocDepTaxBal = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxReverseDate = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseByInvoiceNum = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmDate = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmDocType = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmLegalNumber = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescCollectionType = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocFixedAmount = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocReportableAmt = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocTaxableAmt = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocTaxAmt = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocTaxAmtVar = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspFixedAmount = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspReportableAmt = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTaxableAmt = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTaxAmt = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTaxAmtVar = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedConfirmation = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeAmt = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspFixedAmount = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspReportableAmt = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspTaxableAmt = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspTaxAmt = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspTaxAmtVar = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspFixedAmount = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspReportableAmt = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspTaxableAmt = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspTaxAmt = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspTaxAmtVar = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspFixedAmount = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspReportableAmt = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspTaxableAmt = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspTaxAmt = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspTaxAmtVar = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxDescription = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxTotal = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyConfirmDate = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDateTime = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLineLineDesc = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNumCardMemberName = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNumTermsCode = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesTaxDescDescription = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 132,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxConnectStatusRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum TaxConnectStatusRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETCOffline = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorMessage = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TCStatus = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARSelectedDropShipRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARSelectedDropShipRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoicedStatus = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippedStatus = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnselectDropShipment = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARUninvoicedDropShipRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARUninvoicedDropShipRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoicedStatus = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectDropShipment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippedStatus = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PEHedTaxSumRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PEHedTaxSumRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HedNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxDescription = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepInvcNum = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 29,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PEInvcTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PEInvcTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 36,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RebateInvRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RebateInvRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RebateDesc = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RebateID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetRecInvSourceRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvGetRecInvSourceRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deferred = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredRevenue = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoiceAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceHeld = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustomerName = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyDate = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcRecurrRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcRecurrRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyDate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoiceAmt = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstanceNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceDate = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceHeld = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceRef = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceSuffix = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Posted = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcDtlPackRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcDtlPackRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurOrderQty = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurShipQty = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingOrderQty = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingShipQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXSellingShipQty = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlUnitCost = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LbrUnitCost = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BurUnitCost = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubUnitCost = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlBurUnitCost = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCMtlUnitCost = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCLbrUnitCost = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCBurUnitCost = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCSubUnitCost = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCMtlBurUnitCost = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcHeadListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcHeadListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenInvoice = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClosedDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditMemo = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnappliedCash = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckRef = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceSuffix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Posted = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceType = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeferredRevenue = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOB = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCode = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceDate = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYear = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalPeriod = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLPosted = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceComment = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoiceAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceBal = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoiceBal = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnpostedBal = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnpostedBal = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCredit = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepositCredit = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepList = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceRef = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCancelled = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCancelledBy = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartUp = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDates = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayAmounts = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPayAmounts = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscDate = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPayDiscAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillConNum = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceHeld = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRate = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockRate = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalNum = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalCode = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineType = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMANum = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardMemberName = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardNumber = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardType = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationMonth = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationYear = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardID = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardmemberReference = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalID = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefInvoiceNum = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepGainLoss = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNComments = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNCustNbr = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebitNote = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustNum = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Consolidated = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillToInvoiceAddress = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToInvoiceAddress = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessCard = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm1 = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm2 = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm3 = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm4 = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepComm5 = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate1 = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate2 = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate3 = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate4 = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate5 = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales1 = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales2 = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales3 = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales4 = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSales5 = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit1 = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit2 = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit3 = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit4 = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit5 = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CMType = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCStreetAddr = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCZip = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToCalc = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoPrintReady = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIReady = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecalcBeforePost = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rounding = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRounding = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepositCredit = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepositCredit = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepositCredit = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InvoiceAmt = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InvoiceAmt = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InvoiceAmt = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InvoiceBal = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InvoiceBal = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InvoiceBal = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PayAmounts = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PayAmounts = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PayAmounts = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1PayDiscAmt = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2PayDiscAmt = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3PayDiscAmt = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Rounding = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Rounding = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Rounding = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1UnpostedBal = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2UnpostedBal = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3UnpostedBal = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpCode = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepApplied = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepGainLoss = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepGainLoss = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepGainLoss = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyDate = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYearSuffix = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalCalendarID = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxPoint = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastChrgCalcDate = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotFinChrg = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentPrinted = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscDays = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscPer = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedFinChrg = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedFinChrgReason = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithholdAmt = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocWithholdAmt = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1WithholdAmt = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2WithholdAmt = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3WithholdAmt = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedRemLetters = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayDiscPartPay = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedRemLettersReason = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrRateDate = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PIPayment = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PMUID = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseAltBillTo = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorrectionInv = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateGrpCode = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockTaxRate = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEBankRef = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUITaxTypeCode = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIFormatCode = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIDeductCode = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReversalDocAmount = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigDueDate = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeadNum = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARLOCID = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractRef = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBank = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractDate = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PBProjectID = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositAmt = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIExportBillNumber = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepositAmt = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIDateOfExport = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepositAmt = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIExportType = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepositAmt = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIExportMark = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepositAmt = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUIExportBillType = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepUnallocatedAmt = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SummarizationDate = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepUnallocatedAmt = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingDate = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepUnallocatedAmt = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingNumber = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepUnallocatedAmt = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToBill = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepUnallocatedAmt = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OvrDefTaxDate = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefContractNum = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefContractDate = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainSite = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteCode = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BranchID = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustAgentName = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustAgentTaxRegNo = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportType = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportReportNo = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RealEstateNo = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Excluded = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deferred = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionDate = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWDeclareYear = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWDeclarePeriod = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGenerationType = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIGroup = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWPeriodPrefix = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubTotal = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocSubTotal = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode1 = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode2 = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode3 = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode4 = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode5 = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactName = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactFaxNum = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactPhoneNum = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayBillAddr = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseSOCCDefaults = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayCreditCardNum = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRateLabel = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName1 = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName2 = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName3 = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName4 = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName5 = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCreditEnabled = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaySchedEnabled = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactEmailAddr = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceTypeDesc = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspSubTotal = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocSubTotal = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspInvoiceAmt = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocInvoiceAmt = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlipNum = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSOCCDefaults = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspInvoiceRef = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenedFromRMA = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustID = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustomerName = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToAddressList = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dspSoldToCustID = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvailBTCustList = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispBalDN = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDispBalDN = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNPmtAmt = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDNPmtAmt = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspInvoiceBal = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocInvoiceBal = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocRounding = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspRounding = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspInvoiceAmt = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspInvoiceAmt = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspInvoiceAmt = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspInvoiceBal = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspInvoiceBal = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspInvoiceBal = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspRounding = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspRounding = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspRounding = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspSubTotal = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspSubTotal = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspSubTotal = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Taxamt = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1SubTotal = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2SubTotal = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3SubTotal = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableAssignLegNum = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableVoidLegNum = 284,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasLegNumCnfg = 285,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowChgAfterPrint = 286,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemTranType = 287,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextDiscDate = 288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTranDocType = 289,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsLcked = 290,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockStatus = 291,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RvnJrnUID = 292,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReminderSeq = 293,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustAllowOTS = 294,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspTaxAmt = 295,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTaxAmt = 296,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspTaxAmt = 297,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspTaxAmt = 298,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspTaxAmt = 299,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayCurrencyID = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransApplyDate = 301,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReversalDocAmt = 302,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERSInvoice = 303,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExchangeRate = 304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseTaxRate = 305,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARPromNoteID = 306,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepBal = 307,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepBal = 308,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepBal = 309,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepBal = 310,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepBal = 311,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDepBal = 312,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocDepBal = 313,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspDepBal = 314,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspDepBal = 315,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspDepBal = 316,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDepCr = 317,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocDepCr = 318,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspDepCr = 319,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspDepCr = 320,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspDepCr = 321,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vr = 322,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocVr = 323,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SATaxAmt = 324,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocSATaxAmt = 325,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1SATaxAmt = 326,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2SATaxAmt = 327,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3SATaxAmt = 328,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Vr = 329,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WHTaxAmt = 330,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocWHTaxAmt = 331,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1WHTaxAmt = 332,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2WHTaxAmt = 333,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3WHTaxAmt = 334,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Vr = 335,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Vr = 336,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspABAmt = 337,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDocABAmt = 338,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspABAmt = 339,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspABAmt = 340,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspABAmt = 341,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABAmt = 342,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocABAmt = 343,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ABAmt = 344,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ABAmt = 345,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ABAmt = 346,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustOnCreditHold = 347,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableAplDate = 348,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecalcAmts = 349,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardTypeDescription = 350,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrDesc = 351,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrSymbol = 352,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrencyID = 353,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrRateGrpDescription = 354,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 355,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBTName = 356,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 357,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOBDescription = 358,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalCodeJrnlDescription = 359,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 360,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 361,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankIBANCode = 362,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankPayerRef = 363,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankDescription = 364,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankCheckingAccount = 365,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodSummarizePerCustomer = 366,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodType = 367,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayMethodName = 368,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 369,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectDescription = 370,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateGrpDescription = 371,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionDescription = 372,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCodeDescription = 373,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeDescription = 374,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedConfirmTaxes = 375,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RetInvoiceNum = 376,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        isRevision = 377,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastRevNum = 378,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionAllowed = 379,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 380,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 381,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcHeadTransferListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcHeadTransferListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyDate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditMemo = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoiceAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceDate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceHeld = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectedForAction = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum LegalNumGenOptsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYear = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYearSuffix = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTransYear = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowDspTransYear = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prefix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrefixList = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberSuffix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuffix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOption = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationType = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPeriod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodPrefix = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowTransPeriod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID2 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 23,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetLinesRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvGetLinesRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Part = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingShipQty = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitPrice = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discount = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLineTotal = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCAddressRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ETCAddressRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line1 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line2 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line3 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostalCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Region = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSource = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSourceID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateAddr = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateAllowed = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressType = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarrierRoute = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidCity = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidCountry = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        County = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FipsCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine1 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine2 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine3 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine4 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidPostalCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostNet = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidRegion = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultCode = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultSeq = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarrierRouteDesc = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeDesc = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCountry = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACWPercentage = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 39,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCMessageRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ETCMessageRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Details = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Helplink = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefersTo = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Severity = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Source = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Summary = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSource = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSourceID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetDepRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvGetDepRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeadNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckRef = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTranAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDate = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcReminderRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcReminderRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sequence = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceDate = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceBal = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LetterNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinChargeAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Payments = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinChargeCode = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 22,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetMilestoneRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvGetMilestoneRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MilestoneID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingTypeDescription = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingRequired = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingAmount = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectName = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetPBRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvGetPBRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TmpInvcNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConReference = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConInvMeth = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetFSContRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvGetFSContRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractType = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryDate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrcConNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContVoid = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpConNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpireDate = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Duration = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modifier = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Material = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Labor = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Misc = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnSite = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurringInv = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurringFreq = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePer = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastInvGen = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustName = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToName = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractTotal = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocContractTotal = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrcConName = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ContractTotal = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ContractTotal = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ContractTotal = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RenewalNbr = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 41,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetRMARowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvGetRMARowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingShipQty = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurShipQty = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePerCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocExtPrice = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COSPosted = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDiscount = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalMiscChrg = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMANum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMALine = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvcCustTrkRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InvcCustTrkRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceSuffix = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenInvoice = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceType = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoiceAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInvoiceBal = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckRef = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillConNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceHeld = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceBal = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpConNum = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCodeDescription = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineTotal = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLineTotal = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPartNum = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRevisionNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Consolidated = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillToInvoiceAddress = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToInvoiceAddress = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustID = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustomerName = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToAddressList = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNCustNbr = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DNComments = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtPrice = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocExtPrice = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discount = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDiscount = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalMiscChrg = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalMiscChrg = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvanceBillCredit = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAdvanceBillCredit = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditMemo = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustName = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToName = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLineAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1LineTotal = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2LineTotal = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3LineTotal = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ExtPrice = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ExtPrice = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ExtPrice = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AdvanceBillCredit = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AdvanceBillCredit = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AdvanceBillCredit = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Discount = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Discount = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Discount = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InvoiceAmt = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InvoiceAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InvoiceAmt = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InvoiceBal = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InvoiceBal = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InvoiceBal = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1LineAmount = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2LineAmount = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3LineAmount = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalMiscChrg = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalMiscChrg = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalMiscChrg = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractRef = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepBal = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAllocDepBal = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AllocDepBal = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AllocDepBal = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AllocDepBal = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepTaxBal = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAllocDepTaxBal = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AllocDepTaxBal = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AllocDepTaxBal = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AllocDepTaxBal = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RetInvoiceNum = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 100,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARInvGetShipRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ARInvGetShipRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlipNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillFreq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidateSO = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneInvPerPS = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesOrder = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesOrderDate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerateInvoiceFlag = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingStatus = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippedStatus = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoicedStatus = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidedStatus = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToInvoice = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingOrdCmp = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 22,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MXTaxRcptErrorRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum MXTaxRcptErrorRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorMessage = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StackTrace = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="AllocDepositTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="AllocDepositRow")]
    [System.SerializableAttribute()]
    public class AllocDepositTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.AllocDepositRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="HedTaxSumTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="HedTaxSumRow")]
    [System.SerializableAttribute()]
    public class HedTaxSumTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.HedTaxSumRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcChrgTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcChrgRow")]
    [System.SerializableAttribute()]
    public class InvcChrgTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcChrgRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcDeferredRevTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcDeferredRevRow")]
    [System.SerializableAttribute()]
    public class InvcDeferredRevTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcDeferredRevRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcDtlTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcDtlRow")]
    [System.SerializableAttribute()]
    public class InvcDtlTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcDtlAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcDtlAttchRow")]
    [System.SerializableAttribute()]
    public class InvcDtlAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcDtlRASchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcDtlRASchRow")]
    [System.SerializableAttribute()]
    public class InvcDtlRASchTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlRASchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcDtlTGLCTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcDtlTGLCRow")]
    [System.SerializableAttribute()]
    public class InvcDtlTGLCTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlTGLCRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcHeadTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcHeadRow")]
    [System.SerializableAttribute()]
    public class InvcHeadTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcHeadAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcHeadAttchRow")]
    [System.SerializableAttribute()]
    public class InvcHeadAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcMiscTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcMiscRow")]
    [System.SerializableAttribute()]
    public class InvcMiscTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcMiscRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcTaxRow")]
    [System.SerializableAttribute()]
    public class InvcTaxTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TaxConnectStatusTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="TaxConnectStatusRow")]
    [System.SerializableAttribute()]
    public class TaxConnectStatusTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.TaxConnectStatusRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARSelectedDropShipTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARSelectedDropShipRow")]
    [System.SerializableAttribute()]
    public class ARSelectedDropShipTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARSelectedDropShipRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARUninvoicedDropShipTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARUninvoicedDropShipRow")]
    [System.SerializableAttribute()]
    public class ARUninvoicedDropShipTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARUninvoicedDropShipRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PEHedTaxSumTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PEHedTaxSumRow")]
    [System.SerializableAttribute()]
    public class PEHedTaxSumTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.PEHedTaxSumRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PEInvcTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PEInvcTaxRow")]
    [System.SerializableAttribute()]
    public class PEInvcTaxTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.PEInvcTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RebateInvTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RebateInvRow")]
    [System.SerializableAttribute()]
    public class RebateInvTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.RebateInvRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvGetRecInvSourceTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvGetRecInvSourceRow")]
    [System.SerializableAttribute()]
    public class ARInvGetRecInvSourceTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcRecurrTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcRecurrRow")]
    [System.SerializableAttribute()]
    public class InvcRecurrTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcRecurrRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcDtlPackTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcDtlPackRow")]
    [System.SerializableAttribute()]
    public class InvcDtlPackTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcDtlPackRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcHeadListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcHeadListRow")]
    [System.SerializableAttribute()]
    public class InvcHeadListTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcHeadTransferListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcHeadTransferListRow")]
    [System.SerializableAttribute()]
    public class InvcHeadTransferListTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadTransferListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LegalNumGenOptsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="LegalNumGenOptsRow")]
    [System.SerializableAttribute()]
    public class LegalNumGenOptsTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvGetLinesTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvGetLinesRow")]
    [System.SerializableAttribute()]
    public class ARInvGetLinesTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ETCAddressTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ETCAddressRow")]
    [System.SerializableAttribute()]
    public class ETCAddressTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ETCAddressRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ETCMessageTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ETCMessageRow")]
    [System.SerializableAttribute()]
    public class ETCMessageTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ETCMessageRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvGetDepTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvGetDepRow")]
    [System.SerializableAttribute()]
    public class ARInvGetDepTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcReminderTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcReminderRow")]
    [System.SerializableAttribute()]
    public class InvcReminderTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcReminderRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvGetMilestoneTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvGetMilestoneRow")]
    [System.SerializableAttribute()]
    public class ARInvGetMilestoneTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvGetPBTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvGetPBRow")]
    [System.SerializableAttribute()]
    public class ARInvGetPBTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvGetFSContTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvGetFSContRow")]
    [System.SerializableAttribute()]
    public class ARInvGetFSContTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvGetRMATable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvGetRMARow")]
    [System.SerializableAttribute()]
    public class ARInvGetRMATable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMARow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InvcCustTrkTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InvcCustTrkRow")]
    [System.SerializableAttribute()]
    public class InvcCustTrkTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ARInvGetShipTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ARInvGetShipRow")]
    [System.SerializableAttribute()]
    public class ARInvGetShipTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MXTaxRcptErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="MXTaxRcptErrorRow")]
    [System.SerializableAttribute()]
    public class MXTaxRcptErrorTable : System.Collections.Generic.List<EpicorConsole.Epicor.ARInvoiceSvc.MXTaxRcptErrorRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:ARInvoice", ConfigurationName="Epicor.ARInvoiceSvc.ARInvoiceSvcContract")]
    public interface ARInvoiceSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedAmtEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtResponse OnChangeofPaySchedAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtResponse> OnChangeofPaySchedAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedDateEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateResponse OnChangeofPaySchedDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPaySchedDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateResponse> OnChangeofPaySchedDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPECharges", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEChargesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEChargesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesResponse OnChangeofPECharges(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPECharges", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEChargesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesResponse> OnChangeofPEChargesAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPECommissions", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPECommissionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPECommissionsEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsResponse OnChangeofPECommissions(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPECommissions", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPECommissionsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsResponse> OnChangeofPECommissionsAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEDischargeAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEDischargeAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEDischargeAmtEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtResponse OnChangeofPEDischargeAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEDischargeAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEDischargeAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtResponse> OnChangeofPEDischargeAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEInterest", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEInterestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEInterestEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestResponse OnChangeofPEInterest(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEInterest", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPEInterestResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestResponse> OnChangeofPEInterestAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPENoPayPenalty", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPENoPayPenaltyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPENoPayPenaltyEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyResponse OnChangeofPENoPayPenalty(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPENoPayPenalty", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPENoPayPenaltyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyResponse> OnChangeofPENoPayPenaltyAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPlant", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPlantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPlantEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantResponse OnChangeofPlant(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPlant", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPlantResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantResponse> OnChangeofPlantAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRACode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRACodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRACodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeResponse OnChangeOfRACode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRACode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRACodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeResponse> OnChangeOfRACodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeResponse OnChangeofRateCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeResponse> OnChangeofRateCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateGrpCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateGrpCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateGrpCodeEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeResponse OnChangeofRateGrpCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateGrpCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRateGrpCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeResponse> OnChangeofRateGrpCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRetInvoiceNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRetInvoiceNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRetInvoiceNumEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumResponse OnChangeofRetInvoiceNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRetInvoiceNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRetInvoiceNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumResponse> OnChangeofRetInvoiceNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSalesRep", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSalesRepResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSalesRepEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepResponse OnChangeofSalesRep(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSalesRep", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSalesRepResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepResponse> OnChangeofSalesRepAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofShipDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofShipDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofShipDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateResponse OnChangeofShipDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofShipDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofShipDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateResponse> OnChangeofShipDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSoldToCustID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSoldToCustIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSoldToCustIDEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDResponse OnChangeofSoldToCustID(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSoldToCustID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofSoldToCustIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDResponse> OnChangeofSoldToCustIDAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxableAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxableAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtResponse OnChangeofTaxableAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxableAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxableAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtResponse> OnChangeofTaxableAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtResponse OnChangeofTaxAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtResponse> OnChangeofTaxAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeResponse OnChangeofTaxCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeResponse> OnChangeofTaxCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxLock", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxLockResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxLockEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockResponse OnChangeofTaxLock(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxLock", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxLockResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockResponse> OnChangeofTaxLockAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateResponse OnChangeofTaxPDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateResponse> OnChangeofTaxPDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPercent", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPercentEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentResponse OnChangeofTaxPercent(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPercent", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxPercentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentResponse> OnChangeofTaxPercentAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateDateEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateResponse OnChangeofTaxRateDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateResponse> OnChangeofTaxRateDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateGrpCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateGrpCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateGrpCodeEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeResponse OnChangeofTaxRateGrpCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateGrpCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRateGrpCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeResponse> OnChangeofTaxRateGrpCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxReportAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxReportAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxReportAmtEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtResponse OnChangeofTaxReportAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxReportAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxReportAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtResponse> OnChangeofTaxReportAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRgn", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRgnResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRgnEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnResponse OnChangeofTaxRgn(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRgn", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTaxRgnResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnResponse> OnChangeofTaxRgnAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTermsCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTermsCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTermsCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeResponse OnChangeofTermsCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTermsCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofTermsCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeResponse> OnChangeofTermsCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfTransApplyDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfTransApplyDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfTransApplyDateEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateResponse OnChangeOfTransApplyDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfTransApplyDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfTransApplyDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateResponse> OnChangeOfTransApplyDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofUseSOCCDefaults", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofUseSOCCDefaultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofUseSOCCDefaultsEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsResponse OnChangeofUseSOCCDefaults(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofUseSOCCDefaults", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofUseSOCCDefaultsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsResponse> OnChangeofUseSOCCDefaultsAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeTranDocTypeID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeTranDocTypeIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeTranDocTypeIDEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDResponse OnChangeTranDocTypeID(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeTranDocTypeID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeTranDocTypeIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDResponse> OnChangeTranDocTypeIDAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUseAltBillTo", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUseAltBillToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUseAltBillToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToResponse OnChangeUseAltBillTo(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUseAltBillTo", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUseAltBillToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToResponse> OnChangeUseAltBillToAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChooseofPaySched", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChooseofPaySchedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChooseofPaySchedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedResponse OnChooseofPaySched(EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChooseofPaySched", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChooseofPaySchedResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedResponse> OnChooseofPaySchedAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEChangeStatus", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEChangeStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEChangeStatusEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusResponse PrePostBOEChangeStatus(EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEChangeStatus", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEChangeStatusResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusResponse> PrePostBOEChangeStatusAsync(EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEInvoice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEInvoiceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceResponse PrePostBOEInvoice(EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEInvoice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePostBOEInvoiceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceResponse> PrePostBOEInvoiceAsync(EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePrintInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePrintInvoicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePrintInvoicesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="errors")]
        string PrePrintInvoices(string ipGroupID, int ipInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePrintInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/PrePrintInvoicesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="errors")]
        System.Threading.Tasks.Task<string> PrePrintInvoicesAsync(string ipGroupID, int ipInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortAmount", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortAmountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortAmountEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountResponse RecalcAmortAmount(EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortAmount", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortAmountResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountResponse> RecalcAmortAmountAsync(EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortPercent", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortPercentEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentResponse RecalcAmortPercent(EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortPercent", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcAmortPercentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentResponse> RecalcAmortPercentAsync(EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcDeferredTotals", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcDeferredTotalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcDeferredTotalsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsResponse RecalcDeferredTotals(EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcDeferredTotals", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RecalcDeferredTotalsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsResponse> RecalcDeferredTotalsAsync(EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RestoreAmortizationSchedule", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RestoreAmortizationScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RestoreAmortizationScheduleEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleResponse RestoreAmortizationSchedule(EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RestoreAmortizationSchedule", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RestoreAmortizationScheduleResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleResponse> RestoreAmortizationScheduleAsync(EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RMALineTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RMALineTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RMALineTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void RMALineTax(int InvoiceNum, int InvoiceLine, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/RMALineTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/RMALineTaxResponse")]
        System.Threading.Tasks.Task RMALineTaxAsync(int InvoiceNum, int InvoiceLine, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/SelectUninvoicedDropShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/SelectUninvoicedDropShipmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/SelectUninvoicedDropShipmentsEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset SelectUninvoicedDropShipments(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/SelectUninvoicedDropShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/SelectUninvoicedDropShipmentsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset> SelectUninvoicedDropShipmentsAsync(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalc", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalcEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcResponse SetReadyToCalc(EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalc", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalcResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcResponse> SetReadyToCalcAsync(EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalcEx", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalcExResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalcExEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExResponse SetReadyToCalcEx(EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalcEx", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/SetReadyToCalcExResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExResponse> SetReadyToCalcExAsync(EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateBOEStatus", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateBOEStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateBOEStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusResponse UpdateBOEStatus(EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateBOEStatus", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateBOEStatusResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusResponse> UpdateBOEStatusAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateEInvoiceStatus", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateEInvoiceStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateEInvoiceStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void UpdateEInvoiceStatus(int ipInvoiceNum, bool ipEInvoiceFlag, int ipStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateEInvoiceStatus", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateEInvoiceStatusResponse")]
        System.Threading.Tasks.Task UpdateEInvoiceStatusAsync(int ipInvoiceNum, bool ipEInvoiceFlag, int ipStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateLastRevNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateLastRevNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateLastRevNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void UpdateLastRevNum(int InvoiceNum, int InvoiceRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateLastRevNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateLastRevNumResponse")]
        System.Threading.Tasks.Task UpdateLastRevNumAsync(int InvoiceNum, int InvoiceRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMaster", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMasterEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterResponse UpdateMaster(EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMaster", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterResponse> UpdateMasterAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMasterUsingPasteInsert", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMasterUsingPasteInsertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMasterUsingPasteInsertEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertResponse UpdateMasterUsingPasteInsert(EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMasterUsingPasteInsert", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateMasterUsingPasteInsertResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertResponse> UpdateMasterUsingPasteInsertAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateofPaySched", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateofPaySchedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateofPaySchedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedResponse UpdateofPaySched(EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateofPaySched", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateofPaySchedResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedResponse> UpdateofPaySchedAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxResponse UpdatePEInvcTax(EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTaxResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxResponse> UpdatePEInvcTaxAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTaxSummary", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTaxSummaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTaxSummaryEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryResponse UpdatePEInvcTaxSummary(EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTaxSummary", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdatePEInvcTaxSummaryResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryResponse> UpdatePEInvcTaxSummaryAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateTaxLiability", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateTaxLiabilityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateTaxLiabilityEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset UpdateTaxLiability(int invoiceNum, string taxRegionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateTaxLiability", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateTaxLiabilityResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> UpdateTaxLiabilityAsync(int invoiceNum, string taxRegionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/VoidLegalNumber", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/VoidLegalNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/VoidLegalNumberEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset VoidLegalNumber(int ipInvoiceNum, string ipVoidedReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/VoidLegalNumber", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/VoidLegalNumberResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> VoidLegalNumberAsync(int ipInvoiceNum, string ipVoidedReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofIsRevision", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofIsRevisionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofIsRevisionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionResponse OnChangeofIsRevision(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofIsRevision", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofIsRevisionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionResponse> OnChangeofIsRevisionAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfImmaterialAdjustment", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfImmaterialAdjustmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfImmaterialAdjustmentEpicorFaultDe" +
            "tailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentResponse OnChangeOfImmaterialAdjustment(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfImmaterialAdjustment", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfImmaterialAdjustmentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentResponse> OnChangeOfImmaterialAdjustmentAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckVATFormat", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckVATFormatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckVATFormatEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatResponse CheckVATFormat(EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckVATFormat", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckVATFormatResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatResponse> CheckVATFormatAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailBoEStatuses", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailBoEStatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailBoEStatusesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetAvailBoEStatuses(string IPCurrentStage);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailBoEStatuses", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailBoEStatusesResponse")]
        System.Threading.Tasks.Task<string> GetAvailBoEStatusesAsync(string IPCurrentStage);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultDepPayToDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultDepPayToDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultDepPayToDateEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        System.Nullable<System.DateTime> GetDefaultDepPayToDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultDepPayToDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultDepPayToDateResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetDefaultDepPayToDateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumByInvcRefNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumByInvcRefNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumByInvcRefNumEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetLegalNumByInvcRefNum(int intInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumByInvcRefNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumByInvcRefNumResponse")]
        System.Threading.Tasks.Task<string> GetLegalNumByInvcRefNumAsync(int intInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCodeDescList", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCodeDescListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCodeDescList", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRebateInvList", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRebateInvListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRebateInvListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTableset GetRebateInvList(string invoiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRebateInvList", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRebateInvListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTableset> GetRebateInvListAsync(string invoiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateRebateInv", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateRebateInvResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateRebateInvEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvResponse GenerateRebateInv(EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateRebateInv", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateRebateInvResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvResponse> GenerateRebateInvAsync(EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTranDocTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTranDocTypesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AvailTypes")]
        string GetAvailTranDocTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTranDocTypesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AvailTypes")]
        System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDueDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDueDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDueDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateResponse OnChangeDueDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDueDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDueDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateResponse> OnChangeDueDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeCycleCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeCycleCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeCycleCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeResponse OnChangeCycleCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeCycleCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeCycleCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeResponse> OnChangeCycleCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeRecurring", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeRecurringResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeRecurringEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringResponse OnChangeRecurring(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeRecurring", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeRecurringResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringResponse> OnChangeRecurringAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringSourceInvoicesSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringSourceInvoicesSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringSourceInvoicesSearchEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceTableset GetRecurringSourceInvoicesSearch(string custList, string cycleCodeList, bool billToFlag, System.Nullable<System.DateTime> InvcDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringSourceInvoicesSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringSourceInvoicesSearchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceTableset> GetRecurringSourceInvoicesSearchAsync(string custList, string cycleCodeList, bool billToFlag, System.Nullable<System.DateTime> InvcDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringInvoicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringInvoicesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesResponse GetRecurringInvoices(EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurringInvoicesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesResponse> GetRecurringInvoicesAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalcInvcGrpTotal", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalcInvcGrpTotalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalcInvcGrpTotalEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="grpTotalInvAmt")]
        decimal CalcInvcGrpTotal(string cGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalcInvcGrpTotal", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalcInvcGrpTotalResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="grpTotalInvAmt")]
        System.Threading.Tasks.Task<decimal> CalcInvcGrpTotalAsync(string cGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvcRecurr", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvcRecurrResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvcRecurrEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrResponse GetInvcRecurr(EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvcRecurr", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvcRecurrResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrResponse> GetInvcRecurrAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNextInvoiceDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNextInvoiceDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNextInvoiceDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        System.Nullable<System.DateTime> GetNextInvoiceDate(System.Nullable<System.DateTime> date, int firstDayOfWeek, string modifier, int cycleInterval, int billingDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNextInvoiceDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNextInvoiceDateResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetNextInvoiceDateAsync(System.Nullable<System.DateTime> date, int firstDayOfWeek, string modifier, int cycleInterval, int billingDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPrepDeposit", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPrepDepositResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPrepDepositEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositResponse OnChangeofPrepDeposit(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPrepDeposit", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPrepDepositResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositResponse> OnChangeofPrepDepositAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/fillAllocDeposit", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/fillAllocDepositResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/fillAllocDepositEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void fillAllocDeposit();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/fillAllocDeposit", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/fillAllocDepositResponse")]
        System.Threading.Tasks.Task fillAllocDepositAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckInvoicePI", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckInvoicePIResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckInvoicePIEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="msgWarning")]
        string CheckInvoicePI(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckInvoicePI", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckInvoicePIResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="msgWarning")]
        System.Threading.Tasks.Task<string> CheckInvoicePIAsync(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckISRCodeDefinition", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckISRCodeDefinitionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckISRCodeDefinitionEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionResponse CheckISRCodeDefinition(EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckISRCodeDefinition", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckISRCodeDefinitionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionResponse> CheckISRCodeDefinitionAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeMYIndustryCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeMYIndustryCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeMYIndustryCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeResponse ChangeMYIndustryCode(EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeMYIndustryCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeMYIndustryCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeResponse> ChangeMYIndustryCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckCommodityCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckCommodityCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckCommodityCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeResponse CheckCommodityCode(EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckCommodityCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckCommodityCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeResponse> CheckCommodityCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPackDetails", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPackDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPackDetailsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvcDtlPackTableset GetPackDetails(int invoiceNum, int invoiceLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPackDetails", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPackDetailsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvcDtlPackTableset> GetPackDetailsAsync(int invoiceNum, int invoiceLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PopulateInvcHeadTransferList", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/PopulateInvcHeadTransferListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PopulateInvcHeadTransferListEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListResponse PopulateInvcHeadTransferList(EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/PopulateInvcHeadTransferList", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/PopulateInvcHeadTransferListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListResponse> PopulateInvcHeadTransferListAsync(EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ValidateGroupID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/ValidateGroupIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ValidateGroupIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool ValidateGroupID(string sGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ValidateGroupID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/ValidateGroupIDResponse")]
        System.Threading.Tasks.Task<bool> ValidateGroupIDAsync(string sGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvcGrp", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvcGrpResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvcGrpEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CreateInvcGrp(string sFromGroupID, string sToGrouID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvcGrp", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvcGrpResponse")]
        System.Threading.Tasks.Task CreateInvcGrpAsync(string sFromGroupID, string sToGrouID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/TransferSelectedInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/TransferSelectedInvoicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/TransferSelectedInvoicesEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesResponse TransferSelectedInvoices(EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/TransferSelectedInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/TransferSelectedInvoicesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesResponse> TransferSelectedInvoicesAsync(EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHead", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadResponse GetNewInvcHead(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHead", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadResponse> GetNewInvcHeadAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadAttch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchResponse GetNewInvcHeadAttch(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadAttch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchResponse> GetNewInvcHeadAttchAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtl", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlResponse GetNewInvcDtl(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtl", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlResponse> GetNewInvcDtlAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlAttch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchResponse GetNewInvcDtlAttch(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlAttch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchResponse> GetNewInvcDtlAttchAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcChrg", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcChrgResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcChrgEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgResponse GetNewInvcChrg(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcChrg", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcChrgResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgResponse> GetNewInvcChrgAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlRASch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlRASchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlRASchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchResponse GetNewInvcDtlRASch(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlRASch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlRASchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchResponse> GetNewInvcDtlRASchAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcMisc", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcMiscResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcMiscEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscResponse GetNewInvcMisc(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcMisc", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcMiscResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscResponse> GetNewInvcMiscAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxResponse GetNewInvcTax(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcTaxResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxResponse> GetNewInvcTaxAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlTGLC", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlTGLCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlTGLCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCResponse GetNewInvcDtlTGLC(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlTGLC", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcDtlTGLCResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCResponse> GetNewInvcDtlTGLCAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteByID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteByID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetByID(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetByIDAsync(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetList", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetListResponse GetList(EpicorConsole.Epicor.ARInvoiceSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetList", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRows", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRowsResponse GetRows(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRows", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/Update", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateResponse Update(EpicorConsole.Epicor.ARInvoiceSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/Update", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateExt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtResponse UpdateExt(EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateExt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/AssignLegalNumber", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/AssignLegalNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/AssignLegalNumberEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberResponse AssignLegalNumber(EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/AssignLegalNumber", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/AssignLegalNumberResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberResponse> AssignLegalNumberAsync(EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalculateCOIFRS_PV", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalculateCOIFRS_PVResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalculateCOIFRS_PVEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVResponse CalculateCOIFRS_PV(EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalculateCOIFRS_PV", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CalculateCOIFRS_PVResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVResponse> CalculateCOIFRS_PVAsync(EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/Update_ttInvcHead", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/Update_ttInvcHeadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/Update_ttInvcHeadEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadResponse Update_ttInvcHead(EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/Update_ttInvcHead", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/Update_ttInvcHeadResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadResponse> Update_ttInvcHeadAsync(EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CashRecGetInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CashRecGetInvoicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CashRecGetInvoicesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset CashRecGetInvoices(System.Nullable<System.DateTime> payDay, string whereClause);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CashRecGetInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CashRecGetInvoicesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset> CashRecGetInvoicesAsync(System.Nullable<System.DateTime> payDay, string whereClause);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeIncomeTaxCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeIncomeTaxCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeIncomeTaxCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeResponse ChangeIncomeTaxCode(EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeIncomeTaxCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/ChangeIncomeTaxCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeResponse> ChangeIncomeTaxCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckAmortSchedules", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckAmortSchedulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckAmortSchedulesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesResponse CheckAmortSchedules(EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckAmortSchedules", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckAmortSchedulesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesResponse> CheckAmortSchedulesAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckDocumentIsLocked", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckDocumentIsLockedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckDocumentIsLockedEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isLocked")]
        bool CheckDocumentIsLocked(string keyValue, bool showError);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckDocumentIsLocked", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckDocumentIsLockedResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isLocked")]
        System.Threading.Tasks.Task<bool> CheckDocumentIsLockedAsync(string keyValue, bool showError);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckGroupIsLocked", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckGroupIsLockedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckGroupIsLockedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedResponse CheckGroupIsLocked(EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckGroupIsLocked", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckGroupIsLockedResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedResponse> CheckGroupIsLockedAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckLtrOfCredit", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckLtrOfCreditResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckLtrOfCreditEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditResponse CheckLtrOfCredit(EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckLtrOfCredit", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CheckLtrOfCreditResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditResponse> CheckLtrOfCreditAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CopyInvoiceLines", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CopyInvoiceLinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CopyInvoiceLinesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesResponse CopyInvoiceLines(EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CopyInvoiceLines", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CopyInvoiceLinesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesResponse> CopyInvoiceLinesAsync(EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateCorrectionInvoice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateCorrectionInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateCorrectionInvoiceEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceResponse CreateCorrectionInvoice(EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateCorrectionInvoice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateCorrectionInvoiceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceResponse> CreateCorrectionInvoiceAsync(EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvFromDep", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvFromDepResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvFromDepEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepResponse CreateInvFromDep(EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvFromDep", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CreateInvFromDepResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepResponse> CreateInvFromDepAsync(EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CurrSymbolByInvcNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CurrSymbolByInvcNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CurrSymbolByInvcNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumResponse CurrSymbolByInvcNum(EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/CurrSymbolByInvcNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/CurrSymbolByInvcNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumResponse> CurrSymbolByInvcNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteAmortizationSchedule", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteAmortizationScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteAmortizationScheduleEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleResponse DeleteAmortizationSchedule(EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteAmortizationSchedule", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteAmortizationScheduleResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleResponse> DeleteAmortizationScheduleAsync(EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteMaster", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteMasterEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterResponse DeleteMaster(EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteMaster", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeleteMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterResponse> DeleteMasterAsync(EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeselectSelectedDropShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeselectSelectedDropShipmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeselectSelectedDropShipmentsEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset DeselectSelectedDropShipments(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeselectSelectedDropShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/DeselectSelectedDropShipmentsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset> DeselectSelectedDropShipmentsAsync(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/EnableARDates", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/EnableARDatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/EnableARDatesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesResponse EnableARDates(EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/EnableARDates", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/EnableARDatesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesResponse> EnableARDatesAsync(EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ETCValidateAddress", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/ETCValidateAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ETCValidateAddressEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressResponse ETCValidateAddress(EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/ETCValidateAddress", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/ETCValidateAddressResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressResponse> ETCValidateAddressAsync(EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateAmortizationSchedule", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateAmortizationScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateAmortizationScheduleEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleResponse GenerateAmortizationSchedule(EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateAmortizationSchedule", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GenerateAmortizationScheduleResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleResponse> GenerateAmortizationScheduleAsync(EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetARUninvoicedDropShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetARUninvoicedDropShipmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetARUninvoicedDropShipmentsEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset GetARUninvoicedDropShipments(string GroupID, string CustNums, string PlantChoice, bool BillToFlag, bool OnlyNotInvoiced);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetARUninvoicedDropShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetARUninvoicedDropShipmentsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset> GetARUninvoicedDropShipmentsAsync(string GroupID, string CustNums, string PlantChoice, bool BillToFlag, bool OnlyNotInvoiced);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailNOEInvoiceTranDocTypes", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailNOEInvoiceTranDocTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailNOEInvoiceTranDocTypesEpicorFaultDe" +
            "tailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesResponse GetAvailNOEInvoiceTranDocTypes(EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailNOEInvoiceTranDocTypes", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailNOEInvoiceTranDocTypesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesResponse> GetAvailNOEInvoiceTranDocTypesAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTurkeyTranDocTypes", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTurkeyTranDocTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTurkeyTranDocTypesEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="listAvailTranDocTypes")]
        string GetAvailTurkeyTranDocTypes(string sysTranType, bool isReturn);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTurkeyTranDocTypes", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetAvailTurkeyTranDocTypesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="listAvailTranDocTypes")]
        System.Threading.Tasks.Task<string> GetAvailTurkeyTranDocTypesAsync(string sysTranType, bool isReturn);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByBOEInvoiceNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByBOEInvoiceNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByBOEInvoiceNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetByBOEInvoiceNum(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByBOEInvoiceNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetByBOEInvoiceNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetByBOEInvoiceNumAsync(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCancellationInvoice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCancellationInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCancellationInvoiceEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetCancellationInvoice(string groupID, int sourceInvoiceNum, System.Nullable<System.DateTime> newInvoiceDate, string newDocType, bool recalculateTaxes);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCancellationInvoice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCancellationInvoiceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetCancellationInvoiceAsync(string groupID, int sourceInvoiceNum, System.Nullable<System.DateTime> newInvoiceDate, string newDocType, bool recalculateTaxes);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCurrencyBase", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCurrencyBaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCurrencyBaseEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opCurrencyBase")]
        string GetCurrencyBase();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCurrencyBase", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetCurrencyBaseResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opCurrencyBase")]
        System.Threading.Tasks.Task<string> GetCurrencyBaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultAccount", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultAccountEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountResponse GetDefaultAccount(EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultAccount", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDefaultAccountResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountResponse> GetDefaultAccountAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDepositsToConvert", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDepositsToConvertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDepositsToConvertEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepTableset GetDepositsToConvert(string custNums, System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDepositsToConvert", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDepositsToConvertResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepTableset> GetDepositsToConvertAsync(string custNums, System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDropShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDropShipmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDropShipmentsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsResponse GetDropShipments(EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDropShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetDropShipmentsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsResponse> GetDropShipmentsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetFSCalls", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetFSCallsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetFSCallsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsResponse GetFSCalls(EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetFSCalls", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetFSCallsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsResponse> GetFSCallsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceLines", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceLinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceLinesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTableset GetInvoiceLines(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceLines", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceLinesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTableset> GetInvoiceLinesAsync(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceReminders", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceRemindersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceRemindersEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvRemindersTableset GetInvoiceReminders(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceReminders", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetInvoiceRemindersResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvRemindersTableset> GetInvoiceRemindersAsync(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumGenOpts", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumGenOptsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumGenOptsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsResponse GetLegalNumGenOpts(EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumGenOpts", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetLegalNumGenOptsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsResponse> GetLegalNumGenOptsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneBilling", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneBillingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneBillingEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingResponse GetMilestoneBilling(EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneBilling", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneBillingResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingResponse> GetMilestoneBillingAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneSearchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneTableset GetMilestoneSearch(string GroupID, string custList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMilestoneSearchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneTableset> GetMilestoneSearchAsync(string GroupID, string custList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMXTaxRcptType", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMXTaxRcptTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMXTaxRcptTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="mxTaxRcptType")]
        string GetMXTaxRcptType();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMXTaxRcptType", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetMXTaxRcptTypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="mxTaxRcptType")]
        System.Threading.Tasks.Task<string> GetMXTaxRcptTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewDepositType", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewDepositTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewDepositTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeResponse GetNewDepositType(EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewDepositType", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewDepositTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeResponse> GetNewDepositTypeAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvoiceManual", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvoiceManualResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvoiceManualEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualResponse GetNewInvoiceManual(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvoiceManual", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvoiceManualResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualResponse> GetNewInvoiceManualAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadBOE", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadBOEResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadBOEEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOEResponse GetNewInvcHeadBOE(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOERequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadBOE", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadBOEResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOEResponse> GetNewInvcHeadBOEAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOERequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadType", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeResponse GetNewInvcHeadType(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadType", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetNewInvcHeadTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeResponse> GetNewInvcHeadTypeAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPaymentDataForViewing", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPaymentDataForViewingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPaymentDataForViewingEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingResponse GetPaymentDataForViewing(EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPaymentDataForViewing", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPaymentDataForViewingResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingResponse> GetPaymentDataForViewingAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvcSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvcSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvcSearchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBTableset GetPBInvcSearch(string ipGroupID, string ipPrjList, string ipInvTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvcSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvcSearchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBTableset> GetPBInvcSearchAsync(string ipGroupID, string ipPrjList, string ipInvTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvoicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvoicesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesResponse GetPBInvoices(EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvoices", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetPBInvoicesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesResponse> GetPBInvoicesAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBill", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBillResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBillEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillResponse GetRecurBill(EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBill", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBillResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillResponse> GetRecurBillAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBillSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBillSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBillSearchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContTableset GetRecurBillSearch(string custList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBillSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRecurBillSearchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContTableset> GetRecurBillSearchAsync(string custList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACredits", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACreditsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACreditsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsResponse GetRMACredits(EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACredits", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACreditsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsResponse> GetRMACreditsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACreditsSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACreditsSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACreditsSearchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMATableset GetRMACreditsSearch(string custList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACreditsSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRMACreditsSearchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMATableset> GetRMACreditsSearchAsync(string custList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsContactTracker", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsContactTrackerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsContactTrackerEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerResponse GetRowsContactTracker(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsContactTracker", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsContactTrackerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerResponse> GetRowsContactTrackerAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsCustomerTracker", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsCustomerTrackerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsCustomerTrackerEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerResponse GetRowsCustomerTracker(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsCustomerTracker", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetRowsCustomerTrackerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerResponse> GetRowsCustomerTrackerAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsConsolidatedPS", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsConsolidatedPSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsConsolidatedPSEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSResponse GetShipmentsConsolidatedPS(EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsConsolidatedPS", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsConsolidatedPSResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSResponse> GetShipmentsConsolidatedPSAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsResponse GetShipments(EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipments", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsResponse> GetShipmentsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsSearchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipTableset GetShipmentsSearch(string GroupID, string CustNums, string PlantChoice, bool BillToFlag, bool OnlyNotInvoiced);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsSearch", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetShipmentsSearchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipTableset> GetShipmentsSearchAsync(string GroupID, string CustNums, string PlantChoice, bool BillToFlag, bool OnlyNotInvoiced);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetvalidEAD", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetvalidEADResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetvalidEADEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADResponse GetvalidEAD(EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetvalidEAD", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/GetvalidEADResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADResponse> GetvalidEADAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/InvcGrpExists", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/InvcGrpExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/InvcGrpExistsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="result")]
        bool InvcGrpExists(string GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/InvcGrpExists", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/InvcGrpExistsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="result")]
        System.Threading.Tasks.Task<bool> InvcGrpExistsAsync(string GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsConvertedFromDep", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsConvertedFromDepResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsConvertedFromDepEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="converted")]
        bool IsConvertedFromDep(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsConvertedFromDep", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsConvertedFromDepResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="converted")]
        System.Threading.Tasks.Task<bool> IsConvertedFromDepAsync(int invoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsPMForGenPIType", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsPMForGenPITypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsPMForGenPITypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ipIsGenPIType")]
        bool IsPMForGenPIType(int ipPMUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsPMForGenPIType", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsPMForGenPITypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ipIsGenPIType")]
        System.Threading.Tasks.Task<bool> IsPMForGenPITypeAsync(int ipPMUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsReturnInvoice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsReturnInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsReturnInvoiceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ipIsReturnInvoice")]
        bool IsReturnInvoice(int ipInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsReturnInvoice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/IsReturnInvoiceResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ipIsReturnInvoice")]
        System.Threading.Tasks.Task<bool> IsReturnInvoiceAsync(int ipInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/LoadRecordsPEInvcTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/LoadRecordsPEInvcTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/LoadRecordsPEInvcTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset LoadRecordsPEInvcTax(string ipGroupID, int ipInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/LoadRecordsPEInvcTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/LoadRecordsPEInvcTaxResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset> LoadRecordsPEInvcTaxAsync(string ipGroupID, int ipInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MassGenerateBOEInvcDtl", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/MassGenerateBOEInvcDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MassGenerateBOEInvcDtlEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlResponse MassGenerateBOEInvcDtl(EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MassGenerateBOEInvcDtl", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/MassGenerateBOEInvcDtlResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlResponse> MassGenerateBOEInvcDtlAsync(EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXLoadTaxRcptResults", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXLoadTaxRcptResultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXLoadTaxRcptResultsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.MXDigitalTaxRcptTableset MXLoadTaxRcptResults(int iInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXLoadTaxRcptResults", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXLoadTaxRcptResultsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.MXDigitalTaxRcptTableset> MXLoadTaxRcptResultsAsync(int iInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXRegenReceipt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXRegenReceiptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXRegenReceiptEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="oMessage")]
        string MXRegenReceipt(int iInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXRegenReceipt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXRegenReceiptResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="oMessage")]
        System.Threading.Tasks.Task<string> MXRegenReceiptAsync(int iInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXCancelReceipt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXCancelReceiptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXCancelReceiptEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="oMessage")]
        string MXCancelReceipt(int iInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXCancelReceipt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/MXCancelReceiptResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="oMessage")]
        System.Threading.Tasks.Task<string> MXCancelReceiptAsync(int iInvoiceNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeAllocatedDepositAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeAllocatedDepositAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeAllocatedDepositAmtEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtResponse OnChangeAllocatedDepositAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeAllocatedDepositAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeAllocatedDepositAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtResponse> OnChangeAllocatedDepositAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeARLOCID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeARLOCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeARLOCIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDResponse OnChangeARLOCID(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeARLOCID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeARLOCIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDResponse> OnChangeARLOCIDAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBlockedFin", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBlockedFinResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBlockedFinEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinResponse OnChangeBlockedFin(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBlockedFin", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBlockedFinResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinResponse> OnChangeBlockedFinAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBOEStatus", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBOEStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBOEStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusResponse OnChangeBOEStatus(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBOEStatus", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeBOEStatusResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusResponse> OnChangeBOEStatusAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHold", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHoldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHoldEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldResponse OnChangeHold(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHold", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHoldResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldResponse> OnChangeHoldAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHoldReason", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHoldReasonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHoldReasonEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonResponse OnChangeHoldReason(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHoldReason", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeHoldReasonResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonResponse> OnChangeHoldReasonAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeInvDtlUseOTS", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeInvDtlUseOTSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeInvDtlUseOTSEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSResponse OnChangeInvDtlUseOTS(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeInvDtlUseOTS", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeInvDtlUseOTSResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSResponse> OnChangeInvDtlUseOTSAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDefRev", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDefRevResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDefRevEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevResponse OnChangeLineDefRev(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDefRev", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDefRevResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevResponse> OnChangeLineDefRevAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDeferredPercent", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDeferredPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDeferredPercentEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentResponse OnChangeDeferredPercent(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDeferredPercent", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeDeferredPercentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentResponse> OnChangeDeferredPercentAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangePartiallyDefer", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangePartiallyDeferResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangePartiallyDeferEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferResponse OnChangePartiallyDefer(EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangePartiallyDefer", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangePartiallyDeferResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferResponse> OnChangePartiallyDeferAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclass", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassResponse OnChangeReclass(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclass", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassResponse> OnChangeReclassAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeResponse OnChangeReclassCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeResponse> OnChangeReclassCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassReasonCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassReasonCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassReasonCodeEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeResponse OnChangeReclassReasonCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassReasonCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeReclassReasonCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeResponse> OnChangeReclassReasonCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUnrecognizedAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUnrecognizedAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUnrecognizedAmtEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtResponse OnChangeUnrecognizedAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUnrecognizedAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeUnrecognizedAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtResponse> OnChangeUnrecognizedAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDspWithholdAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDspWithholdAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDspWithholdAmtEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtResponse OnChangeLineDspWithholdAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDspWithholdAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineDspWithholdAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtResponse> OnChangeLineDspWithholdAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineInvoiceRef", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineInvoiceRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineInvoiceRefEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefResponse OnChangeLineInvoiceRef(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineInvoiceRef", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeLineInvoiceRefResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefResponse> OnChangeLineInvoiceRefAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfAmortDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfAmortDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfAmortDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateResponse OnChangeOfAmortDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfAmortDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfAmortDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateResponse> OnChangeOfAmortDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateResponse OnChangeofApplyDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateResponse> OnChangeofApplyDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDateEx", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDateExResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDateExEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExResponse OnChangeofApplyDateEx(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDateEx", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofApplyDateExResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExResponse> OnChangeofApplyDateExAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofChrgAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofChrgAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofChrgAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtResponse OnChangeofChrgAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofChrgAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofChrgAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtResponse> OnChangeofChrgAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofContact", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofContactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofContactEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactResponse OnChangeofContact(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofContact", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofContactResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactResponse> OnChangeofContactAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCurrency", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCurrencyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCurrencyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyResponse OnChangeofCurrency(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCurrency", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCurrencyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyResponse> OnChangeofCurrencyAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCustomer", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerResponse OnChangeofCustomer(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCustomer", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerResponse> OnChangeofCustomerAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfDefRevStart", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfDefRevStartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfDefRevStartEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void OnChangeOfDefRevStart(System.Nullable<System.DateTime> ipDefRevStart, int ipInvoiceNum, int ipInvoiceLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfDefRevStart", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfDefRevStartResponse")]
        System.Threading.Tasks.Task OnChangeOfDefRevStartAsync(System.Nullable<System.DateTime> ipDefRevStart, int ipInvoiceNum, int ipInvoiceLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDepAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDepAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDepAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtResponse OnChangeofDepAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDepAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDepAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtResponse> OnChangeofDepAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDeposit", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDepositResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDepositEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositResponse OnChangeofDeposit(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDeposit", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofDepositResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositResponse> OnChangeofDepositAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofExchangeRate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofExchangeRateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofExchangeRateEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateResponse OnChangeofExchangeRate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofExchangeRate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofExchangeRateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateResponse> OnChangeofExchangeRateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFixedAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFixedAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFixedAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtResponse OnChangeofFixedAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFixedAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFixedAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtResponse> OnChangeofFixedAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFOB", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFOBResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFOBEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBResponse OnChangeofFOB(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFOB", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofFOBResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBResponse> OnChangeofFOBAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateResponse OnChangeofInvDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateResponse> OnChangeofInvDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDateEx", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDateExResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDateExEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExResponse OnChangeofInvDateEx(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDateEx", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvDateExResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExResponse> OnChangeofInvDateExAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceAddress", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceAddressEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressResponse OnChangeofInvoiceAddress(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceAddress", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceAddressResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressResponse> OnChangeofInvoiceAddressAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRevisionDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRevisionDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRevisionDateEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateResponse OnChangeOfRevisionDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRevisionDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfRevisionDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateResponse> OnChangeOfRevisionDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRevisionNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRevisionNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRevisionNumEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumResponse OnChangeofRevisionNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRevisionNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofRevisionNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumResponse> OnChangeofRevisionNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceRef", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceRefEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefResponse OnChangeofInvoiceRef(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceRef", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofInvoiceRefResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefResponse> OnChangeofInvoiceRefAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineAdvBill", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineAdvBillResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineAdvBillEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillResponse OnChangeofLineAdvBill(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineAdvBill", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineAdvBillResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillResponse> OnChangeofLineAdvBillAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineContact", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineContactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineContactEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactResponse OnChangeofLineContact(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineContact", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineContactResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactResponse> OnChangeofLineContactAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDesc", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDescResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDescEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescResponse OnChangeofLineDesc(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDesc", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDescResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescResponse> OnChangeofLineDescAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscAmtEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtResponse OnChangeofLineDiscAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtResponse> OnChangeofLineDiscAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscPerc", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscPercResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscPercEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercResponse OnChangeofLineDiscPerc(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscPerc", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineDiscPercResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercResponse> OnChangeofLineDiscPercAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineExtPrice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineExtPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineExtPriceEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceResponse OnChangeofLineExtPrice(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineExtPrice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineExtPriceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceResponse> OnChangeofLineExtPriceAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineInvoiceLineRef", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineInvoiceLineRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineInvoiceLineRefEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefResponse OnChangeofLineInvoiceLineRef(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineInvoiceLineRef", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineInvoiceLineRefResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefResponse> OnChangeofLineInvoiceLineRefAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderLine", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderLineEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineResponse OnChangeofLineOrderLine(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderLine", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderLineResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineResponse> OnChangeofLineOrderLineAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderRelease", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderReleaseEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseResponse OnChangeofLineOrderRelease(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderRelease", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineOrderReleaseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseResponse> OnChangeofLineOrderReleaseAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePartNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePartNumEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumResponse OnChangeofLinePartNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePartNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePartNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumResponse> OnChangeofLinePartNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePricePerCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePricePerCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePricePerCodeEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeResponse OnChangeofLinePricePerCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePricePerCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinePricePerCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeResponse> OnChangeofLinePricePerCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineProdCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineProdCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineProdCodeEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeResponse OnChangeofLineProdCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineProdCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineProdCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeResponse> OnChangeofLineProdCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineQty", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineQtyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyResponse OnChangeofLineQty(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineQty", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineQtyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyResponse> OnChangeofLineQtyAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineRevNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineRevNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineRevNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumResponse OnChangeofLineRevNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineRevNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineRevNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumResponse> OnChangeofLineRevNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineSalesUM", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineSalesUMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineSalesUMEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMResponse OnChangeofLineSalesUM(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineSalesUM", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineSalesUMResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMResponse> OnChangeofLineSalesUMAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipDateEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateResponse OnChangeofLineShipDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipDate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateResponse> OnChangeofLineShipDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfLineShipToCustID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfLineShipToCustIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfLineShipToCustIDEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDResponse OnChangeOfLineShipToCustID(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfLineShipToCustID", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeOfLineShipToCustIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDResponse> OnChangeOfLineShipToCustIDAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipToNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipToNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipToNumEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumResponse OnChangeofLineShipToNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipToNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipToNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumResponse> OnChangeofLineShipToNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipVia", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipViaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipViaEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaResponse OnChangeofLineShipVia(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipVia", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineShipViaResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaResponse> OnChangeofLineShipViaAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxCat", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxCatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxCatEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatResponse OnChangeofLineTaxCat(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxCat", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxCatResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatResponse> OnChangeofLineTaxCatAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxExempt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxExemptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxExemptEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptResponse OnChangeofLineTaxExempt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxExempt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxExemptResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptResponse> OnChangeofLineTaxExemptAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxRgn", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxRgnResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxRgnEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnResponse OnChangeofLineTaxRgn(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxRgn", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineTaxRgnResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnResponse> OnChangeofLineTaxRgnAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineUnitPrice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineUnitPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineUnitPriceEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceResponse OnChangeofLineUnitPrice(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineUnitPrice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLineUnitPriceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceResponse> OnChangeofLineUnitPriceAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinkedInvcUnitPrice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinkedInvcUnitPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinkedInvcUnitPriceEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceResponse OnChangeofLinkedInvcUnitPrice(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinkedInvcUnitPrice", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLinkedInvcUnitPriceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceResponse> OnChangeofLinkedInvcUnitPriceAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLockRate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLockRateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLockRateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateResponse OnChangeofLockRate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLockRate", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofLockRateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateResponse> OnChangeofLockRateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofManualTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofManualTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofManualTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxResponse OnChangeofManualTax(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofManualTax", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofManualTaxResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxResponse> OnChangeofManualTaxAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtResponse OnChangeofMiscAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscAmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtResponse> OnChangeofMiscAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeResponse OnChangeofMiscCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscCode", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeResponse> OnChangeofMiscCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscPrcnt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscPrcntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscPrcntEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntResponse OnChangeofMiscPrcnt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscPrcnt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMiscPrcntResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntResponse> OnChangeofMiscPrcntAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMXPartPmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMXPartPmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMXPartPmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtResponse OnChangeofMXPartPmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMXPartPmt", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofMXPartPmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtResponse> OnChangeofMXPartPmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofOrderNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofOrderNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofOrderNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumResponse OnChangeofOrderNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofOrderNum", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofOrderNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumResponse> OnChangeofOrderNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPayMethod", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPayMethodResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.ARInvoiceSvc.EpicorFaultDetail), Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPayMethodEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodResponse OnChangeofPayMethod(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPayMethod", ReplyAction="Erp:BO:ARInvoice/ARInvoiceSvcContract/OnChangeofPayMethodResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodResponse> OnChangeofPayMethodAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPaySchedAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPaySchedAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int LineNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public decimal NewPayAmt;
        
        public OnChangeofPaySchedAmtRequest() {
        }
        
        public OnChangeofPaySchedAmtRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds, int InvoiceNum, int LineNumber, decimal NewPayAmt) {
            this.ds = ds;
            this.InvoiceNum = InvoiceNum;
            this.LineNumber = LineNumber;
            this.NewPayAmt = NewPayAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPaySchedAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPaySchedAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds;
        
        public OnChangeofPaySchedAmtResponse() {
        }
        
        public OnChangeofPaySchedAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPaySchedDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPaySchedDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int LineNumber;
        
        public OnChangeofPaySchedDateRequest() {
        }
        
        public OnChangeofPaySchedDateRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds, int InvoiceNum, int LineNumber) {
            this.ds = ds;
            this.InvoiceNum = InvoiceNum;
            this.LineNumber = LineNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPaySchedDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPaySchedDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds;
        
        public OnChangeofPaySchedDateResponse() {
        }
        
        public OnChangeofPaySchedDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPECharges", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPEChargesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal ipPECharges;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPEChargesRequest() {
        }
        
        public OnChangeofPEChargesRequest(int ipInvoiceNum, decimal ipPECharges, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipPECharges = ipPECharges;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPEChargesResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPEChargesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPEChargesResponse() {
        }
        
        public OnChangeofPEChargesResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPECommissions", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPECommissionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal ipPECommissions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPECommissionsRequest() {
        }
        
        public OnChangeofPECommissionsRequest(int ipInvoiceNum, decimal ipPECommissions, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipPECommissions = ipPECommissions;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPECommissionsResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPECommissionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPECommissionsResponse() {
        }
        
        public OnChangeofPECommissionsResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPEDischargeAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPEDischargeAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal ipPEDischargeAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPEDischargeAmtRequest() {
        }
        
        public OnChangeofPEDischargeAmtRequest(int ipInvoiceNum, decimal ipPEDischargeAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipPEDischargeAmt = ipPEDischargeAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPEDischargeAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPEDischargeAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPEDischargeAmtResponse() {
        }
        
        public OnChangeofPEDischargeAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPEInterest", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPEInterestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal ipPEInterest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPEInterestRequest() {
        }
        
        public OnChangeofPEInterestRequest(int ipInvoiceNum, decimal ipPEInterest, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipPEInterest = ipPEInterest;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPEInterestResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPEInterestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPEInterestResponse() {
        }
        
        public OnChangeofPEInterestResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPENoPayPenalty", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPENoPayPenaltyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal ipPENoPayPenalty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPENoPayPenaltyRequest() {
        }
        
        public OnChangeofPENoPayPenaltyRequest(int ipInvoiceNum, decimal ipPENoPayPenalty, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipPENoPayPenalty = ipPENoPayPenalty;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPENoPayPenaltyResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPENoPayPenaltyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPENoPayPenaltyResponse() {
        }
        
        public OnChangeofPENoPayPenaltyResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPlant", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPlantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string NewPlant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPlantRequest() {
        }
        
        public OnChangeofPlantRequest(int InvoiceNum, string NewPlant, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewPlant = NewPlant;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPlantResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPlantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPlantResponse() {
        }
        
        public OnChangeofPlantResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfRACode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfRACodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipRACode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfRACodeRequest() {
        }
        
        public OnChangeOfRACodeRequest(string ipRACode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipRACode = ipRACode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfRACodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfRACodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfRACodeResponse() {
        }
        
        public OnChangeOfRACodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofRateCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofRateCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string newRateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofRateCodeRequest() {
        }
        
        public OnChangeofRateCodeRequest(int invoiceNum, int invoiceLine, string taxCode, string newRateCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.invoiceLine = invoiceLine;
            this.taxCode = taxCode;
            this.newRateCode = newRateCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofRateCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofRateCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofRateCodeResponse() {
        }
        
        public OnChangeofRateCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofRateGrpCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofRateGrpCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string NewRateGrpCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofRateGrpCodeRequest() {
        }
        
        public OnChangeofRateGrpCodeRequest(int InvoiceNum, string NewRateGrpCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewRateGrpCode = NewRateGrpCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofRateGrpCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofRateGrpCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofRateGrpCodeResponse() {
        }
        
        public OnChangeofRateGrpCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofRetInvoiceNum", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofRetInvoiceNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string NewRetInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofRetInvoiceNumRequest() {
        }
        
        public OnChangeofRetInvoiceNumRequest(int InvoiceNum, string NewRetInvoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewRetInvoiceNum = NewRetInvoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofRetInvoiceNumResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofRetInvoiceNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofRetInvoiceNumResponse() {
        }
        
        public OnChangeofRetInvoiceNumResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofSalesRep", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofSalesRepRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int RepIndexNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewRepCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofSalesRepRequest() {
        }
        
        public OnChangeofSalesRepRequest(int InvoiceNum, int RepIndexNum, string NewRepCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.RepIndexNum = RepIndexNum;
            this.NewRepCode = NewRepCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofSalesRepResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofSalesRepResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofSalesRepResponse() {
        }
        
        public OnChangeofSalesRepResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofShipDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofShipDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> NewShipDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofShipDateRequest() {
        }
        
        public OnChangeofShipDateRequest(int InvoiceNum, System.Nullable<System.DateTime> NewShipDate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewShipDate = NewShipDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofShipDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofShipDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofShipDateResponse() {
        }
        
        public OnChangeofShipDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofSoldToCustID", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofSoldToCustIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string NewSoldToCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofSoldToCustIDRequest() {
        }
        
        public OnChangeofSoldToCustIDRequest(string NewSoldToCustID, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.NewSoldToCustID = NewSoldToCustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofSoldToCustIDResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofSoldToCustIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofSoldToCustIDResponse() {
        }
        
        public OnChangeofSoldToCustIDResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxableAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string RateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public decimal NewTaxableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxableAmtRequest() {
        }
        
        public OnChangeofTaxableAmtRequest(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewTaxableAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.TaxCode = TaxCode;
            this.RateCode = RateCode;
            this.NewTaxableAmt = NewTaxableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxableAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxableAmtResponse() {
        }
        
        public OnChangeofTaxableAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string RateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public decimal NewTaxAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxAmtRequest() {
        }
        
        public OnChangeofTaxAmtRequest(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewTaxAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.TaxCode = TaxCode;
            this.RateCode = RateCode;
            this.NewTaxAmt = NewTaxAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxAmtResponse() {
        }
        
        public OnChangeofTaxAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string RateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string NewTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxCodeRequest() {
        }
        
        public OnChangeofTaxCodeRequest(int InvoiceNum, int InvoiceLine, string RateCode, string NewTaxCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.RateCode = RateCode;
            this.NewTaxCode = NewTaxCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxCodeResponse() {
        }
        
        public OnChangeofTaxCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxLock", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxLockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool newLockRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxLockRequest() {
        }
        
        public OnChangeofTaxLockRequest(int invoiceNum, bool newLockRate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.newLockRate = newLockRate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxLockResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxLockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxLockResponse() {
        }
        
        public OnChangeofTaxLockResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxPDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxPDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> NewTaxPDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxPDateRequest() {
        }
        
        public OnChangeofTaxPDateRequest(int InvoiceNum, System.Nullable<System.DateTime> NewTaxPDate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewTaxPDate = NewTaxPDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxPDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxPDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxPDateResponse() {
        }
        
        public OnChangeofTaxPDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxPercent", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string RateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public decimal NewPercent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxPercentRequest() {
        }
        
        public OnChangeofTaxPercentRequest(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewPercent, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.TaxCode = TaxCode;
            this.RateCode = RateCode;
            this.NewPercent = NewPercent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxPercentResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxPercentResponse() {
        }
        
        public OnChangeofTaxPercentResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxRateDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxRateDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> newTaxRateDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxRateDateRequest() {
        }
        
        public OnChangeofTaxRateDateRequest(int invoiceNum, System.Nullable<System.DateTime> newTaxRateDate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.newTaxRateDate = newTaxRateDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxRateDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxRateDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxRateDateResponse() {
        }
        
        public OnChangeofTaxRateDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxRateGrpCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxRateGrpCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string NewRateGrpCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxRateGrpCodeRequest() {
        }
        
        public OnChangeofTaxRateGrpCodeRequest(int InvoiceNum, string NewRateGrpCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewRateGrpCode = NewRateGrpCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxRateGrpCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxRateGrpCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxRateGrpCodeResponse() {
        }
        
        public OnChangeofTaxRateGrpCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxReportAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxReportAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string RateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public decimal NewRptAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxReportAmtRequest() {
        }
        
        public OnChangeofTaxReportAmtRequest(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewRptAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.TaxCode = TaxCode;
            this.RateCode = RateCode;
            this.NewRptAmt = NewRptAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxReportAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxReportAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxReportAmtResponse() {
        }
        
        public OnChangeofTaxReportAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxRgn", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxRgnRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string taxRegionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxRgnRequest() {
        }
        
        public OnChangeofTaxRgnRequest(int invoiceNum, string taxRegionCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.taxRegionCode = taxRegionCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxRgnResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTaxRgnResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTaxRgnResponse() {
        }
        
        public OnChangeofTaxRgnResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTermsCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTermsCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string NewTermsCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofTermsCodeRequest() {
        }
        
        public OnChangeofTermsCodeRequest(int InvoiceNum, string NewTermsCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewTermsCode = NewTermsCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTermsCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofTermsCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string opWarning;
        
        public OnChangeofTermsCodeResponse() {
        }
        
        public OnChangeofTermsCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, string opWarning) {
            this.ds = ds;
            this.opWarning = opWarning;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfTransApplyDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfTransApplyDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> newTransApplyDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfTransApplyDateRequest() {
        }
        
        public OnChangeOfTransApplyDateRequest(int invoiceNum, System.Nullable<System.DateTime> newTransApplyDate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.newTransApplyDate = newTransApplyDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfTransApplyDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfTransApplyDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfTransApplyDateResponse() {
        }
        
        public OnChangeOfTransApplyDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofUseSOCCDefaults", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofUseSOCCDefaultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool UseSOCC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofUseSOCCDefaultsRequest() {
        }
        
        public OnChangeofUseSOCCDefaultsRequest(int InvoiceNum, bool UseSOCC, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.UseSOCC = UseSOCC;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofUseSOCCDefaultsResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofUseSOCCDefaultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofUseSOCCDefaultsResponse() {
        }
        
        public OnChangeofUseSOCCDefaultsResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTranDocTypeID", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeTranDocTypeIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipTranDocTypeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeTranDocTypeIDRequest() {
        }
        
        public OnChangeTranDocTypeIDRequest(string ipTranDocTypeID, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipTranDocTypeID = ipTranDocTypeID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTranDocTypeIDResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeTranDocTypeIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeTranDocTypeIDResponse() {
        }
        
        public OnChangeTranDocTypeIDResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeUseAltBillTo", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeUseAltBillToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool useAltBillTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeUseAltBillToRequest() {
        }
        
        public OnChangeUseAltBillToRequest(bool useAltBillTo, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.useAltBillTo = useAltBillTo;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeUseAltBillToResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeUseAltBillToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeUseAltBillToResponse() {
        }
        
        public OnChangeUseAltBillToResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChooseofPaySched", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChooseofPaySchedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChooseofPaySchedRequest() {
        }
        
        public OnChooseofPaySchedRequest(int InvoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChooseofPaySchedResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChooseofPaySchedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset OnChooseofPaySchedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChooseofPaySchedResponse() {
        }
        
        public OnChooseofPaySchedResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset OnChooseofPaySchedResult, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.OnChooseofPaySchedResult = OnChooseofPaySchedResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrePostBOEChangeStatus", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class PrePostBOEChangeStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipGLTransType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipBOEInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool ipEditList;
        
        public PrePostBOEChangeStatusRequest() {
        }
        
        public PrePostBOEChangeStatusRequest(string ipGLTransType, int ipBOEInvoiceNum, bool ipEditList) {
            this.ipGLTransType = ipGLTransType;
            this.ipBOEInvoiceNum = ipBOEInvoiceNum;
            this.ipEditList = ipEditList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrePostBOEChangeStatusResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class PrePostBOEChangeStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string GLMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string GLWarning;
        
        public PrePostBOEChangeStatusResponse() {
        }
        
        public PrePostBOEChangeStatusResponse(string ipGroupID, string GLMessage, string GLWarning) {
            this.ipGroupID = ipGroupID;
            this.GLMessage = GLMessage;
            this.GLWarning = GLWarning;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrePostBOEInvoice", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class PrePostBOEInvoiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipBOEInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool ipTCOnline;
        
        public PrePostBOEInvoiceRequest() {
        }
        
        public PrePostBOEInvoiceRequest(int ipBOEInvoiceNum, bool ipTCOnline) {
            this.ipBOEInvoiceNum = ipBOEInvoiceNum;
            this.ipTCOnline = ipTCOnline;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrePostBOEInvoiceResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class PrePostBOEInvoiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GLMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string GLWarning;
        
        public PrePostBOEInvoiceResponse() {
        }
        
        public PrePostBOEInvoiceResponse(string GLMessage, string GLWarning) {
            this.GLMessage = GLMessage;
            this.GLWarning = GLWarning;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RecalcAmortAmount", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class RecalcAmortAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public decimal ipProposedPct;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public RecalcAmortAmountRequest() {
        }
        
        public RecalcAmortAmountRequest(decimal ipProposedPct, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipProposedPct = ipProposedPct;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RecalcAmortAmountResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class RecalcAmortAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public RecalcAmortAmountResponse() {
        }
        
        public RecalcAmortAmountResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RecalcAmortPercent", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class RecalcAmortPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public decimal ipProposedAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public RecalcAmortPercentRequest() {
        }
        
        public RecalcAmortPercentRequest(decimal ipProposedAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipProposedAmt = ipProposedAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RecalcAmortPercentResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class RecalcAmortPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public RecalcAmortPercentResponse() {
        }
        
        public RecalcAmortPercentResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RecalcDeferredTotals", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class RecalcDeferredTotalsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipInvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public RecalcDeferredTotalsRequest() {
        }
        
        public RecalcDeferredTotalsRequest(int ipInvoiceNum, int ipInvoiceLine, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipInvoiceLine = ipInvoiceLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RecalcDeferredTotalsResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class RecalcDeferredTotalsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public RecalcDeferredTotalsResponse() {
        }
        
        public RecalcDeferredTotalsResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestoreAmortizationSchedule", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class RestoreAmortizationScheduleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipInvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public RestoreAmortizationScheduleRequest() {
        }
        
        public RestoreAmortizationScheduleRequest(int ipInvoiceNum, int ipInvoiceLine, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipInvoiceLine = ipInvoiceLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestoreAmortizationScheduleResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class RestoreAmortizationScheduleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public RestoreAmortizationScheduleResponse() {
        }
        
        public RestoreAmortizationScheduleResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetReadyToCalc", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class SetReadyToCalcRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool ipCalcAll;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public SetReadyToCalcRequest() {
        }
        
        public SetReadyToCalcRequest(string ipGroupID, int ipInvoiceNum, bool ipCalcAll, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipGroupID = ipGroupID;
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipCalcAll = ipCalcAll;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetReadyToCalcResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class SetReadyToCalcResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public SetReadyToCalcResponse() {
        }
        
        public SetReadyToCalcResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetReadyToCalcEx", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class SetReadyToCalcExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool ipCalcAll;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public bool ipCalledFromUI;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public SetReadyToCalcExRequest() {
        }
        
        public SetReadyToCalcExRequest(string ipGroupID, int ipInvoiceNum, bool ipCalcAll, bool ipCalledFromUI, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipGroupID = ipGroupID;
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipCalcAll = ipCalcAll;
            this.ipCalledFromUI = ipCalledFromUI;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetReadyToCalcExResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class SetReadyToCalcExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public SetReadyToCalcExResponse() {
        }
        
        public SetReadyToCalcExResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateBOEStatus", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateBOEStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public UpdateBOEStatusRequest() {
        }
        
        public UpdateBOEStatusRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateBOEStatusResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateBOEStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public UpdateBOEStatusResponse() {
        }
        
        public UpdateBOEStatusResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMaster", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string cGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string cTableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public bool runCheckAmortSched;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public bool runChkLtrOfCredit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public bool genAmortSched;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=6)]
        public bool lRASchedExists;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=7)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=8)]
        public int ipInvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=9)]
        public string cARLOCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=10)]
        public bool suppressUserPrompts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=11)]
        public decimal dTotalCharges;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=12)]
        public bool lGetDefaultAccount;
        
        public UpdateMasterRequest() {
        }
        
        public UpdateMasterRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, string cGroupID, string cTableName, bool runCheckAmortSched, bool runChkLtrOfCredit, bool genAmortSched, bool lRASchedExists, int ipInvoiceNum, int ipInvoiceLine, string cARLOCID, bool suppressUserPrompts, decimal dTotalCharges, bool lGetDefaultAccount) {
            this.ds = ds;
            this.cGroupID = cGroupID;
            this.cTableName = cTableName;
            this.runCheckAmortSched = runCheckAmortSched;
            this.runChkLtrOfCredit = runChkLtrOfCredit;
            this.genAmortSched = genAmortSched;
            this.lRASchedExists = lRASchedExists;
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipInvoiceLine = ipInvoiceLine;
            this.cARLOCID = cARLOCID;
            this.suppressUserPrompts = suppressUserPrompts;
            this.dTotalCharges = dTotalCharges;
            this.lGetDefaultAccount = lGetDefaultAccount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMasterResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool genAmortSched;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal grpTotalInvAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string opGenMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string opLtrCrdMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public bool lUpdateRan;
        
        public UpdateMasterResponse() {
        }
        
        public UpdateMasterResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, bool genAmortSched, decimal grpTotalInvAmt, string opGenMessage, string opLtrCrdMsg, bool lUpdateRan) {
            this.ds = ds;
            this.genAmortSched = genAmortSched;
            this.grpTotalInvAmt = grpTotalInvAmt;
            this.opGenMessage = opGenMessage;
            this.opLtrCrdMsg = opLtrCrdMsg;
            this.lUpdateRan = lUpdateRan;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMasterUsingPasteInsert", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateMasterUsingPasteInsertRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string cGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string cTableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public bool runCheckAmortSched;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public bool runChkLtrOfCredit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public bool genAmortSched;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=6)]
        public bool lRASchedExists;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=7)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=8)]
        public int ipInvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=9)]
        public string cARLOCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=10)]
        public bool suppressUserPrompts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=11)]
        public decimal dTotalCharges;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=12)]
        public bool lGetDefaultAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=13)]
        public string pasteInsertColumnsToValidate;
        
        public UpdateMasterUsingPasteInsertRequest() {
        }
        
        public UpdateMasterUsingPasteInsertRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, string cGroupID, string cTableName, bool runCheckAmortSched, bool runChkLtrOfCredit, bool genAmortSched, bool lRASchedExists, int ipInvoiceNum, int ipInvoiceLine, string cARLOCID, bool suppressUserPrompts, decimal dTotalCharges, bool lGetDefaultAccount, string pasteInsertColumnsToValidate) {
            this.ds = ds;
            this.cGroupID = cGroupID;
            this.cTableName = cTableName;
            this.runCheckAmortSched = runCheckAmortSched;
            this.runChkLtrOfCredit = runChkLtrOfCredit;
            this.genAmortSched = genAmortSched;
            this.lRASchedExists = lRASchedExists;
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipInvoiceLine = ipInvoiceLine;
            this.cARLOCID = cARLOCID;
            this.suppressUserPrompts = suppressUserPrompts;
            this.dTotalCharges = dTotalCharges;
            this.lGetDefaultAccount = lGetDefaultAccount;
            this.pasteInsertColumnsToValidate = pasteInsertColumnsToValidate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMasterUsingPasteInsertResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateMasterUsingPasteInsertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool genAmortSched;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal grpTotalInvAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string opGenMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string opLtrCrdMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public bool lUpdateRan;
        
        public UpdateMasterUsingPasteInsertResponse() {
        }
        
        public UpdateMasterUsingPasteInsertResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, bool genAmortSched, decimal grpTotalInvAmt, string opGenMessage, string opLtrCrdMsg, bool lUpdateRan) {
            this.ds = ds;
            this.genAmortSched = genAmortSched;
            this.grpTotalInvAmt = grpTotalInvAmt;
            this.opGenMessage = opGenMessage;
            this.opLtrCrdMsg = opLtrCrdMsg;
            this.lUpdateRan = lUpdateRan;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateofPaySched", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateofPaySchedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds;
        
        public UpdateofPaySchedRequest() {
        }
        
        public UpdateofPaySchedRequest(int InvoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateofPaySchedResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateofPaySchedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds;
        
        public UpdateofPaySchedResponse() {
        }
        
        public UpdateofPaySchedResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePEInvcTax", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdatePEInvcTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int ipInvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string ipTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string ipMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds;
        
        public UpdatePEInvcTaxRequest() {
        }
        
        public UpdatePEInvcTaxRequest(string ipGroupID, int ipInvoiceNum, int ipInvoiceLine, string ipTaxCode, string ipMode, EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds) {
            this.ipGroupID = ipGroupID;
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipInvoiceLine = ipInvoiceLine;
            this.ipTaxCode = ipTaxCode;
            this.ipMode = ipMode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePEInvcTaxResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdatePEInvcTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds;
        
        public UpdatePEInvcTaxResponse() {
        }
        
        public UpdatePEInvcTaxResponse(EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePEInvcTaxSummary", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdatePEInvcTaxSummaryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string ipTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string ipRateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds;
        
        public UpdatePEInvcTaxSummaryRequest() {
        }
        
        public UpdatePEInvcTaxSummaryRequest(string ipGroupID, int ipInvoiceNum, string ipTaxCode, string ipRateCode, EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds) {
            this.ipGroupID = ipGroupID;
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipTaxCode = ipTaxCode;
            this.ipRateCode = ipRateCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePEInvcTaxSummaryResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdatePEInvcTaxSummaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds;
        
        public UpdatePEInvcTaxSummaryResponse() {
        }
        
        public UpdatePEInvcTaxSummaryResponse(EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofIsRevision", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofIsRevisionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool newIsRevision;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofIsRevisionRequest() {
        }
        
        public OnChangeofIsRevisionRequest(bool newIsRevision, int InvoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.newIsRevision = newIsRevision;
            this.InvoiceNum = InvoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofIsRevisionResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofIsRevisionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofIsRevisionResponse() {
        }
        
        public OnChangeofIsRevisionResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfImmaterialAdjustment", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfImmaterialAdjustmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool newIsImmatAdjustment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfImmaterialAdjustmentRequest() {
        }
        
        public OnChangeOfImmaterialAdjustmentRequest(bool newIsImmatAdjustment, int invoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.newIsImmatAdjustment = newIsImmatAdjustment;
            this.invoiceNum = invoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfImmaterialAdjustmentResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfImmaterialAdjustmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfImmaterialAdjustmentResponse() {
        }
        
        public OnChangeOfImmaterialAdjustmentResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckVATFormat", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckVATFormatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public CheckVATFormatRequest() {
        }
        
        public CheckVATFormatRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckVATFormatResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckVATFormatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string opMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public CheckVATFormatResponse() {
        }
        
        public CheckVATFormatResponse(string opMessage, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.opMessage = opMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateRebateInv", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GenerateRebateInvRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string invoiceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string groupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public System.Nullable<System.DateTime> vExDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public int vUseDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public string pCurrList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=6)]
        public string pRateList;
        
        public GenerateRebateInvRequest() {
        }
        
        public GenerateRebateInvRequest(string invoiceType, string groupID, EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTableset ds, System.Nullable<System.DateTime> vExDate, int vUseDate, string pCurrList, string pRateList) {
            this.invoiceType = invoiceType;
            this.groupID = groupID;
            this.ds = ds;
            this.vExDate = vExDate;
            this.vUseDate = vUseDate;
            this.pCurrList = pCurrList;
            this.pRateList = pRateList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateRebateInvResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GenerateRebateInvResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string opMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> vExDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int vUseDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string pCurrList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string pRateList;
        
        public GenerateRebateInvResponse() {
        }
        
        public GenerateRebateInvResponse(string opMsg, System.Nullable<System.DateTime> vExDate, int vUseDate, string pCurrList, string pRateList) {
            this.opMsg = opMsg;
            this.vExDate = vExDate;
            this.vUseDate = vUseDate;
            this.pCurrList = pCurrList;
            this.pRateList = pRateList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDueDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeDueDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string newDueDateStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeDueDateRequest() {
        }
        
        public OnChangeDueDateRequest(int invoiceNum, string newDueDateStr, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.newDueDateStr = newDueDateStr;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDueDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeDueDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeDueDateResponse() {
        }
        
        public OnChangeDueDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCycleCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeCycleCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string pCycleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeCycleCodeRequest() {
        }
        
        public OnChangeCycleCodeRequest(int InvoiceNum, string pCycleCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.pCycleCode = pCycleCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCycleCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeCycleCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeCycleCodeResponse() {
        }
        
        public OnChangeCycleCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRecurring", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeRecurringRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool pRecurring;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeRecurringRequest() {
        }
        
        public OnChangeRecurringRequest(int InvoiceNum, bool pRecurring, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.pRecurring = pRecurring;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRecurringResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeRecurringResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeRecurringResponse() {
        }
        
        public OnChangeRecurringResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecurringInvoices", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRecurringInvoicesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string groupId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string custList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string cycleCodeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public int firstDayOfWeek;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string selectedList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public bool billToFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=6)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetRecurringInvoicesRequest() {
        }
        
        public GetRecurringInvoicesRequest(string groupId, string custList, string cycleCodeList, int firstDayOfWeek, string selectedList, bool billToFlag, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.groupId = groupId;
            this.custList = custList;
            this.cycleCodeList = cycleCodeList;
            this.firstDayOfWeek = firstDayOfWeek;
            this.selectedList = selectedList;
            this.billToFlag = billToFlag;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecurringInvoicesResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRecurringInvoicesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string invoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string msgNumInvoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string msgLOCErrors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public decimal grpTotalInvAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetRecurringInvoicesResponse() {
        }
        
        public GetRecurringInvoicesResponse(string invoices, string errors, string msgNumInvoices, string msgLOCErrors, decimal grpTotalInvAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoices = invoices;
            this.errors = errors;
            this.msgNumInvoices = msgNumInvoices;
            this.msgLOCErrors = msgLOCErrors;
            this.grpTotalInvAmt = grpTotalInvAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvcRecurr", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetInvcRecurrRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.RecurringInvTableset ds;
        
        public GetInvcRecurrRequest() {
        }
        
        public GetInvcRecurrRequest(int invoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.RecurringInvTableset ds) {
            this.invoiceNum = invoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvcRecurrResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetInvcRecurrResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.RecurringInvTableset ds;
        
        public GetInvcRecurrResponse() {
        }
        
        public GetInvcRecurrResponse(EpicorConsole.Epicor.ARInvoiceSvc.RecurringInvTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPrepDeposit", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPrepDepositRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal dspPrepDeposit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPrepDepositRequest() {
        }
        
        public OnChangeofPrepDepositRequest(int ipInvoiceNum, decimal dspPrepDeposit, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.dspPrepDeposit = dspPrepDeposit;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPrepDepositResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPrepDepositResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPrepDepositResponse() {
        }
        
        public OnChangeofPrepDepositResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckISRCodeDefinition", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckISRCodeDefinitionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int iInvoiceNum;
        
        public CheckISRCodeDefinitionRequest() {
        }
        
        public CheckISRCodeDefinitionRequest(int iInvoiceNum) {
            this.iInvoiceNum = iInvoiceNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckISRCodeDefinitionResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckISRCodeDefinitionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool CheckISRCodeDefinitionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string outMsg;
        
        public CheckISRCodeDefinitionResponse() {
        }
        
        public CheckISRCodeDefinitionResponse(bool CheckISRCodeDefinitionResult, string outMsg) {
            this.CheckISRCodeDefinitionResult = CheckISRCodeDefinitionResult;
            this.outMsg = outMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMYIndustryCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class ChangeMYIndustryCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipInvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public ChangeMYIndustryCodeRequest() {
        }
        
        public ChangeMYIndustryCodeRequest(int ipInvoiceNum, int ipInvoiceLine, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipInvoiceLine = ipInvoiceLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMYIndustryCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class ChangeMYIndustryCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public ChangeMYIndustryCodeResponse() {
        }
        
        public ChangeMYIndustryCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCommodityCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckCommodityCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool ipWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string ipGroupID;
        
        public CheckCommodityCodeRequest() {
        }
        
        public CheckCommodityCodeRequest(bool ipWarning, string ipGroupID) {
            this.ipWarning = ipWarning;
            this.ipGroupID = ipGroupID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCommodityCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckCommodityCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool CheckCommodityCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string outMsg;
        
        public CheckCommodityCodeResponse() {
        }
        
        public CheckCommodityCodeResponse(bool CheckCommodityCodeResult, string outMsg) {
            this.CheckCommodityCodeResult = CheckCommodityCodeResult;
            this.outMsg = outMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateInvcHeadTransferList", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class PopulateInvcHeadTransferListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds;
        
        public PopulateInvcHeadTransferListRequest() {
        }
        
        public PopulateInvcHeadTransferListRequest(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateInvcHeadTransferListResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class PopulateInvcHeadTransferListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds;
        
        public PopulateInvcHeadTransferListResponse() {
        }
        
        public PopulateInvcHeadTransferListResponse(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferSelectedInvoices", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class TransferSelectedInvoicesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string sTransferGroup;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds;
        
        public TransferSelectedInvoicesRequest() {
        }
        
        public TransferSelectedInvoicesRequest(string sTransferGroup, EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds) {
            this.sTransferGroup = sTransferGroup;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferSelectedInvoicesResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class TransferSelectedInvoicesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal grpTotalInvAmt;
        
        public TransferSelectedInvoicesResponse() {
        }
        
        public TransferSelectedInvoicesResponse(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds, decimal grpTotalInvAmt) {
            this.ds = ds;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcHead", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcHeadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcHeadRequest() {
        }
        
        public GetNewInvcHeadRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcHeadResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcHeadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcHeadResponse() {
        }
        
        public GetNewInvcHeadResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcHeadAttch", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcHeadAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        public GetNewInvcHeadAttchRequest() {
        }
        
        public GetNewInvcHeadAttchRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum) {
            this.ds = ds;
            this.invoiceNum = invoiceNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcHeadAttchResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcHeadAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcHeadAttchResponse() {
        }
        
        public GetNewInvcHeadAttchResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcDtl", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        public GetNewInvcDtlRequest() {
        }
        
        public GetNewInvcDtlRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum) {
            this.ds = ds;
            this.invoiceNum = invoiceNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcDtlResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcDtlResponse() {
        }
        
        public GetNewInvcDtlResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcDtlAttch", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcDtlAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int invoiceLine;
        
        public GetNewInvcDtlAttchRequest() {
        }
        
        public GetNewInvcDtlAttchRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            this.ds = ds;
            this.invoiceNum = invoiceNum;
            this.invoiceLine = invoiceLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcDtlAttchResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcDtlAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcDtlAttchResponse() {
        }
        
        public GetNewInvcDtlAttchResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcChrg", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcChrgRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int invoiceLine;
        
        public GetNewInvcChrgRequest() {
        }
        
        public GetNewInvcChrgRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            this.ds = ds;
            this.invoiceNum = invoiceNum;
            this.invoiceLine = invoiceLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcChrgResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcChrgResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcChrgResponse() {
        }
        
        public GetNewInvcChrgResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcDtlRASch", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcDtlRASchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int invoiceLine;
        
        public GetNewInvcDtlRASchRequest() {
        }
        
        public GetNewInvcDtlRASchRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            this.ds = ds;
            this.invoiceNum = invoiceNum;
            this.invoiceLine = invoiceLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcDtlRASchResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcDtlRASchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcDtlRASchResponse() {
        }
        
        public GetNewInvcDtlRASchResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcMisc", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcMiscRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int invoiceLine;
        
        public GetNewInvcMiscRequest() {
        }
        
        public GetNewInvcMiscRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            this.ds = ds;
            this.invoiceNum = invoiceNum;
            this.invoiceLine = invoiceLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcMiscResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcMiscResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcMiscResponse() {
        }
        
        public GetNewInvcMiscResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcTax", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int invoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string rateCode;
        
        public GetNewInvcTaxRequest() {
        }
        
        public GetNewInvcTaxRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine, string taxCode, string rateCode) {
            this.ds = ds;
            this.invoiceNum = invoiceNum;
            this.invoiceLine = invoiceLine;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcTaxResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcTaxResponse() {
        }
        
        public GetNewInvcTaxResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcDtlTGLC", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcDtlTGLCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int invoiceLine;
        
        public GetNewInvcDtlTGLCRequest() {
        }
        
        public GetNewInvcDtlTGLCRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            this.ds = ds;
            this.invoiceNum = invoiceNum;
            this.invoiceLine = invoiceLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcDtlTGLCResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcDtlTGLCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcDtlTGLCResponse() {
        }
        
        public GetNewInvcDtlTGLCResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string whereClauseInvcHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string whereClauseInvcHeadAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string whereClauseAllocDeposit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string whereClauseInvcDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string whereClauseInvcDtlAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public string whereClauseInvcChrg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=6)]
        public string whereClauseInvcDeferredRev;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=7)]
        public string whereClauseInvcDtlRASch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=8)]
        public string whereClauseInvcMisc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=9)]
        public string whereClauseInvcTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=10)]
        public string whereClauseInvcDtlTGLC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=11)]
        public string whereClauseHedTaxSum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=12)]
        public string whereClauseTaxConnectStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=13)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=14)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(string whereClauseInvcHead, string whereClauseInvcHeadAttch, string whereClauseAllocDeposit, string whereClauseInvcDtl, string whereClauseInvcDtlAttch, string whereClauseInvcChrg, string whereClauseInvcDeferredRev, string whereClauseInvcDtlRASch, string whereClauseInvcMisc, string whereClauseInvcTax, string whereClauseInvcDtlTGLC, string whereClauseHedTaxSum, string whereClauseTaxConnectStatus, int pageSize, int absolutePage) {
            this.whereClauseInvcHead = whereClauseInvcHead;
            this.whereClauseInvcHeadAttch = whereClauseInvcHeadAttch;
            this.whereClauseAllocDeposit = whereClauseAllocDeposit;
            this.whereClauseInvcDtl = whereClauseInvcDtl;
            this.whereClauseInvcDtlAttch = whereClauseInvcDtlAttch;
            this.whereClauseInvcChrg = whereClauseInvcChrg;
            this.whereClauseInvcDeferredRev = whereClauseInvcDeferredRev;
            this.whereClauseInvcDtlRASch = whereClauseInvcDtlRASch;
            this.whereClauseInvcMisc = whereClauseInvcMisc;
            this.whereClauseInvcTax = whereClauseInvcTax;
            this.whereClauseInvcDtlTGLC = whereClauseInvcDtlTGLC;
            this.whereClauseHedTaxSum = whereClauseHedTaxSum;
            this.whereClauseTaxConnectStatus = whereClauseTaxConnectStatus;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.UpdExtARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(EpicorConsole.Epicor.ARInvoiceSvc.UpdExtARInvoiceTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.UpdExtARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(EpicorConsole.Epicor.ARInvoiceSvc.BOUpdErrorTableset UpdateExtResult, EpicorConsole.Epicor.ARInvoiceSvc.UpdExtARInvoiceTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssignLegalNumber", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class AssignLegalNumberRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTableset ds;
        
        public AssignLegalNumberRequest() {
        }
        
        public AssignLegalNumberRequest(int ipInvoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssignLegalNumberResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class AssignLegalNumberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset AssignLegalNumberResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string opLegalNumMsg;
        
        public AssignLegalNumberResponse() {
        }
        
        public AssignLegalNumberResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset AssignLegalNumberResult, EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTableset ds, string opLegalNumMsg) {
            this.AssignLegalNumberResult = AssignLegalNumberResult;
            this.ds = ds;
            this.opLegalNumMsg = opLegalNumMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateCOIFRS_PV", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CalculateCOIFRS_PVRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public CalculateCOIFRS_PVRequest() {
        }
        
        public CalculateCOIFRS_PVRequest(int invoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateCOIFRS_PVResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CalculateCOIFRS_PVResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public CalculateCOIFRS_PVResponse() {
        }
        
        public CalculateCOIFRS_PVResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update_ttInvcHead", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class Update_ttInvcHeadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public Update_ttInvcHeadRequest() {
        }
        
        public Update_ttInvcHeadRequest(int invoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update_ttInvcHeadResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class Update_ttInvcHeadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public Update_ttInvcHeadResponse() {
        }
        
        public Update_ttInvcHeadResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeIncomeTaxCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class ChangeIncomeTaxCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipIncomeTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public ChangeIncomeTaxCodeRequest() {
        }
        
        public ChangeIncomeTaxCodeRequest(string ipIncomeTaxCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipIncomeTaxCode = ipIncomeTaxCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeIncomeTaxCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class ChangeIncomeTaxCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public ChangeIncomeTaxCodeResponse() {
        }
        
        public ChangeIncomeTaxCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckAmortSchedules", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckAmortSchedulesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public CheckAmortSchedulesRequest() {
        }
        
        public CheckAmortSchedulesRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckAmortSchedulesResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckAmortSchedulesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string opGenMessage;
        
        public CheckAmortSchedulesResponse() {
        }
        
        public CheckAmortSchedulesResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, string opGenMessage) {
            this.ds = ds;
            this.opGenMessage = opGenMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckGroupIsLocked", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckGroupIsLockedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string keyValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool showError;
        
        public CheckGroupIsLockedRequest() {
        }
        
        public CheckGroupIsLockedRequest(string keyValue, bool showError) {
            this.keyValue = keyValue;
            this.showError = showError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckGroupIsLockedResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckGroupIsLockedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool isLocked;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string lockedStatus;
        
        public CheckGroupIsLockedResponse() {
        }
        
        public CheckGroupIsLockedResponse(bool isLocked, string lockedStatus) {
            this.isLocked = isLocked;
            this.lockedStatus = lockedStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLtrOfCredit", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckLtrOfCreditRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int iInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string cARLOCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal dTotalCharges;
        
        public CheckLtrOfCreditRequest() {
        }
        
        public CheckLtrOfCreditRequest(int iInvoiceNum, string cARLOCID, decimal dTotalCharges) {
            this.iInvoiceNum = iInvoiceNum;
            this.cARLOCID = cARLOCID;
            this.dTotalCharges = dTotalCharges;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLtrOfCreditResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CheckLtrOfCreditResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset CheckLtrOfCreditResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string outMsg;
        
        public CheckLtrOfCreditResponse() {
        }
        
        public CheckLtrOfCreditResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset CheckLtrOfCreditResult, string outMsg) {
            this.CheckLtrOfCreditResult = CheckLtrOfCreditResult;
            this.outMsg = outMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CopyInvoiceLines", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CopyInvoiceLinesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int sourceInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int destInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool recalculateTaxes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public bool reverseSignQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ARInvoiceDS;
        
        public CopyInvoiceLinesRequest() {
        }
        
        public CopyInvoiceLinesRequest(int sourceInvoiceNum, int destInvoiceNum, bool recalculateTaxes, bool reverseSignQty, EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTableset ds, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ARInvoiceDS) {
            this.sourceInvoiceNum = sourceInvoiceNum;
            this.destInvoiceNum = destInvoiceNum;
            this.recalculateTaxes = recalculateTaxes;
            this.reverseSignQty = reverseSignQty;
            this.ds = ds;
            this.ARInvoiceDS = ARInvoiceDS;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CopyInvoiceLinesResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CopyInvoiceLinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ARInvoiceDS;
        
        public CopyInvoiceLinesResponse() {
        }
        
        public CopyInvoiceLinesResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ARInvoiceDS) {
            this.ARInvoiceDS = ARInvoiceDS;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCorrectionInvoice", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CreateCorrectionInvoiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string groupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int sourceInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public System.Nullable<System.DateTime> newInvoiceDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string newDocType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public bool recalculateTaxes;
        
        public CreateCorrectionInvoiceRequest() {
        }
        
        public CreateCorrectionInvoiceRequest(string groupID, int sourceInvoiceNum, System.Nullable<System.DateTime> newInvoiceDate, string newDocType, bool recalculateTaxes) {
            this.groupID = groupID;
            this.sourceInvoiceNum = sourceInvoiceNum;
            this.newInvoiceDate = newInvoiceDate;
            this.newDocType = newDocType;
            this.recalculateTaxes = recalculateTaxes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCorrectionInvoiceResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CreateCorrectionInvoiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset CreateCorrectionInvoiceResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int opNewInvoiceNum;
        
        public CreateCorrectionInvoiceResponse() {
        }
        
        public CreateCorrectionInvoiceResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset CreateCorrectionInvoiceResult, int opNewInvoiceNum) {
            this.CreateCorrectionInvoiceResult = CreateCorrectionInvoiceResult;
            this.opNewInvoiceNum = opNewInvoiceNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInvFromDep", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CreateInvFromDepRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string groupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string payments;
        
        public CreateInvFromDepRequest() {
        }
        
        public CreateInvFromDepRequest(string groupID, string payments) {
            this.groupID = groupID;
            this.payments = payments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInvFromDepResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CreateInvFromDepResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string invoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string msgNumInvoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public decimal grpTotalInvAmt;
        
        public CreateInvFromDepResponse() {
        }
        
        public CreateInvFromDepResponse(string invoices, string errors, string msgNumInvoices, decimal grpTotalInvAmt) {
            this.invoices = invoices;
            this.errors = errors;
            this.msgNumInvoices = msgNumInvoices;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CurrSymbolByInvcNum", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CurrSymbolByInvcNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        public CurrSymbolByInvcNumRequest() {
        }
        
        public CurrSymbolByInvcNumRequest(int invoiceNum) {
            this.invoiceNum = invoiceNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CurrSymbolByInvcNumResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class CurrSymbolByInvcNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string vCurrCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string vCurrSymbol;
        
        public CurrSymbolByInvcNumResponse() {
        }
        
        public CurrSymbolByInvcNumResponse(string vCurrCode, string vCurrSymbol) {
            this.vCurrCode = vCurrCode;
            this.vCurrSymbol = vCurrSymbol;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAmortizationSchedule", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class DeleteAmortizationScheduleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool ipResetDefRevFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public DeleteAmortizationScheduleRequest() {
        }
        
        public DeleteAmortizationScheduleRequest(bool ipResetDefRevFlag, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipResetDefRevFlag = ipResetDefRevFlag;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAmortizationScheduleResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class DeleteAmortizationScheduleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public DeleteAmortizationScheduleResponse() {
        }
        
        public DeleteAmortizationScheduleResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMaster", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class DeleteMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string cGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string keyValue;
        
        public DeleteMasterRequest() {
        }
        
        public DeleteMasterRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, string cGroupID, string keyValue) {
            this.ds = ds;
            this.cGroupID = cGroupID;
            this.keyValue = keyValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMasterResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class DeleteMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal grpTotalInvAmt;
        
        public DeleteMasterResponse() {
        }
        
        public DeleteMasterResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, decimal grpTotalInvAmt) {
            this.ds = ds;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableARDates", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class EnableARDatesRequest {
        
        public EnableARDatesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableARDatesResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class EnableARDatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool EnApplyDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool EnShipDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool EnTaxPDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public bool EnTaxRDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public bool EnCurrRDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public bool EnTaxRCDate;
        
        public EnableARDatesResponse() {
        }
        
        public EnableARDatesResponse(bool EnApplyDate, bool EnShipDate, bool EnTaxPDate, bool EnTaxRDate, bool EnCurrRDate, bool EnTaxRCDate) {
            this.EnApplyDate = EnApplyDate;
            this.EnShipDate = EnShipDate;
            this.EnTaxPDate = EnTaxPDate;
            this.EnTaxRDate = EnTaxRDate;
            this.EnCurrRDate = EnCurrRDate;
            this.EnTaxRCDate = EnTaxRCDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ETCValidateAddress", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class ETCValidateAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        public ETCValidateAddressRequest() {
        }
        
        public ETCValidateAddressRequest(int InvoiceNum, int InvoiceLine) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ETCValidateAddressResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class ETCValidateAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ETCAddrValidationTableset ETCValidateAddressResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool StatusFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool ErrorFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string ErrorMsg;
        
        public ETCValidateAddressResponse() {
        }
        
        public ETCValidateAddressResponse(EpicorConsole.Epicor.ARInvoiceSvc.ETCAddrValidationTableset ETCValidateAddressResult, bool StatusFlag, bool ErrorFlag, string ErrorMsg) {
            this.ETCValidateAddressResult = ETCValidateAddressResult;
            this.StatusFlag = StatusFlag;
            this.ErrorFlag = ErrorFlag;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateAmortizationSchedule", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GenerateAmortizationScheduleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GenerateAmortizationScheduleRequest() {
        }
        
        public GenerateAmortizationScheduleRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateAmortizationScheduleResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GenerateAmortizationScheduleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GenerateAmortizationScheduleResponse() {
        }
        
        public GenerateAmortizationScheduleResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAvailNOEInvoiceTranDocTypes", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetAvailNOEInvoiceTranDocTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool ipEInvoice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string ipSysTranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool ipCreditMemo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string ipBTCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string ipInvType;
        
        public GetAvailNOEInvoiceTranDocTypesRequest() {
        }
        
        public GetAvailNOEInvoiceTranDocTypesRequest(bool ipEInvoice, string ipSysTranType, bool ipCreditMemo, string ipBTCustID, string ipInvType) {
            this.ipEInvoice = ipEInvoice;
            this.ipSysTranType = ipSysTranType;
            this.ipCreditMemo = ipCreditMemo;
            this.ipBTCustID = ipBTCustID;
            this.ipInvType = ipInvType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAvailNOEInvoiceTranDocTypesResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetAvailNOEInvoiceTranDocTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string opListAvailTranDocTypes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string opDefTranDocType;
        
        public GetAvailNOEInvoiceTranDocTypesResponse() {
        }
        
        public GetAvailNOEInvoiceTranDocTypesResponse(string opListAvailTranDocTypes, string opDefTranDocType) {
            this.opListAvailTranDocTypes = opListAvailTranDocTypes;
            this.opDefTranDocType = opDefTranDocType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultAccount", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetDefaultAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string groupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int invoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetDefaultAccountRequest() {
        }
        
        public GetDefaultAccountRequest(string groupID, int invoiceNum, int invoiceLine, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.groupID = groupID;
            this.invoiceNum = invoiceNum;
            this.invoiceLine = invoiceLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultAccountResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetDefaultAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetDefaultAccountResponse() {
        }
        
        public GetDefaultAccountResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDropShipments", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetDropShipmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string CustList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string Plant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public bool BillToFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public bool consolidatePS;
        
        public GetDropShipmentsRequest() {
        }
        
        public GetDropShipmentsRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds, string GroupID, string CustList, string Plant, bool BillToFlag, bool consolidatePS) {
            this.ds = ds;
            this.GroupID = GroupID;
            this.CustList = CustList;
            this.Plant = Plant;
            this.BillToFlag = BillToFlag;
            this.consolidatePS = consolidatePS;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDropShipmentsResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetDropShipmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string Invoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string msgNumInvoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public decimal grpTotalInvAmt;
        
        public GetDropShipmentsResponse() {
        }
        
        public GetDropShipmentsResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds, string Invoices, string Errors, string msgNumInvoices, decimal grpTotalInvAmt) {
            this.ds = ds;
            this.Invoices = Invoices;
            this.Errors = Errors;
            this.msgNumInvoices = msgNumInvoices;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFSCalls", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetFSCallsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string CustList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string Plant;
        
        public GetFSCallsRequest() {
        }
        
        public GetFSCallsRequest(string GroupID, string CustList, string Plant) {
            this.GroupID = GroupID;
            this.CustList = CustList;
            this.Plant = Plant;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFSCallsResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetFSCallsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int NumInvs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal grpTotalInvAmt;
        
        public GetFSCallsResponse() {
        }
        
        public GetFSCallsResponse(int NumInvs, decimal grpTotalInvAmt) {
            this.NumInvs = NumInvs;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLegalNumGenOpts", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetLegalNumGenOptsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        public GetLegalNumGenOptsRequest() {
        }
        
        public GetLegalNumGenOptsRequest(int ipInvoiceNum) {
            this.ipInvoiceNum = ipInvoiceNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLegalNumGenOptsResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetLegalNumGenOptsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTableset GetLegalNumGenOptsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool opPromptForNum;
        
        public GetLegalNumGenOptsResponse() {
        }
        
        public GetLegalNumGenOptsResponse(EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTableset GetLegalNumGenOptsResult, bool opPromptForNum) {
            this.GetLegalNumGenOptsResult = GetLegalNumGenOptsResult;
            this.opPromptForNum = opPromptForNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMilestoneBilling", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetMilestoneBillingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string custList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string selectedItems_Key1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string selectedItems;
        
        public GetMilestoneBillingRequest() {
        }
        
        public GetMilestoneBillingRequest(string GroupID, string custList, string selectedItems_Key1, string selectedItems) {
            this.GroupID = GroupID;
            this.custList = custList;
            this.selectedItems_Key1 = selectedItems_Key1;
            this.selectedItems = selectedItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMilestoneBillingResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetMilestoneBillingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool InvoicesCreated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string msgNumInvoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal grpTotalInvAmt;
        
        public GetMilestoneBillingResponse() {
        }
        
        public GetMilestoneBillingResponse(bool InvoicesCreated, string msgNumInvoices, decimal grpTotalInvAmt) {
            this.InvoicesCreated = InvoicesCreated;
            this.msgNumInvoices = msgNumInvoices;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewDepositType", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewDepositTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string DepositBillType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewDepositTypeRequest() {
        }
        
        public GetNewDepositTypeRequest(string GroupID, string DepositBillType, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.GroupID = GroupID;
            this.DepositBillType = DepositBillType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewDepositTypeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewDepositTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewDepositTypeResponse() {
        }
        
        public GetNewDepositTypeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvoiceManual", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvoiceManualRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string InvoiceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvoiceManualRequest() {
        }
        
        public GetNewInvoiceManualRequest(string GroupID, int InvoiceNum, string InvoiceType, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.GroupID = GroupID;
            this.InvoiceNum = InvoiceNum;
            this.InvoiceType = InvoiceType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvoiceManualResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvoiceManualResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvoiceManualResponse() {
        }
        
        public GetNewInvoiceManualResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcHeadBOE", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcHeadBOERequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string inGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcHeadBOERequest() {
        }
        
        public GetNewInvcHeadBOERequest(string inGroupID, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.inGroupID = inGroupID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcHeadBOEResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcHeadBOEResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcHeadBOEResponse() {
        }
        
        public GetNewInvcHeadBOEResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcHeadType", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcHeadTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string InvoiceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcHeadTypeRequest() {
        }
        
        public GetNewInvcHeadTypeRequest(string GroupID, string InvoiceType, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.GroupID = GroupID;
            this.InvoiceType = InvoiceType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewInvcHeadTypeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetNewInvcHeadTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetNewInvcHeadTypeResponse() {
        }
        
        public GetNewInvcHeadTypeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPaymentDataForViewing", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetPaymentDataForViewingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetPaymentDataForViewingRequest() {
        }
        
        public GetPaymentDataForViewingRequest(int InvoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPaymentDataForViewingResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetPaymentDataForViewingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset GetPaymentDataForViewingResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public GetPaymentDataForViewingResponse() {
        }
        
        public GetPaymentDataForViewingResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset GetPaymentDataForViewingResult, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.GetPaymentDataForViewingResult = GetPaymentDataForViewingResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPBInvoices", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetPBInvoicesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string ipPrjList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string ipInvTypes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public bool filterByProject;
        
        public GetPBInvoicesRequest() {
        }
        
        public GetPBInvoicesRequest(string ipGroupID, string ipPrjList, string ipInvTypes, bool filterByProject) {
            this.ipGroupID = ipGroupID;
            this.ipPrjList = ipPrjList;
            this.ipInvTypes = ipInvTypes;
            this.filterByProject = filterByProject;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPBInvoicesResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetPBInvoicesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string opInvcList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string opErrorList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string msgNumInvoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public decimal grpTotalInvAmt;
        
        public GetPBInvoicesResponse() {
        }
        
        public GetPBInvoicesResponse(string opInvcList, string opErrorList, string msgNumInvoices, decimal grpTotalInvAmt) {
            this.opInvcList = opInvcList;
            this.opErrorList = opErrorList;
            this.msgNumInvoices = msgNumInvoices;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecurBill", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRecurBillRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string CustList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string contractList;
        
        public GetRecurBillRequest() {
        }
        
        public GetRecurBillRequest(string GroupID, string CustList, string contractList) {
            this.GroupID = GroupID;
            this.CustList = CustList;
            this.contractList = contractList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecurBillResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRecurBillResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool InvoicesCreated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string msgNumInvoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal grpTotalInvAmt;
        
        public GetRecurBillResponse() {
        }
        
        public GetRecurBillResponse(bool InvoicesCreated, string msgNumInvoices, decimal grpTotalInvAmt) {
            this.InvoicesCreated = InvoicesCreated;
            this.msgNumInvoices = msgNumInvoices;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRMACredits", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRMACreditsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string custList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string invList;
        
        public GetRMACreditsRequest() {
        }
        
        public GetRMACreditsRequest(string GroupID, string custList, string invList) {
            this.GroupID = GroupID;
            this.custList = custList;
            this.invList = invList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRMACreditsResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRMACreditsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string rMAMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool InvoicesCreated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal grpTotalInvAmt;
        
        public GetRMACreditsResponse() {
        }
        
        public GetRMACreditsResponse(string rMAMessage, bool InvoicesCreated, decimal grpTotalInvAmt) {
            this.rMAMessage = rMAMessage;
            this.InvoicesCreated = InvoicesCreated;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsContactTracker", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRowsContactTrackerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string whereClauseInvcHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string whereClauseInvcHeadAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string whereClauseInvcDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string whereClauseInvcDtlAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string whereClauseInvcMisc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public string whereClauseInvcTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=6)]
        public string whereClauseARIHeadTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=7)]
        public string contactName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=8)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=9)]
        public int absolutePage;
        
        public GetRowsContactTrackerRequest() {
        }
        
        public GetRowsContactTrackerRequest(string whereClauseInvcHead, string whereClauseInvcHeadAttch, string whereClauseInvcDtl, string whereClauseInvcDtlAttch, string whereClauseInvcMisc, string whereClauseInvcTax, string whereClauseARIHeadTax, string contactName, int pageSize, int absolutePage) {
            this.whereClauseInvcHead = whereClauseInvcHead;
            this.whereClauseInvcHeadAttch = whereClauseInvcHeadAttch;
            this.whereClauseInvcDtl = whereClauseInvcDtl;
            this.whereClauseInvcDtlAttch = whereClauseInvcDtlAttch;
            this.whereClauseInvcMisc = whereClauseInvcMisc;
            this.whereClauseInvcTax = whereClauseInvcTax;
            this.whereClauseARIHeadTax = whereClauseARIHeadTax;
            this.contactName = contactName;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsContactTrackerResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRowsContactTrackerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkTableset GetRowsContactTrackerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool morePages;
        
        public GetRowsContactTrackerResponse() {
        }
        
        public GetRowsContactTrackerResponse(EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkTableset GetRowsContactTrackerResult, bool morePages) {
            this.GetRowsContactTrackerResult = GetRowsContactTrackerResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCustomerTracker", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRowsCustomerTrackerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string whereClauseInvcHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string whereClauseInvcHeadAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string whereClauseInvcDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string whereClauseInvcDtlAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public string whereClauseInvcMisc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public string whereClauseInvcTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=6)]
        public string whereClauseARIHeadTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=7)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=8)]
        public int absolutePage;
        
        public GetRowsCustomerTrackerRequest() {
        }
        
        public GetRowsCustomerTrackerRequest(string whereClauseInvcHead, string whereClauseInvcHeadAttch, string whereClauseInvcDtl, string whereClauseInvcDtlAttch, string whereClauseInvcMisc, string whereClauseInvcTax, string whereClauseARIHeadTax, int pageSize, int absolutePage) {
            this.whereClauseInvcHead = whereClauseInvcHead;
            this.whereClauseInvcHeadAttch = whereClauseInvcHeadAttch;
            this.whereClauseInvcDtl = whereClauseInvcDtl;
            this.whereClauseInvcDtlAttch = whereClauseInvcDtlAttch;
            this.whereClauseInvcMisc = whereClauseInvcMisc;
            this.whereClauseInvcTax = whereClauseInvcTax;
            this.whereClauseARIHeadTax = whereClauseARIHeadTax;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCustomerTrackerResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetRowsCustomerTrackerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkTableset GetRowsCustomerTrackerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool morePages;
        
        public GetRowsCustomerTrackerResponse() {
        }
        
        public GetRowsCustomerTrackerResponse(EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkTableset GetRowsCustomerTrackerResult, bool morePages) {
            this.GetRowsCustomerTrackerResult = GetRowsCustomerTrackerResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipmentsConsolidatedPS", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetShipmentsConsolidatedPSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string CustList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string PackSlips;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string Plant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public bool BillToFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public bool overBillDay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=6)]
        public bool consolidatePS;
        
        public GetShipmentsConsolidatedPSRequest() {
        }
        
        public GetShipmentsConsolidatedPSRequest(string GroupID, string CustList, string PackSlips, string Plant, bool BillToFlag, bool overBillDay, bool consolidatePS) {
            this.GroupID = GroupID;
            this.CustList = CustList;
            this.PackSlips = PackSlips;
            this.Plant = Plant;
            this.BillToFlag = BillToFlag;
            this.overBillDay = overBillDay;
            this.consolidatePS = consolidatePS;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipmentsConsolidatedPSResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetShipmentsConsolidatedPSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string Invoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string msgNumInvoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public decimal grpTotalInvAmt;
        
        public GetShipmentsConsolidatedPSResponse() {
        }
        
        public GetShipmentsConsolidatedPSResponse(string Invoices, string Errors, string msgNumInvoices, decimal grpTotalInvAmt) {
            this.Invoices = Invoices;
            this.Errors = Errors;
            this.msgNumInvoices = msgNumInvoices;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipments", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetShipmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string GroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string CustList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string PackSlips;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string Plant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public bool BillToFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public bool overBillDay;
        
        public GetShipmentsRequest() {
        }
        
        public GetShipmentsRequest(string GroupID, string CustList, string PackSlips, string Plant, bool BillToFlag, bool overBillDay) {
            this.GroupID = GroupID;
            this.CustList = CustList;
            this.PackSlips = PackSlips;
            this.Plant = Plant;
            this.BillToFlag = BillToFlag;
            this.overBillDay = overBillDay;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipmentsResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetShipmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string Invoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string msgNumInvoices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public decimal grpTotalInvAmt;
        
        public GetShipmentsResponse() {
        }
        
        public GetShipmentsResponse(string Invoices, string Errors, string msgNumInvoices, decimal grpTotalInvAmt) {
            this.Invoices = Invoices;
            this.Errors = Errors;
            this.msgNumInvoices = msgNumInvoices;
            this.grpTotalInvAmt = grpTotalInvAmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetvalidEAD", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetvalidEADRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string inTransType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string inDateLabel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public System.Nullable<System.DateTime> proposedDate;
        
        public GetvalidEADRequest() {
        }
        
        public GetvalidEADRequest(string inTransType, string inDateLabel, System.Nullable<System.DateTime> proposedDate) {
            this.inTransType = inTransType;
            this.inDateLabel = inDateLabel;
            this.proposedDate = proposedDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetvalidEADResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class GetvalidEADResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public System.Nullable<System.DateTime> proposedDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string cMessageText;
        
        public GetvalidEADResponse() {
        }
        
        public GetvalidEADResponse(System.Nullable<System.DateTime> proposedDate, string cMessageText) {
            this.proposedDate = proposedDate;
            this.cMessageText = cMessageText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MassGenerateBOEInvcDtl", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class MassGenerateBOEInvcDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds;
        
        public MassGenerateBOEInvcDtlRequest() {
        }
        
        public MassGenerateBOEInvcDtlRequest(int ipInvoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MassGenerateBOEInvcDtlResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class MassGenerateBOEInvcDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset MassGenerateBOEInvcDtlResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string massGenErrorMsg;
        
        public MassGenerateBOEInvcDtlResponse() {
        }
        
        public MassGenerateBOEInvcDtlResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset MassGenerateBOEInvcDtlResult, EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds, string massGenErrorMsg) {
            this.MassGenerateBOEInvcDtlResult = MassGenerateBOEInvcDtlResult;
            this.ds = ds;
            this.massGenErrorMsg = massGenErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAllocatedDepositAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeAllocatedDepositAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipDepInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string ipDepGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public int ipDepHeadNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public decimal ipAllocatedAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeAllocatedDepositAmtRequest() {
        }
        
        public OnChangeAllocatedDepositAmtRequest(int ipInvoiceNum, int ipDepInvoiceNum, string ipDepGroupID, int ipDepHeadNum, decimal ipAllocatedAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipInvoiceNum = ipInvoiceNum;
            this.ipDepInvoiceNum = ipDepInvoiceNum;
            this.ipDepGroupID = ipDepGroupID;
            this.ipDepHeadNum = ipDepHeadNum;
            this.ipAllocatedAmt = ipAllocatedAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAllocatedDepositAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeAllocatedDepositAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeAllocatedDepositAmtResponse() {
        }
        
        public OnChangeAllocatedDepositAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeARLOCID", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeARLOCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipARLOCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int ipInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeARLOCIDRequest() {
        }
        
        public OnChangeARLOCIDRequest(string ipARLOCID, int ipInvoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipARLOCID = ipARLOCID;
            this.ipInvoiceNum = ipInvoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeARLOCIDResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeARLOCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string opTermsCodeValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string opTermsCodeMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string opBTCustIDValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string opBTCustIDMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeARLOCIDResponse() {
        }
        
        public OnChangeARLOCIDResponse(string opTermsCodeValue, string opTermsCodeMsg, string opBTCustIDValue, string opBTCustIDMsg, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.opTermsCodeValue = opTermsCodeValue;
            this.opTermsCodeMsg = opTermsCodeMsg;
            this.opBTCustIDValue = opBTCustIDValue;
            this.opBTCustIDMsg = opBTCustIDMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeBlockedFin", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeBlockedFinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeBlockedFinRequest() {
        }
        
        public OnChangeBlockedFinRequest(int invoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeBlockedFinResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeBlockedFinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeBlockedFinResponse() {
        }
        
        public OnChangeBlockedFinResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeBOEStatus", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeBOEStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int inInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string inNewStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeBOEStatusRequest() {
        }
        
        public OnChangeBOEStatusRequest(int inInvoiceNum, string inNewStatus, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.inInvoiceNum = inInvoiceNum;
            this.inNewStatus = inNewStatus;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeBOEStatusResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeBOEStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string opWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeBOEStatusResponse() {
        }
        
        public OnChangeBOEStatusResponse(string opWarning, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.opWarning = opWarning;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHold", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeHoldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool ipHold;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeHoldRequest() {
        }
        
        public OnChangeHoldRequest(bool ipHold, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipHold = ipHold;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHoldResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeHoldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeHoldResponse() {
        }
        
        public OnChangeHoldResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHoldReason", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeHoldReasonRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeHoldReasonRequest() {
        }
        
        public OnChangeHoldReasonRequest(string ipReason, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipReason = ipReason;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHoldReasonResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeHoldReasonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeHoldReasonResponse() {
        }
        
        public OnChangeHoldReasonResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeInvDtlUseOTS", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeInvDtlUseOTSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeInvDtlUseOTSRequest() {
        }
        
        public OnChangeInvDtlUseOTSRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeInvDtlUseOTSResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeInvDtlUseOTSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeInvDtlUseOTSResponse() {
        }
        
        public OnChangeInvDtlUseOTSResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLineDefRev", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeLineDefRevRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool ipDefRev;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeLineDefRevRequest() {
        }
        
        public OnChangeLineDefRevRequest(bool ipDefRev, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipDefRev = ipDefRev;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLineDefRevResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeLineDefRevResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string opOutMsg;
        
        public OnChangeLineDefRevResponse() {
        }
        
        public OnChangeLineDefRevResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, string opOutMsg) {
            this.ds = ds;
            this.opOutMsg = opOutMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDeferredPercent", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeDeferredPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public decimal ipDeferredPercent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeDeferredPercentRequest() {
        }
        
        public OnChangeDeferredPercentRequest(decimal ipDeferredPercent, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipDeferredPercent = ipDeferredPercent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDeferredPercentResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeDeferredPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeDeferredPercentResponse() {
        }
        
        public OnChangeDeferredPercentResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePartiallyDefer", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangePartiallyDeferRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool ipPartiallyDefer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangePartiallyDeferRequest() {
        }
        
        public OnChangePartiallyDeferRequest(bool ipPartiallyDefer, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipPartiallyDefer = ipPartiallyDefer;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePartiallyDeferResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangePartiallyDeferResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangePartiallyDeferResponse() {
        }
        
        public OnChangePartiallyDeferResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeReclass", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeReclassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public bool ipReclass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeReclassRequest() {
        }
        
        public OnChangeReclassRequest(bool ipReclass, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipReclass = ipReclass;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeReclassResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeReclassResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeReclassResponse() {
        }
        
        public OnChangeReclassResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeReclassCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeReclassCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipReclassCodeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeReclassCodeRequest() {
        }
        
        public OnChangeReclassCodeRequest(string ipReclassCodeID, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipReclassCodeID = ipReclassCodeID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeReclassCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeReclassCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeReclassCodeResponse() {
        }
        
        public OnChangeReclassCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeReclassReasonCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeReclassReasonCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string ipReclassReasonCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeReclassReasonCodeRequest() {
        }
        
        public OnChangeReclassReasonCodeRequest(string ipReclassReasonCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipReclassReasonCode = ipReclassReasonCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeReclassReasonCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeReclassReasonCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeReclassReasonCodeResponse() {
        }
        
        public OnChangeReclassReasonCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeUnrecognizedAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeUnrecognizedAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public decimal ipProposedAmount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeUnrecognizedAmtRequest() {
        }
        
        public OnChangeUnrecognizedAmtRequest(decimal ipProposedAmount, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipProposedAmount = ipProposedAmount;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeUnrecognizedAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeUnrecognizedAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeUnrecognizedAmtResponse() {
        }
        
        public OnChangeUnrecognizedAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLineDspWithholdAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeLineDspWithholdAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public decimal newDspWithholdAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeLineDspWithholdAmtRequest() {
        }
        
        public OnChangeLineDspWithholdAmtRequest(decimal newDspWithholdAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.newDspWithholdAmt = newDspWithholdAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLineDspWithholdAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeLineDspWithholdAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeLineDspWithholdAmtResponse() {
        }
        
        public OnChangeLineDspWithholdAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLineInvoiceRef", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeLineInvoiceRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int NewInvoiceRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeLineInvoiceRefRequest() {
        }
        
        public OnChangeLineInvoiceRefRequest(int NewInvoiceRef, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.NewInvoiceRef = NewInvoiceRef;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLineInvoiceRefResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeLineInvoiceRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeLineInvoiceRefResponse() {
        }
        
        public OnChangeLineInvoiceRefResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfAmortDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfAmortDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public System.Nullable<System.DateTime> ipAmortDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfAmortDateRequest() {
        }
        
        public OnChangeOfAmortDateRequest(System.Nullable<System.DateTime> ipAmortDate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ipAmortDate = ipAmortDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfAmortDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfAmortDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfAmortDateResponse() {
        }
        
        public OnChangeOfAmortDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofApplyDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofApplyDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> NewApplyDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string recalcamts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofApplyDateRequest() {
        }
        
        public OnChangeofApplyDateRequest(int InvoiceNum, System.Nullable<System.DateTime> NewApplyDate, string recalcamts, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewApplyDate = NewApplyDate;
            this.recalcamts = recalcamts;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofApplyDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofApplyDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofApplyDateResponse() {
        }
        
        public OnChangeofApplyDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofApplyDateEx", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofApplyDateExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> NewApplyDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string recalcamts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofApplyDateExRequest() {
        }
        
        public OnChangeofApplyDateExRequest(int InvoiceNum, System.Nullable<System.DateTime> NewApplyDate, string recalcamts, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewApplyDate = NewApplyDate;
            this.recalcamts = recalcamts;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofApplyDateExResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofApplyDateExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofApplyDateExResponse() {
        }
        
        public OnChangeofApplyDateExResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofChrgAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofChrgAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int SeqNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public decimal NewChrgAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofChrgAmtRequest() {
        }
        
        public OnChangeofChrgAmtRequest(int InvoiceNum, int InvoiceLine, int SeqNum, decimal NewChrgAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.SeqNum = SeqNum;
            this.NewChrgAmt = NewChrgAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofChrgAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofChrgAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofChrgAmtResponse() {
        }
        
        public OnChangeofChrgAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofContact", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofContactRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int NewContact;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofContactRequest() {
        }
        
        public OnChangeofContactRequest(int InvoiceNum, int NewContact, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewContact = NewContact;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofContactResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofContactResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofContactResponse() {
        }
        
        public OnChangeofContactResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofCurrency", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofCurrencyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string NewCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofCurrencyRequest() {
        }
        
        public OnChangeofCurrencyRequest(int InvoiceNum, string NewCurrencyCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewCurrencyCode = NewCurrencyCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofCurrencyResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofCurrencyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofCurrencyResponse() {
        }
        
        public OnChangeofCurrencyResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofCustomer", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string NewCustomerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofCustomerRequest() {
        }
        
        public OnChangeofCustomerRequest(int InvoiceNum, string NewCustomerID, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewCustomerID = NewCustomerID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofCustomerResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofCustomerResponse() {
        }
        
        public OnChangeofCustomerResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofDepAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofDepAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal depositAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofDepAmtRequest() {
        }
        
        public OnChangeofDepAmtRequest(int invoiceNum, decimal depositAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.depositAmt = depositAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofDepAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofDepAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofDepAmtResponse() {
        }
        
        public OnChangeofDepAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofDeposit", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofDepositRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal DspCredit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofDepositRequest() {
        }
        
        public OnChangeofDepositRequest(int InvoiceNum, decimal DspCredit, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.DspCredit = DspCredit;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofDepositResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofDepositResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofDepositResponse() {
        }
        
        public OnChangeofDepositResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofExchangeRate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofExchangeRateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public decimal NewExchangeRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofExchangeRateRequest() {
        }
        
        public OnChangeofExchangeRateRequest(int InvoiceNum, decimal NewExchangeRate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewExchangeRate = NewExchangeRate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofExchangeRateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofExchangeRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofExchangeRateResponse() {
        }
        
        public OnChangeofExchangeRateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofFixedAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofFixedAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string RateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public decimal NewTaxAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofFixedAmtRequest() {
        }
        
        public OnChangeofFixedAmtRequest(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewTaxAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.TaxCode = TaxCode;
            this.RateCode = RateCode;
            this.NewTaxAmt = NewTaxAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofFixedAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofFixedAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofFixedAmtResponse() {
        }
        
        public OnChangeofFixedAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofFOB", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofFOBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public string NewFOB;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofFOBRequest() {
        }
        
        public OnChangeofFOBRequest(int InvoiceNum, string NewFOB, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewFOB = NewFOB;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofFOBResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofFOBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofFOBResponse() {
        }
        
        public OnChangeofFOBResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofInvDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofInvDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> NewInvoiceDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string recalcamts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofInvDateRequest() {
        }
        
        public OnChangeofInvDateRequest(int InvoiceNum, System.Nullable<System.DateTime> NewInvoiceDate, string recalcamts, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewInvoiceDate = NewInvoiceDate;
            this.recalcamts = recalcamts;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofInvDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofInvDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofInvDateResponse() {
        }
        
        public OnChangeofInvDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofInvDateEx", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofInvDateExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> NewInvoiceDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string recalcamts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofInvDateExRequest() {
        }
        
        public OnChangeofInvDateExRequest(int InvoiceNum, System.Nullable<System.DateTime> NewInvoiceDate, string recalcamts, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewInvoiceDate = NewInvoiceDate;
            this.recalcamts = recalcamts;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofInvDateExResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofInvDateExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string cMessageText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofInvDateExResponse() {
        }
        
        public OnChangeofInvDateExResponse(string cMessageText, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.cMessageText = cMessageText;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofInvoiceAddress", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofInvoiceAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string FieldName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool FieldValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofInvoiceAddressRequest() {
        }
        
        public OnChangeofInvoiceAddressRequest(string FieldName, bool FieldValue, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.FieldName = FieldName;
            this.FieldValue = FieldValue;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofInvoiceAddressResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofInvoiceAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofInvoiceAddressResponse() {
        }
        
        public OnChangeofInvoiceAddressResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfRevisionDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfRevisionDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int invoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public System.Nullable<System.DateTime> newRevisionDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfRevisionDateRequest() {
        }
        
        public OnChangeOfRevisionDateRequest(int invoiceNum, System.Nullable<System.DateTime> newRevisionDate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.invoiceNum = invoiceNum;
            this.newRevisionDate = newRevisionDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfRevisionDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfRevisionDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfRevisionDateResponse() {
        }
        
        public OnChangeOfRevisionDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofRevisionNum", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofRevisionNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int newRevisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofRevisionNumRequest() {
        }
        
        public OnChangeofRevisionNumRequest(int newRevisionNum, int InvoiceNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.newRevisionNum = newRevisionNum;
            this.InvoiceNum = InvoiceNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofRevisionNumResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofRevisionNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofRevisionNumResponse() {
        }
        
        public OnChangeofRevisionNumResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofInvoiceRef", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofInvoiceRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int NewInvoiceRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofInvoiceRefRequest() {
        }
        
        public OnChangeofInvoiceRefRequest(int InvoiceNum, int NewInvoiceRef, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewInvoiceRef = NewInvoiceRef;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofInvoiceRefResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofInvoiceRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofInvoiceRefResponse() {
        }
        
        public OnChangeofInvoiceRefResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineAdvBill", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineAdvBillRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal NewAdvBillAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineAdvBillRequest() {
        }
        
        public OnChangeofLineAdvBillRequest(int InvoiceNum, int InvoiceLine, decimal NewAdvBillAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewAdvBillAmt = NewAdvBillAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineAdvBillResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineAdvBillResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineAdvBillResponse() {
        }
        
        public OnChangeofLineAdvBillResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineContact", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineContactRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int NewContact;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineContactRequest() {
        }
        
        public OnChangeofLineContactRequest(int InvoiceNum, int InvoiceLine, int NewContact, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewContact = NewContact;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineContactResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineContactResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineContactResponse() {
        }
        
        public OnChangeofLineContactResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineDesc", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineDescRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewPartDesc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineDescRequest() {
        }
        
        public OnChangeofLineDescRequest(int InvoiceNum, int InvoiceLine, string NewPartDesc, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewPartDesc = NewPartDesc;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineDescResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineDescResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineDescResponse() {
        }
        
        public OnChangeofLineDescResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineDiscAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineDiscAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal NewDiscAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineDiscAmtRequest() {
        }
        
        public OnChangeofLineDiscAmtRequest(int InvoiceNum, int InvoiceLine, decimal NewDiscAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewDiscAmt = NewDiscAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineDiscAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineDiscAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineDiscAmtResponse() {
        }
        
        public OnChangeofLineDiscAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineDiscPerc", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineDiscPercRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal NewDiscPerc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineDiscPercRequest() {
        }
        
        public OnChangeofLineDiscPercRequest(int InvoiceNum, int InvoiceLine, decimal NewDiscPerc, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewDiscPerc = NewDiscPerc;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineDiscPercResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineDiscPercResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineDiscPercResponse() {
        }
        
        public OnChangeofLineDiscPercResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineExtPrice", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineExtPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal NewExtAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineExtPriceRequest() {
        }
        
        public OnChangeofLineExtPriceRequest(int InvoiceNum, int InvoiceLine, decimal NewExtAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewExtAmt = NewExtAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineExtPriceResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineExtPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineExtPriceResponse() {
        }
        
        public OnChangeofLineExtPriceResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineInvoiceLineRef", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineInvoiceLineRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int newInvoiceLineRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineInvoiceLineRefRequest() {
        }
        
        public OnChangeofLineInvoiceLineRefRequest(int InvoiceNum, int InvoiceLine, int newInvoiceLineRef, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.newInvoiceLineRef = newInvoiceLineRef;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineInvoiceLineRefResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineInvoiceLineRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineInvoiceLineRefResponse() {
        }
        
        public OnChangeofLineInvoiceLineRefResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineOrderLine", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineOrderLineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int NewOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineOrderLineRequest() {
        }
        
        public OnChangeofLineOrderLineRequest(int InvoiceNum, int InvoiceLine, int NewOrderLine, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewOrderLine = NewOrderLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineOrderLineResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineOrderLineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineOrderLineResponse() {
        }
        
        public OnChangeofLineOrderLineResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineOrderRelease", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineOrderReleaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int NewOrderRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineOrderReleaseRequest() {
        }
        
        public OnChangeofLineOrderReleaseRequest(int InvoiceNum, int InvoiceLine, int NewOrderRel, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewOrderRel = NewOrderRel;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineOrderReleaseResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineOrderReleaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineOrderReleaseResponse() {
        }
        
        public OnChangeofLineOrderReleaseResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLinePartNum", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLinePartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLinePartNumRequest() {
        }
        
        public OnChangeofLinePartNumRequest(int InvoiceNum, int InvoiceLine, string NewPartNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewPartNum = NewPartNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLinePartNumResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLinePartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLinePartNumResponse() {
        }
        
        public OnChangeofLinePartNumResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLinePricePerCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLinePricePerCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewPricePer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLinePricePerCodeRequest() {
        }
        
        public OnChangeofLinePricePerCodeRequest(int InvoiceNum, int InvoiceLine, string NewPricePer, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewPricePer = NewPricePer;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLinePricePerCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLinePricePerCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLinePricePerCodeResponse() {
        }
        
        public OnChangeofLinePricePerCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineProdCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineProdCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewProdCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineProdCodeRequest() {
        }
        
        public OnChangeofLineProdCodeRequest(int InvoiceNum, int InvoiceLine, string NewProdCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewProdCode = NewProdCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineProdCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineProdCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineProdCodeResponse() {
        }
        
        public OnChangeofLineProdCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineQty", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal NewQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineQtyRequest() {
        }
        
        public OnChangeofLineQtyRequest(int InvoiceNum, int InvoiceLine, decimal NewQty, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewQty = NewQty;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineQtyResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineQtyResponse() {
        }
        
        public OnChangeofLineQtyResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineRevNum", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineRevNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewRevNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineRevNumRequest() {
        }
        
        public OnChangeofLineRevNumRequest(int InvoiceNum, int InvoiceLine, string NewRevNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewRevNum = NewRevNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineRevNumResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineRevNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineRevNumResponse() {
        }
        
        public OnChangeofLineRevNumResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineSalesUM", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineSalesUMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewSalesUM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineSalesUMRequest() {
        }
        
        public OnChangeofLineSalesUMRequest(int InvoiceNum, int InvoiceLine, string NewSalesUM, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewSalesUM = NewSalesUM;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineSalesUMResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineSalesUMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineSalesUMResponse() {
        }
        
        public OnChangeofLineSalesUMResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineShipDate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineShipDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public System.Nullable<System.DateTime> NewShipDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineShipDateRequest() {
        }
        
        public OnChangeofLineShipDateRequest(int InvoiceNum, int InvoiceLine, System.Nullable<System.DateTime> NewShipDate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewShipDate = NewShipDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineShipDateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineShipDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineShipDateResponse() {
        }
        
        public OnChangeofLineShipDateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfLineShipToCustID", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfLineShipToCustIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string newShipToCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfLineShipToCustIDRequest() {
        }
        
        public OnChangeOfLineShipToCustIDRequest(string newShipToCustID, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.newShipToCustID = newShipToCustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfLineShipToCustIDResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeOfLineShipToCustIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeOfLineShipToCustIDResponse() {
        }
        
        public OnChangeOfLineShipToCustIDResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineShipToNum", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineShipToNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewShipToNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineShipToNumRequest() {
        }
        
        public OnChangeofLineShipToNumRequest(int InvoiceNum, int InvoiceLine, string NewShipToNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewShipToNum = NewShipToNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineShipToNumResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineShipToNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineShipToNumResponse() {
        }
        
        public OnChangeofLineShipToNumResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineShipVia", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineShipViaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewShipVia;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineShipViaRequest() {
        }
        
        public OnChangeofLineShipViaRequest(int InvoiceNum, int InvoiceLine, string NewShipVia, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewShipVia = NewShipVia;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineShipViaResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineShipViaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineShipViaResponse() {
        }
        
        public OnChangeofLineShipViaResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineTaxCat", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineTaxCatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewTaxCat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineTaxCatRequest() {
        }
        
        public OnChangeofLineTaxCatRequest(int InvoiceNum, int InvoiceLine, string NewTaxCat, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewTaxCat = NewTaxCat;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineTaxCatResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineTaxCatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineTaxCatResponse() {
        }
        
        public OnChangeofLineTaxCatResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineTaxExempt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineTaxExemptRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string NewTaxExempt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineTaxExemptRequest() {
        }
        
        public OnChangeofLineTaxExemptRequest(int InvoiceNum, int InvoiceLine, string NewTaxExempt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewTaxExempt = NewTaxExempt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineTaxExemptResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineTaxExemptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineTaxExemptResponse() {
        }
        
        public OnChangeofLineTaxExemptResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineTaxRgn", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineTaxRgnRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public string iTaxRegionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineTaxRgnRequest() {
        }
        
        public OnChangeofLineTaxRgnRequest(string iTaxRegionCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.iTaxRegionCode = iTaxRegionCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineTaxRgnResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineTaxRgnResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineTaxRgnResponse() {
        }
        
        public OnChangeofLineTaxRgnResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineUnitPrice", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineUnitPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal NewUnitPrice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineUnitPriceRequest() {
        }
        
        public OnChangeofLineUnitPriceRequest(int InvoiceNum, int InvoiceLine, decimal NewUnitPrice, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.NewUnitPrice = NewUnitPrice;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLineUnitPriceResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLineUnitPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLineUnitPriceResponse() {
        }
        
        public OnChangeofLineUnitPriceResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLinkedInvcUnitPrice", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLinkedInvcUnitPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public decimal newLinkedUnitPrice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLinkedInvcUnitPriceRequest() {
        }
        
        public OnChangeofLinkedInvcUnitPriceRequest(int InvoiceNum, int InvoiceLine, decimal newLinkedUnitPrice, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.newLinkedUnitPrice = newLinkedUnitPrice;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLinkedInvcUnitPriceResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLinkedInvcUnitPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLinkedInvcUnitPriceResponse() {
        }
        
        public OnChangeofLinkedInvcUnitPriceResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLockRate", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLockRateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public bool NewLockRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLockRateRequest() {
        }
        
        public OnChangeofLockRateRequest(int InvoiceNum, bool NewLockRate, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewLockRate = NewLockRate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofLockRateResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofLockRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofLockRateResponse() {
        }
        
        public OnChangeofLockRateResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofManualTax", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofManualTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string RateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public bool NewManualTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=5)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofManualTaxRequest() {
        }
        
        public OnChangeofManualTaxRequest(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, bool NewManualTax, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.TaxCode = TaxCode;
            this.RateCode = RateCode;
            this.NewManualTax = NewManualTax;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofManualTaxResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofManualTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofManualTaxResponse() {
        }
        
        public OnChangeofManualTaxResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofMiscAmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofMiscAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int SeqNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public decimal NewMiscAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofMiscAmtRequest() {
        }
        
        public OnChangeofMiscAmtRequest(int InvoiceNum, int InvoiceLine, int SeqNum, decimal NewMiscAmt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.SeqNum = SeqNum;
            this.NewMiscAmt = NewMiscAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofMiscAmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofMiscAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofMiscAmtResponse() {
        }
        
        public OnChangeofMiscAmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofMiscCode", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofMiscCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int SeqNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public string NewMiscCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofMiscCodeRequest() {
        }
        
        public OnChangeofMiscCodeRequest(int InvoiceNum, int InvoiceLine, int SeqNum, string NewMiscCode, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.SeqNum = SeqNum;
            this.NewMiscCode = NewMiscCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofMiscCodeResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofMiscCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofMiscCodeResponse() {
        }
        
        public OnChangeofMiscCodeResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofMiscPrcnt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofMiscPrcntRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public int SeqNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=3)]
        public decimal NewPrcnt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=4)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofMiscPrcntRequest() {
        }
        
        public OnChangeofMiscPrcntRequest(int InvoiceNum, int InvoiceLine, int SeqNum, decimal NewPrcnt, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.InvoiceLine = InvoiceLine;
            this.SeqNum = SeqNum;
            this.NewPrcnt = NewPrcnt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofMiscPrcntResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofMiscPrcntResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofMiscPrcntResponse() {
        }
        
        public OnChangeofMiscPrcntResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofMXPartPmt", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofMXPartPmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public bool newMXPartPmt;
        
        public OnChangeofMXPartPmtRequest() {
        }
        
        public OnChangeofMXPartPmtRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int InvoiceNum, bool newMXPartPmt) {
            this.ds = ds;
            this.InvoiceNum = InvoiceNum;
            this.newMXPartPmt = newMXPartPmt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofMXPartPmtResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofMXPartPmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofMXPartPmtResponse() {
        }
        
        public OnChangeofMXPartPmtResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofOrderNum", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofOrderNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int NewOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofOrderNumRequest() {
        }
        
        public OnChangeofOrderNumRequest(int InvoiceNum, int NewOrderNum, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.InvoiceNum = InvoiceNum;
            this.NewOrderNum = NewOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofOrderNumResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofOrderNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofOrderNumResponse() {
        }
        
        public OnChangeofOrderNumResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPayMethod", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPayMethodRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=1)]
        public int InvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=2)]
        public string newPayMethod;
        
        public OnChangeofPayMethodRequest() {
        }
        
        public OnChangeofPayMethodRequest(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int InvoiceNum, string newPayMethod) {
            this.ds = ds;
            this.InvoiceNum = InvoiceNum;
            this.newPayMethod = newPayMethod;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPayMethodResponse", WrapperNamespace="Erp:BO:ARInvoice", IsWrapped=true)]
    public partial class OnChangeofPayMethodResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ARInvoice", Order=0)]
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds;
        
        public OnChangeofPayMethodResponse() {
        }
        
        public OnChangeofPayMethodResponse(EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ARInvoiceSvcContractChannel : EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ARInvoiceSvcContractClient : System.ServiceModel.ClientBase<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract>, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract {
        
        public ARInvoiceSvcContractClient() {
        }
        
        public ARInvoiceSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ARInvoiceSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ARInvoiceSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ARInvoiceSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPaySchedAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtRequest request) {
            return base.Channel.OnChangeofPaySchedAmt(request);
        }
        
        public void OnChangeofPaySchedAmt(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds, int InvoiceNum, int LineNumber, decimal NewPayAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtRequest();
            inValue.ds = ds;
            inValue.InvoiceNum = InvoiceNum;
            inValue.LineNumber = LineNumber;
            inValue.NewPayAmt = NewPayAmt;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPaySchedAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtResponse> OnChangeofPaySchedAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedAmtRequest request) {
            return base.Channel.OnChangeofPaySchedAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPaySchedDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateRequest request) {
            return base.Channel.OnChangeofPaySchedDate(request);
        }
        
        public void OnChangeofPaySchedDate(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds, int InvoiceNum, int LineNumber) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateRequest();
            inValue.ds = ds;
            inValue.InvoiceNum = InvoiceNum;
            inValue.LineNumber = LineNumber;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPaySchedDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateResponse> OnChangeofPaySchedDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPaySchedDateRequest request) {
            return base.Channel.OnChangeofPaySchedDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPECharges(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesRequest request) {
            return base.Channel.OnChangeofPECharges(request);
        }
        
        public void OnChangeofPECharges(int ipInvoiceNum, decimal ipPECharges, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipPECharges = ipPECharges;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPECharges(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesResponse> OnChangeofPEChargesAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEChargesRequest request) {
            return base.Channel.OnChangeofPEChargesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPECommissions(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsRequest request) {
            return base.Channel.OnChangeofPECommissions(request);
        }
        
        public void OnChangeofPECommissions(int ipInvoiceNum, decimal ipPECommissions, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipPECommissions = ipPECommissions;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPECommissions(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsResponse> OnChangeofPECommissionsAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPECommissionsRequest request) {
            return base.Channel.OnChangeofPECommissionsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPEDischargeAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtRequest request) {
            return base.Channel.OnChangeofPEDischargeAmt(request);
        }
        
        public void OnChangeofPEDischargeAmt(int ipInvoiceNum, decimal ipPEDischargeAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipPEDischargeAmt = ipPEDischargeAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPEDischargeAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtResponse> OnChangeofPEDischargeAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEDischargeAmtRequest request) {
            return base.Channel.OnChangeofPEDischargeAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPEInterest(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestRequest request) {
            return base.Channel.OnChangeofPEInterest(request);
        }
        
        public void OnChangeofPEInterest(int ipInvoiceNum, decimal ipPEInterest, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipPEInterest = ipPEInterest;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPEInterest(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestResponse> OnChangeofPEInterestAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPEInterestRequest request) {
            return base.Channel.OnChangeofPEInterestAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPENoPayPenalty(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyRequest request) {
            return base.Channel.OnChangeofPENoPayPenalty(request);
        }
        
        public void OnChangeofPENoPayPenalty(int ipInvoiceNum, decimal ipPENoPayPenalty, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipPENoPayPenalty = ipPENoPayPenalty;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPENoPayPenalty(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyResponse> OnChangeofPENoPayPenaltyAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPENoPayPenaltyRequest request) {
            return base.Channel.OnChangeofPENoPayPenaltyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPlant(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantRequest request) {
            return base.Channel.OnChangeofPlant(request);
        }
        
        public void OnChangeofPlant(int InvoiceNum, string NewPlant, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewPlant = NewPlant;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPlant(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantResponse> OnChangeofPlantAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPlantRequest request) {
            return base.Channel.OnChangeofPlantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeOfRACode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeRequest request) {
            return base.Channel.OnChangeOfRACode(request);
        }
        
        public void OnChangeOfRACode(string ipRACode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeRequest();
            inValue.ipRACode = ipRACode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeOfRACode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeResponse> OnChangeOfRACodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRACodeRequest request) {
            return base.Channel.OnChangeOfRACodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofRateCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeRequest request) {
            return base.Channel.OnChangeofRateCode(request);
        }
        
        public void OnChangeofRateCode(int invoiceNum, int invoiceLine, string taxCode, string newRateCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.invoiceLine = invoiceLine;
            inValue.taxCode = taxCode;
            inValue.newRateCode = newRateCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofRateCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeResponse> OnChangeofRateCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateCodeRequest request) {
            return base.Channel.OnChangeofRateCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofRateGrpCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeRequest request) {
            return base.Channel.OnChangeofRateGrpCode(request);
        }
        
        public void OnChangeofRateGrpCode(int InvoiceNum, string NewRateGrpCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewRateGrpCode = NewRateGrpCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofRateGrpCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeResponse> OnChangeofRateGrpCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRateGrpCodeRequest request) {
            return base.Channel.OnChangeofRateGrpCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofRetInvoiceNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumRequest request) {
            return base.Channel.OnChangeofRetInvoiceNum(request);
        }
        
        public void OnChangeofRetInvoiceNum(int InvoiceNum, string NewRetInvoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewRetInvoiceNum = NewRetInvoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofRetInvoiceNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumResponse> OnChangeofRetInvoiceNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRetInvoiceNumRequest request) {
            return base.Channel.OnChangeofRetInvoiceNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofSalesRep(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepRequest request) {
            return base.Channel.OnChangeofSalesRep(request);
        }
        
        public void OnChangeofSalesRep(int InvoiceNum, int RepIndexNum, string NewRepCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.RepIndexNum = RepIndexNum;
            inValue.NewRepCode = NewRepCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofSalesRep(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepResponse> OnChangeofSalesRepAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSalesRepRequest request) {
            return base.Channel.OnChangeofSalesRepAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofShipDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateRequest request) {
            return base.Channel.OnChangeofShipDate(request);
        }
        
        public void OnChangeofShipDate(int InvoiceNum, System.Nullable<System.DateTime> NewShipDate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewShipDate = NewShipDate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofShipDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateResponse> OnChangeofShipDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofShipDateRequest request) {
            return base.Channel.OnChangeofShipDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofSoldToCustID(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDRequest request) {
            return base.Channel.OnChangeofSoldToCustID(request);
        }
        
        public void OnChangeofSoldToCustID(string NewSoldToCustID, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDRequest();
            inValue.NewSoldToCustID = NewSoldToCustID;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofSoldToCustID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDResponse> OnChangeofSoldToCustIDAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofSoldToCustIDRequest request) {
            return base.Channel.OnChangeofSoldToCustIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxableAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtRequest request) {
            return base.Channel.OnChangeofTaxableAmt(request);
        }
        
        public void OnChangeofTaxableAmt(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewTaxableAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.TaxCode = TaxCode;
            inValue.RateCode = RateCode;
            inValue.NewTaxableAmt = NewTaxableAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtResponse> OnChangeofTaxableAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxableAmtRequest request) {
            return base.Channel.OnChangeofTaxableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtRequest request) {
            return base.Channel.OnChangeofTaxAmt(request);
        }
        
        public void OnChangeofTaxAmt(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewTaxAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.TaxCode = TaxCode;
            inValue.RateCode = RateCode;
            inValue.NewTaxAmt = NewTaxAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtResponse> OnChangeofTaxAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxAmtRequest request) {
            return base.Channel.OnChangeofTaxAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeRequest request) {
            return base.Channel.OnChangeofTaxCode(request);
        }
        
        public void OnChangeofTaxCode(int InvoiceNum, int InvoiceLine, string RateCode, string NewTaxCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.RateCode = RateCode;
            inValue.NewTaxCode = NewTaxCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeResponse> OnChangeofTaxCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxCodeRequest request) {
            return base.Channel.OnChangeofTaxCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxLock(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockRequest request) {
            return base.Channel.OnChangeofTaxLock(request);
        }
        
        public void OnChangeofTaxLock(int invoiceNum, bool newLockRate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.newLockRate = newLockRate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxLock(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockResponse> OnChangeofTaxLockAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxLockRequest request) {
            return base.Channel.OnChangeofTaxLockAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxPDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateRequest request) {
            return base.Channel.OnChangeofTaxPDate(request);
        }
        
        public void OnChangeofTaxPDate(int InvoiceNum, System.Nullable<System.DateTime> NewTaxPDate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewTaxPDate = NewTaxPDate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxPDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateResponse> OnChangeofTaxPDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPDateRequest request) {
            return base.Channel.OnChangeofTaxPDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxPercent(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentRequest request) {
            return base.Channel.OnChangeofTaxPercent(request);
        }
        
        public void OnChangeofTaxPercent(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewPercent, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.TaxCode = TaxCode;
            inValue.RateCode = RateCode;
            inValue.NewPercent = NewPercent;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentResponse> OnChangeofTaxPercentAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxPercentRequest request) {
            return base.Channel.OnChangeofTaxPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxRateDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateRequest request) {
            return base.Channel.OnChangeofTaxRateDate(request);
        }
        
        public void OnChangeofTaxRateDate(int invoiceNum, System.Nullable<System.DateTime> newTaxRateDate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.newTaxRateDate = newTaxRateDate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxRateDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateResponse> OnChangeofTaxRateDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateDateRequest request) {
            return base.Channel.OnChangeofTaxRateDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxRateGrpCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeRequest request) {
            return base.Channel.OnChangeofTaxRateGrpCode(request);
        }
        
        public void OnChangeofTaxRateGrpCode(int InvoiceNum, string NewRateGrpCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewRateGrpCode = NewRateGrpCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxRateGrpCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeResponse> OnChangeofTaxRateGrpCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRateGrpCodeRequest request) {
            return base.Channel.OnChangeofTaxRateGrpCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxReportAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtRequest request) {
            return base.Channel.OnChangeofTaxReportAmt(request);
        }
        
        public void OnChangeofTaxReportAmt(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewRptAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.TaxCode = TaxCode;
            inValue.RateCode = RateCode;
            inValue.NewRptAmt = NewRptAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxReportAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtResponse> OnChangeofTaxReportAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxReportAmtRequest request) {
            return base.Channel.OnChangeofTaxReportAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTaxRgn(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnRequest request) {
            return base.Channel.OnChangeofTaxRgn(request);
        }
        
        public void OnChangeofTaxRgn(int invoiceNum, string taxRegionCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.taxRegionCode = taxRegionCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTaxRgn(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnResponse> OnChangeofTaxRgnAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTaxRgnRequest request) {
            return base.Channel.OnChangeofTaxRgnAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofTermsCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeRequest request) {
            return base.Channel.OnChangeofTermsCode(request);
        }
        
        public string OnChangeofTermsCode(int InvoiceNum, string NewTermsCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewTermsCode = NewTermsCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofTermsCode(inValue);
            ds = retVal.ds;
            return retVal.opWarning;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeResponse> OnChangeofTermsCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofTermsCodeRequest request) {
            return base.Channel.OnChangeofTermsCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeOfTransApplyDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateRequest request) {
            return base.Channel.OnChangeOfTransApplyDate(request);
        }
        
        public void OnChangeOfTransApplyDate(int invoiceNum, System.Nullable<System.DateTime> newTransApplyDate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.newTransApplyDate = newTransApplyDate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeOfTransApplyDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateResponse> OnChangeOfTransApplyDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfTransApplyDateRequest request) {
            return base.Channel.OnChangeOfTransApplyDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofUseSOCCDefaults(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsRequest request) {
            return base.Channel.OnChangeofUseSOCCDefaults(request);
        }
        
        public void OnChangeofUseSOCCDefaults(int InvoiceNum, bool UseSOCC, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.UseSOCC = UseSOCC;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofUseSOCCDefaults(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsResponse> OnChangeofUseSOCCDefaultsAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofUseSOCCDefaultsRequest request) {
            return base.Channel.OnChangeofUseSOCCDefaultsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeTranDocTypeID(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDRequest request) {
            return base.Channel.OnChangeTranDocTypeID(request);
        }
        
        public void OnChangeTranDocTypeID(string ipTranDocTypeID, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDRequest();
            inValue.ipTranDocTypeID = ipTranDocTypeID;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeTranDocTypeID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDResponse> OnChangeTranDocTypeIDAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeTranDocTypeIDRequest request) {
            return base.Channel.OnChangeTranDocTypeIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeUseAltBillTo(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToRequest request) {
            return base.Channel.OnChangeUseAltBillTo(request);
        }
        
        public void OnChangeUseAltBillTo(bool useAltBillTo, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToRequest();
            inValue.useAltBillTo = useAltBillTo;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeUseAltBillTo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToResponse> OnChangeUseAltBillToAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUseAltBillToRequest request) {
            return base.Channel.OnChangeUseAltBillToAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChooseofPaySched(EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedRequest request) {
            return base.Channel.OnChooseofPaySched(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset OnChooseofPaySched(int InvoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChooseofPaySched(inValue);
            ds = retVal.ds;
            return retVal.OnChooseofPaySchedResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedResponse> OnChooseofPaySchedAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChooseofPaySchedRequest request) {
            return base.Channel.OnChooseofPaySchedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.PrePostBOEChangeStatus(EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusRequest request) {
            return base.Channel.PrePostBOEChangeStatus(request);
        }
        
        public string PrePostBOEChangeStatus(string ipGLTransType, int ipBOEInvoiceNum, bool ipEditList, out string GLMessage, out string GLWarning) {
            EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusRequest();
            inValue.ipGLTransType = ipGLTransType;
            inValue.ipBOEInvoiceNum = ipBOEInvoiceNum;
            inValue.ipEditList = ipEditList;
            EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).PrePostBOEChangeStatus(inValue);
            GLMessage = retVal.GLMessage;
            GLWarning = retVal.GLWarning;
            return retVal.ipGroupID;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusResponse> PrePostBOEChangeStatusAsync(EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEChangeStatusRequest request) {
            return base.Channel.PrePostBOEChangeStatusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.PrePostBOEInvoice(EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceRequest request) {
            return base.Channel.PrePostBOEInvoice(request);
        }
        
        public string PrePostBOEInvoice(int ipBOEInvoiceNum, bool ipTCOnline, out string GLWarning) {
            EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceRequest();
            inValue.ipBOEInvoiceNum = ipBOEInvoiceNum;
            inValue.ipTCOnline = ipTCOnline;
            EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).PrePostBOEInvoice(inValue);
            GLWarning = retVal.GLWarning;
            return retVal.GLMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceResponse> PrePostBOEInvoiceAsync(EpicorConsole.Epicor.ARInvoiceSvc.PrePostBOEInvoiceRequest request) {
            return base.Channel.PrePostBOEInvoiceAsync(request);
        }
        
        public string PrePrintInvoices(string ipGroupID, int ipInvoiceNum) {
            return base.Channel.PrePrintInvoices(ipGroupID, ipInvoiceNum);
        }
        
        public System.Threading.Tasks.Task<string> PrePrintInvoicesAsync(string ipGroupID, int ipInvoiceNum) {
            return base.Channel.PrePrintInvoicesAsync(ipGroupID, ipInvoiceNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.RecalcAmortAmount(EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountRequest request) {
            return base.Channel.RecalcAmortAmount(request);
        }
        
        public void RecalcAmortAmount(decimal ipProposedPct, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountRequest();
            inValue.ipProposedPct = ipProposedPct;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).RecalcAmortAmount(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountResponse> RecalcAmortAmountAsync(EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortAmountRequest request) {
            return base.Channel.RecalcAmortAmountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.RecalcAmortPercent(EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentRequest request) {
            return base.Channel.RecalcAmortPercent(request);
        }
        
        public void RecalcAmortPercent(decimal ipProposedAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentRequest();
            inValue.ipProposedAmt = ipProposedAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).RecalcAmortPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentResponse> RecalcAmortPercentAsync(EpicorConsole.Epicor.ARInvoiceSvc.RecalcAmortPercentRequest request) {
            return base.Channel.RecalcAmortPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.RecalcDeferredTotals(EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsRequest request) {
            return base.Channel.RecalcDeferredTotals(request);
        }
        
        public void RecalcDeferredTotals(int ipInvoiceNum, int ipInvoiceLine, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipInvoiceLine = ipInvoiceLine;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).RecalcDeferredTotals(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsResponse> RecalcDeferredTotalsAsync(EpicorConsole.Epicor.ARInvoiceSvc.RecalcDeferredTotalsRequest request) {
            return base.Channel.RecalcDeferredTotalsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.RestoreAmortizationSchedule(EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleRequest request) {
            return base.Channel.RestoreAmortizationSchedule(request);
        }
        
        public void RestoreAmortizationSchedule(int ipInvoiceNum, int ipInvoiceLine, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipInvoiceLine = ipInvoiceLine;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).RestoreAmortizationSchedule(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleResponse> RestoreAmortizationScheduleAsync(EpicorConsole.Epicor.ARInvoiceSvc.RestoreAmortizationScheduleRequest request) {
            return base.Channel.RestoreAmortizationScheduleAsync(request);
        }
        
        public void RMALineTax(int InvoiceNum, int InvoiceLine, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            base.Channel.RMALineTax(InvoiceNum, InvoiceLine, ds);
        }
        
        public System.Threading.Tasks.Task RMALineTaxAsync(int InvoiceNum, int InvoiceLine, EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            return base.Channel.RMALineTaxAsync(InvoiceNum, InvoiceLine, ds);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset SelectUninvoicedDropShipments(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds) {
            return base.Channel.SelectUninvoicedDropShipments(ds);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset> SelectUninvoicedDropShipmentsAsync(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds) {
            return base.Channel.SelectUninvoicedDropShipmentsAsync(ds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.SetReadyToCalc(EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcRequest request) {
            return base.Channel.SetReadyToCalc(request);
        }
        
        public void SetReadyToCalc(string ipGroupID, int ipInvoiceNum, bool ipCalcAll, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcRequest();
            inValue.ipGroupID = ipGroupID;
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipCalcAll = ipCalcAll;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).SetReadyToCalc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcResponse> SetReadyToCalcAsync(EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcRequest request) {
            return base.Channel.SetReadyToCalcAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.SetReadyToCalcEx(EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExRequest request) {
            return base.Channel.SetReadyToCalcEx(request);
        }
        
        public void SetReadyToCalcEx(string ipGroupID, int ipInvoiceNum, bool ipCalcAll, bool ipCalledFromUI, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExRequest();
            inValue.ipGroupID = ipGroupID;
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipCalcAll = ipCalcAll;
            inValue.ipCalledFromUI = ipCalledFromUI;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).SetReadyToCalcEx(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExResponse> SetReadyToCalcExAsync(EpicorConsole.Epicor.ARInvoiceSvc.SetReadyToCalcExRequest request) {
            return base.Channel.SetReadyToCalcExAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.UpdateBOEStatus(EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusRequest request) {
            return base.Channel.UpdateBOEStatus(request);
        }
        
        public void UpdateBOEStatus(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).UpdateBOEStatus(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusResponse> UpdateBOEStatusAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateBOEStatusRequest request) {
            return base.Channel.UpdateBOEStatusAsync(request);
        }
        
        public void UpdateEInvoiceStatus(int ipInvoiceNum, bool ipEInvoiceFlag, int ipStatus) {
            base.Channel.UpdateEInvoiceStatus(ipInvoiceNum, ipEInvoiceFlag, ipStatus);
        }
        
        public System.Threading.Tasks.Task UpdateEInvoiceStatusAsync(int ipInvoiceNum, bool ipEInvoiceFlag, int ipStatus) {
            return base.Channel.UpdateEInvoiceStatusAsync(ipInvoiceNum, ipEInvoiceFlag, ipStatus);
        }
        
        public void UpdateLastRevNum(int InvoiceNum, int InvoiceRef) {
            base.Channel.UpdateLastRevNum(InvoiceNum, InvoiceRef);
        }
        
        public System.Threading.Tasks.Task UpdateLastRevNumAsync(int InvoiceNum, int InvoiceRef) {
            return base.Channel.UpdateLastRevNumAsync(InvoiceNum, InvoiceRef);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.UpdateMaster(EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterRequest request) {
            return base.Channel.UpdateMaster(request);
        }
        
        public decimal UpdateMaster(
                    ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, 
                    string cGroupID, 
                    string cTableName, 
                    bool runCheckAmortSched, 
                    bool runChkLtrOfCredit, 
                    ref bool genAmortSched, 
                    bool lRASchedExists, 
                    int ipInvoiceNum, 
                    int ipInvoiceLine, 
                    string cARLOCID, 
                    bool suppressUserPrompts, 
                    decimal dTotalCharges, 
                    bool lGetDefaultAccount, 
                    out string opGenMessage, 
                    out string opLtrCrdMsg, 
                    out bool lUpdateRan) {
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterRequest();
            inValue.ds = ds;
            inValue.cGroupID = cGroupID;
            inValue.cTableName = cTableName;
            inValue.runCheckAmortSched = runCheckAmortSched;
            inValue.runChkLtrOfCredit = runChkLtrOfCredit;
            inValue.genAmortSched = genAmortSched;
            inValue.lRASchedExists = lRASchedExists;
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipInvoiceLine = ipInvoiceLine;
            inValue.cARLOCID = cARLOCID;
            inValue.suppressUserPrompts = suppressUserPrompts;
            inValue.dTotalCharges = dTotalCharges;
            inValue.lGetDefaultAccount = lGetDefaultAccount;
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).UpdateMaster(inValue);
            ds = retVal.ds;
            genAmortSched = retVal.genAmortSched;
            opGenMessage = retVal.opGenMessage;
            opLtrCrdMsg = retVal.opLtrCrdMsg;
            lUpdateRan = retVal.lUpdateRan;
            return retVal.grpTotalInvAmt;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterResponse> UpdateMasterAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterRequest request) {
            return base.Channel.UpdateMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.UpdateMasterUsingPasteInsert(EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertRequest request) {
            return base.Channel.UpdateMasterUsingPasteInsert(request);
        }
        
        public decimal UpdateMasterUsingPasteInsert(
                    ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, 
                    string cGroupID, 
                    string cTableName, 
                    bool runCheckAmortSched, 
                    bool runChkLtrOfCredit, 
                    ref bool genAmortSched, 
                    bool lRASchedExists, 
                    int ipInvoiceNum, 
                    int ipInvoiceLine, 
                    string cARLOCID, 
                    bool suppressUserPrompts, 
                    decimal dTotalCharges, 
                    bool lGetDefaultAccount, 
                    string pasteInsertColumnsToValidate, 
                    out string opGenMessage, 
                    out string opLtrCrdMsg, 
                    out bool lUpdateRan) {
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertRequest();
            inValue.ds = ds;
            inValue.cGroupID = cGroupID;
            inValue.cTableName = cTableName;
            inValue.runCheckAmortSched = runCheckAmortSched;
            inValue.runChkLtrOfCredit = runChkLtrOfCredit;
            inValue.genAmortSched = genAmortSched;
            inValue.lRASchedExists = lRASchedExists;
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipInvoiceLine = ipInvoiceLine;
            inValue.cARLOCID = cARLOCID;
            inValue.suppressUserPrompts = suppressUserPrompts;
            inValue.dTotalCharges = dTotalCharges;
            inValue.lGetDefaultAccount = lGetDefaultAccount;
            inValue.pasteInsertColumnsToValidate = pasteInsertColumnsToValidate;
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).UpdateMasterUsingPasteInsert(inValue);
            ds = retVal.ds;
            genAmortSched = retVal.genAmortSched;
            opGenMessage = retVal.opGenMessage;
            opLtrCrdMsg = retVal.opLtrCrdMsg;
            lUpdateRan = retVal.lUpdateRan;
            return retVal.grpTotalInvAmt;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertResponse> UpdateMasterUsingPasteInsertAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateMasterUsingPasteInsertRequest request) {
            return base.Channel.UpdateMasterUsingPasteInsertAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.UpdateofPaySched(EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedRequest request) {
            return base.Channel.UpdateofPaySched(request);
        }
        
        public void UpdateofPaySched(int InvoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).UpdateofPaySched(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedResponse> UpdateofPaySchedAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateofPaySchedRequest request) {
            return base.Channel.UpdateofPaySchedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.UpdatePEInvcTax(EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxRequest request) {
            return base.Channel.UpdatePEInvcTax(request);
        }
        
        public void UpdatePEInvcTax(string ipGroupID, int ipInvoiceNum, int ipInvoiceLine, string ipTaxCode, string ipMode, ref EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxRequest();
            inValue.ipGroupID = ipGroupID;
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipInvoiceLine = ipInvoiceLine;
            inValue.ipTaxCode = ipTaxCode;
            inValue.ipMode = ipMode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).UpdatePEInvcTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxResponse> UpdatePEInvcTaxAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxRequest request) {
            return base.Channel.UpdatePEInvcTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.UpdatePEInvcTaxSummary(EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryRequest request) {
            return base.Channel.UpdatePEInvcTaxSummary(request);
        }
        
        public void UpdatePEInvcTaxSummary(string ipGroupID, int ipInvoiceNum, string ipTaxCode, string ipRateCode, ref EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryRequest();
            inValue.ipGroupID = ipGroupID;
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipTaxCode = ipTaxCode;
            inValue.ipRateCode = ipRateCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).UpdatePEInvcTaxSummary(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryResponse> UpdatePEInvcTaxSummaryAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdatePEInvcTaxSummaryRequest request) {
            return base.Channel.UpdatePEInvcTaxSummaryAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset UpdateTaxLiability(int invoiceNum, string taxRegionCode) {
            return base.Channel.UpdateTaxLiability(invoiceNum, taxRegionCode);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> UpdateTaxLiabilityAsync(int invoiceNum, string taxRegionCode) {
            return base.Channel.UpdateTaxLiabilityAsync(invoiceNum, taxRegionCode);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset VoidLegalNumber(int ipInvoiceNum, string ipVoidedReason) {
            return base.Channel.VoidLegalNumber(ipInvoiceNum, ipVoidedReason);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> VoidLegalNumberAsync(int ipInvoiceNum, string ipVoidedReason) {
            return base.Channel.VoidLegalNumberAsync(ipInvoiceNum, ipVoidedReason);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofIsRevision(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionRequest request) {
            return base.Channel.OnChangeofIsRevision(request);
        }
        
        public void OnChangeofIsRevision(bool newIsRevision, int InvoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionRequest();
            inValue.newIsRevision = newIsRevision;
            inValue.InvoiceNum = InvoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofIsRevision(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionResponse> OnChangeofIsRevisionAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofIsRevisionRequest request) {
            return base.Channel.OnChangeofIsRevisionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeOfImmaterialAdjustment(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentRequest request) {
            return base.Channel.OnChangeOfImmaterialAdjustment(request);
        }
        
        public void OnChangeOfImmaterialAdjustment(bool newIsImmatAdjustment, int invoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentRequest();
            inValue.newIsImmatAdjustment = newIsImmatAdjustment;
            inValue.invoiceNum = invoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeOfImmaterialAdjustment(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentResponse> OnChangeOfImmaterialAdjustmentAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfImmaterialAdjustmentRequest request) {
            return base.Channel.OnChangeOfImmaterialAdjustmentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CheckVATFormat(EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatRequest request) {
            return base.Channel.CheckVATFormat(request);
        }
        
        public string CheckVATFormat(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CheckVATFormat(inValue);
            ds = retVal.ds;
            return retVal.opMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatResponse> CheckVATFormatAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckVATFormatRequest request) {
            return base.Channel.CheckVATFormatAsync(request);
        }
        
        public string GetAvailBoEStatuses(string IPCurrentStage) {
            return base.Channel.GetAvailBoEStatuses(IPCurrentStage);
        }
        
        public System.Threading.Tasks.Task<string> GetAvailBoEStatusesAsync(string IPCurrentStage) {
            return base.Channel.GetAvailBoEStatusesAsync(IPCurrentStage);
        }
        
        public System.Nullable<System.DateTime> GetDefaultDepPayToDate() {
            return base.Channel.GetDefaultDepPayToDate();
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetDefaultDepPayToDateAsync() {
            return base.Channel.GetDefaultDepPayToDateAsync();
        }
        
        public string GetLegalNumByInvcRefNum(int intInvoiceNum) {
            return base.Channel.GetLegalNumByInvcRefNum(intInvoiceNum);
        }
        
        public System.Threading.Tasks.Task<string> GetLegalNumByInvcRefNumAsync(int intInvoiceNum) {
            return base.Channel.GetLegalNumByInvcRefNumAsync(intInvoiceNum);
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTableset GetRebateInvList(string invoiceType) {
            return base.Channel.GetRebateInvList(invoiceType);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTableset> GetRebateInvListAsync(string invoiceType) {
            return base.Channel.GetRebateInvListAsync(invoiceType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GenerateRebateInv(EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvRequest request) {
            return base.Channel.GenerateRebateInv(request);
        }
        
        public string GenerateRebateInv(string invoiceType, string groupID, EpicorConsole.Epicor.ARInvoiceSvc.RebateInvTableset ds, ref System.Nullable<System.DateTime> vExDate, ref int vUseDate, ref string pCurrList, ref string pRateList) {
            EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvRequest();
            inValue.invoiceType = invoiceType;
            inValue.groupID = groupID;
            inValue.ds = ds;
            inValue.vExDate = vExDate;
            inValue.vUseDate = vUseDate;
            inValue.pCurrList = pCurrList;
            inValue.pRateList = pRateList;
            EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GenerateRebateInv(inValue);
            vExDate = retVal.vExDate;
            vUseDate = retVal.vUseDate;
            pCurrList = retVal.pCurrList;
            pRateList = retVal.pRateList;
            return retVal.opMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvResponse> GenerateRebateInvAsync(EpicorConsole.Epicor.ARInvoiceSvc.GenerateRebateInvRequest request) {
            return base.Channel.GenerateRebateInvAsync(request);
        }
        
        public string GetAvailTranDocTypes() {
            return base.Channel.GetAvailTranDocTypes();
        }
        
        public System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync() {
            return base.Channel.GetAvailTranDocTypesAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeDueDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateRequest request) {
            return base.Channel.OnChangeDueDate(request);
        }
        
        public void OnChangeDueDate(int invoiceNum, string newDueDateStr, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.newDueDateStr = newDueDateStr;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeDueDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateResponse> OnChangeDueDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDueDateRequest request) {
            return base.Channel.OnChangeDueDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeCycleCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeRequest request) {
            return base.Channel.OnChangeCycleCode(request);
        }
        
        public void OnChangeCycleCode(int InvoiceNum, string pCycleCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.pCycleCode = pCycleCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeCycleCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeResponse> OnChangeCycleCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeCycleCodeRequest request) {
            return base.Channel.OnChangeCycleCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeRecurring(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringRequest request) {
            return base.Channel.OnChangeRecurring(request);
        }
        
        public void OnChangeRecurring(int InvoiceNum, bool pRecurring, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.pRecurring = pRecurring;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeRecurring(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringResponse> OnChangeRecurringAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeRecurringRequest request) {
            return base.Channel.OnChangeRecurringAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceTableset GetRecurringSourceInvoicesSearch(string custList, string cycleCodeList, bool billToFlag, System.Nullable<System.DateTime> InvcDate) {
            return base.Channel.GetRecurringSourceInvoicesSearch(custList, cycleCodeList, billToFlag, InvcDate);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRecInvSourceTableset> GetRecurringSourceInvoicesSearchAsync(string custList, string cycleCodeList, bool billToFlag, System.Nullable<System.DateTime> InvcDate) {
            return base.Channel.GetRecurringSourceInvoicesSearchAsync(custList, cycleCodeList, billToFlag, InvcDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetRecurringInvoices(EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesRequest request) {
            return base.Channel.GetRecurringInvoices(request);
        }
        
        public string GetRecurringInvoices(string groupId, string custList, string cycleCodeList, int firstDayOfWeek, string selectedList, bool billToFlag, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, out string errors, out string msgNumInvoices, out string msgLOCErrors, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesRequest();
            inValue.groupId = groupId;
            inValue.custList = custList;
            inValue.cycleCodeList = cycleCodeList;
            inValue.firstDayOfWeek = firstDayOfWeek;
            inValue.selectedList = selectedList;
            inValue.billToFlag = billToFlag;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetRecurringInvoices(inValue);
            errors = retVal.errors;
            msgNumInvoices = retVal.msgNumInvoices;
            msgLOCErrors = retVal.msgLOCErrors;
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            ds = retVal.ds;
            return retVal.invoices;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesResponse> GetRecurringInvoicesAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRecurringInvoicesRequest request) {
            return base.Channel.GetRecurringInvoicesAsync(request);
        }
        
        public decimal CalcInvcGrpTotal(string cGroupId) {
            return base.Channel.CalcInvcGrpTotal(cGroupId);
        }
        
        public System.Threading.Tasks.Task<decimal> CalcInvcGrpTotalAsync(string cGroupId) {
            return base.Channel.CalcInvcGrpTotalAsync(cGroupId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetInvcRecurr(EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrRequest request) {
            return base.Channel.GetInvcRecurr(request);
        }
        
        public void GetInvcRecurr(int invoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.RecurringInvTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetInvcRecurr(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrResponse> GetInvcRecurrAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetInvcRecurrRequest request) {
            return base.Channel.GetInvcRecurrAsync(request);
        }
        
        public System.Nullable<System.DateTime> GetNextInvoiceDate(System.Nullable<System.DateTime> date, int firstDayOfWeek, string modifier, int cycleInterval, int billingDay) {
            return base.Channel.GetNextInvoiceDate(date, firstDayOfWeek, modifier, cycleInterval, billingDay);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetNextInvoiceDateAsync(System.Nullable<System.DateTime> date, int firstDayOfWeek, string modifier, int cycleInterval, int billingDay) {
            return base.Channel.GetNextInvoiceDateAsync(date, firstDayOfWeek, modifier, cycleInterval, billingDay);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPrepDeposit(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositRequest request) {
            return base.Channel.OnChangeofPrepDeposit(request);
        }
        
        public void OnChangeofPrepDeposit(int ipInvoiceNum, decimal dspPrepDeposit, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.dspPrepDeposit = dspPrepDeposit;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPrepDeposit(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositResponse> OnChangeofPrepDepositAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPrepDepositRequest request) {
            return base.Channel.OnChangeofPrepDepositAsync(request);
        }
        
        public void fillAllocDeposit() {
            base.Channel.fillAllocDeposit();
        }
        
        public System.Threading.Tasks.Task fillAllocDepositAsync() {
            return base.Channel.fillAllocDepositAsync();
        }
        
        public string CheckInvoicePI(int invoiceNum) {
            return base.Channel.CheckInvoicePI(invoiceNum);
        }
        
        public System.Threading.Tasks.Task<string> CheckInvoicePIAsync(int invoiceNum) {
            return base.Channel.CheckInvoicePIAsync(invoiceNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CheckISRCodeDefinition(EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionRequest request) {
            return base.Channel.CheckISRCodeDefinition(request);
        }
        
        public bool CheckISRCodeDefinition(int iInvoiceNum, out string outMsg) {
            EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionRequest();
            inValue.iInvoiceNum = iInvoiceNum;
            EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CheckISRCodeDefinition(inValue);
            outMsg = retVal.outMsg;
            return retVal.CheckISRCodeDefinitionResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionResponse> CheckISRCodeDefinitionAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckISRCodeDefinitionRequest request) {
            return base.Channel.CheckISRCodeDefinitionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.ChangeMYIndustryCode(EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeRequest request) {
            return base.Channel.ChangeMYIndustryCode(request);
        }
        
        public void ChangeMYIndustryCode(int ipInvoiceNum, int ipInvoiceLine, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipInvoiceLine = ipInvoiceLine;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).ChangeMYIndustryCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeResponse> ChangeMYIndustryCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.ChangeMYIndustryCodeRequest request) {
            return base.Channel.ChangeMYIndustryCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CheckCommodityCode(EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeRequest request) {
            return base.Channel.CheckCommodityCode(request);
        }
        
        public bool CheckCommodityCode(bool ipWarning, string ipGroupID, out string outMsg) {
            EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeRequest();
            inValue.ipWarning = ipWarning;
            inValue.ipGroupID = ipGroupID;
            EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CheckCommodityCode(inValue);
            outMsg = retVal.outMsg;
            return retVal.CheckCommodityCodeResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeResponse> CheckCommodityCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckCommodityCodeRequest request) {
            return base.Channel.CheckCommodityCodeAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvcDtlPackTableset GetPackDetails(int invoiceNum, int invoiceLine) {
            return base.Channel.GetPackDetails(invoiceNum, invoiceLine);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvcDtlPackTableset> GetPackDetailsAsync(int invoiceNum, int invoiceLine) {
            return base.Channel.GetPackDetailsAsync(invoiceNum, invoiceLine);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.PopulateInvcHeadTransferList(EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListRequest request) {
            return base.Channel.PopulateInvcHeadTransferList(request);
        }
        
        public void PopulateInvcHeadTransferList(ref EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).PopulateInvcHeadTransferList(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListResponse> PopulateInvcHeadTransferListAsync(EpicorConsole.Epicor.ARInvoiceSvc.PopulateInvcHeadTransferListRequest request) {
            return base.Channel.PopulateInvcHeadTransferListAsync(request);
        }
        
        public bool ValidateGroupID(string sGroupID) {
            return base.Channel.ValidateGroupID(sGroupID);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateGroupIDAsync(string sGroupID) {
            return base.Channel.ValidateGroupIDAsync(sGroupID);
        }
        
        public void CreateInvcGrp(string sFromGroupID, string sToGrouID) {
            base.Channel.CreateInvcGrp(sFromGroupID, sToGrouID);
        }
        
        public System.Threading.Tasks.Task CreateInvcGrpAsync(string sFromGroupID, string sToGrouID) {
            return base.Channel.CreateInvcGrpAsync(sFromGroupID, sToGrouID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.TransferSelectedInvoices(EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesRequest request) {
            return base.Channel.TransferSelectedInvoices(request);
        }
        
        public decimal TransferSelectedInvoices(string sTransferGroup, ref EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesRequest();
            inValue.sTransferGroup = sTransferGroup;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).TransferSelectedInvoices(inValue);
            ds = retVal.ds;
            return retVal.grpTotalInvAmt;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesResponse> TransferSelectedInvoicesAsync(EpicorConsole.Epicor.ARInvoiceSvc.TransferSelectedInvoicesRequest request) {
            return base.Channel.TransferSelectedInvoicesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcHead(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadRequest request) {
            return base.Channel.GetNewInvcHead(request);
        }
        
        public void GetNewInvcHead(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcHead(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadResponse> GetNewInvcHeadAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadRequest request) {
            return base.Channel.GetNewInvcHeadAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcHeadAttch(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchRequest request) {
            return base.Channel.GetNewInvcHeadAttch(request);
        }
        
        public void GetNewInvcHeadAttch(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchRequest();
            inValue.ds = ds;
            inValue.invoiceNum = invoiceNum;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcHeadAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchResponse> GetNewInvcHeadAttchAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadAttchRequest request) {
            return base.Channel.GetNewInvcHeadAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcDtl(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRequest request) {
            return base.Channel.GetNewInvcDtl(request);
        }
        
        public void GetNewInvcDtl(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRequest();
            inValue.ds = ds;
            inValue.invoiceNum = invoiceNum;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlResponse> GetNewInvcDtlAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRequest request) {
            return base.Channel.GetNewInvcDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcDtlAttch(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchRequest request) {
            return base.Channel.GetNewInvcDtlAttch(request);
        }
        
        public void GetNewInvcDtlAttch(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchRequest();
            inValue.ds = ds;
            inValue.invoiceNum = invoiceNum;
            inValue.invoiceLine = invoiceLine;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcDtlAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchResponse> GetNewInvcDtlAttchAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlAttchRequest request) {
            return base.Channel.GetNewInvcDtlAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcChrg(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgRequest request) {
            return base.Channel.GetNewInvcChrg(request);
        }
        
        public void GetNewInvcChrg(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgRequest();
            inValue.ds = ds;
            inValue.invoiceNum = invoiceNum;
            inValue.invoiceLine = invoiceLine;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcChrg(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgResponse> GetNewInvcChrgAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcChrgRequest request) {
            return base.Channel.GetNewInvcChrgAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcDtlRASch(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchRequest request) {
            return base.Channel.GetNewInvcDtlRASch(request);
        }
        
        public void GetNewInvcDtlRASch(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchRequest();
            inValue.ds = ds;
            inValue.invoiceNum = invoiceNum;
            inValue.invoiceLine = invoiceLine;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcDtlRASch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchResponse> GetNewInvcDtlRASchAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlRASchRequest request) {
            return base.Channel.GetNewInvcDtlRASchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcMisc(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscRequest request) {
            return base.Channel.GetNewInvcMisc(request);
        }
        
        public void GetNewInvcMisc(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscRequest();
            inValue.ds = ds;
            inValue.invoiceNum = invoiceNum;
            inValue.invoiceLine = invoiceLine;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcMisc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscResponse> GetNewInvcMiscAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcMiscRequest request) {
            return base.Channel.GetNewInvcMiscAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcTax(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxRequest request) {
            return base.Channel.GetNewInvcTax(request);
        }
        
        public void GetNewInvcTax(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine, string taxCode, string rateCode) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxRequest();
            inValue.ds = ds;
            inValue.invoiceNum = invoiceNum;
            inValue.invoiceLine = invoiceLine;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxResponse> GetNewInvcTaxAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcTaxRequest request) {
            return base.Channel.GetNewInvcTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcDtlTGLC(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCRequest request) {
            return base.Channel.GetNewInvcDtlTGLC(request);
        }
        
        public void GetNewInvcDtlTGLC(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int invoiceNum, int invoiceLine) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCRequest();
            inValue.ds = ds;
            inValue.invoiceNum = invoiceNum;
            inValue.invoiceLine = invoiceLine;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcDtlTGLC(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCResponse> GetNewInvcDtlTGLCAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcDtlTGLCRequest request) {
            return base.Channel.GetNewInvcDtlTGLCAsync(request);
        }
        
        public void DeleteByID(int invoiceNum) {
            base.Channel.DeleteByID(invoiceNum);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(int invoiceNum) {
            return base.Channel.DeleteByIDAsync(invoiceNum);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetByID(int invoiceNum) {
            return base.Channel.GetByID(invoiceNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetByIDAsync(int invoiceNum) {
            return base.Channel.GetByIDAsync(invoiceNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetListResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetList(EpicorConsole.Epicor.ARInvoiceSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetListRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.ARInvoiceSvc.GetListResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRowsResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetRows(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetRows(
                    string whereClauseInvcHead, 
                    string whereClauseInvcHeadAttch, 
                    string whereClauseAllocDeposit, 
                    string whereClauseInvcDtl, 
                    string whereClauseInvcDtlAttch, 
                    string whereClauseInvcChrg, 
                    string whereClauseInvcDeferredRev, 
                    string whereClauseInvcDtlRASch, 
                    string whereClauseInvcMisc, 
                    string whereClauseInvcTax, 
                    string whereClauseInvcDtlTGLC, 
                    string whereClauseHedTaxSum, 
                    string whereClauseTaxConnectStatus, 
                    int pageSize, 
                    int absolutePage, 
                    out bool morePages) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetRowsRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetRowsRequest();
            inValue.whereClauseInvcHead = whereClauseInvcHead;
            inValue.whereClauseInvcHeadAttch = whereClauseInvcHeadAttch;
            inValue.whereClauseAllocDeposit = whereClauseAllocDeposit;
            inValue.whereClauseInvcDtl = whereClauseInvcDtl;
            inValue.whereClauseInvcDtlAttch = whereClauseInvcDtlAttch;
            inValue.whereClauseInvcChrg = whereClauseInvcChrg;
            inValue.whereClauseInvcDeferredRev = whereClauseInvcDeferredRev;
            inValue.whereClauseInvcDtlRASch = whereClauseInvcDtlRASch;
            inValue.whereClauseInvcMisc = whereClauseInvcMisc;
            inValue.whereClauseInvcTax = whereClauseInvcTax;
            inValue.whereClauseInvcDtlTGLC = whereClauseInvcDtlTGLC;
            inValue.whereClauseHedTaxSum = whereClauseHedTaxSum;
            inValue.whereClauseTaxConnectStatus = whereClauseTaxConnectStatus;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.ARInvoiceSvc.GetRowsResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.Update(EpicorConsole.Epicor.ARInvoiceSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.UpdateRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.UpdateExt(EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.BOUpdErrorTableset UpdateExt(ref EpicorConsole.Epicor.ARInvoiceSvc.UpdExtARInvoiceTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.ARInvoiceSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.AssignLegalNumber(EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberRequest request) {
            return base.Channel.AssignLegalNumber(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset AssignLegalNumber(int ipInvoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTableset ds, out string opLegalNumMsg) {
            EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).AssignLegalNumber(inValue);
            ds = retVal.ds;
            opLegalNumMsg = retVal.opLegalNumMsg;
            return retVal.AssignLegalNumberResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberResponse> AssignLegalNumberAsync(EpicorConsole.Epicor.ARInvoiceSvc.AssignLegalNumberRequest request) {
            return base.Channel.AssignLegalNumberAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CalculateCOIFRS_PV(EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVRequest request) {
            return base.Channel.CalculateCOIFRS_PV(request);
        }
        
        public void CalculateCOIFRS_PV(int invoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CalculateCOIFRS_PV(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVResponse> CalculateCOIFRS_PVAsync(EpicorConsole.Epicor.ARInvoiceSvc.CalculateCOIFRS_PVRequest request) {
            return base.Channel.CalculateCOIFRS_PVAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.Update_ttInvcHead(EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadRequest request) {
            return base.Channel.Update_ttInvcHead(request);
        }
        
        public void Update_ttInvcHead(int invoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).Update_ttInvcHead(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadResponse> Update_ttInvcHeadAsync(EpicorConsole.Epicor.ARInvoiceSvc.Update_ttInvcHeadRequest request) {
            return base.Channel.Update_ttInvcHeadAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset CashRecGetInvoices(System.Nullable<System.DateTime> payDay, string whereClause) {
            return base.Channel.CashRecGetInvoices(payDay, whereClause);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset> CashRecGetInvoicesAsync(System.Nullable<System.DateTime> payDay, string whereClause) {
            return base.Channel.CashRecGetInvoicesAsync(payDay, whereClause);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.ChangeIncomeTaxCode(EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeRequest request) {
            return base.Channel.ChangeIncomeTaxCode(request);
        }
        
        public void ChangeIncomeTaxCode(string ipIncomeTaxCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeRequest();
            inValue.ipIncomeTaxCode = ipIncomeTaxCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).ChangeIncomeTaxCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeResponse> ChangeIncomeTaxCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.ChangeIncomeTaxCodeRequest request) {
            return base.Channel.ChangeIncomeTaxCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CheckAmortSchedules(EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesRequest request) {
            return base.Channel.CheckAmortSchedules(request);
        }
        
        public string CheckAmortSchedules(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CheckAmortSchedules(inValue);
            ds = retVal.ds;
            return retVal.opGenMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesResponse> CheckAmortSchedulesAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckAmortSchedulesRequest request) {
            return base.Channel.CheckAmortSchedulesAsync(request);
        }
        
        public bool CheckDocumentIsLocked(string keyValue, bool showError) {
            return base.Channel.CheckDocumentIsLocked(keyValue, showError);
        }
        
        public System.Threading.Tasks.Task<bool> CheckDocumentIsLockedAsync(string keyValue, bool showError) {
            return base.Channel.CheckDocumentIsLockedAsync(keyValue, showError);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CheckGroupIsLocked(EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedRequest request) {
            return base.Channel.CheckGroupIsLocked(request);
        }
        
        public bool CheckGroupIsLocked(string keyValue, bool showError, out string lockedStatus) {
            EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedRequest();
            inValue.keyValue = keyValue;
            inValue.showError = showError;
            EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CheckGroupIsLocked(inValue);
            lockedStatus = retVal.lockedStatus;
            return retVal.isLocked;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedResponse> CheckGroupIsLockedAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckGroupIsLockedRequest request) {
            return base.Channel.CheckGroupIsLockedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CheckLtrOfCredit(EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditRequest request) {
            return base.Channel.CheckLtrOfCredit(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset CheckLtrOfCredit(int iInvoiceNum, string cARLOCID, decimal dTotalCharges, out string outMsg) {
            EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditRequest();
            inValue.iInvoiceNum = iInvoiceNum;
            inValue.cARLOCID = cARLOCID;
            inValue.dTotalCharges = dTotalCharges;
            EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CheckLtrOfCredit(inValue);
            outMsg = retVal.outMsg;
            return retVal.CheckLtrOfCreditResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditResponse> CheckLtrOfCreditAsync(EpicorConsole.Epicor.ARInvoiceSvc.CheckLtrOfCreditRequest request) {
            return base.Channel.CheckLtrOfCreditAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CopyInvoiceLines(EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesRequest request) {
            return base.Channel.CopyInvoiceLines(request);
        }
        
        public void CopyInvoiceLines(int sourceInvoiceNum, int destInvoiceNum, bool recalculateTaxes, bool reverseSignQty, EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTableset ds, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ARInvoiceDS) {
            EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesRequest();
            inValue.sourceInvoiceNum = sourceInvoiceNum;
            inValue.destInvoiceNum = destInvoiceNum;
            inValue.recalculateTaxes = recalculateTaxes;
            inValue.reverseSignQty = reverseSignQty;
            inValue.ds = ds;
            inValue.ARInvoiceDS = ARInvoiceDS;
            EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CopyInvoiceLines(inValue);
            ARInvoiceDS = retVal.ARInvoiceDS;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesResponse> CopyInvoiceLinesAsync(EpicorConsole.Epicor.ARInvoiceSvc.CopyInvoiceLinesRequest request) {
            return base.Channel.CopyInvoiceLinesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CreateCorrectionInvoice(EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceRequest request) {
            return base.Channel.CreateCorrectionInvoice(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset CreateCorrectionInvoice(string groupID, int sourceInvoiceNum, System.Nullable<System.DateTime> newInvoiceDate, string newDocType, bool recalculateTaxes, out int opNewInvoiceNum) {
            EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceRequest();
            inValue.groupID = groupID;
            inValue.sourceInvoiceNum = sourceInvoiceNum;
            inValue.newInvoiceDate = newInvoiceDate;
            inValue.newDocType = newDocType;
            inValue.recalculateTaxes = recalculateTaxes;
            EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CreateCorrectionInvoice(inValue);
            opNewInvoiceNum = retVal.opNewInvoiceNum;
            return retVal.CreateCorrectionInvoiceResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceResponse> CreateCorrectionInvoiceAsync(EpicorConsole.Epicor.ARInvoiceSvc.CreateCorrectionInvoiceRequest request) {
            return base.Channel.CreateCorrectionInvoiceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CreateInvFromDep(EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepRequest request) {
            return base.Channel.CreateInvFromDep(request);
        }
        
        public string CreateInvFromDep(string groupID, string payments, out string errors, out string msgNumInvoices, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepRequest();
            inValue.groupID = groupID;
            inValue.payments = payments;
            EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CreateInvFromDep(inValue);
            errors = retVal.errors;
            msgNumInvoices = retVal.msgNumInvoices;
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            return retVal.invoices;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepResponse> CreateInvFromDepAsync(EpicorConsole.Epicor.ARInvoiceSvc.CreateInvFromDepRequest request) {
            return base.Channel.CreateInvFromDepAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.CurrSymbolByInvcNum(EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumRequest request) {
            return base.Channel.CurrSymbolByInvcNum(request);
        }
        
        public string CurrSymbolByInvcNum(int invoiceNum, out string vCurrSymbol) {
            EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumRequest();
            inValue.invoiceNum = invoiceNum;
            EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).CurrSymbolByInvcNum(inValue);
            vCurrSymbol = retVal.vCurrSymbol;
            return retVal.vCurrCode;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumResponse> CurrSymbolByInvcNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.CurrSymbolByInvcNumRequest request) {
            return base.Channel.CurrSymbolByInvcNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.DeleteAmortizationSchedule(EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleRequest request) {
            return base.Channel.DeleteAmortizationSchedule(request);
        }
        
        public void DeleteAmortizationSchedule(bool ipResetDefRevFlag, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleRequest();
            inValue.ipResetDefRevFlag = ipResetDefRevFlag;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).DeleteAmortizationSchedule(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleResponse> DeleteAmortizationScheduleAsync(EpicorConsole.Epicor.ARInvoiceSvc.DeleteAmortizationScheduleRequest request) {
            return base.Channel.DeleteAmortizationScheduleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.DeleteMaster(EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterRequest request) {
            return base.Channel.DeleteMaster(request);
        }
        
        public decimal DeleteMaster(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, string cGroupID, string keyValue) {
            EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterRequest();
            inValue.ds = ds;
            inValue.cGroupID = cGroupID;
            inValue.keyValue = keyValue;
            EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).DeleteMaster(inValue);
            ds = retVal.ds;
            return retVal.grpTotalInvAmt;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterResponse> DeleteMasterAsync(EpicorConsole.Epicor.ARInvoiceSvc.DeleteMasterRequest request) {
            return base.Channel.DeleteMasterAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset DeselectSelectedDropShipments(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds) {
            return base.Channel.DeselectSelectedDropShipments(ds);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset> DeselectSelectedDropShipmentsAsync(EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds) {
            return base.Channel.DeselectSelectedDropShipmentsAsync(ds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.EnableARDates(EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesRequest request) {
            return base.Channel.EnableARDates(request);
        }
        
        public bool EnableARDates(out bool EnShipDate, out bool EnTaxPDate, out bool EnTaxRDate, out bool EnCurrRDate, out bool EnTaxRCDate) {
            EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesRequest();
            EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).EnableARDates(inValue);
            EnShipDate = retVal.EnShipDate;
            EnTaxPDate = retVal.EnTaxPDate;
            EnTaxRDate = retVal.EnTaxRDate;
            EnCurrRDate = retVal.EnCurrRDate;
            EnTaxRCDate = retVal.EnTaxRCDate;
            return retVal.EnApplyDate;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesResponse> EnableARDatesAsync(EpicorConsole.Epicor.ARInvoiceSvc.EnableARDatesRequest request) {
            return base.Channel.EnableARDatesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.ETCValidateAddress(EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressRequest request) {
            return base.Channel.ETCValidateAddress(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ETCAddrValidationTableset ETCValidateAddress(int InvoiceNum, int InvoiceLine, out bool StatusFlag, out bool ErrorFlag, out string ErrorMsg) {
            EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).ETCValidateAddress(inValue);
            StatusFlag = retVal.StatusFlag;
            ErrorFlag = retVal.ErrorFlag;
            ErrorMsg = retVal.ErrorMsg;
            return retVal.ETCValidateAddressResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressResponse> ETCValidateAddressAsync(EpicorConsole.Epicor.ARInvoiceSvc.ETCValidateAddressRequest request) {
            return base.Channel.ETCValidateAddressAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GenerateAmortizationSchedule(EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleRequest request) {
            return base.Channel.GenerateAmortizationSchedule(request);
        }
        
        public void GenerateAmortizationSchedule(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GenerateAmortizationSchedule(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleResponse> GenerateAmortizationScheduleAsync(EpicorConsole.Epicor.ARInvoiceSvc.GenerateAmortizationScheduleRequest request) {
            return base.Channel.GenerateAmortizationScheduleAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset GetARUninvoicedDropShipments(string GroupID, string CustNums, string PlantChoice, bool BillToFlag, bool OnlyNotInvoiced) {
            return base.Channel.GetARUninvoicedDropShipments(GroupID, CustNums, PlantChoice, BillToFlag, OnlyNotInvoiced);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset> GetARUninvoicedDropShipmentsAsync(string GroupID, string CustNums, string PlantChoice, bool BillToFlag, bool OnlyNotInvoiced) {
            return base.Channel.GetARUninvoicedDropShipmentsAsync(GroupID, CustNums, PlantChoice, BillToFlag, OnlyNotInvoiced);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetAvailNOEInvoiceTranDocTypes(EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesRequest request) {
            return base.Channel.GetAvailNOEInvoiceTranDocTypes(request);
        }
        
        public string GetAvailNOEInvoiceTranDocTypes(bool ipEInvoice, string ipSysTranType, bool ipCreditMemo, string ipBTCustID, string ipInvType, out string opDefTranDocType) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesRequest();
            inValue.ipEInvoice = ipEInvoice;
            inValue.ipSysTranType = ipSysTranType;
            inValue.ipCreditMemo = ipCreditMemo;
            inValue.ipBTCustID = ipBTCustID;
            inValue.ipInvType = ipInvType;
            EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetAvailNOEInvoiceTranDocTypes(inValue);
            opDefTranDocType = retVal.opDefTranDocType;
            return retVal.opListAvailTranDocTypes;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesResponse> GetAvailNOEInvoiceTranDocTypesAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetAvailNOEInvoiceTranDocTypesRequest request) {
            return base.Channel.GetAvailNOEInvoiceTranDocTypesAsync(request);
        }
        
        public string GetAvailTurkeyTranDocTypes(string sysTranType, bool isReturn) {
            return base.Channel.GetAvailTurkeyTranDocTypes(sysTranType, isReturn);
        }
        
        public System.Threading.Tasks.Task<string> GetAvailTurkeyTranDocTypesAsync(string sysTranType, bool isReturn) {
            return base.Channel.GetAvailTurkeyTranDocTypesAsync(sysTranType, isReturn);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetByBOEInvoiceNum(int invoiceNum) {
            return base.Channel.GetByBOEInvoiceNum(invoiceNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetByBOEInvoiceNumAsync(int invoiceNum) {
            return base.Channel.GetByBOEInvoiceNumAsync(invoiceNum);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset GetCancellationInvoice(string groupID, int sourceInvoiceNum, System.Nullable<System.DateTime> newInvoiceDate, string newDocType, bool recalculateTaxes) {
            return base.Channel.GetCancellationInvoice(groupID, sourceInvoiceNum, newInvoiceDate, newDocType, recalculateTaxes);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset> GetCancellationInvoiceAsync(string groupID, int sourceInvoiceNum, System.Nullable<System.DateTime> newInvoiceDate, string newDocType, bool recalculateTaxes) {
            return base.Channel.GetCancellationInvoiceAsync(groupID, sourceInvoiceNum, newInvoiceDate, newDocType, recalculateTaxes);
        }
        
        public string GetCurrencyBase() {
            return base.Channel.GetCurrencyBase();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrencyBaseAsync() {
            return base.Channel.GetCurrencyBaseAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetDefaultAccount(EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountRequest request) {
            return base.Channel.GetDefaultAccount(request);
        }
        
        public void GetDefaultAccount(string groupID, int invoiceNum, int invoiceLine, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountRequest();
            inValue.groupID = groupID;
            inValue.invoiceNum = invoiceNum;
            inValue.invoiceLine = invoiceLine;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetDefaultAccount(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountResponse> GetDefaultAccountAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetDefaultAccountRequest request) {
            return base.Channel.GetDefaultAccountAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepTableset GetDepositsToConvert(string custNums, System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate) {
            return base.Channel.GetDepositsToConvert(custNums, fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDepTableset> GetDepositsToConvertAsync(string custNums, System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate) {
            return base.Channel.GetDepositsToConvertAsync(custNums, fromDate, toDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetDropShipments(EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsRequest request) {
            return base.Channel.GetDropShipments(request);
        }
        
        public string GetDropShipments(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetDropShipTableset ds, string GroupID, string CustList, string Plant, bool BillToFlag, bool consolidatePS, out string Errors, out string msgNumInvoices, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsRequest();
            inValue.ds = ds;
            inValue.GroupID = GroupID;
            inValue.CustList = CustList;
            inValue.Plant = Plant;
            inValue.BillToFlag = BillToFlag;
            inValue.consolidatePS = consolidatePS;
            EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetDropShipments(inValue);
            ds = retVal.ds;
            Errors = retVal.Errors;
            msgNumInvoices = retVal.msgNumInvoices;
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            return retVal.Invoices;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsResponse> GetDropShipmentsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetDropShipmentsRequest request) {
            return base.Channel.GetDropShipmentsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetFSCalls(EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsRequest request) {
            return base.Channel.GetFSCalls(request);
        }
        
        public int GetFSCalls(string GroupID, string CustList, string Plant, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsRequest();
            inValue.GroupID = GroupID;
            inValue.CustList = CustList;
            inValue.Plant = Plant;
            EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetFSCalls(inValue);
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            return retVal.NumInvs;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsResponse> GetFSCallsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetFSCallsRequest request) {
            return base.Channel.GetFSCallsAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTableset GetInvoiceLines(int invoiceNum) {
            return base.Channel.GetInvoiceLines(invoiceNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetLinesTableset> GetInvoiceLinesAsync(int invoiceNum) {
            return base.Channel.GetInvoiceLinesAsync(invoiceNum);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvRemindersTableset GetInvoiceReminders(int invoiceNum) {
            return base.Channel.GetInvoiceReminders(invoiceNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvRemindersTableset> GetInvoiceRemindersAsync(int invoiceNum) {
            return base.Channel.GetInvoiceRemindersAsync(invoiceNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetLegalNumGenOpts(EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsRequest request) {
            return base.Channel.GetLegalNumGenOpts(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.LegalNumGenOptsTableset GetLegalNumGenOpts(int ipInvoiceNum, out bool opPromptForNum) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetLegalNumGenOpts(inValue);
            opPromptForNum = retVal.opPromptForNum;
            return retVal.GetLegalNumGenOptsResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsResponse> GetLegalNumGenOptsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetLegalNumGenOptsRequest request) {
            return base.Channel.GetLegalNumGenOptsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetMilestoneBilling(EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingRequest request) {
            return base.Channel.GetMilestoneBilling(request);
        }
        
        public bool GetMilestoneBilling(string GroupID, string custList, string selectedItems_Key1, string selectedItems, out string msgNumInvoices, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingRequest();
            inValue.GroupID = GroupID;
            inValue.custList = custList;
            inValue.selectedItems_Key1 = selectedItems_Key1;
            inValue.selectedItems = selectedItems;
            EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetMilestoneBilling(inValue);
            msgNumInvoices = retVal.msgNumInvoices;
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            return retVal.InvoicesCreated;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingResponse> GetMilestoneBillingAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetMilestoneBillingRequest request) {
            return base.Channel.GetMilestoneBillingAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneTableset GetMilestoneSearch(string GroupID, string custList) {
            return base.Channel.GetMilestoneSearch(GroupID, custList);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetMilestoneTableset> GetMilestoneSearchAsync(string GroupID, string custList) {
            return base.Channel.GetMilestoneSearchAsync(GroupID, custList);
        }
        
        public string GetMXTaxRcptType() {
            return base.Channel.GetMXTaxRcptType();
        }
        
        public System.Threading.Tasks.Task<string> GetMXTaxRcptTypeAsync() {
            return base.Channel.GetMXTaxRcptTypeAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewDepositType(EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeRequest request) {
            return base.Channel.GetNewDepositType(request);
        }
        
        public void GetNewDepositType(string GroupID, string DepositBillType, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeRequest();
            inValue.GroupID = GroupID;
            inValue.DepositBillType = DepositBillType;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewDepositType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeResponse> GetNewDepositTypeAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewDepositTypeRequest request) {
            return base.Channel.GetNewDepositTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvoiceManual(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualRequest request) {
            return base.Channel.GetNewInvoiceManual(request);
        }
        
        public void GetNewInvoiceManual(string GroupID, int InvoiceNum, string InvoiceType, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualRequest();
            inValue.GroupID = GroupID;
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceType = InvoiceType;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvoiceManual(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualResponse> GetNewInvoiceManualAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvoiceManualRequest request) {
            return base.Channel.GetNewInvoiceManualAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOEResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcHeadBOE(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOERequest request) {
            return base.Channel.GetNewInvcHeadBOE(request);
        }
        
        public void GetNewInvcHeadBOE(string inGroupID, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOERequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOERequest();
            inValue.inGroupID = inGroupID;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOEResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcHeadBOE(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOEResponse> GetNewInvcHeadBOEAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadBOERequest request) {
            return base.Channel.GetNewInvcHeadBOEAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetNewInvcHeadType(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeRequest request) {
            return base.Channel.GetNewInvcHeadType(request);
        }
        
        public void GetNewInvcHeadType(string GroupID, string InvoiceType, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeRequest();
            inValue.GroupID = GroupID;
            inValue.InvoiceType = InvoiceType;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetNewInvcHeadType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeResponse> GetNewInvcHeadTypeAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetNewInvcHeadTypeRequest request) {
            return base.Channel.GetNewInvcHeadTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetPaymentDataForViewing(EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingRequest request) {
            return base.Channel.GetPaymentDataForViewing(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvPaySchedTableset GetPaymentDataForViewing(int InvoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetPaymentDataForViewing(inValue);
            ds = retVal.ds;
            return retVal.GetPaymentDataForViewingResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingResponse> GetPaymentDataForViewingAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetPaymentDataForViewingRequest request) {
            return base.Channel.GetPaymentDataForViewingAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBTableset GetPBInvcSearch(string ipGroupID, string ipPrjList, string ipInvTypes) {
            return base.Channel.GetPBInvcSearch(ipGroupID, ipPrjList, ipInvTypes);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetPBTableset> GetPBInvcSearchAsync(string ipGroupID, string ipPrjList, string ipInvTypes) {
            return base.Channel.GetPBInvcSearchAsync(ipGroupID, ipPrjList, ipInvTypes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetPBInvoices(EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesRequest request) {
            return base.Channel.GetPBInvoices(request);
        }
        
        public string GetPBInvoices(string ipGroupID, string ipPrjList, string ipInvTypes, bool filterByProject, out string opErrorList, out string msgNumInvoices, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesRequest();
            inValue.ipGroupID = ipGroupID;
            inValue.ipPrjList = ipPrjList;
            inValue.ipInvTypes = ipInvTypes;
            inValue.filterByProject = filterByProject;
            EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetPBInvoices(inValue);
            opErrorList = retVal.opErrorList;
            msgNumInvoices = retVal.msgNumInvoices;
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            return retVal.opInvcList;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesResponse> GetPBInvoicesAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetPBInvoicesRequest request) {
            return base.Channel.GetPBInvoicesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetRecurBill(EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillRequest request) {
            return base.Channel.GetRecurBill(request);
        }
        
        public bool GetRecurBill(string GroupID, string CustList, string contractList, out string msgNumInvoices, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillRequest();
            inValue.GroupID = GroupID;
            inValue.CustList = CustList;
            inValue.contractList = contractList;
            EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetRecurBill(inValue);
            msgNumInvoices = retVal.msgNumInvoices;
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            return retVal.InvoicesCreated;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillResponse> GetRecurBillAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRecurBillRequest request) {
            return base.Channel.GetRecurBillAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContTableset GetRecurBillSearch(string custList) {
            return base.Channel.GetRecurBillSearch(custList);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetFSContTableset> GetRecurBillSearchAsync(string custList) {
            return base.Channel.GetRecurBillSearchAsync(custList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetRMACredits(EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsRequest request) {
            return base.Channel.GetRMACredits(request);
        }
        
        public string GetRMACredits(string GroupID, string custList, string invList, out bool InvoicesCreated, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsRequest();
            inValue.GroupID = GroupID;
            inValue.custList = custList;
            inValue.invList = invList;
            EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetRMACredits(inValue);
            InvoicesCreated = retVal.InvoicesCreated;
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            return retVal.rMAMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsResponse> GetRMACreditsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRMACreditsRequest request) {
            return base.Channel.GetRMACreditsAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMATableset GetRMACreditsSearch(string custList) {
            return base.Channel.GetRMACreditsSearch(custList);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetRMATableset> GetRMACreditsSearchAsync(string custList) {
            return base.Channel.GetRMACreditsSearchAsync(custList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetRowsContactTracker(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerRequest request) {
            return base.Channel.GetRowsContactTracker(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkTableset GetRowsContactTracker(string whereClauseInvcHead, string whereClauseInvcHeadAttch, string whereClauseInvcDtl, string whereClauseInvcDtlAttch, string whereClauseInvcMisc, string whereClauseInvcTax, string whereClauseARIHeadTax, string contactName, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerRequest();
            inValue.whereClauseInvcHead = whereClauseInvcHead;
            inValue.whereClauseInvcHeadAttch = whereClauseInvcHeadAttch;
            inValue.whereClauseInvcDtl = whereClauseInvcDtl;
            inValue.whereClauseInvcDtlAttch = whereClauseInvcDtlAttch;
            inValue.whereClauseInvcMisc = whereClauseInvcMisc;
            inValue.whereClauseInvcTax = whereClauseInvcTax;
            inValue.whereClauseARIHeadTax = whereClauseARIHeadTax;
            inValue.contactName = contactName;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetRowsContactTracker(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsContactTrackerResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerResponse> GetRowsContactTrackerAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsContactTrackerRequest request) {
            return base.Channel.GetRowsContactTrackerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetRowsCustomerTracker(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerRequest request) {
            return base.Channel.GetRowsCustomerTracker(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.InvcCustTrkTableset GetRowsCustomerTracker(string whereClauseInvcHead, string whereClauseInvcHeadAttch, string whereClauseInvcDtl, string whereClauseInvcDtlAttch, string whereClauseInvcMisc, string whereClauseInvcTax, string whereClauseARIHeadTax, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerRequest();
            inValue.whereClauseInvcHead = whereClauseInvcHead;
            inValue.whereClauseInvcHeadAttch = whereClauseInvcHeadAttch;
            inValue.whereClauseInvcDtl = whereClauseInvcDtl;
            inValue.whereClauseInvcDtlAttch = whereClauseInvcDtlAttch;
            inValue.whereClauseInvcMisc = whereClauseInvcMisc;
            inValue.whereClauseInvcTax = whereClauseInvcTax;
            inValue.whereClauseARIHeadTax = whereClauseARIHeadTax;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetRowsCustomerTracker(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsCustomerTrackerResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerResponse> GetRowsCustomerTrackerAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetRowsCustomerTrackerRequest request) {
            return base.Channel.GetRowsCustomerTrackerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetShipmentsConsolidatedPS(EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSRequest request) {
            return base.Channel.GetShipmentsConsolidatedPS(request);
        }
        
        public string GetShipmentsConsolidatedPS(string GroupID, string CustList, string PackSlips, string Plant, bool BillToFlag, bool overBillDay, bool consolidatePS, out string Errors, out string msgNumInvoices, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSRequest();
            inValue.GroupID = GroupID;
            inValue.CustList = CustList;
            inValue.PackSlips = PackSlips;
            inValue.Plant = Plant;
            inValue.BillToFlag = BillToFlag;
            inValue.overBillDay = overBillDay;
            inValue.consolidatePS = consolidatePS;
            EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetShipmentsConsolidatedPS(inValue);
            Errors = retVal.Errors;
            msgNumInvoices = retVal.msgNumInvoices;
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            return retVal.Invoices;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSResponse> GetShipmentsConsolidatedPSAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsConsolidatedPSRequest request) {
            return base.Channel.GetShipmentsConsolidatedPSAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetShipments(EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsRequest request) {
            return base.Channel.GetShipments(request);
        }
        
        public string GetShipments(string GroupID, string CustList, string PackSlips, string Plant, bool BillToFlag, bool overBillDay, out string Errors, out string msgNumInvoices, out decimal grpTotalInvAmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsRequest();
            inValue.GroupID = GroupID;
            inValue.CustList = CustList;
            inValue.PackSlips = PackSlips;
            inValue.Plant = Plant;
            inValue.BillToFlag = BillToFlag;
            inValue.overBillDay = overBillDay;
            EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetShipments(inValue);
            Errors = retVal.Errors;
            msgNumInvoices = retVal.msgNumInvoices;
            grpTotalInvAmt = retVal.grpTotalInvAmt;
            return retVal.Invoices;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsResponse> GetShipmentsAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetShipmentsRequest request) {
            return base.Channel.GetShipmentsAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipTableset GetShipmentsSearch(string GroupID, string CustNums, string PlantChoice, bool BillToFlag, bool OnlyNotInvoiced) {
            return base.Channel.GetShipmentsSearch(GroupID, CustNums, PlantChoice, BillToFlag, OnlyNotInvoiced);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.ARInvGetShipTableset> GetShipmentsSearchAsync(string GroupID, string CustNums, string PlantChoice, bool BillToFlag, bool OnlyNotInvoiced) {
            return base.Channel.GetShipmentsSearchAsync(GroupID, CustNums, PlantChoice, BillToFlag, OnlyNotInvoiced);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.GetvalidEAD(EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADRequest request) {
            return base.Channel.GetvalidEAD(request);
        }
        
        public string GetvalidEAD(string inTransType, string inDateLabel, ref System.Nullable<System.DateTime> proposedDate) {
            EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADRequest();
            inValue.inTransType = inTransType;
            inValue.inDateLabel = inDateLabel;
            inValue.proposedDate = proposedDate;
            EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).GetvalidEAD(inValue);
            proposedDate = retVal.proposedDate;
            return retVal.cMessageText;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADResponse> GetvalidEADAsync(EpicorConsole.Epicor.ARInvoiceSvc.GetvalidEADRequest request) {
            return base.Channel.GetvalidEADAsync(request);
        }
        
        public bool InvcGrpExists(string GroupID) {
            return base.Channel.InvcGrpExists(GroupID);
        }
        
        public System.Threading.Tasks.Task<bool> InvcGrpExistsAsync(string GroupID) {
            return base.Channel.InvcGrpExistsAsync(GroupID);
        }
        
        public bool IsConvertedFromDep(int invoiceNum) {
            return base.Channel.IsConvertedFromDep(invoiceNum);
        }
        
        public System.Threading.Tasks.Task<bool> IsConvertedFromDepAsync(int invoiceNum) {
            return base.Channel.IsConvertedFromDepAsync(invoiceNum);
        }
        
        public bool IsPMForGenPIType(int ipPMUID) {
            return base.Channel.IsPMForGenPIType(ipPMUID);
        }
        
        public System.Threading.Tasks.Task<bool> IsPMForGenPITypeAsync(int ipPMUID) {
            return base.Channel.IsPMForGenPITypeAsync(ipPMUID);
        }
        
        public bool IsReturnInvoice(int ipInvoiceNum) {
            return base.Channel.IsReturnInvoice(ipInvoiceNum);
        }
        
        public System.Threading.Tasks.Task<bool> IsReturnInvoiceAsync(int ipInvoiceNum) {
            return base.Channel.IsReturnInvoiceAsync(ipInvoiceNum);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset LoadRecordsPEInvcTax(string ipGroupID, int ipInvoiceNum) {
            return base.Channel.LoadRecordsPEInvcTax(ipGroupID, ipInvoiceNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.PEDetractionsTableset> LoadRecordsPEInvcTaxAsync(string ipGroupID, int ipInvoiceNum) {
            return base.Channel.LoadRecordsPEInvcTaxAsync(ipGroupID, ipInvoiceNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.MassGenerateBOEInvcDtl(EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlRequest request) {
            return base.Channel.MassGenerateBOEInvcDtl(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset MassGenerateBOEInvcDtl(int ipInvoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.InvcHeadListTableset ds, out string massGenErrorMsg) {
            EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).MassGenerateBOEInvcDtl(inValue);
            ds = retVal.ds;
            massGenErrorMsg = retVal.massGenErrorMsg;
            return retVal.MassGenerateBOEInvcDtlResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlResponse> MassGenerateBOEInvcDtlAsync(EpicorConsole.Epicor.ARInvoiceSvc.MassGenerateBOEInvcDtlRequest request) {
            return base.Channel.MassGenerateBOEInvcDtlAsync(request);
        }
        
        public EpicorConsole.Epicor.ARInvoiceSvc.MXDigitalTaxRcptTableset MXLoadTaxRcptResults(int iInvoiceNum) {
            return base.Channel.MXLoadTaxRcptResults(iInvoiceNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.MXDigitalTaxRcptTableset> MXLoadTaxRcptResultsAsync(int iInvoiceNum) {
            return base.Channel.MXLoadTaxRcptResultsAsync(iInvoiceNum);
        }
        
        public string MXRegenReceipt(int iInvoiceNum) {
            return base.Channel.MXRegenReceipt(iInvoiceNum);
        }
        
        public System.Threading.Tasks.Task<string> MXRegenReceiptAsync(int iInvoiceNum) {
            return base.Channel.MXRegenReceiptAsync(iInvoiceNum);
        }
        
        public string MXCancelReceipt(int iInvoiceNum) {
            return base.Channel.MXCancelReceipt(iInvoiceNum);
        }
        
        public System.Threading.Tasks.Task<string> MXCancelReceiptAsync(int iInvoiceNum) {
            return base.Channel.MXCancelReceiptAsync(iInvoiceNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeAllocatedDepositAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtRequest request) {
            return base.Channel.OnChangeAllocatedDepositAmt(request);
        }
        
        public void OnChangeAllocatedDepositAmt(int ipInvoiceNum, int ipDepInvoiceNum, string ipDepGroupID, int ipDepHeadNum, decimal ipAllocatedAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtRequest();
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ipDepInvoiceNum = ipDepInvoiceNum;
            inValue.ipDepGroupID = ipDepGroupID;
            inValue.ipDepHeadNum = ipDepHeadNum;
            inValue.ipAllocatedAmt = ipAllocatedAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeAllocatedDepositAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtResponse> OnChangeAllocatedDepositAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeAllocatedDepositAmtRequest request) {
            return base.Channel.OnChangeAllocatedDepositAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeARLOCID(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDRequest request) {
            return base.Channel.OnChangeARLOCID(request);
        }
        
        public string OnChangeARLOCID(string ipARLOCID, int ipInvoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, out string opTermsCodeMsg, out string opBTCustIDValue, out string opBTCustIDMsg) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDRequest();
            inValue.ipARLOCID = ipARLOCID;
            inValue.ipInvoiceNum = ipInvoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeARLOCID(inValue);
            opTermsCodeMsg = retVal.opTermsCodeMsg;
            opBTCustIDValue = retVal.opBTCustIDValue;
            opBTCustIDMsg = retVal.opBTCustIDMsg;
            ds = retVal.ds;
            return retVal.opTermsCodeValue;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDResponse> OnChangeARLOCIDAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeARLOCIDRequest request) {
            return base.Channel.OnChangeARLOCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeBlockedFin(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinRequest request) {
            return base.Channel.OnChangeBlockedFin(request);
        }
        
        public void OnChangeBlockedFin(int invoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeBlockedFin(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinResponse> OnChangeBlockedFinAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBlockedFinRequest request) {
            return base.Channel.OnChangeBlockedFinAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeBOEStatus(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusRequest request) {
            return base.Channel.OnChangeBOEStatus(request);
        }
        
        public string OnChangeBOEStatus(int inInvoiceNum, string inNewStatus, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusRequest();
            inValue.inInvoiceNum = inInvoiceNum;
            inValue.inNewStatus = inNewStatus;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeBOEStatus(inValue);
            ds = retVal.ds;
            return retVal.opWarning;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusResponse> OnChangeBOEStatusAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeBOEStatusRequest request) {
            return base.Channel.OnChangeBOEStatusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeHold(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldRequest request) {
            return base.Channel.OnChangeHold(request);
        }
        
        public void OnChangeHold(bool ipHold, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldRequest();
            inValue.ipHold = ipHold;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeHold(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldResponse> OnChangeHoldAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldRequest request) {
            return base.Channel.OnChangeHoldAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeHoldReason(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonRequest request) {
            return base.Channel.OnChangeHoldReason(request);
        }
        
        public void OnChangeHoldReason(string ipReason, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonRequest();
            inValue.ipReason = ipReason;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeHoldReason(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonResponse> OnChangeHoldReasonAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeHoldReasonRequest request) {
            return base.Channel.OnChangeHoldReasonAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeInvDtlUseOTS(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSRequest request) {
            return base.Channel.OnChangeInvDtlUseOTS(request);
        }
        
        public void OnChangeInvDtlUseOTS(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeInvDtlUseOTS(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSResponse> OnChangeInvDtlUseOTSAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeInvDtlUseOTSRequest request) {
            return base.Channel.OnChangeInvDtlUseOTSAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeLineDefRev(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevRequest request) {
            return base.Channel.OnChangeLineDefRev(request);
        }
        
        public string OnChangeLineDefRev(bool ipDefRev, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevRequest();
            inValue.ipDefRev = ipDefRev;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeLineDefRev(inValue);
            ds = retVal.ds;
            return retVal.opOutMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevResponse> OnChangeLineDefRevAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDefRevRequest request) {
            return base.Channel.OnChangeLineDefRevAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeDeferredPercent(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentRequest request) {
            return base.Channel.OnChangeDeferredPercent(request);
        }
        
        public void OnChangeDeferredPercent(decimal ipDeferredPercent, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentRequest();
            inValue.ipDeferredPercent = ipDeferredPercent;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeDeferredPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentResponse> OnChangeDeferredPercentAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeDeferredPercentRequest request) {
            return base.Channel.OnChangeDeferredPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangePartiallyDefer(EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferRequest request) {
            return base.Channel.OnChangePartiallyDefer(request);
        }
        
        public void OnChangePartiallyDefer(bool ipPartiallyDefer, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferRequest();
            inValue.ipPartiallyDefer = ipPartiallyDefer;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangePartiallyDefer(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferResponse> OnChangePartiallyDeferAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangePartiallyDeferRequest request) {
            return base.Channel.OnChangePartiallyDeferAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeReclass(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassRequest request) {
            return base.Channel.OnChangeReclass(request);
        }
        
        public void OnChangeReclass(bool ipReclass, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassRequest();
            inValue.ipReclass = ipReclass;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeReclass(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassResponse> OnChangeReclassAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassRequest request) {
            return base.Channel.OnChangeReclassAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeReclassCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeRequest request) {
            return base.Channel.OnChangeReclassCode(request);
        }
        
        public void OnChangeReclassCode(string ipReclassCodeID, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeRequest();
            inValue.ipReclassCodeID = ipReclassCodeID;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeReclassCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeResponse> OnChangeReclassCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassCodeRequest request) {
            return base.Channel.OnChangeReclassCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeReclassReasonCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeRequest request) {
            return base.Channel.OnChangeReclassReasonCode(request);
        }
        
        public void OnChangeReclassReasonCode(string ipReclassReasonCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeRequest();
            inValue.ipReclassReasonCode = ipReclassReasonCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeReclassReasonCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeResponse> OnChangeReclassReasonCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeReclassReasonCodeRequest request) {
            return base.Channel.OnChangeReclassReasonCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeUnrecognizedAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtRequest request) {
            return base.Channel.OnChangeUnrecognizedAmt(request);
        }
        
        public void OnChangeUnrecognizedAmt(decimal ipProposedAmount, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtRequest();
            inValue.ipProposedAmount = ipProposedAmount;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeUnrecognizedAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtResponse> OnChangeUnrecognizedAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeUnrecognizedAmtRequest request) {
            return base.Channel.OnChangeUnrecognizedAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeLineDspWithholdAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtRequest request) {
            return base.Channel.OnChangeLineDspWithholdAmt(request);
        }
        
        public void OnChangeLineDspWithholdAmt(decimal newDspWithholdAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtRequest();
            inValue.newDspWithholdAmt = newDspWithholdAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeLineDspWithholdAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtResponse> OnChangeLineDspWithholdAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineDspWithholdAmtRequest request) {
            return base.Channel.OnChangeLineDspWithholdAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeLineInvoiceRef(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefRequest request) {
            return base.Channel.OnChangeLineInvoiceRef(request);
        }
        
        public void OnChangeLineInvoiceRef(int NewInvoiceRef, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefRequest();
            inValue.NewInvoiceRef = NewInvoiceRef;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeLineInvoiceRef(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefResponse> OnChangeLineInvoiceRefAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeLineInvoiceRefRequest request) {
            return base.Channel.OnChangeLineInvoiceRefAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeOfAmortDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateRequest request) {
            return base.Channel.OnChangeOfAmortDate(request);
        }
        
        public void OnChangeOfAmortDate(System.Nullable<System.DateTime> ipAmortDate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateRequest();
            inValue.ipAmortDate = ipAmortDate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeOfAmortDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateResponse> OnChangeOfAmortDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfAmortDateRequest request) {
            return base.Channel.OnChangeOfAmortDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofApplyDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateRequest request) {
            return base.Channel.OnChangeofApplyDate(request);
        }
        
        public void OnChangeofApplyDate(int InvoiceNum, System.Nullable<System.DateTime> NewApplyDate, string recalcamts, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewApplyDate = NewApplyDate;
            inValue.recalcamts = recalcamts;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofApplyDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateResponse> OnChangeofApplyDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateRequest request) {
            return base.Channel.OnChangeofApplyDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofApplyDateEx(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExRequest request) {
            return base.Channel.OnChangeofApplyDateEx(request);
        }
        
        public void OnChangeofApplyDateEx(int InvoiceNum, System.Nullable<System.DateTime> NewApplyDate, string recalcamts, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewApplyDate = NewApplyDate;
            inValue.recalcamts = recalcamts;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofApplyDateEx(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExResponse> OnChangeofApplyDateExAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofApplyDateExRequest request) {
            return base.Channel.OnChangeofApplyDateExAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofChrgAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtRequest request) {
            return base.Channel.OnChangeofChrgAmt(request);
        }
        
        public void OnChangeofChrgAmt(int InvoiceNum, int InvoiceLine, int SeqNum, decimal NewChrgAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.SeqNum = SeqNum;
            inValue.NewChrgAmt = NewChrgAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofChrgAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtResponse> OnChangeofChrgAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofChrgAmtRequest request) {
            return base.Channel.OnChangeofChrgAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofContact(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactRequest request) {
            return base.Channel.OnChangeofContact(request);
        }
        
        public void OnChangeofContact(int InvoiceNum, int NewContact, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewContact = NewContact;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofContact(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactResponse> OnChangeofContactAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofContactRequest request) {
            return base.Channel.OnChangeofContactAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofCurrency(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyRequest request) {
            return base.Channel.OnChangeofCurrency(request);
        }
        
        public void OnChangeofCurrency(int InvoiceNum, string NewCurrencyCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewCurrencyCode = NewCurrencyCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofCurrency(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyResponse> OnChangeofCurrencyAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCurrencyRequest request) {
            return base.Channel.OnChangeofCurrencyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofCustomer(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerRequest request) {
            return base.Channel.OnChangeofCustomer(request);
        }
        
        public void OnChangeofCustomer(int InvoiceNum, string NewCustomerID, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewCustomerID = NewCustomerID;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofCustomer(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerResponse> OnChangeofCustomerAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofCustomerRequest request) {
            return base.Channel.OnChangeofCustomerAsync(request);
        }
        
        public void OnChangeOfDefRevStart(System.Nullable<System.DateTime> ipDefRevStart, int ipInvoiceNum, int ipInvoiceLine) {
            base.Channel.OnChangeOfDefRevStart(ipDefRevStart, ipInvoiceNum, ipInvoiceLine);
        }
        
        public System.Threading.Tasks.Task OnChangeOfDefRevStartAsync(System.Nullable<System.DateTime> ipDefRevStart, int ipInvoiceNum, int ipInvoiceLine) {
            return base.Channel.OnChangeOfDefRevStartAsync(ipDefRevStart, ipInvoiceNum, ipInvoiceLine);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofDepAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtRequest request) {
            return base.Channel.OnChangeofDepAmt(request);
        }
        
        public void OnChangeofDepAmt(int invoiceNum, decimal depositAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.depositAmt = depositAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofDepAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtResponse> OnChangeofDepAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepAmtRequest request) {
            return base.Channel.OnChangeofDepAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofDeposit(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositRequest request) {
            return base.Channel.OnChangeofDeposit(request);
        }
        
        public void OnChangeofDeposit(int InvoiceNum, decimal DspCredit, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.DspCredit = DspCredit;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofDeposit(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositResponse> OnChangeofDepositAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofDepositRequest request) {
            return base.Channel.OnChangeofDepositAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofExchangeRate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateRequest request) {
            return base.Channel.OnChangeofExchangeRate(request);
        }
        
        public void OnChangeofExchangeRate(int InvoiceNum, decimal NewExchangeRate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewExchangeRate = NewExchangeRate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofExchangeRate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateResponse> OnChangeofExchangeRateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofExchangeRateRequest request) {
            return base.Channel.OnChangeofExchangeRateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofFixedAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtRequest request) {
            return base.Channel.OnChangeofFixedAmt(request);
        }
        
        public void OnChangeofFixedAmt(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, decimal NewTaxAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.TaxCode = TaxCode;
            inValue.RateCode = RateCode;
            inValue.NewTaxAmt = NewTaxAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofFixedAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtResponse> OnChangeofFixedAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFixedAmtRequest request) {
            return base.Channel.OnChangeofFixedAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofFOB(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBRequest request) {
            return base.Channel.OnChangeofFOB(request);
        }
        
        public void OnChangeofFOB(int InvoiceNum, string NewFOB, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewFOB = NewFOB;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofFOB(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBResponse> OnChangeofFOBAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofFOBRequest request) {
            return base.Channel.OnChangeofFOBAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofInvDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateRequest request) {
            return base.Channel.OnChangeofInvDate(request);
        }
        
        public void OnChangeofInvDate(int InvoiceNum, System.Nullable<System.DateTime> NewInvoiceDate, string recalcamts, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewInvoiceDate = NewInvoiceDate;
            inValue.recalcamts = recalcamts;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofInvDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateResponse> OnChangeofInvDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateRequest request) {
            return base.Channel.OnChangeofInvDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofInvDateEx(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExRequest request) {
            return base.Channel.OnChangeofInvDateEx(request);
        }
        
        public string OnChangeofInvDateEx(int InvoiceNum, System.Nullable<System.DateTime> NewInvoiceDate, string recalcamts, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewInvoiceDate = NewInvoiceDate;
            inValue.recalcamts = recalcamts;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofInvDateEx(inValue);
            ds = retVal.ds;
            return retVal.cMessageText;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExResponse> OnChangeofInvDateExAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvDateExRequest request) {
            return base.Channel.OnChangeofInvDateExAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofInvoiceAddress(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressRequest request) {
            return base.Channel.OnChangeofInvoiceAddress(request);
        }
        
        public void OnChangeofInvoiceAddress(string FieldName, bool FieldValue, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressRequest();
            inValue.FieldName = FieldName;
            inValue.FieldValue = FieldValue;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofInvoiceAddress(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressResponse> OnChangeofInvoiceAddressAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceAddressRequest request) {
            return base.Channel.OnChangeofInvoiceAddressAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeOfRevisionDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateRequest request) {
            return base.Channel.OnChangeOfRevisionDate(request);
        }
        
        public void OnChangeOfRevisionDate(int invoiceNum, System.Nullable<System.DateTime> newRevisionDate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateRequest();
            inValue.invoiceNum = invoiceNum;
            inValue.newRevisionDate = newRevisionDate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeOfRevisionDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateResponse> OnChangeOfRevisionDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfRevisionDateRequest request) {
            return base.Channel.OnChangeOfRevisionDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofRevisionNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumRequest request) {
            return base.Channel.OnChangeofRevisionNum(request);
        }
        
        public void OnChangeofRevisionNum(int newRevisionNum, int InvoiceNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumRequest();
            inValue.newRevisionNum = newRevisionNum;
            inValue.InvoiceNum = InvoiceNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofRevisionNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumResponse> OnChangeofRevisionNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofRevisionNumRequest request) {
            return base.Channel.OnChangeofRevisionNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofInvoiceRef(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefRequest request) {
            return base.Channel.OnChangeofInvoiceRef(request);
        }
        
        public void OnChangeofInvoiceRef(int InvoiceNum, int NewInvoiceRef, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewInvoiceRef = NewInvoiceRef;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofInvoiceRef(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefResponse> OnChangeofInvoiceRefAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofInvoiceRefRequest request) {
            return base.Channel.OnChangeofInvoiceRefAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineAdvBill(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillRequest request) {
            return base.Channel.OnChangeofLineAdvBill(request);
        }
        
        public void OnChangeofLineAdvBill(int InvoiceNum, int InvoiceLine, decimal NewAdvBillAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewAdvBillAmt = NewAdvBillAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineAdvBill(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillResponse> OnChangeofLineAdvBillAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineAdvBillRequest request) {
            return base.Channel.OnChangeofLineAdvBillAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineContact(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactRequest request) {
            return base.Channel.OnChangeofLineContact(request);
        }
        
        public void OnChangeofLineContact(int InvoiceNum, int InvoiceLine, int NewContact, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewContact = NewContact;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineContact(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactResponse> OnChangeofLineContactAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineContactRequest request) {
            return base.Channel.OnChangeofLineContactAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineDesc(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescRequest request) {
            return base.Channel.OnChangeofLineDesc(request);
        }
        
        public void OnChangeofLineDesc(int InvoiceNum, int InvoiceLine, string NewPartDesc, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewPartDesc = NewPartDesc;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineDesc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescResponse> OnChangeofLineDescAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDescRequest request) {
            return base.Channel.OnChangeofLineDescAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineDiscAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtRequest request) {
            return base.Channel.OnChangeofLineDiscAmt(request);
        }
        
        public void OnChangeofLineDiscAmt(int InvoiceNum, int InvoiceLine, decimal NewDiscAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewDiscAmt = NewDiscAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineDiscAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtResponse> OnChangeofLineDiscAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscAmtRequest request) {
            return base.Channel.OnChangeofLineDiscAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineDiscPerc(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercRequest request) {
            return base.Channel.OnChangeofLineDiscPerc(request);
        }
        
        public void OnChangeofLineDiscPerc(int InvoiceNum, int InvoiceLine, decimal NewDiscPerc, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewDiscPerc = NewDiscPerc;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineDiscPerc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercResponse> OnChangeofLineDiscPercAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineDiscPercRequest request) {
            return base.Channel.OnChangeofLineDiscPercAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineExtPrice(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceRequest request) {
            return base.Channel.OnChangeofLineExtPrice(request);
        }
        
        public void OnChangeofLineExtPrice(int InvoiceNum, int InvoiceLine, decimal NewExtAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewExtAmt = NewExtAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineExtPrice(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceResponse> OnChangeofLineExtPriceAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineExtPriceRequest request) {
            return base.Channel.OnChangeofLineExtPriceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineInvoiceLineRef(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefRequest request) {
            return base.Channel.OnChangeofLineInvoiceLineRef(request);
        }
        
        public void OnChangeofLineInvoiceLineRef(int InvoiceNum, int InvoiceLine, int newInvoiceLineRef, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.newInvoiceLineRef = newInvoiceLineRef;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineInvoiceLineRef(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefResponse> OnChangeofLineInvoiceLineRefAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineInvoiceLineRefRequest request) {
            return base.Channel.OnChangeofLineInvoiceLineRefAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineOrderLine(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineRequest request) {
            return base.Channel.OnChangeofLineOrderLine(request);
        }
        
        public void OnChangeofLineOrderLine(int InvoiceNum, int InvoiceLine, int NewOrderLine, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewOrderLine = NewOrderLine;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineOrderLine(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineResponse> OnChangeofLineOrderLineAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderLineRequest request) {
            return base.Channel.OnChangeofLineOrderLineAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineOrderRelease(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseRequest request) {
            return base.Channel.OnChangeofLineOrderRelease(request);
        }
        
        public void OnChangeofLineOrderRelease(int InvoiceNum, int InvoiceLine, int NewOrderRel, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewOrderRel = NewOrderRel;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineOrderRelease(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseResponse> OnChangeofLineOrderReleaseAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineOrderReleaseRequest request) {
            return base.Channel.OnChangeofLineOrderReleaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLinePartNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumRequest request) {
            return base.Channel.OnChangeofLinePartNum(request);
        }
        
        public void OnChangeofLinePartNum(int InvoiceNum, int InvoiceLine, string NewPartNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewPartNum = NewPartNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLinePartNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumResponse> OnChangeofLinePartNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePartNumRequest request) {
            return base.Channel.OnChangeofLinePartNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLinePricePerCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeRequest request) {
            return base.Channel.OnChangeofLinePricePerCode(request);
        }
        
        public void OnChangeofLinePricePerCode(int InvoiceNum, int InvoiceLine, string NewPricePer, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewPricePer = NewPricePer;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLinePricePerCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeResponse> OnChangeofLinePricePerCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinePricePerCodeRequest request) {
            return base.Channel.OnChangeofLinePricePerCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineProdCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeRequest request) {
            return base.Channel.OnChangeofLineProdCode(request);
        }
        
        public void OnChangeofLineProdCode(int InvoiceNum, int InvoiceLine, string NewProdCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewProdCode = NewProdCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineProdCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeResponse> OnChangeofLineProdCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineProdCodeRequest request) {
            return base.Channel.OnChangeofLineProdCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineQty(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyRequest request) {
            return base.Channel.OnChangeofLineQty(request);
        }
        
        public void OnChangeofLineQty(int InvoiceNum, int InvoiceLine, decimal NewQty, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewQty = NewQty;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineQty(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyResponse> OnChangeofLineQtyAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineQtyRequest request) {
            return base.Channel.OnChangeofLineQtyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineRevNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumRequest request) {
            return base.Channel.OnChangeofLineRevNum(request);
        }
        
        public void OnChangeofLineRevNum(int InvoiceNum, int InvoiceLine, string NewRevNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewRevNum = NewRevNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineRevNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumResponse> OnChangeofLineRevNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineRevNumRequest request) {
            return base.Channel.OnChangeofLineRevNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineSalesUM(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMRequest request) {
            return base.Channel.OnChangeofLineSalesUM(request);
        }
        
        public void OnChangeofLineSalesUM(int InvoiceNum, int InvoiceLine, string NewSalesUM, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewSalesUM = NewSalesUM;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineSalesUM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMResponse> OnChangeofLineSalesUMAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineSalesUMRequest request) {
            return base.Channel.OnChangeofLineSalesUMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineShipDate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateRequest request) {
            return base.Channel.OnChangeofLineShipDate(request);
        }
        
        public void OnChangeofLineShipDate(int InvoiceNum, int InvoiceLine, System.Nullable<System.DateTime> NewShipDate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewShipDate = NewShipDate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineShipDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateResponse> OnChangeofLineShipDateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipDateRequest request) {
            return base.Channel.OnChangeofLineShipDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeOfLineShipToCustID(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDRequest request) {
            return base.Channel.OnChangeOfLineShipToCustID(request);
        }
        
        public void OnChangeOfLineShipToCustID(string newShipToCustID, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDRequest();
            inValue.newShipToCustID = newShipToCustID;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeOfLineShipToCustID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDResponse> OnChangeOfLineShipToCustIDAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeOfLineShipToCustIDRequest request) {
            return base.Channel.OnChangeOfLineShipToCustIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineShipToNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumRequest request) {
            return base.Channel.OnChangeofLineShipToNum(request);
        }
        
        public void OnChangeofLineShipToNum(int InvoiceNum, int InvoiceLine, string NewShipToNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewShipToNum = NewShipToNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineShipToNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumResponse> OnChangeofLineShipToNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipToNumRequest request) {
            return base.Channel.OnChangeofLineShipToNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineShipVia(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaRequest request) {
            return base.Channel.OnChangeofLineShipVia(request);
        }
        
        public void OnChangeofLineShipVia(int InvoiceNum, int InvoiceLine, string NewShipVia, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewShipVia = NewShipVia;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineShipVia(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaResponse> OnChangeofLineShipViaAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineShipViaRequest request) {
            return base.Channel.OnChangeofLineShipViaAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineTaxCat(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatRequest request) {
            return base.Channel.OnChangeofLineTaxCat(request);
        }
        
        public void OnChangeofLineTaxCat(int InvoiceNum, int InvoiceLine, string NewTaxCat, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewTaxCat = NewTaxCat;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineTaxCat(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatResponse> OnChangeofLineTaxCatAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxCatRequest request) {
            return base.Channel.OnChangeofLineTaxCatAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineTaxExempt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptRequest request) {
            return base.Channel.OnChangeofLineTaxExempt(request);
        }
        
        public void OnChangeofLineTaxExempt(int InvoiceNum, int InvoiceLine, string NewTaxExempt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewTaxExempt = NewTaxExempt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineTaxExempt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptResponse> OnChangeofLineTaxExemptAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxExemptRequest request) {
            return base.Channel.OnChangeofLineTaxExemptAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineTaxRgn(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnRequest request) {
            return base.Channel.OnChangeofLineTaxRgn(request);
        }
        
        public void OnChangeofLineTaxRgn(string iTaxRegionCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnRequest();
            inValue.iTaxRegionCode = iTaxRegionCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineTaxRgn(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnResponse> OnChangeofLineTaxRgnAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineTaxRgnRequest request) {
            return base.Channel.OnChangeofLineTaxRgnAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLineUnitPrice(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceRequest request) {
            return base.Channel.OnChangeofLineUnitPrice(request);
        }
        
        public void OnChangeofLineUnitPrice(int InvoiceNum, int InvoiceLine, decimal NewUnitPrice, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.NewUnitPrice = NewUnitPrice;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLineUnitPrice(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceResponse> OnChangeofLineUnitPriceAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLineUnitPriceRequest request) {
            return base.Channel.OnChangeofLineUnitPriceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLinkedInvcUnitPrice(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceRequest request) {
            return base.Channel.OnChangeofLinkedInvcUnitPrice(request);
        }
        
        public void OnChangeofLinkedInvcUnitPrice(int InvoiceNum, int InvoiceLine, decimal newLinkedUnitPrice, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.newLinkedUnitPrice = newLinkedUnitPrice;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLinkedInvcUnitPrice(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceResponse> OnChangeofLinkedInvcUnitPriceAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLinkedInvcUnitPriceRequest request) {
            return base.Channel.OnChangeofLinkedInvcUnitPriceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofLockRate(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateRequest request) {
            return base.Channel.OnChangeofLockRate(request);
        }
        
        public void OnChangeofLockRate(int InvoiceNum, bool NewLockRate, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewLockRate = NewLockRate;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofLockRate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateResponse> OnChangeofLockRateAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofLockRateRequest request) {
            return base.Channel.OnChangeofLockRateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofManualTax(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxRequest request) {
            return base.Channel.OnChangeofManualTax(request);
        }
        
        public void OnChangeofManualTax(int InvoiceNum, int InvoiceLine, string TaxCode, string RateCode, bool NewManualTax, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.TaxCode = TaxCode;
            inValue.RateCode = RateCode;
            inValue.NewManualTax = NewManualTax;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofManualTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxResponse> OnChangeofManualTaxAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofManualTaxRequest request) {
            return base.Channel.OnChangeofManualTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofMiscAmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtRequest request) {
            return base.Channel.OnChangeofMiscAmt(request);
        }
        
        public void OnChangeofMiscAmt(int InvoiceNum, int InvoiceLine, int SeqNum, decimal NewMiscAmt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.SeqNum = SeqNum;
            inValue.NewMiscAmt = NewMiscAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofMiscAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtResponse> OnChangeofMiscAmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscAmtRequest request) {
            return base.Channel.OnChangeofMiscAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofMiscCode(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeRequest request) {
            return base.Channel.OnChangeofMiscCode(request);
        }
        
        public void OnChangeofMiscCode(int InvoiceNum, int InvoiceLine, int SeqNum, string NewMiscCode, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.SeqNum = SeqNum;
            inValue.NewMiscCode = NewMiscCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofMiscCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeResponse> OnChangeofMiscCodeAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscCodeRequest request) {
            return base.Channel.OnChangeofMiscCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofMiscPrcnt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntRequest request) {
            return base.Channel.OnChangeofMiscPrcnt(request);
        }
        
        public void OnChangeofMiscPrcnt(int InvoiceNum, int InvoiceLine, int SeqNum, decimal NewPrcnt, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.InvoiceLine = InvoiceLine;
            inValue.SeqNum = SeqNum;
            inValue.NewPrcnt = NewPrcnt;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofMiscPrcnt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntResponse> OnChangeofMiscPrcntAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMiscPrcntRequest request) {
            return base.Channel.OnChangeofMiscPrcntAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofMXPartPmt(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtRequest request) {
            return base.Channel.OnChangeofMXPartPmt(request);
        }
        
        public void OnChangeofMXPartPmt(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int InvoiceNum, bool newMXPartPmt) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtRequest();
            inValue.ds = ds;
            inValue.InvoiceNum = InvoiceNum;
            inValue.newMXPartPmt = newMXPartPmt;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofMXPartPmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtResponse> OnChangeofMXPartPmtAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofMXPartPmtRequest request) {
            return base.Channel.OnChangeofMXPartPmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofOrderNum(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumRequest request) {
            return base.Channel.OnChangeofOrderNum(request);
        }
        
        public void OnChangeofOrderNum(int InvoiceNum, int NewOrderNum, ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumRequest();
            inValue.InvoiceNum = InvoiceNum;
            inValue.NewOrderNum = NewOrderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofOrderNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumResponse> OnChangeofOrderNumAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofOrderNumRequest request) {
            return base.Channel.OnChangeofOrderNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodResponse EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract.OnChangeofPayMethod(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodRequest request) {
            return base.Channel.OnChangeofPayMethod(request);
        }
        
        public void OnChangeofPayMethod(ref EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceTableset ds, int InvoiceNum, string newPayMethod) {
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodRequest inValue = new EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodRequest();
            inValue.ds = ds;
            inValue.InvoiceNum = InvoiceNum;
            inValue.newPayMethod = newPayMethod;
            EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodResponse retVal = ((EpicorConsole.Epicor.ARInvoiceSvc.ARInvoiceSvcContract)(this)).OnChangeofPayMethod(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodResponse> OnChangeofPayMethodAsync(EpicorConsole.Epicor.ARInvoiceSvc.OnChangeofPayMethodRequest request) {
            return base.Channel.OnChangeofPayMethodAsync(request);
        }
    }
}
