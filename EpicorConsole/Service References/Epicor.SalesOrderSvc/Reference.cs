//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicorConsole.Epicor.SalesOrderSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHedListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.UpdExtSalesOrderTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.ETCAddrValidationTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrdRelJobProdTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrdDtlQuoteQtyTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderCustTrkTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderCustTrkTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkTable OrderCustTrkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkTable OrderCustTrk {
            get {
                return this.OrderCustTrkField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCustTrkField, value) != true)) {
                    this.OrderCustTrkField = value;
                    this.RaisePropertyChanged("OrderCustTrk");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParams {
            get {
                return this.SelectSerialNumbersParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectSerialNumbersParamsField, value) != true)) {
                    this.SelectSerialNumbersParamsField = value;
                    this.RaisePropertyChanged("SelectSerialNumbersParams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SOEntryUIParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SOEntryUIParamsTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsTable SOEntryUIParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsTable SOEntryUIParams {
            get {
                return this.SOEntryUIParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SOEntryUIParamsField, value) != true)) {
                    this.SOEntryUIParamsField = value;
                    this.RaisePropertyChanged("SOEntryUIParams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbSugPOChgTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class GlbSugPOChgTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTable GlbSugPOChgField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTable GlbSugPOChg {
            get {
                return this.GlbSugPOChgField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbSugPOChgField, value) != true)) {
                    this.GlbSugPOChgField = value;
                    this.RaisePropertyChanged("GlbSugPOChg");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesOrderTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SalesOrderTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.HedTaxSumTable HedTaxSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OHOrderMscTable OHOrderMscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderDtlTable OrderDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderDtlAttchTable OrderDtlAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedTable OrderHedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedAttchTable OrderHedAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedUPSTable OrderHedUPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHistTable OrderHistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderMscTable OrderMscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderRelTable OrderRelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderRelTaxTable OrderRelTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderRepCommTable OrderRepCommField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.PartSubsTable PartSubsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.TaxConnectStatusTable TaxConnectStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.HedTaxSumTable HedTaxSum {
            get {
                return this.HedTaxSumField;
            }
            set {
                if ((object.ReferenceEquals(this.HedTaxSumField, value) != true)) {
                    this.HedTaxSumField = value;
                    this.RaisePropertyChanged("HedTaxSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OHOrderMscTable OHOrderMsc {
            get {
                return this.OHOrderMscField;
            }
            set {
                if ((object.ReferenceEquals(this.OHOrderMscField, value) != true)) {
                    this.OHOrderMscField = value;
                    this.RaisePropertyChanged("OHOrderMsc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderDtlTable OrderDtl {
            get {
                return this.OrderDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDtlField, value) != true)) {
                    this.OrderDtlField = value;
                    this.RaisePropertyChanged("OrderDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderDtlAttchTable OrderDtlAttch {
            get {
                return this.OrderDtlAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDtlAttchField, value) != true)) {
                    this.OrderDtlAttchField = value;
                    this.RaisePropertyChanged("OrderDtlAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedTable OrderHed {
            get {
                return this.OrderHedField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderHedField, value) != true)) {
                    this.OrderHedField = value;
                    this.RaisePropertyChanged("OrderHed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedAttchTable OrderHedAttch {
            get {
                return this.OrderHedAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderHedAttchField, value) != true)) {
                    this.OrderHedAttchField = value;
                    this.RaisePropertyChanged("OrderHedAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedUPSTable OrderHedUPS {
            get {
                return this.OrderHedUPSField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderHedUPSField, value) != true)) {
                    this.OrderHedUPSField = value;
                    this.RaisePropertyChanged("OrderHedUPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHistTable OrderHist {
            get {
                return this.OrderHistField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderHistField, value) != true)) {
                    this.OrderHistField = value;
                    this.RaisePropertyChanged("OrderHist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderMscTable OrderMsc {
            get {
                return this.OrderMscField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMscField, value) != true)) {
                    this.OrderMscField = value;
                    this.RaisePropertyChanged("OrderMsc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderRelTable OrderRel {
            get {
                return this.OrderRelField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderRelField, value) != true)) {
                    this.OrderRelField = value;
                    this.RaisePropertyChanged("OrderRel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderRelTaxTable OrderRelTax {
            get {
                return this.OrderRelTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderRelTaxField, value) != true)) {
                    this.OrderRelTaxField = value;
                    this.RaisePropertyChanged("OrderRelTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderRepCommTable OrderRepComm {
            get {
                return this.OrderRepCommField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderRepCommField, value) != true)) {
                    this.OrderRepCommField = value;
                    this.RaisePropertyChanged("OrderRepComm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.PartSubsTable PartSubs {
            get {
                return this.PartSubsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSubsField, value) != true)) {
                    this.PartSubsField = value;
                    this.RaisePropertyChanged("PartSubs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.TaxConnectStatusTable TaxConnectStatus {
            get {
                return this.TaxConnectStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxConnectStatusField, value) != true)) {
                    this.TaxConnectStatusField = value;
                    this.RaisePropertyChanged("TaxConnectStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHedListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderHedListTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedListTable OrderHedListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedListTable OrderHedList {
            get {
                return this.OrderHedListField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderHedListField, value) != true)) {
                    this.OrderHedListField = value;
                    this.RaisePropertyChanged("OrderHedList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtSalesOrderTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtSalesOrderTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.HedTaxSumTable HedTaxSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OHOrderMscTable OHOrderMscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderDtlTable OrderDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderDtlAttchTable OrderDtlAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedTable OrderHedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedAttchTable OrderHedAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedUPSTable OrderHedUPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHistTable OrderHistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderMscTable OrderMscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderRelTable OrderRelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderRelTaxTable OrderRelTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderRepCommTable OrderRepCommField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.PartSubsTable PartSubsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.TaxConnectStatusTable TaxConnectStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.HedTaxSumTable HedTaxSum {
            get {
                return this.HedTaxSumField;
            }
            set {
                if ((object.ReferenceEquals(this.HedTaxSumField, value) != true)) {
                    this.HedTaxSumField = value;
                    this.RaisePropertyChanged("HedTaxSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OHOrderMscTable OHOrderMsc {
            get {
                return this.OHOrderMscField;
            }
            set {
                if ((object.ReferenceEquals(this.OHOrderMscField, value) != true)) {
                    this.OHOrderMscField = value;
                    this.RaisePropertyChanged("OHOrderMsc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderDtlTable OrderDtl {
            get {
                return this.OrderDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDtlField, value) != true)) {
                    this.OrderDtlField = value;
                    this.RaisePropertyChanged("OrderDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderDtlAttchTable OrderDtlAttch {
            get {
                return this.OrderDtlAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDtlAttchField, value) != true)) {
                    this.OrderDtlAttchField = value;
                    this.RaisePropertyChanged("OrderDtlAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedTable OrderHed {
            get {
                return this.OrderHedField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderHedField, value) != true)) {
                    this.OrderHedField = value;
                    this.RaisePropertyChanged("OrderHed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedAttchTable OrderHedAttch {
            get {
                return this.OrderHedAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderHedAttchField, value) != true)) {
                    this.OrderHedAttchField = value;
                    this.RaisePropertyChanged("OrderHedAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedUPSTable OrderHedUPS {
            get {
                return this.OrderHedUPSField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderHedUPSField, value) != true)) {
                    this.OrderHedUPSField = value;
                    this.RaisePropertyChanged("OrderHedUPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHistTable OrderHist {
            get {
                return this.OrderHistField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderHistField, value) != true)) {
                    this.OrderHistField = value;
                    this.RaisePropertyChanged("OrderHist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderMscTable OrderMsc {
            get {
                return this.OrderMscField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMscField, value) != true)) {
                    this.OrderMscField = value;
                    this.RaisePropertyChanged("OrderMsc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderRelTable OrderRel {
            get {
                return this.OrderRelField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderRelField, value) != true)) {
                    this.OrderRelField = value;
                    this.RaisePropertyChanged("OrderRel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderRelTaxTable OrderRelTax {
            get {
                return this.OrderRelTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderRelTaxField, value) != true)) {
                    this.OrderRelTaxField = value;
                    this.RaisePropertyChanged("OrderRelTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderRepCommTable OrderRepComm {
            get {
                return this.OrderRepCommField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderRepCommField, value) != true)) {
                    this.OrderRepCommField = value;
                    this.RaisePropertyChanged("OrderRepComm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.PartSubsTable PartSubs {
            get {
                return this.PartSubsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSubsField, value) != true)) {
                    this.PartSubsField = value;
                    this.RaisePropertyChanged("PartSubs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.TaxConnectStatusTable TaxConnectStatus {
            get {
                return this.TaxConnectStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxConnectStatusField, value) != true)) {
                    this.TaxConnectStatusField = value;
                    this.RaisePropertyChanged("TaxConnectStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveOTSParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SaveOTSParamsTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsTable SaveOTSParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsTable SaveOTSParams {
            get {
                return this.SaveOTSParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SaveOTSParamsField, value) != true)) {
                    this.SaveOTSParamsField = value;
                    this.RaisePropertyChanged("SaveOTSParams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCAddrValidationTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ETCAddrValidationTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.ETCAddressTable ETCAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.ETCMessageTable ETCMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.ETCAddressTable ETCAddress {
            get {
                return this.ETCAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ETCAddressField, value) != true)) {
                    this.ETCAddressField = value;
                    this.RaisePropertyChanged("ETCAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.ETCMessageTable ETCMessage {
            get {
                return this.ETCMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ETCMessageField, value) != true)) {
                    this.ETCMessageField = value;
                    this.RaisePropertyChanged("ETCMessage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrdRelJobProdTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrdRelJobProdTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.JobProdTable JobProdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.JobProdTable JobProd {
            get {
                return this.JobProdField;
            }
            set {
                if ((object.ReferenceEquals(this.JobProdField, value) != true)) {
                    this.JobProdField = value;
                    this.RaisePropertyChanged("JobProd");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrdDtlQuoteQtyTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrdDtlQuoteQtyTableset : EpicorConsole.Epicor.SalesOrderSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.QuoteQtyTable QuoteQtyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.QuoteQtyTable QuoteQty {
            get {
                return this.QuoteQtyField;
            }
            set {
                if ((object.ReferenceEquals(this.QuoteQtyField, value) != true)) {
                    this.QuoteQtyField = value;
                    this.RaisePropertyChanged("QuoteQty");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="QuoteQtyTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="QuoteQtyRow")]
    [System.SerializableAttribute()]
    public class QuoteQtyTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.QuoteQtyRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderCustTrkTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderCustTrkRow")]
    [System.SerializableAttribute()]
    public class OrderCustTrkTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderCustTrkRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderCustTrkRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTContactFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTContactPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnCreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDtlNeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDtlRequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderHedNeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderHedRequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrcConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShpConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRevisionNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddressList {
            get {
                return this.BTAddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddressListField, value) != true)) {
                    this.BTAddressListField = value;
                    this.RaisePropertyChanged("BTAddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTConNum {
            get {
                return this.BTConNumField;
            }
            set {
                if ((this.BTConNumField.Equals(value) != true)) {
                    this.BTConNumField = value;
                    this.RaisePropertyChanged("BTConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTContactFaxNum {
            get {
                return this.BTContactFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTContactFaxNumField, value) != true)) {
                    this.BTContactFaxNumField = value;
                    this.RaisePropertyChanged("BTContactFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTContactName {
            get {
                return this.BTContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTContactNameField, value) != true)) {
                    this.BTContactNameField = value;
                    this.RaisePropertyChanged("BTContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTContactPhoneNum {
            get {
                return this.BTContactPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTContactPhoneNumField, value) != true)) {
                    this.BTContactPhoneNumField = value;
                    this.RaisePropertyChanged("BTContactPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditOverride {
            get {
                return this.CreditOverrideField;
            }
            set {
                if ((this.CreditOverrideField.Equals(value) != true)) {
                    this.CreditOverrideField = value;
                    this.RaisePropertyChanged("CreditOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnitPrice {
            get {
                return this.DocUnitPriceField;
            }
            set {
                if ((this.DocUnitPriceField.Equals(value) != true)) {
                    this.DocUnitPriceField = value;
                    this.RaisePropertyChanged("DocUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnCreditHold {
            get {
                return this.OnCreditHoldField;
            }
            set {
                if ((this.OnCreditHoldField.Equals(value) != true)) {
                    this.OnCreditHoldField = value;
                    this.RaisePropertyChanged("OnCreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenLine {
            get {
                return this.OpenLineField;
            }
            set {
                if ((this.OpenLineField.Equals(value) != true)) {
                    this.OpenLineField = value;
                    this.RaisePropertyChanged("OpenLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenOrder {
            get {
                return this.OpenOrderField;
            }
            set {
                if ((this.OpenOrderField.Equals(value) != true)) {
                    this.OpenOrderField = value;
                    this.RaisePropertyChanged("OpenOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDtlNeedByDate {
            get {
                return this.OrderDtlNeedByDateField;
            }
            set {
                if ((this.OrderDtlNeedByDateField.Equals(value) != true)) {
                    this.OrderDtlNeedByDateField = value;
                    this.RaisePropertyChanged("OrderDtlNeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDtlRequestDate {
            get {
                return this.OrderDtlRequestDateField;
            }
            set {
                if ((this.OrderDtlRequestDateField.Equals(value) != true)) {
                    this.OrderDtlRequestDateField = value;
                    this.RaisePropertyChanged("OrderDtlRequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderHedNeedByDate {
            get {
                return this.OrderHedNeedByDateField;
            }
            set {
                if ((this.OrderHedNeedByDateField.Equals(value) != true)) {
                    this.OrderHedNeedByDateField = value;
                    this.RaisePropertyChanged("OrderHedNeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderHedRequestDate {
            get {
                return this.OrderHedRequestDateField;
            }
            set {
                if ((this.OrderHedRequestDateField.Equals(value) != true)) {
                    this.OrderHedRequestDateField = value;
                    this.RaisePropertyChanged("OrderHedRequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHeld {
            get {
                return this.OrderHeldField;
            }
            set {
                if ((this.OrderHeldField.Equals(value) != true)) {
                    this.OrderHeldField = value;
                    this.RaisePropertyChanged("OrderHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineField, value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineRef {
            get {
                return this.POLineRefField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineRefField, value) != true)) {
                    this.POLineRefField = value;
                    this.RaisePropertyChanged("POLineRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumField, value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrcConNum {
            get {
                return this.PrcConNumField;
            }
            set {
                if ((this.PrcConNumField.Equals(value) != true)) {
                    this.PrcConNumField = value;
                    this.RaisePropertyChanged("PrcConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCodeDescription {
            get {
                return this.ProdCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeDescriptionField, value) != true)) {
                    this.ProdCodeDescriptionField = value;
                    this.RaisePropertyChanged("ProdCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingQuantity {
            get {
                return this.SellingQuantityField;
            }
            set {
                if ((this.SellingQuantityField.Equals(value) != true)) {
                    this.SellingQuantityField = value;
                    this.RaisePropertyChanged("SellingQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToName {
            get {
                return this.ShipToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNameField, value) != true)) {
                    this.ShipToNameField = value;
                    this.RaisePropertyChanged("ShipToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShpConNum {
            get {
                return this.ShpConNumField;
            }
            set {
                if ((this.ShpConNumField.Equals(value) != true)) {
                    this.ShpConNumField = value;
                    this.RaisePropertyChanged("ShpConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustID {
            get {
                return this.SoldToCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustIDField, value) != true)) {
                    this.SoldToCustIDField = value;
                    this.RaisePropertyChanged("SoldToCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToCustName {
            get {
                return this.SoldToCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToCustNameField, value) != true)) {
                    this.SoldToCustNameField = value;
                    this.RaisePropertyChanged("SoldToCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebOrder {
            get {
                return this.WebOrderField;
            }
            set {
                if ((this.WebOrderField.Equals(value) != true)) {
                    this.WebOrderField = value;
                    this.RaisePropertyChanged("WebOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XPartNum {
            get {
                return this.XPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XPartNumField, value) != true)) {
                    this.XPartNumField = value;
                    this.RaisePropertyChanged("XPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRevisionNum {
            get {
                return this.XRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRevisionNumField, value) != true)) {
                    this.XRevisionNumField = value;
                    this.RaisePropertyChanged("XRevisionNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.QuoteQtyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.HedTaxSumRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OHOrderMscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHedAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHedUPSRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHistRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderMscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderRelRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderRelTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderRepCommRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.PartSubsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.TaxConnectStatusRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHedListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.ETCAddressRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.ETCMessageRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.JobProdRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.QuoteQtyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.HedTaxSumRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OHOrderMscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHedAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHedUPSRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHistRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderMscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderRelRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderRelTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderRepCommRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.PartSubsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.TaxConnectStatusRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderHedListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.ETCAddressRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.ETCMessageRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.JobProdRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkRow))]
    public partial class IceRow : EpicorConsole.Epicor.SalesOrderSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuoteQtyRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class QuoteQtyRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BurdenMarkUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcMarkupProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcProfitProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcUPCommMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcUPCommProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcUnitPriceMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalcUnitPriceProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.QuoteQtyRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableMtlMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocPricePerAdl1000Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalSellPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LaborMarkUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkUpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaterialMarkUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaterialMarkupMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaterialMarkupPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCostDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscCostMarkUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlBurMarkUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PercentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceBurMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceBurProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceLbrMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceLbrProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceMscChrgMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceMscChrgProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceMtlBurMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceMtlBurProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceMtlMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceMtlProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricePerAdl1000Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PricePerFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceSubMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceSubProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceTotalCommMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceTotalCommProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceTotalMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceTotalProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QtyNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuoteLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuoteLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuoteNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuoteNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuotedMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuotedProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RollUpCostNeededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubcontractMarkUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalBurCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCommProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalLbrCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalMarkupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalMtlBurCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalMtlCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalProdBurHrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalProdLbrHrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalQuotedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSellPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSetupBurHrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSetupLbrHrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSubCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserChangedUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WQUnitPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BurdenMarkUp {
            get {
                return this.BurdenMarkUpField;
            }
            set {
                if ((this.BurdenMarkUpField.Equals(value) != true)) {
                    this.BurdenMarkUpField = value;
                    this.RaisePropertyChanged("BurdenMarkUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcMarkup {
            get {
                return this.CalcMarkupField;
            }
            set {
                if ((this.CalcMarkupField.Equals(value) != true)) {
                    this.CalcMarkupField = value;
                    this.RaisePropertyChanged("CalcMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcMarkupProfit {
            get {
                return this.CalcMarkupProfitField;
            }
            set {
                if ((this.CalcMarkupProfitField.Equals(value) != true)) {
                    this.CalcMarkupProfitField = value;
                    this.RaisePropertyChanged("CalcMarkupProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcProfit {
            get {
                return this.CalcProfitField;
            }
            set {
                if ((this.CalcProfitField.Equals(value) != true)) {
                    this.CalcProfitField = value;
                    this.RaisePropertyChanged("CalcProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcProfitProfit {
            get {
                return this.CalcProfitProfitField;
            }
            set {
                if ((this.CalcProfitProfitField.Equals(value) != true)) {
                    this.CalcProfitProfitField = value;
                    this.RaisePropertyChanged("CalcProfitProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcUPCommMarkup {
            get {
                return this.CalcUPCommMarkupField;
            }
            set {
                if ((this.CalcUPCommMarkupField.Equals(value) != true)) {
                    this.CalcUPCommMarkupField = value;
                    this.RaisePropertyChanged("CalcUPCommMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcUPCommProfit {
            get {
                return this.CalcUPCommProfitField;
            }
            set {
                if ((this.CalcUPCommProfitField.Equals(value) != true)) {
                    this.CalcUPCommProfitField = value;
                    this.RaisePropertyChanged("CalcUPCommProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcUnitCost {
            get {
                return this.CalcUnitCostField;
            }
            set {
                if ((this.CalcUnitCostField.Equals(value) != true)) {
                    this.CalcUnitCostField = value;
                    this.RaisePropertyChanged("CalcUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcUnitPriceMarkup {
            get {
                return this.CalcUnitPriceMarkupField;
            }
            set {
                if ((this.CalcUnitPriceMarkupField.Equals(value) != true)) {
                    this.CalcUnitPriceMarkupField = value;
                    this.RaisePropertyChanged("CalcUnitPriceMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalcUnitPriceProfit {
            get {
                return this.CalcUnitPriceProfitField;
            }
            set {
                if ((this.CalcUnitPriceProfitField.Equals(value) != true)) {
                    this.CalcUnitPriceProfitField = value;
                    this.RaisePropertyChanged("CalcUnitPriceProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.QuoteQtyRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CommissionPct {
            get {
                return this.CommissionPctField;
            }
            set {
                if ((this.CommissionPctField.Equals(value) != true)) {
                    this.CommissionPctField = value;
                    this.RaisePropertyChanged("CommissionPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrSymbol {
            get {
                return this.CurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrSymbolField, value) != true)) {
                    this.CurrSymbolField = value;
                    this.RaisePropertyChanged("CurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableMtlMarkup {
            get {
                return this.DisableMtlMarkupField;
            }
            set {
                if ((this.DisableMtlMarkupField.Equals(value) != true)) {
                    this.DisableMtlMarkupField = value;
                    this.RaisePropertyChanged("DisableMtlMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInUnitPrice {
            get {
                return this.DocInUnitPriceField;
            }
            set {
                if ((this.DocInUnitPriceField.Equals(value) != true)) {
                    this.DocInUnitPriceField = value;
                    this.RaisePropertyChanged("DocInUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocPricePerAdl1000 {
            get {
                return this.DocPricePerAdl1000Field;
            }
            set {
                if ((this.DocPricePerAdl1000Field.Equals(value) != true)) {
                    this.DocPricePerAdl1000Field = value;
                    this.RaisePropertyChanged("DocPricePerAdl1000");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalSellPrice {
            get {
                return this.DocTotalSellPriceField;
            }
            set {
                if ((this.DocTotalSellPriceField.Equals(value) != true)) {
                    this.DocTotalSellPriceField = value;
                    this.RaisePropertyChanged("DocTotalSellPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnitPrice {
            get {
                return this.DocUnitPriceField;
            }
            set {
                if ((this.DocUnitPriceField.Equals(value) != true)) {
                    this.DocUnitPriceField = value;
                    this.RaisePropertyChanged("DocUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InUnitPrice {
            get {
                return this.InUnitPriceField;
            }
            set {
                if ((this.InUnitPriceField.Equals(value) != true)) {
                    this.InUnitPriceField = value;
                    this.RaisePropertyChanged("InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LaborMarkUp {
            get {
                return this.LaborMarkUpField;
            }
            set {
                if ((this.LaborMarkUpField.Equals(value) != true)) {
                    this.LaborMarkUpField = value;
                    this.RaisePropertyChanged("LaborMarkUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkUpID {
            get {
                return this.MarkUpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkUpIDField, value) != true)) {
                    this.MarkUpIDField = value;
                    this.RaisePropertyChanged("MarkUpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaterialMarkUp {
            get {
                return this.MaterialMarkUpField;
            }
            set {
                if ((this.MaterialMarkUpField.Equals(value) != true)) {
                    this.MaterialMarkUpField = value;
                    this.RaisePropertyChanged("MaterialMarkUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaterialMarkupM {
            get {
                return this.MaterialMarkupMField;
            }
            set {
                if ((this.MaterialMarkupMField.Equals(value) != true)) {
                    this.MaterialMarkupMField = value;
                    this.RaisePropertyChanged("MaterialMarkupM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaterialMarkupP {
            get {
                return this.MaterialMarkupPField;
            }
            set {
                if ((this.MaterialMarkupPField.Equals(value) != true)) {
                    this.MaterialMarkupPField = value;
                    this.RaisePropertyChanged("MaterialMarkupP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscChrg {
            get {
                return this.MiscChrgField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscChrgField, value) != true)) {
                    this.MiscChrgField = value;
                    this.RaisePropertyChanged("MiscChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscCost {
            get {
                return this.MiscCostField;
            }
            set {
                if ((this.MiscCostField.Equals(value) != true)) {
                    this.MiscCostField = value;
                    this.RaisePropertyChanged("MiscCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCostDesc {
            get {
                return this.MiscCostDescField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCostDescField, value) != true)) {
                    this.MiscCostDescField = value;
                    this.RaisePropertyChanged("MiscCostDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscCostMarkUp {
            get {
                return this.MiscCostMarkUpField;
            }
            set {
                if ((this.MiscCostMarkUpField.Equals(value) != true)) {
                    this.MiscCostMarkUpField = value;
                    this.RaisePropertyChanged("MiscCostMarkUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlBurMarkUp {
            get {
                return this.MtlBurMarkUpField;
            }
            set {
                if ((this.MtlBurMarkUpField.Equals(value) != true)) {
                    this.MtlBurMarkUpField = value;
                    this.RaisePropertyChanged("MtlBurMarkUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurQuantity {
            get {
                return this.OurQuantityField;
            }
            set {
                if ((this.OurQuantityField.Equals(value) != true)) {
                    this.OurQuantityField = value;
                    this.RaisePropertyChanged("OurQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PercentType {
            get {
                return this.PercentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentTypeField, value) != true)) {
                    this.PercentTypeField = value;
                    this.RaisePropertyChanged("PercentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceBurMarkup {
            get {
                return this.PriceBurMarkupField;
            }
            set {
                if ((this.PriceBurMarkupField.Equals(value) != true)) {
                    this.PriceBurMarkupField = value;
                    this.RaisePropertyChanged("PriceBurMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceBurProfit {
            get {
                return this.PriceBurProfitField;
            }
            set {
                if ((this.PriceBurProfitField.Equals(value) != true)) {
                    this.PriceBurProfitField = value;
                    this.RaisePropertyChanged("PriceBurProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceLbrMarkup {
            get {
                return this.PriceLbrMarkupField;
            }
            set {
                if ((this.PriceLbrMarkupField.Equals(value) != true)) {
                    this.PriceLbrMarkupField = value;
                    this.RaisePropertyChanged("PriceLbrMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceLbrProfit {
            get {
                return this.PriceLbrProfitField;
            }
            set {
                if ((this.PriceLbrProfitField.Equals(value) != true)) {
                    this.PriceLbrProfitField = value;
                    this.RaisePropertyChanged("PriceLbrProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceMscChrgMarkup {
            get {
                return this.PriceMscChrgMarkupField;
            }
            set {
                if ((this.PriceMscChrgMarkupField.Equals(value) != true)) {
                    this.PriceMscChrgMarkupField = value;
                    this.RaisePropertyChanged("PriceMscChrgMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceMscChrgProfit {
            get {
                return this.PriceMscChrgProfitField;
            }
            set {
                if ((this.PriceMscChrgProfitField.Equals(value) != true)) {
                    this.PriceMscChrgProfitField = value;
                    this.RaisePropertyChanged("PriceMscChrgProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceMtlBurMarkup {
            get {
                return this.PriceMtlBurMarkupField;
            }
            set {
                if ((this.PriceMtlBurMarkupField.Equals(value) != true)) {
                    this.PriceMtlBurMarkupField = value;
                    this.RaisePropertyChanged("PriceMtlBurMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceMtlBurProfit {
            get {
                return this.PriceMtlBurProfitField;
            }
            set {
                if ((this.PriceMtlBurProfitField.Equals(value) != true)) {
                    this.PriceMtlBurProfitField = value;
                    this.RaisePropertyChanged("PriceMtlBurProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceMtlMarkup {
            get {
                return this.PriceMtlMarkupField;
            }
            set {
                if ((this.PriceMtlMarkupField.Equals(value) != true)) {
                    this.PriceMtlMarkupField = value;
                    this.RaisePropertyChanged("PriceMtlMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceMtlProfit {
            get {
                return this.PriceMtlProfitField;
            }
            set {
                if ((this.PriceMtlProfitField.Equals(value) != true)) {
                    this.PriceMtlProfitField = value;
                    this.RaisePropertyChanged("PriceMtlProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricePerAdl1000 {
            get {
                return this.PricePerAdl1000Field;
            }
            set {
                if ((this.PricePerAdl1000Field.Equals(value) != true)) {
                    this.PricePerAdl1000Field = value;
                    this.RaisePropertyChanged("PricePerAdl1000");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricePerCode {
            get {
                return this.PricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PricePerCodeField, value) != true)) {
                    this.PricePerCodeField = value;
                    this.RaisePropertyChanged("PricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PricePerFactor {
            get {
                return this.PricePerFactorField;
            }
            set {
                if ((this.PricePerFactorField.Equals(value) != true)) {
                    this.PricePerFactorField = value;
                    this.RaisePropertyChanged("PricePerFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceSource {
            get {
                return this.PriceSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceSourceField, value) != true)) {
                    this.PriceSourceField = value;
                    this.RaisePropertyChanged("PriceSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceSubMarkup {
            get {
                return this.PriceSubMarkupField;
            }
            set {
                if ((this.PriceSubMarkupField.Equals(value) != true)) {
                    this.PriceSubMarkupField = value;
                    this.RaisePropertyChanged("PriceSubMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceSubProfit {
            get {
                return this.PriceSubProfitField;
            }
            set {
                if ((this.PriceSubProfitField.Equals(value) != true)) {
                    this.PriceSubProfitField = value;
                    this.RaisePropertyChanged("PriceSubProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceTotalCommMarkup {
            get {
                return this.PriceTotalCommMarkupField;
            }
            set {
                if ((this.PriceTotalCommMarkupField.Equals(value) != true)) {
                    this.PriceTotalCommMarkupField = value;
                    this.RaisePropertyChanged("PriceTotalCommMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceTotalCommProfit {
            get {
                return this.PriceTotalCommProfitField;
            }
            set {
                if ((this.PriceTotalCommProfitField.Equals(value) != true)) {
                    this.PriceTotalCommProfitField = value;
                    this.RaisePropertyChanged("PriceTotalCommProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceTotalMarkup {
            get {
                return this.PriceTotalMarkupField;
            }
            set {
                if ((this.PriceTotalMarkupField.Equals(value) != true)) {
                    this.PriceTotalMarkupField = value;
                    this.RaisePropertyChanged("PriceTotalMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceTotalProfit {
            get {
                return this.PriceTotalProfitField;
            }
            set {
                if ((this.PriceTotalProfitField.Equals(value) != true)) {
                    this.PriceTotalProfitField = value;
                    this.RaisePropertyChanged("PriceTotalProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QtyNum {
            get {
                return this.QtyNumField;
            }
            set {
                if ((this.QtyNumField.Equals(value) != true)) {
                    this.QtyNumField = value;
                    this.RaisePropertyChanged("QtyNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuoteLine {
            get {
                return this.QuoteLineField;
            }
            set {
                if ((this.QuoteLineField.Equals(value) != true)) {
                    this.QuoteLineField = value;
                    this.RaisePropertyChanged("QuoteLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuoteLineLineDesc {
            get {
                return this.QuoteLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.QuoteLineLineDescField, value) != true)) {
                    this.QuoteLineLineDescField = value;
                    this.RaisePropertyChanged("QuoteLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuoteNum {
            get {
                return this.QuoteNumField;
            }
            set {
                if ((this.QuoteNumField.Equals(value) != true)) {
                    this.QuoteNumField = value;
                    this.RaisePropertyChanged("QuoteNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuoteNumCurrencyCode {
            get {
                return this.QuoteNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.QuoteNumCurrencyCodeField, value) != true)) {
                    this.QuoteNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("QuoteNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QuotedMarkup {
            get {
                return this.QuotedMarkupField;
            }
            set {
                if ((this.QuotedMarkupField.Equals(value) != true)) {
                    this.QuotedMarkupField = value;
                    this.RaisePropertyChanged("QuotedMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QuotedProfit {
            get {
                return this.QuotedProfitField;
            }
            set {
                if ((this.QuotedProfitField.Equals(value) != true)) {
                    this.QuotedProfitField = value;
                    this.RaisePropertyChanged("QuotedProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RollUpCostNeeded {
            get {
                return this.RollUpCostNeededField;
            }
            set {
                if ((this.RollUpCostNeededField.Equals(value) != true)) {
                    this.RollUpCostNeededField = value;
                    this.RaisePropertyChanged("RollUpCostNeeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InUnitPrice {
            get {
                return this.Rpt1InUnitPriceField;
            }
            set {
                if ((this.Rpt1InUnitPriceField.Equals(value) != true)) {
                    this.Rpt1InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1UnitPrice {
            get {
                return this.Rpt1UnitPriceField;
            }
            set {
                if ((this.Rpt1UnitPriceField.Equals(value) != true)) {
                    this.Rpt1UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InUnitPrice {
            get {
                return this.Rpt2InUnitPriceField;
            }
            set {
                if ((this.Rpt2InUnitPriceField.Equals(value) != true)) {
                    this.Rpt2InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2UnitPrice {
            get {
                return this.Rpt2UnitPriceField;
            }
            set {
                if ((this.Rpt2UnitPriceField.Equals(value) != true)) {
                    this.Rpt2UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InUnitPrice {
            get {
                return this.Rpt3InUnitPriceField;
            }
            set {
                if ((this.Rpt3InUnitPriceField.Equals(value) != true)) {
                    this.Rpt3InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3UnitPrice {
            get {
                return this.Rpt3UnitPriceField;
            }
            set {
                if ((this.Rpt3UnitPriceField.Equals(value) != true)) {
                    this.Rpt3UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingFactor {
            get {
                return this.SellingFactorField;
            }
            set {
                if ((this.SellingFactorField.Equals(value) != true)) {
                    this.SellingFactorField = value;
                    this.RaisePropertyChanged("SellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingFactorDirection {
            get {
                return this.SellingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingFactorDirectionField, value) != true)) {
                    this.SellingFactorDirectionField = value;
                    this.RaisePropertyChanged("SellingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingQuantity {
            get {
                return this.SellingQuantityField;
            }
            set {
                if ((this.SellingQuantityField.Equals(value) != true)) {
                    this.SellingQuantityField = value;
                    this.RaisePropertyChanged("SellingQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubcontractMarkUp {
            get {
                return this.SubcontractMarkUpField;
            }
            set {
                if ((this.SubcontractMarkUpField.Equals(value) != true)) {
                    this.SubcontractMarkUpField = value;
                    this.RaisePropertyChanged("SubcontractMarkUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalBurCost {
            get {
                return this.TotalBurCostField;
            }
            set {
                if ((this.TotalBurCostField.Equals(value) != true)) {
                    this.TotalBurCostField = value;
                    this.RaisePropertyChanged("TotalBurCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCommProfit {
            get {
                return this.TotalCommProfitField;
            }
            set {
                if ((this.TotalCommProfitField.Equals(value) != true)) {
                    this.TotalCommProfitField = value;
                    this.RaisePropertyChanged("TotalCommProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCommission {
            get {
                return this.TotalCommissionField;
            }
            set {
                if ((this.TotalCommissionField.Equals(value) != true)) {
                    this.TotalCommissionField = value;
                    this.RaisePropertyChanged("TotalCommission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalLbrCost {
            get {
                return this.TotalLbrCostField;
            }
            set {
                if ((this.TotalLbrCostField.Equals(value) != true)) {
                    this.TotalLbrCostField = value;
                    this.RaisePropertyChanged("TotalLbrCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalMarkup {
            get {
                return this.TotalMarkupField;
            }
            set {
                if ((this.TotalMarkupField.Equals(value) != true)) {
                    this.TotalMarkupField = value;
                    this.RaisePropertyChanged("TotalMarkup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalMtlBurCost {
            get {
                return this.TotalMtlBurCostField;
            }
            set {
                if ((this.TotalMtlBurCostField.Equals(value) != true)) {
                    this.TotalMtlBurCostField = value;
                    this.RaisePropertyChanged("TotalMtlBurCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalMtlCost {
            get {
                return this.TotalMtlCostField;
            }
            set {
                if ((this.TotalMtlCostField.Equals(value) != true)) {
                    this.TotalMtlCostField = value;
                    this.RaisePropertyChanged("TotalMtlCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalProdBurHrs {
            get {
                return this.TotalProdBurHrsField;
            }
            set {
                if ((this.TotalProdBurHrsField.Equals(value) != true)) {
                    this.TotalProdBurHrsField = value;
                    this.RaisePropertyChanged("TotalProdBurHrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalProdLbrHrs {
            get {
                return this.TotalProdLbrHrsField;
            }
            set {
                if ((this.TotalProdLbrHrsField.Equals(value) != true)) {
                    this.TotalProdLbrHrsField = value;
                    this.RaisePropertyChanged("TotalProdLbrHrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalProfit {
            get {
                return this.TotalProfitField;
            }
            set {
                if ((this.TotalProfitField.Equals(value) != true)) {
                    this.TotalProfitField = value;
                    this.RaisePropertyChanged("TotalProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalQuotedPrice {
            get {
                return this.TotalQuotedPriceField;
            }
            set {
                if ((this.TotalQuotedPriceField.Equals(value) != true)) {
                    this.TotalQuotedPriceField = value;
                    this.RaisePropertyChanged("TotalQuotedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSellPrice {
            get {
                return this.TotalSellPriceField;
            }
            set {
                if ((this.TotalSellPriceField.Equals(value) != true)) {
                    this.TotalSellPriceField = value;
                    this.RaisePropertyChanged("TotalSellPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSetupBurHrs {
            get {
                return this.TotalSetupBurHrsField;
            }
            set {
                if ((this.TotalSetupBurHrsField.Equals(value) != true)) {
                    this.TotalSetupBurHrsField = value;
                    this.RaisePropertyChanged("TotalSetupBurHrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSetupLbrHrs {
            get {
                return this.TotalSetupLbrHrsField;
            }
            set {
                if ((this.TotalSetupLbrHrsField.Equals(value) != true)) {
                    this.TotalSetupLbrHrsField = value;
                    this.RaisePropertyChanged("TotalSetupLbrHrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSubCost {
            get {
                return this.TotalSubCostField;
            }
            set {
                if ((this.TotalSubCostField.Equals(value) != true)) {
                    this.TotalSubCostField = value;
                    this.RaisePropertyChanged("TotalSubCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserChangedUnitPrice {
            get {
                return this.UserChangedUnitPriceField;
            }
            set {
                if ((this.UserChangedUnitPriceField.Equals(value) != true)) {
                    this.UserChangedUnitPriceField = value;
                    this.RaisePropertyChanged("UserChangedUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WQUnitPrice {
            get {
                return this.WQUnitPriceField;
            }
            set {
                if ((this.WQUnitPriceField.Equals(value) != true)) {
                    this.WQUnitPriceField = value;
                    this.RaisePropertyChanged("WQUnitPrice");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool allowVoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableRetrieveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableSelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string plantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid sourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whereClauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xrefCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool allowVoided {
            get {
                return this.allowVoidedField;
            }
            set {
                if ((this.allowVoidedField.Equals(value) != true)) {
                    this.allowVoidedField = value;
                    this.RaisePropertyChanged("allowVoided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableCreate {
            get {
                return this.enableCreateField;
            }
            set {
                if ((this.enableCreateField.Equals(value) != true)) {
                    this.enableCreateField = value;
                    this.RaisePropertyChanged("enableCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableRetrieve {
            get {
                return this.enableRetrieveField;
            }
            set {
                if ((this.enableRetrieveField.Equals(value) != true)) {
                    this.enableRetrieveField = value;
                    this.RaisePropertyChanged("enableRetrieve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableSelect {
            get {
                return this.enableSelectField;
            }
            set {
                if ((this.enableSelectField.Equals(value) != true)) {
                    this.enableSelectField = value;
                    this.RaisePropertyChanged("enableSelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partNum {
            get {
                return this.partNumField;
            }
            set {
                if ((object.ReferenceEquals(this.partNumField, value) != true)) {
                    this.partNumField = value;
                    this.RaisePropertyChanged("partNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string plant {
            get {
                return this.plantField;
            }
            set {
                if ((object.ReferenceEquals(this.plantField, value) != true)) {
                    this.plantField = value;
                    this.RaisePropertyChanged("plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid sourceRowID {
            get {
                return this.sourceRowIDField;
            }
            set {
                if ((this.sourceRowIDField.Equals(value) != true)) {
                    this.sourceRowIDField = value;
                    this.RaisePropertyChanged("sourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transType {
            get {
                return this.transTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.transTypeField, value) != true)) {
                    this.transTypeField = value;
                    this.RaisePropertyChanged("transType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whereClause {
            get {
                return this.whereClauseField;
            }
            set {
                if ((object.ReferenceEquals(this.whereClauseField, value) != true)) {
                    this.whereClauseField = value;
                    this.RaisePropertyChanged("whereClause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int xrefCustNum {
            get {
                return this.xrefCustNumField;
            }
            set {
                if ((this.xrefCustNumField.Equals(value) != true)) {
                    this.xrefCustNumField = value;
                    this.RaisePropertyChanged("xrefCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartNum {
            get {
                return this.xrefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartNumField, value) != true)) {
                    this.xrefPartNumField = value;
                    this.RaisePropertyChanged("xrefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartType {
            get {
                return this.xrefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartTypeField, value) != true)) {
                    this.xrefPartTypeField = value;
                    this.RaisePropertyChanged("xrefPartType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SOEntryUIParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SOEntryUIParamsRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CCAllowSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CCEnableAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CCEnableCSCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcQtysPreferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableICPOSugToolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrjAllowWBSPhaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SOReadyToCalcDfltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuppressSOMakeDirWrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseTerritorySecurityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CCAllowSales {
            get {
                return this.CCAllowSalesField;
            }
            set {
                if ((this.CCAllowSalesField.Equals(value) != true)) {
                    this.CCAllowSalesField = value;
                    this.RaisePropertyChanged("CCAllowSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CCEnableAddress {
            get {
                return this.CCEnableAddressField;
            }
            set {
                if ((this.CCEnableAddressField.Equals(value) != true)) {
                    this.CCEnableAddressField = value;
                    this.RaisePropertyChanged("CCEnableAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CCEnableCSC {
            get {
                return this.CCEnableCSCField;
            }
            set {
                if ((this.CCEnableCSCField.Equals(value) != true)) {
                    this.CCEnableCSCField = value;
                    this.RaisePropertyChanged("CCEnableCSC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcQtysPreference {
            get {
                return this.CalcQtysPreferenceField;
            }
            set {
                if ((this.CalcQtysPreferenceField.Equals(value) != true)) {
                    this.CalcQtysPreferenceField = value;
                    this.RaisePropertyChanged("CalcQtysPreference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableICPOSugTool {
            get {
                return this.EnableICPOSugToolField;
            }
            set {
                if ((this.EnableICPOSugToolField.Equals(value) != true)) {
                    this.EnableICPOSugToolField = value;
                    this.RaisePropertyChanged("EnableICPOSugTool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Localization {
            get {
                return this.LocalizationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalizationField, value) != true)) {
                    this.LocalizationField = value;
                    this.RaisePropertyChanged("Localization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrjAllowWBSPhase {
            get {
                return this.PrjAllowWBSPhaseField;
            }
            set {
                if ((this.PrjAllowWBSPhaseField.Equals(value) != true)) {
                    this.PrjAllowWBSPhaseField = value;
                    this.RaisePropertyChanged("PrjAllowWBSPhase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SOReadyToCalcDflt {
            get {
                return this.SOReadyToCalcDfltField;
            }
            set {
                if ((this.SOReadyToCalcDfltField.Equals(value) != true)) {
                    this.SOReadyToCalcDfltField = value;
                    this.RaisePropertyChanged("SOReadyToCalcDflt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SuppressSOMakeDirWrn {
            get {
                return this.SuppressSOMakeDirWrnField;
            }
            set {
                if ((this.SuppressSOMakeDirWrnField.Equals(value) != true)) {
                    this.SuppressSOMakeDirWrnField = value;
                    this.RaisePropertyChanged("SuppressSOMakeDirWrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseTerritorySecurity {
            get {
                return this.UseTerritorySecurityField;
            }
            set {
                if ((this.UseTerritorySecurityField.Equals(value) != true)) {
                    this.UseTerritorySecurityField = value;
                    this.RaisePropertyChanged("UseTerritorySecurity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbSugPOChgRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class GlbSugPOChgRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ABCCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancelReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySuggestionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NewOurQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NewShipByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuggestionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuggestionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SurplusQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VendorChangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABCCode {
            get {
                return this.ABCCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ABCCodeField, value) != true)) {
                    this.ABCCodeField = value;
                    this.RaisePropertyChanged("ABCCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyerID {
            get {
                return this.BuyerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyerIDField, value) != true)) {
                    this.BuyerIDField = value;
                    this.RaisePropertyChanged("BuyerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancelReason {
            get {
                return this.CancelReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.CancelReasonField, value) != true)) {
                    this.CancelReasonField = value;
                    this.RaisePropertyChanged("CancelReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConNum {
            get {
                return this.ConNumField;
            }
            set {
                if ((this.ConNumField.Equals(value) != true)) {
                    this.ConNumField = value;
                    this.RaisePropertyChanged("ConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySuggestionStatus {
            get {
                return this.DisplaySuggestionStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySuggestionStatusField, value) != true)) {
                    this.DisplaySuggestionStatusField = value;
                    this.RaisePropertyChanged("DisplaySuggestionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NewOurQuantity {
            get {
                return this.NewOurQuantityField;
            }
            set {
                if ((this.NewOurQuantityField.Equals(value) != true)) {
                    this.NewOurQuantityField = value;
                    this.RaisePropertyChanged("NewOurQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NewShipByDate {
            get {
                return this.NewShipByDateField;
            }
            set {
                if ((this.NewShipByDateField.Equals(value) != true)) {
                    this.NewShipByDateField = value;
                    this.RaisePropertyChanged("NewShipByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequireDate {
            get {
                return this.RequireDateField;
            }
            set {
                if ((this.RequireDateField.Equals(value) != true)) {
                    this.RequireDateField = value;
                    this.RaisePropertyChanged("RequireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Review {
            get {
                return this.ReviewField;
            }
            set {
                if ((this.ReviewField.Equals(value) != true)) {
                    this.ReviewField = value;
                    this.RaisePropertyChanged("Review");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesIUM {
            get {
                return this.SalesIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesIUMField, value) != true)) {
                    this.SalesIUMField = value;
                    this.RaisePropertyChanged("SalesIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceName {
            get {
                return this.SourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceNameField, value) != true)) {
                    this.SourceNameField = value;
                    this.RaisePropertyChanged("SourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuggestionCode {
            get {
                return this.SuggestionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionCodeField, value) != true)) {
                    this.SuggestionCodeField = value;
                    this.RaisePropertyChanged("SuggestionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuggestionStatus {
            get {
                return this.SuggestionStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionStatusField, value) != true)) {
                    this.SuggestionStatusField = value;
                    this.RaisePropertyChanged("SuggestionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SurplusQty {
            get {
                return this.SurplusQtyField;
            }
            set {
                if ((this.SurplusQtyField.Equals(value) != true)) {
                    this.SurplusQtyField = value;
                    this.RaisePropertyChanged("SurplusQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransDate {
            get {
                return this.TransDateField;
            }
            set {
                if ((this.TransDateField.Equals(value) != true)) {
                    this.TransDateField = value;
                    this.RaisePropertyChanged("TransDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VendorChange {
            get {
                return this.VendorChangeField;
            }
            set {
                if ((this.VendorChangeField.Equals(value) != true)) {
                    this.VendorChangeField = value;
                    this.RaisePropertyChanged("VendorChange");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HedTaxSumRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class HedTaxSumRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllocDepInvcNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.HedTaxSumRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HedNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllocDepInvcNum {
            get {
                return this.AllocDepInvcNumField;
            }
            set {
                if ((this.AllocDepInvcNumField.Equals(value) != true)) {
                    this.AllocDepInvcNumField = value;
                    this.RaisePropertyChanged("AllocDepInvcNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.HedTaxSumRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HedNum {
            get {
                return this.HedNumField;
            }
            set {
                if ((this.HedNumField.Equals(value) != true)) {
                    this.HedNumField = value;
                    this.RaisePropertyChanged("HedNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxDescription {
            get {
                return this.TaxDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxDescriptionField, value) != true)) {
                    this.TaxDescriptionField = value;
                    this.RaisePropertyChanged("TaxDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OHOrderMscRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OHOrderMscRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChangeTrackAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChangeTrackApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeTrackMemoDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeTrackMemoTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeTrackStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OHOrderMscRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreqCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPOLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPOSeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuotingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChangeTrackAmount {
            get {
                return this.ChangeTrackAmountField;
            }
            set {
                if ((this.ChangeTrackAmountField.Equals(value) != true)) {
                    this.ChangeTrackAmountField = value;
                    this.RaisePropertyChanged("ChangeTrackAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangeTrackApproved {
            get {
                return this.ChangeTrackApprovedField;
            }
            set {
                if ((this.ChangeTrackApprovedField.Equals(value) != true)) {
                    this.ChangeTrackApprovedField = value;
                    this.RaisePropertyChanged("ChangeTrackApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeTrackMemoDesc {
            get {
                return this.ChangeTrackMemoDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackMemoDescField, value) != true)) {
                    this.ChangeTrackMemoDescField = value;
                    this.RaisePropertyChanged("ChangeTrackMemoDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeTrackMemoText {
            get {
                return this.ChangeTrackMemoTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackMemoTextField, value) != true)) {
                    this.ChangeTrackMemoTextField = value;
                    this.RaisePropertyChanged("ChangeTrackMemoText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeTrackStatus {
            get {
                return this.ChangeTrackStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackStatusField, value) != true)) {
                    this.ChangeTrackStatusField = value;
                    this.RaisePropertyChanged("ChangeTrackStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OHOrderMscRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrSymbol {
            get {
                return this.CurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrSymbolField, value) != true)) {
                    this.CurrSymbolField = value;
                    this.RaisePropertyChanged("CurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspMiscAmt {
            get {
                return this.DocDspMiscAmtField;
            }
            set {
                if ((this.DocDspMiscAmtField.Equals(value) != true)) {
                    this.DocDspMiscAmtField = value;
                    this.RaisePropertyChanged("DocDspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInMiscAmt {
            get {
                return this.DocInMiscAmtField;
            }
            set {
                if ((this.DocInMiscAmtField.Equals(value) != true)) {
                    this.DocInMiscAmtField = value;
                    this.RaisePropertyChanged("DocInMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMiscAmt {
            get {
                return this.DocMiscAmtField;
            }
            set {
                if ((this.DocMiscAmtField.Equals(value) != true)) {
                    this.DocMiscAmtField = value;
                    this.RaisePropertyChanged("DocMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspMiscAmt {
            get {
                return this.DspMiscAmtField;
            }
            set {
                if ((this.DspMiscAmtField.Equals(value) != true)) {
                    this.DspMiscAmtField = value;
                    this.RaisePropertyChanged("DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryProcess {
            get {
                return this.EntryProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryProcessField, value) != true)) {
                    this.EntryProcessField = value;
                    this.RaisePropertyChanged("EntryProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreqCode {
            get {
                return this.FreqCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FreqCodeField, value) != true)) {
                    this.FreqCodeField = value;
                    this.RaisePropertyChanged("FreqCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPOLine {
            get {
                return this.ICPOLineField;
            }
            set {
                if ((this.ICPOLineField.Equals(value) != true)) {
                    this.ICPOLineField = value;
                    this.RaisePropertyChanged("ICPOLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPONum {
            get {
                return this.ICPONumField;
            }
            set {
                if ((this.ICPONumField.Equals(value) != true)) {
                    this.ICPONumField = value;
                    this.RaisePropertyChanged("ICPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPOSeqNum {
            get {
                return this.ICPOSeqNumField;
            }
            set {
                if ((this.ICPOSeqNumField.Equals(value) != true)) {
                    this.ICPOSeqNumField = value;
                    this.RaisePropertyChanged("ICPOSeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InMiscAmt {
            get {
                return this.InMiscAmtField;
            }
            set {
                if ((this.InMiscAmtField.Equals(value) != true)) {
                    this.InMiscAmtField = value;
                    this.RaisePropertyChanged("InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscAmt {
            get {
                return this.MiscAmtField;
            }
            set {
                if ((this.MiscAmtField.Equals(value) != true)) {
                    this.MiscAmtField = value;
                    this.RaisePropertyChanged("MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeDescription {
            get {
                return this.MiscCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeDescriptionField, value) != true)) {
                    this.MiscCodeDescriptionField = value;
                    this.RaisePropertyChanged("MiscCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quoting {
            get {
                return this.QuotingField;
            }
            set {
                if ((object.ReferenceEquals(this.QuotingField, value) != true)) {
                    this.QuotingField = value;
                    this.RaisePropertyChanged("Quoting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspMiscAmt {
            get {
                return this.Rpt1DspMiscAmtField;
            }
            set {
                if ((this.Rpt1DspMiscAmtField.Equals(value) != true)) {
                    this.Rpt1DspMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InMiscAmt {
            get {
                return this.Rpt1InMiscAmtField;
            }
            set {
                if ((this.Rpt1InMiscAmtField.Equals(value) != true)) {
                    this.Rpt1InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1MiscAmt {
            get {
                return this.Rpt1MiscAmtField;
            }
            set {
                if ((this.Rpt1MiscAmtField.Equals(value) != true)) {
                    this.Rpt1MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspMiscAmt {
            get {
                return this.Rpt2DspMiscAmtField;
            }
            set {
                if ((this.Rpt2DspMiscAmtField.Equals(value) != true)) {
                    this.Rpt2DspMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InMiscAmt {
            get {
                return this.Rpt2InMiscAmtField;
            }
            set {
                if ((this.Rpt2InMiscAmtField.Equals(value) != true)) {
                    this.Rpt2InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2MiscAmt {
            get {
                return this.Rpt2MiscAmtField;
            }
            set {
                if ((this.Rpt2MiscAmtField.Equals(value) != true)) {
                    this.Rpt2MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspMiscAmt {
            get {
                return this.Rpt3DspMiscAmtField;
            }
            set {
                if ((this.Rpt3DspMiscAmtField.Equals(value) != true)) {
                    this.Rpt3DspMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InMiscAmt {
            get {
                return this.Rpt3InMiscAmtField;
            }
            set {
                if ((this.Rpt3InMiscAmtField.Equals(value) != true)) {
                    this.Rpt3InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3MiscAmt {
            get {
                return this.Rpt3MiscAmtField;
            }
            set {
                if ((this.Rpt3MiscAmtField.Equals(value) != true)) {
                    this.Rpt3MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDtlRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderDtlRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvailPriceListsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvailUMFromQuoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseRevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BreakListCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderDtlRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommissionableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ConfigBaseUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ConfigUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfiguredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeContractDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CounterSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CounterSaleBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CounterSaleDimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CounterSaleLotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CounterSaleWarehouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreateJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreateNewJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditLimitMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditLimitSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CumeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CumeQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultOversPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandContractLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandDtlRejectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandDtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandHeadSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DemandQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DimConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscBreakListCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DiscBreakListCodeEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscBreakListCodeListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DiscBreakListCodeStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DisplaySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DoNotShipAfterDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DoNotShipBeforeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocAdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInAdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocLessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspJobTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DupOnJobCrtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ECCConfigSysRowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ECCDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECCOrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ECCPreventRepricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECCQuoteLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCQuoteNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableCreateNewJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableGetDtlsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableKitUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableRelJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableRenewalNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSchedJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSellingQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromQuoteLineFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GetDtlsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasComplementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasDowngradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSubstituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasUpgradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPOLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool JobWasCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitAllowUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitBackFlushField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitChangeParmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitCompOrigPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KitCompOrigSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitDisableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitFlagDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitOrderQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KitParentLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitPrintCompsInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitPrintCompsPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal KitQtyPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitShipCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitsLoadedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LabCoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaborDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LaborModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastConfigDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastConfigTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastConfigUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkToContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockDiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MOMsourceEstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MOMsourceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MatCoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgJobTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MiscCoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MiscDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MktgCampaignIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MktgCampaignIDCampDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MktgEvntEvntDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MktgEvntSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MultipleReleasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OldOpenValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OldOurOpenQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OldSellingOpenQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumBTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrigWhyNoTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideDiscPriceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverridePriceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OversField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OversUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PCLinkRemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PickListCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrevPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrevSellQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrevXPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceBreakEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceBreakListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceBreakStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceGroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceListCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceListCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricingQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricingValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProFormaInvCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessCounterSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessQuickEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuoteLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuoteNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuoteNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuoteQtyNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMALineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMANumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelWasRecInvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RenewalNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RespMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReworkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1AdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InAdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1LessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1MiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1OrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2AdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InAdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2LessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2MiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2OrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3AdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InAdvanceBillBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InExtPriceDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InOrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3LessDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ListPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3MiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3OrdBasedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SchedJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipLineCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmartStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmartStringProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TMBillingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThisOrderInvtyQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalReleasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UndersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UndersPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WarrantyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCodeWarrDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRevisionNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AdvanceBillBal {
            get {
                return this.AdvanceBillBalField;
            }
            set {
                if ((this.AdvanceBillBalField.Equals(value) != true)) {
                    this.AdvanceBillBalField = value;
                    this.RaisePropertyChanged("AdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailPriceLists {
            get {
                return this.AvailPriceListsField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailPriceListsField, value) != true)) {
                    this.AvailPriceListsField = value;
                    this.RaisePropertyChanged("AvailPriceLists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailUMFromQuote {
            get {
                return this.AvailUMFromQuoteField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailUMFromQuoteField, value) != true)) {
                    this.AvailUMFromQuoteField = value;
                    this.RaisePropertyChanged("AvailUMFromQuote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableQuantity {
            get {
                return this.AvailableQuantityField;
            }
            set {
                if ((this.AvailableQuantityField.Equals(value) != true)) {
                    this.AvailableQuantityField = value;
                    this.RaisePropertyChanged("AvailableQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrencyID {
            get {
                return this.BaseCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrencyIDField, value) != true)) {
                    this.BaseCurrencyIDField = value;
                    this.RaisePropertyChanged("BaseCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasePartNum {
            get {
                return this.BasePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BasePartNumField, value) != true)) {
                    this.BasePartNumField = value;
                    this.RaisePropertyChanged("BasePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseRevisionNum {
            get {
                return this.BaseRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseRevisionNumField, value) != true)) {
                    this.BaseRevisionNumField = value;
                    this.RaisePropertyChanged("BaseRevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BreakListCode {
            get {
                return this.BreakListCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BreakListCodeField, value) != true)) {
                    this.BreakListCodeField = value;
                    this.RaisePropertyChanged("BreakListCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderDtlRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Commissionable {
            get {
                return this.CommissionableField;
            }
            set {
                if ((this.CommissionableField.Equals(value) != true)) {
                    this.CommissionableField = value;
                    this.RaisePropertyChanged("Commissionable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ConfigBaseUnitPrice {
            get {
                return this.ConfigBaseUnitPriceField;
            }
            set {
                if ((this.ConfigBaseUnitPriceField.Equals(value) != true)) {
                    this.ConfigBaseUnitPriceField = value;
                    this.RaisePropertyChanged("ConfigBaseUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigType {
            get {
                return this.ConfigTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigTypeField, value) != true)) {
                    this.ConfigTypeField = value;
                    this.RaisePropertyChanged("ConfigType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ConfigUnitPrice {
            get {
                return this.ConfigUnitPriceField;
            }
            set {
                if ((this.ConfigUnitPriceField.Equals(value) != true)) {
                    this.ConfigUnitPriceField = value;
                    this.RaisePropertyChanged("ConfigUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Configured {
            get {
                return this.ConfiguredField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfiguredField, value) != true)) {
                    this.ConfiguredField = value;
                    this.RaisePropertyChanged("Configured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCodeContractDescription {
            get {
                return this.ContractCodeContractDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeContractDescriptionField, value) != true)) {
                    this.ContractCodeContractDescriptionField = value;
                    this.RaisePropertyChanged("ContractCodeContractDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractIDField, value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractNum {
            get {
                return this.ContractNumField;
            }
            set {
                if ((this.ContractNumField.Equals(value) != true)) {
                    this.ContractNumField = value;
                    this.RaisePropertyChanged("ContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CounterSale {
            get {
                return this.CounterSaleField;
            }
            set {
                if ((this.CounterSaleField.Equals(value) != true)) {
                    this.CounterSaleField = value;
                    this.RaisePropertyChanged("CounterSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CounterSaleBinNum {
            get {
                return this.CounterSaleBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CounterSaleBinNumField, value) != true)) {
                    this.CounterSaleBinNumField = value;
                    this.RaisePropertyChanged("CounterSaleBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CounterSaleDimCode {
            get {
                return this.CounterSaleDimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CounterSaleDimCodeField, value) != true)) {
                    this.CounterSaleDimCodeField = value;
                    this.RaisePropertyChanged("CounterSaleDimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CounterSaleLotNum {
            get {
                return this.CounterSaleLotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CounterSaleLotNumField, value) != true)) {
                    this.CounterSaleLotNumField = value;
                    this.RaisePropertyChanged("CounterSaleLotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CounterSaleWarehouse {
            get {
                return this.CounterSaleWarehouseField;
            }
            set {
                if ((object.ReferenceEquals(this.CounterSaleWarehouseField, value) != true)) {
                    this.CounterSaleWarehouseField = value;
                    this.RaisePropertyChanged("CounterSaleWarehouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreateJob {
            get {
                return this.CreateJobField;
            }
            set {
                if ((this.CreateJobField.Equals(value) != true)) {
                    this.CreateJobField = value;
                    this.RaisePropertyChanged("CreateJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreateNewJob {
            get {
                return this.CreateNewJobField;
            }
            set {
                if ((this.CreateNewJobField.Equals(value) != true)) {
                    this.CreateNewJobField = value;
                    this.RaisePropertyChanged("CreateNewJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditLimitMessage {
            get {
                return this.CreditLimitMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditLimitMessageField, value) != true)) {
                    this.CreditLimitMessageField = value;
                    this.RaisePropertyChanged("CreditLimitMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditLimitSource {
            get {
                return this.CreditLimitSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditLimitSourceField, value) != true)) {
                    this.CreditLimitSourceField = value;
                    this.RaisePropertyChanged("CreditLimitSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CumeDate {
            get {
                return this.CumeDateField;
            }
            set {
                if ((this.CumeDateField.Equals(value) != true)) {
                    this.CumeDateField = value;
                    this.RaisePropertyChanged("CumeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CumeQty {
            get {
                return this.CumeQtyField;
            }
            set {
                if ((this.CumeQtyField.Equals(value) != true)) {
                    this.CumeQtyField = value;
                    this.RaisePropertyChanged("CumeQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrSymbol {
            get {
                return this.CurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrSymbolField, value) != true)) {
                    this.CurrSymbolField = value;
                    this.RaisePropertyChanged("CurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyID {
            get {
                return this.CurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIDField, value) != true)) {
                    this.CurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUM {
            get {
                return this.DUMField;
            }
            set {
                if ((object.ReferenceEquals(this.DUMField, value) != true)) {
                    this.DUMField = value;
                    this.RaisePropertyChanged("DUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultOversPricing {
            get {
                return this.DefaultOversPricingField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultOversPricingField, value) != true)) {
                    this.DefaultOversPricingField = value;
                    this.RaisePropertyChanged("DefaultOversPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandContractLine {
            get {
                return this.DemandContractLineField;
            }
            set {
                if ((this.DemandContractLineField.Equals(value) != true)) {
                    this.DemandContractLineField = value;
                    this.RaisePropertyChanged("DemandContractLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandContractNum {
            get {
                return this.DemandContractNumField;
            }
            set {
                if ((this.DemandContractNumField.Equals(value) != true)) {
                    this.DemandContractNumField = value;
                    this.RaisePropertyChanged("DemandContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandDtlRejected {
            get {
                return this.DemandDtlRejectedField;
            }
            set {
                if ((this.DemandDtlRejectedField.Equals(value) != true)) {
                    this.DemandDtlRejectedField = value;
                    this.RaisePropertyChanged("DemandDtlRejected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandDtlSeq {
            get {
                return this.DemandDtlSeqField;
            }
            set {
                if ((this.DemandDtlSeqField.Equals(value) != true)) {
                    this.DemandDtlSeqField = value;
                    this.RaisePropertyChanged("DemandDtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandHeadSeq {
            get {
                return this.DemandHeadSeqField;
            }
            set {
                if ((this.DemandHeadSeqField.Equals(value) != true)) {
                    this.DemandHeadSeqField = value;
                    this.RaisePropertyChanged("DemandHeadSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DemandQuantity {
            get {
                return this.DemandQuantityField;
            }
            set {
                if ((this.DemandQuantityField.Equals(value) != true)) {
                    this.DemandQuantityField = value;
                    this.RaisePropertyChanged("DemandQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCode {
            get {
                return this.DimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeField, value) != true)) {
                    this.DimCodeField = value;
                    this.RaisePropertyChanged("DimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DimConvFactor {
            get {
                return this.DimConvFactorField;
            }
            set {
                if ((this.DimConvFactorField.Equals(value) != true)) {
                    this.DimConvFactorField = value;
                    this.RaisePropertyChanged("DimConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscBreakListCode {
            get {
                return this.DiscBreakListCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscBreakListCodeField, value) != true)) {
                    this.DiscBreakListCodeField = value;
                    this.RaisePropertyChanged("DiscBreakListCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DiscBreakListCodeEndDate {
            get {
                return this.DiscBreakListCodeEndDateField;
            }
            set {
                if ((this.DiscBreakListCodeEndDateField.Equals(value) != true)) {
                    this.DiscBreakListCodeEndDateField = value;
                    this.RaisePropertyChanged("DiscBreakListCodeEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscBreakListCodeListDescription {
            get {
                return this.DiscBreakListCodeListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscBreakListCodeListDescriptionField, value) != true)) {
                    this.DiscBreakListCodeListDescriptionField = value;
                    this.RaisePropertyChanged("DiscBreakListCodeListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DiscBreakListCodeStartDate {
            get {
                return this.DiscBreakListCodeStartDateField;
            }
            set {
                if ((this.DiscBreakListCodeStartDateField.Equals(value) != true)) {
                    this.DiscBreakListCodeStartDateField = value;
                    this.RaisePropertyChanged("DiscBreakListCodeStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscListPrice {
            get {
                return this.DiscListPriceField;
            }
            set {
                if ((this.DiscListPriceField.Equals(value) != true)) {
                    this.DiscListPriceField = value;
                    this.RaisePropertyChanged("DiscListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountPercent {
            get {
                return this.DiscountPercentField;
            }
            set {
                if ((this.DiscountPercentField.Equals(value) != true)) {
                    this.DiscountPercentField = value;
                    this.RaisePropertyChanged("DiscountPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DisplaySeq {
            get {
                return this.DisplaySeqField;
            }
            set {
                if ((this.DisplaySeqField.Equals(value) != true)) {
                    this.DisplaySeqField = value;
                    this.RaisePropertyChanged("DisplaySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DoNotShipAfterDate {
            get {
                return this.DoNotShipAfterDateField;
            }
            set {
                if ((this.DoNotShipAfterDateField.Equals(value) != true)) {
                    this.DoNotShipAfterDateField = value;
                    this.RaisePropertyChanged("DoNotShipAfterDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DoNotShipBeforeDate {
            get {
                return this.DoNotShipBeforeDateField;
            }
            set {
                if ((this.DoNotShipBeforeDateField.Equals(value) != true)) {
                    this.DoNotShipBeforeDateField = value;
                    this.RaisePropertyChanged("DoNotShipBeforeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocAdvanceBillBal {
            get {
                return this.DocAdvanceBillBalField;
            }
            set {
                if ((this.DocAdvanceBillBalField.Equals(value) != true)) {
                    this.DocAdvanceBillBalField = value;
                    this.RaisePropertyChanged("DocAdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDiscount {
            get {
                return this.DocDiscountField;
            }
            set {
                if ((this.DocDiscountField.Equals(value) != true)) {
                    this.DocDiscountField = value;
                    this.RaisePropertyChanged("DocDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspDiscount {
            get {
                return this.DocDspDiscountField;
            }
            set {
                if ((this.DocDspDiscountField.Equals(value) != true)) {
                    this.DocDspDiscountField = value;
                    this.RaisePropertyChanged("DocDspDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspUnitPrice {
            get {
                return this.DocDspUnitPriceField;
            }
            set {
                if ((this.DocDspUnitPriceField.Equals(value) != true)) {
                    this.DocDspUnitPriceField = value;
                    this.RaisePropertyChanged("DocDspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocExtPrice {
            get {
                return this.DocExtPriceField;
            }
            set {
                if ((this.DocExtPriceField.Equals(value) != true)) {
                    this.DocExtPriceField = value;
                    this.RaisePropertyChanged("DocExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocExtPriceDtl {
            get {
                return this.DocExtPriceDtlField;
            }
            set {
                if ((this.DocExtPriceDtlField.Equals(value) != true)) {
                    this.DocExtPriceDtlField = value;
                    this.RaisePropertyChanged("DocExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInAdvanceBillBal {
            get {
                return this.DocInAdvanceBillBalField;
            }
            set {
                if ((this.DocInAdvanceBillBalField.Equals(value) != true)) {
                    this.DocInAdvanceBillBalField = value;
                    this.RaisePropertyChanged("DocInAdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInDiscount {
            get {
                return this.DocInDiscountField;
            }
            set {
                if ((this.DocInDiscountField.Equals(value) != true)) {
                    this.DocInDiscountField = value;
                    this.RaisePropertyChanged("DocInDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInExtPriceDtl {
            get {
                return this.DocInExtPriceDtlField;
            }
            set {
                if ((this.DocInExtPriceDtlField.Equals(value) != true)) {
                    this.DocInExtPriceDtlField = value;
                    this.RaisePropertyChanged("DocInExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInListPrice {
            get {
                return this.DocInListPriceField;
            }
            set {
                if ((this.DocInListPriceField.Equals(value) != true)) {
                    this.DocInListPriceField = value;
                    this.RaisePropertyChanged("DocInListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInMiscCharges {
            get {
                return this.DocInMiscChargesField;
            }
            set {
                if ((this.DocInMiscChargesField.Equals(value) != true)) {
                    this.DocInMiscChargesField = value;
                    this.RaisePropertyChanged("DocInMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInOrdBasedPrice {
            get {
                return this.DocInOrdBasedPriceField;
            }
            set {
                if ((this.DocInOrdBasedPriceField.Equals(value) != true)) {
                    this.DocInOrdBasedPriceField = value;
                    this.RaisePropertyChanged("DocInOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInUnitPrice {
            get {
                return this.DocInUnitPriceField;
            }
            set {
                if ((this.DocInUnitPriceField.Equals(value) != true)) {
                    this.DocInUnitPriceField = value;
                    this.RaisePropertyChanged("DocInUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocLessDiscount {
            get {
                return this.DocLessDiscountField;
            }
            set {
                if ((this.DocLessDiscountField.Equals(value) != true)) {
                    this.DocLessDiscountField = value;
                    this.RaisePropertyChanged("DocLessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocListPrice {
            get {
                return this.DocListPriceField;
            }
            set {
                if ((this.DocListPriceField.Equals(value) != true)) {
                    this.DocListPriceField = value;
                    this.RaisePropertyChanged("DocListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMiscCharges {
            get {
                return this.DocMiscChargesField;
            }
            set {
                if ((this.DocMiscChargesField.Equals(value) != true)) {
                    this.DocMiscChargesField = value;
                    this.RaisePropertyChanged("DocMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocOrdBasedPrice {
            get {
                return this.DocOrdBasedPriceField;
            }
            set {
                if ((this.DocOrdBasedPriceField.Equals(value) != true)) {
                    this.DocOrdBasedPriceField = value;
                    this.RaisePropertyChanged("DocOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalPrice {
            get {
                return this.DocTotalPriceField;
            }
            set {
                if ((this.DocTotalPriceField.Equals(value) != true)) {
                    this.DocTotalPriceField = value;
                    this.RaisePropertyChanged("DocTotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnitPrice {
            get {
                return this.DocUnitPriceField;
            }
            set {
                if ((this.DocUnitPriceField.Equals(value) != true)) {
                    this.DocUnitPriceField = value;
                    this.RaisePropertyChanged("DocUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspDiscount {
            get {
                return this.DspDiscountField;
            }
            set {
                if ((this.DspDiscountField.Equals(value) != true)) {
                    this.DspDiscountField = value;
                    this.RaisePropertyChanged("DspDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspJobType {
            get {
                return this.DspJobTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DspJobTypeField, value) != true)) {
                    this.DspJobTypeField = value;
                    this.RaisePropertyChanged("DspJobType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspUnitPrice {
            get {
                return this.DspUnitPriceField;
            }
            set {
                if ((this.DspUnitPriceField.Equals(value) != true)) {
                    this.DspUnitPriceField = value;
                    this.RaisePropertyChanged("DspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DupOnJobCrt {
            get {
                return this.DupOnJobCrtField;
            }
            set {
                if ((this.DupOnJobCrtField.Equals(value) != true)) {
                    this.DupOnJobCrtField = value;
                    this.RaisePropertyChanged("DupOnJobCrt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ECCConfigSysRowId {
            get {
                return this.ECCConfigSysRowIdField;
            }
            set {
                if ((this.ECCConfigSysRowIdField.Equals(value) != true)) {
                    this.ECCConfigSysRowIdField = value;
                    this.RaisePropertyChanged("ECCConfigSysRowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ECCDiscount {
            get {
                return this.ECCDiscountField;
            }
            set {
                if ((this.ECCDiscountField.Equals(value) != true)) {
                    this.ECCDiscountField = value;
                    this.RaisePropertyChanged("ECCDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECCOrderLine {
            get {
                return this.ECCOrderLineField;
            }
            set {
                if ((this.ECCOrderLineField.Equals(value) != true)) {
                    this.ECCOrderLineField = value;
                    this.RaisePropertyChanged("ECCOrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCOrderNum {
            get {
                return this.ECCOrderNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCOrderNumField, value) != true)) {
                    this.ECCOrderNumField = value;
                    this.RaisePropertyChanged("ECCOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCPlant {
            get {
                return this.ECCPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCPlantField, value) != true)) {
                    this.ECCPlantField = value;
                    this.RaisePropertyChanged("ECCPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ECCPreventRepricing {
            get {
                return this.ECCPreventRepricingField;
            }
            set {
                if ((this.ECCPreventRepricingField.Equals(value) != true)) {
                    this.ECCPreventRepricingField = value;
                    this.RaisePropertyChanged("ECCPreventRepricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECCQuoteLine {
            get {
                return this.ECCQuoteLineField;
            }
            set {
                if ((this.ECCQuoteLineField.Equals(value) != true)) {
                    this.ECCQuoteLineField = value;
                    this.RaisePropertyChanged("ECCQuoteLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCQuoteNum {
            get {
                return this.ECCQuoteNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCQuoteNumField, value) != true)) {
                    this.ECCQuoteNumField = value;
                    this.RaisePropertyChanged("ECCQuoteNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableCreateNewJob {
            get {
                return this.EnableCreateNewJobField;
            }
            set {
                if ((this.EnableCreateNewJobField.Equals(value) != true)) {
                    this.EnableCreateNewJobField = value;
                    this.RaisePropertyChanged("EnableCreateNewJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableGetDtls {
            get {
                return this.EnableGetDtlsField;
            }
            set {
                if ((this.EnableGetDtlsField.Equals(value) != true)) {
                    this.EnableGetDtlsField = value;
                    this.RaisePropertyChanged("EnableGetDtls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableKitUnitPrice {
            get {
                return this.EnableKitUnitPriceField;
            }
            set {
                if ((this.EnableKitUnitPriceField.Equals(value) != true)) {
                    this.EnableKitUnitPriceField = value;
                    this.RaisePropertyChanged("EnableKitUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableRelJob {
            get {
                return this.EnableRelJobField;
            }
            set {
                if ((this.EnableRelJobField.Equals(value) != true)) {
                    this.EnableRelJobField = value;
                    this.RaisePropertyChanged("EnableRelJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableRenewalNbr {
            get {
                return this.EnableRenewalNbrField;
            }
            set {
                if ((this.EnableRenewalNbrField.Equals(value) != true)) {
                    this.EnableRenewalNbrField = value;
                    this.RaisePropertyChanged("EnableRenewalNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSchedJob {
            get {
                return this.EnableSchedJobField;
            }
            set {
                if ((this.EnableSchedJobField.Equals(value) != true)) {
                    this.EnableSchedJobField = value;
                    this.RaisePropertyChanged("EnableSchedJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSellingQty {
            get {
                return this.EnableSellingQtyField;
            }
            set {
                if ((this.EnableSellingQtyField.Equals(value) != true)) {
                    this.EnableSellingQtyField = value;
                    this.RaisePropertyChanged("EnableSellingQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryProcess {
            get {
                return this.EntryProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryProcessField, value) != true)) {
                    this.EntryProcessField = value;
                    this.RaisePropertyChanged("EntryProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtPrice {
            get {
                return this.ExtPriceField;
            }
            set {
                if ((this.ExtPriceField.Equals(value) != true)) {
                    this.ExtPriceField = value;
                    this.RaisePropertyChanged("ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtPriceDtl {
            get {
                return this.ExtPriceDtlField;
            }
            set {
                if ((this.ExtPriceDtlField.Equals(value) != true)) {
                    this.ExtPriceDtlField = value;
                    this.RaisePropertyChanged("ExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromQuoteLineFlag {
            get {
                return this.FromQuoteLineFlagField;
            }
            set {
                if ((this.FromQuoteLineFlagField.Equals(value) != true)) {
                    this.FromQuoteLineFlagField = value;
                    this.RaisePropertyChanged("FromQuoteLineFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetDtls {
            get {
                return this.GetDtlsField;
            }
            set {
                if ((this.GetDtlsField.Equals(value) != true)) {
                    this.GetDtlsField = value;
                    this.RaisePropertyChanged("GetDtls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupSeq {
            get {
                return this.GroupSeqField;
            }
            set {
                if ((this.GroupSeqField.Equals(value) != true)) {
                    this.GroupSeqField = value;
                    this.RaisePropertyChanged("GroupSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasComplement {
            get {
                return this.HasComplementField;
            }
            set {
                if ((this.HasComplementField.Equals(value) != true)) {
                    this.HasComplementField = value;
                    this.RaisePropertyChanged("HasComplement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasDowngrade {
            get {
                return this.HasDowngradeField;
            }
            set {
                if ((this.HasDowngradeField.Equals(value) != true)) {
                    this.HasDowngradeField = value;
                    this.RaisePropertyChanged("HasDowngrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSubstitute {
            get {
                return this.HasSubstituteField;
            }
            set {
                if ((this.HasSubstituteField.Equals(value) != true)) {
                    this.HasSubstituteField = value;
                    this.RaisePropertyChanged("HasSubstitute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasUpgrade {
            get {
                return this.HasUpgradeField;
            }
            set {
                if ((this.HasUpgradeField.Equals(value) != true)) {
                    this.HasUpgradeField = value;
                    this.RaisePropertyChanged("HasUpgrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPOLine {
            get {
                return this.ICPOLineField;
            }
            set {
                if ((this.ICPOLineField.Equals(value) != true)) {
                    this.ICPOLineField = value;
                    this.RaisePropertyChanged("ICPOLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPONum {
            get {
                return this.ICPONumField;
            }
            set {
                if ((this.ICPONumField.Equals(value) != true)) {
                    this.ICPONumField = value;
                    this.RaisePropertyChanged("ICPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAdvanceBillBal {
            get {
                return this.InAdvanceBillBalField;
            }
            set {
                if ((this.InAdvanceBillBalField.Equals(value) != true)) {
                    this.InAdvanceBillBalField = value;
                    this.RaisePropertyChanged("InAdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InDiscount {
            get {
                return this.InDiscountField;
            }
            set {
                if ((this.InDiscountField.Equals(value) != true)) {
                    this.InDiscountField = value;
                    this.RaisePropertyChanged("InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InExtPriceDtl {
            get {
                return this.InExtPriceDtlField;
            }
            set {
                if ((this.InExtPriceDtlField.Equals(value) != true)) {
                    this.InExtPriceDtlField = value;
                    this.RaisePropertyChanged("InExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InListPrice {
            get {
                return this.InListPriceField;
            }
            set {
                if ((this.InListPriceField.Equals(value) != true)) {
                    this.InListPriceField = value;
                    this.RaisePropertyChanged("InListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InMiscCharges {
            get {
                return this.InMiscChargesField;
            }
            set {
                if ((this.InMiscChargesField.Equals(value) != true)) {
                    this.InMiscChargesField = value;
                    this.RaisePropertyChanged("InMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InOrdBasedPrice {
            get {
                return this.InOrdBasedPriceField;
            }
            set {
                if ((this.InOrdBasedPriceField.Equals(value) != true)) {
                    this.InOrdBasedPriceField = value;
                    this.RaisePropertyChanged("InOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InUnitPrice {
            get {
                return this.InUnitPriceField;
            }
            set {
                if ((this.InUnitPriceField.Equals(value) != true)) {
                    this.InUnitPriceField = value;
                    this.RaisePropertyChanged("InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceComment {
            get {
                return this.InvoiceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCommentField, value) != true)) {
                    this.InvoiceCommentField = value;
                    this.RaisePropertyChanged("InvoiceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvtyUOM {
            get {
                return this.InvtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.InvtyUOMField, value) != true)) {
                    this.InvtyUOMField = value;
                    this.RaisePropertyChanged("InvtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTypeDesc {
            get {
                return this.JobTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTypeDescField, value) != true)) {
                    this.JobTypeDescField = value;
                    this.RaisePropertyChanged("JobTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool JobWasCreated {
            get {
                return this.JobWasCreatedField;
            }
            set {
                if ((this.JobWasCreatedField.Equals(value) != true)) {
                    this.JobWasCreatedField = value;
                    this.RaisePropertyChanged("JobWasCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitAllowUpdate {
            get {
                return this.KitAllowUpdateField;
            }
            set {
                if ((this.KitAllowUpdateField.Equals(value) != true)) {
                    this.KitAllowUpdateField = value;
                    this.RaisePropertyChanged("KitAllowUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitBackFlush {
            get {
                return this.KitBackFlushField;
            }
            set {
                if ((this.KitBackFlushField.Equals(value) != true)) {
                    this.KitBackFlushField = value;
                    this.RaisePropertyChanged("KitBackFlush");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitChangeParms {
            get {
                return this.KitChangeParmsField;
            }
            set {
                if ((this.KitChangeParmsField.Equals(value) != true)) {
                    this.KitChangeParmsField = value;
                    this.RaisePropertyChanged("KitChangeParms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitCompOrigPart {
            get {
                return this.KitCompOrigPartField;
            }
            set {
                if ((object.ReferenceEquals(this.KitCompOrigPartField, value) != true)) {
                    this.KitCompOrigPartField = value;
                    this.RaisePropertyChanged("KitCompOrigPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KitCompOrigSeq {
            get {
                return this.KitCompOrigSeqField;
            }
            set {
                if ((this.KitCompOrigSeqField.Equals(value) != true)) {
                    this.KitCompOrigSeqField = value;
                    this.RaisePropertyChanged("KitCompOrigSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitDisable {
            get {
                return this.KitDisableField;
            }
            set {
                if ((this.KitDisableField.Equals(value) != true)) {
                    this.KitDisableField = value;
                    this.RaisePropertyChanged("KitDisable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitFlag {
            get {
                return this.KitFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.KitFlagField, value) != true)) {
                    this.KitFlagField = value;
                    this.RaisePropertyChanged("KitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitFlagDescription {
            get {
                return this.KitFlagDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KitFlagDescriptionField, value) != true)) {
                    this.KitFlagDescriptionField = value;
                    this.RaisePropertyChanged("KitFlagDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitOrderQtyUOM {
            get {
                return this.KitOrderQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.KitOrderQtyUOMField, value) != true)) {
                    this.KitOrderQtyUOMField = value;
                    this.RaisePropertyChanged("KitOrderQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KitParentLine {
            get {
                return this.KitParentLineField;
            }
            set {
                if ((this.KitParentLineField.Equals(value) != true)) {
                    this.KitParentLineField = value;
                    this.RaisePropertyChanged("KitParentLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitPricing {
            get {
                return this.KitPricingField;
            }
            set {
                if ((object.ReferenceEquals(this.KitPricingField, value) != true)) {
                    this.KitPricingField = value;
                    this.RaisePropertyChanged("KitPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitPrintCompsInv {
            get {
                return this.KitPrintCompsInvField;
            }
            set {
                if ((this.KitPrintCompsInvField.Equals(value) != true)) {
                    this.KitPrintCompsInvField = value;
                    this.RaisePropertyChanged("KitPrintCompsInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitPrintCompsPS {
            get {
                return this.KitPrintCompsPSField;
            }
            set {
                if ((this.KitPrintCompsPSField.Equals(value) != true)) {
                    this.KitPrintCompsPSField = value;
                    this.RaisePropertyChanged("KitPrintCompsPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal KitQtyPer {
            get {
                return this.KitQtyPerField;
            }
            set {
                if ((this.KitQtyPerField.Equals(value) != true)) {
                    this.KitQtyPerField = value;
                    this.RaisePropertyChanged("KitQtyPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitShipComplete {
            get {
                return this.KitShipCompleteField;
            }
            set {
                if ((this.KitShipCompleteField.Equals(value) != true)) {
                    this.KitShipCompleteField = value;
                    this.RaisePropertyChanged("KitShipComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitStandard {
            get {
                return this.KitStandardField;
            }
            set {
                if ((this.KitStandardField.Equals(value) != true)) {
                    this.KitStandardField = value;
                    this.RaisePropertyChanged("KitStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitsLoaded {
            get {
                return this.KitsLoadedField;
            }
            set {
                if ((this.KitsLoadedField.Equals(value) != true)) {
                    this.KitsLoadedField = value;
                    this.RaisePropertyChanged("KitsLoaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LabCovered {
            get {
                return this.LabCoveredField;
            }
            set {
                if ((this.LabCoveredField.Equals(value) != true)) {
                    this.LabCoveredField = value;
                    this.RaisePropertyChanged("LabCovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LaborDuration {
            get {
                return this.LaborDurationField;
            }
            set {
                if ((this.LaborDurationField.Equals(value) != true)) {
                    this.LaborDurationField = value;
                    this.RaisePropertyChanged("LaborDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LaborMod {
            get {
                return this.LaborModField;
            }
            set {
                if ((object.ReferenceEquals(this.LaborModField, value) != true)) {
                    this.LaborModField = value;
                    this.RaisePropertyChanged("LaborMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastConfigDate {
            get {
                return this.LastConfigDateField;
            }
            set {
                if ((this.LastConfigDateField.Equals(value) != true)) {
                    this.LastConfigDateField = value;
                    this.RaisePropertyChanged("LastConfigDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastConfigTime {
            get {
                return this.LastConfigTimeField;
            }
            set {
                if ((this.LastConfigTimeField.Equals(value) != true)) {
                    this.LastConfigTimeField = value;
                    this.RaisePropertyChanged("LastConfigTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastConfigUserID {
            get {
                return this.LastConfigUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LastConfigUserIDField, value) != true)) {
                    this.LastConfigUserIDField = value;
                    this.RaisePropertyChanged("LastConfigUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LessDiscount {
            get {
                return this.LessDiscountField;
            }
            set {
                if ((this.LessDiscountField.Equals(value) != true)) {
                    this.LessDiscountField = value;
                    this.RaisePropertyChanged("LessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineStatus {
            get {
                return this.LineStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LineStatusField, value) != true)) {
                    this.LineStatusField = value;
                    this.RaisePropertyChanged("LineStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineType {
            get {
                return this.LineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LineTypeField, value) != true)) {
                    this.LineTypeField = value;
                    this.RaisePropertyChanged("LineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkToContract {
            get {
                return this.LinkToContractField;
            }
            set {
                if ((this.LinkToContractField.Equals(value) != true)) {
                    this.LinkToContractField = value;
                    this.RaisePropertyChanged("LinkToContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ListPrice {
            get {
                return this.ListPriceField;
            }
            set {
                if ((this.ListPriceField.Equals(value) != true)) {
                    this.ListPriceField = value;
                    this.RaisePropertyChanged("ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockDisc {
            get {
                return this.LockDiscField;
            }
            set {
                if ((this.LockDiscField.Equals(value) != true)) {
                    this.LockDiscField = value;
                    this.RaisePropertyChanged("LockDisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockPrice {
            get {
                return this.LockPriceField;
            }
            set {
                if ((this.LockPriceField.Equals(value) != true)) {
                    this.LockPriceField = value;
                    this.RaisePropertyChanged("LockPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockQty {
            get {
                return this.LockQtyField;
            }
            set {
                if ((this.LockQtyField.Equals(value) != true)) {
                    this.LockQtyField = value;
                    this.RaisePropertyChanged("LockQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOMsourceEst {
            get {
                return this.MOMsourceEstField;
            }
            set {
                if ((object.ReferenceEquals(this.MOMsourceEstField, value) != true)) {
                    this.MOMsourceEstField = value;
                    this.RaisePropertyChanged("MOMsourceEst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MOMsourceType {
            get {
                return this.MOMsourceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MOMsourceTypeField, value) != true)) {
                    this.MOMsourceTypeField = value;
                    this.RaisePropertyChanged("MOMsourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MatCovered {
            get {
                return this.MatCoveredField;
            }
            set {
                if ((this.MatCoveredField.Equals(value) != true)) {
                    this.MatCoveredField = value;
                    this.RaisePropertyChanged("MatCovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialDuration {
            get {
                return this.MaterialDurationField;
            }
            set {
                if ((this.MaterialDurationField.Equals(value) != true)) {
                    this.MaterialDurationField = value;
                    this.RaisePropertyChanged("MaterialDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialMod {
            get {
                return this.MaterialModField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialModField, value) != true)) {
                    this.MaterialModField = value;
                    this.RaisePropertyChanged("MaterialMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgJobType {
            get {
                return this.MfgJobTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgJobTypeField, value) != true)) {
                    this.MfgJobTypeField = value;
                    this.RaisePropertyChanged("MfgJobType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscCharges {
            get {
                return this.MiscChargesField;
            }
            set {
                if ((this.MiscChargesField.Equals(value) != true)) {
                    this.MiscChargesField = value;
                    this.RaisePropertyChanged("MiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MiscCovered {
            get {
                return this.MiscCoveredField;
            }
            set {
                if ((this.MiscCoveredField.Equals(value) != true)) {
                    this.MiscCoveredField = value;
                    this.RaisePropertyChanged("MiscCovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MiscDuration {
            get {
                return this.MiscDurationField;
            }
            set {
                if ((this.MiscDurationField.Equals(value) != true)) {
                    this.MiscDurationField = value;
                    this.RaisePropertyChanged("MiscDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MktgCampaignID {
            get {
                return this.MktgCampaignIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MktgCampaignIDField, value) != true)) {
                    this.MktgCampaignIDField = value;
                    this.RaisePropertyChanged("MktgCampaignID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MktgCampaignIDCampDescription {
            get {
                return this.MktgCampaignIDCampDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MktgCampaignIDCampDescriptionField, value) != true)) {
                    this.MktgCampaignIDCampDescriptionField = value;
                    this.RaisePropertyChanged("MktgCampaignIDCampDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MktgEvntEvntDescription {
            get {
                return this.MktgEvntEvntDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MktgEvntEvntDescriptionField, value) != true)) {
                    this.MktgEvntEvntDescriptionField = value;
                    this.RaisePropertyChanged("MktgEvntEvntDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MktgEvntSeq {
            get {
                return this.MktgEvntSeqField;
            }
            set {
                if ((this.MktgEvntSeqField.Equals(value) != true)) {
                    this.MktgEvntSeqField = value;
                    this.RaisePropertyChanged("MktgEvntSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MultipleReleases {
            get {
                return this.MultipleReleasesField;
            }
            set {
                if ((this.MultipleReleasesField.Equals(value) != true)) {
                    this.MultipleReleasesField = value;
                    this.RaisePropertyChanged("MultipleReleases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NeedByDate {
            get {
                return this.NeedByDateField;
            }
            set {
                if ((this.NeedByDateField.Equals(value) != true)) {
                    this.NeedByDateField = value;
                    this.RaisePropertyChanged("NeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OldOpenValue {
            get {
                return this.OldOpenValueField;
            }
            set {
                if ((this.OldOpenValueField.Equals(value) != true)) {
                    this.OldOpenValueField = value;
                    this.RaisePropertyChanged("OldOpenValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OldOurOpenQty {
            get {
                return this.OldOurOpenQtyField;
            }
            set {
                if ((this.OldOurOpenQtyField.Equals(value) != true)) {
                    this.OldOurOpenQtyField = value;
                    this.RaisePropertyChanged("OldOurOpenQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldProdCode {
            get {
                return this.OldProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OldProdCodeField, value) != true)) {
                    this.OldProdCodeField = value;
                    this.RaisePropertyChanged("OldProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OldSellingOpenQty {
            get {
                return this.OldSellingOpenQtyField;
            }
            set {
                if ((this.OldSellingOpenQtyField.Equals(value) != true)) {
                    this.OldSellingOpenQtyField = value;
                    this.RaisePropertyChanged("OldSellingOpenQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQuantity {
            get {
                return this.OnHandQuantityField;
            }
            set {
                if ((this.OnHandQuantityField.Equals(value) != true)) {
                    this.OnHandQuantityField = value;
                    this.RaisePropertyChanged("OnHandQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Onsite {
            get {
                return this.OnsiteField;
            }
            set {
                if ((this.OnsiteField.Equals(value) != true)) {
                    this.OnsiteField = value;
                    this.RaisePropertyChanged("Onsite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenLine {
            get {
                return this.OpenLineField;
            }
            set {
                if ((this.OpenLineField.Equals(value) != true)) {
                    this.OpenLineField = value;
                    this.RaisePropertyChanged("OpenLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrdBasedPrice {
            get {
                return this.OrdBasedPriceField;
            }
            set {
                if ((this.OrdBasedPriceField.Equals(value) != true)) {
                    this.OrdBasedPriceField = value;
                    this.RaisePropertyChanged("OrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderComment {
            get {
                return this.OrderCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCommentField, value) != true)) {
                    this.OrderCommentField = value;
                    this.RaisePropertyChanged("OrderComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNumBTCustNum {
            get {
                return this.OrderNumBTCustNumField;
            }
            set {
                if ((this.OrderNumBTCustNumField.Equals(value) != true)) {
                    this.OrderNumBTCustNumField = value;
                    this.RaisePropertyChanged("OrderNumBTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrigWhyNoTax {
            get {
                return this.OrigWhyNoTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.OrigWhyNoTaxField, value) != true)) {
                    this.OrigWhyNoTaxField = value;
                    this.RaisePropertyChanged("OrigWhyNoTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideDiscPriceList {
            get {
                return this.OverrideDiscPriceListField;
            }
            set {
                if ((this.OverrideDiscPriceListField.Equals(value) != true)) {
                    this.OverrideDiscPriceListField = value;
                    this.RaisePropertyChanged("OverrideDiscPriceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverridePriceList {
            get {
                return this.OverridePriceListField;
            }
            set {
                if ((this.OverridePriceListField.Equals(value) != true)) {
                    this.OverridePriceListField = value;
                    this.RaisePropertyChanged("OverridePriceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Overs {
            get {
                return this.OversField;
            }
            set {
                if ((this.OversField.Equals(value) != true)) {
                    this.OversField = value;
                    this.RaisePropertyChanged("Overs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OversUnitPrice {
            get {
                return this.OversUnitPriceField;
            }
            set {
                if ((this.OversUnitPriceField.Equals(value) != true)) {
                    this.OversUnitPriceField = value;
                    this.RaisePropertyChanged("OversUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PCLinkRemoved {
            get {
                return this.PCLinkRemovedField;
            }
            set {
                if ((this.PCLinkRemovedField.Equals(value) != true)) {
                    this.PCLinkRemovedField = value;
                    this.RaisePropertyChanged("PCLinkRemoved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineField, value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineRef {
            get {
                return this.POLineRefField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineRefField, value) != true)) {
                    this.POLineRefField = value;
                    this.RaisePropertyChanged("POLineRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartExists {
            get {
                return this.PartExistsField;
            }
            set {
                if ((this.PartExistsField.Equals(value) != true)) {
                    this.PartExistsField = value;
                    this.RaisePropertyChanged("PartExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PickListComment {
            get {
                return this.PickListCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.PickListCommentField, value) != true)) {
                    this.PickListCommentField = value;
                    this.RaisePropertyChanged("PickListComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanGUID {
            get {
                return this.PlanGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanGUIDField, value) != true)) {
                    this.PlanGUIDField = value;
                    this.RaisePropertyChanged("PlanGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanUserID {
            get {
                return this.PlanUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanUserIDField, value) != true)) {
                    this.PlanUserIDField = value;
                    this.RaisePropertyChanged("PlanUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevPartNum {
            get {
                return this.PrevPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevPartNumField, value) != true)) {
                    this.PrevPartNumField = value;
                    this.RaisePropertyChanged("PrevPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PrevSellQty {
            get {
                return this.PrevSellQtyField;
            }
            set {
                if ((this.PrevSellQtyField.Equals(value) != true)) {
                    this.PrevSellQtyField = value;
                    this.RaisePropertyChanged("PrevSellQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevXPartNum {
            get {
                return this.PrevXPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevXPartNumField, value) != true)) {
                    this.PrevXPartNumField = value;
                    this.RaisePropertyChanged("PrevXPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceBreakEndDate {
            get {
                return this.PriceBreakEndDateField;
            }
            set {
                if ((this.PriceBreakEndDateField.Equals(value) != true)) {
                    this.PriceBreakEndDateField = value;
                    this.RaisePropertyChanged("PriceBreakEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceBreakListDescription {
            get {
                return this.PriceBreakListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceBreakListDescriptionField, value) != true)) {
                    this.PriceBreakListDescriptionField = value;
                    this.RaisePropertyChanged("PriceBreakListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceBreakStartDate {
            get {
                return this.PriceBreakStartDateField;
            }
            set {
                if ((this.PriceBreakStartDateField.Equals(value) != true)) {
                    this.PriceBreakStartDateField = value;
                    this.RaisePropertyChanged("PriceBreakStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceGroupCode {
            get {
                return this.PriceGroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceGroupCodeField, value) != true)) {
                    this.PriceGroupCodeField = value;
                    this.RaisePropertyChanged("PriceGroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceListCode {
            get {
                return this.PriceListCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceListCodeField, value) != true)) {
                    this.PriceListCodeField = value;
                    this.RaisePropertyChanged("PriceListCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceListCodeDesc {
            get {
                return this.PriceListCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceListCodeDescField, value) != true)) {
                    this.PriceListCodeDescField = value;
                    this.RaisePropertyChanged("PriceListCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricePerCode {
            get {
                return this.PricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PricePerCodeField, value) != true)) {
                    this.PricePerCodeField = value;
                    this.RaisePropertyChanged("PricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricingQty {
            get {
                return this.PricingQtyField;
            }
            set {
                if ((this.PricingQtyField.Equals(value) != true)) {
                    this.PricingQtyField = value;
                    this.RaisePropertyChanged("PricingQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricingValue {
            get {
                return this.PricingValueField;
            }
            set {
                if ((this.PricingValueField.Equals(value) != true)) {
                    this.PricingValueField = value;
                    this.RaisePropertyChanged("PricingValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProFormaInvComment {
            get {
                return this.ProFormaInvCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ProFormaInvCommentField, value) != true)) {
                    this.ProFormaInvCommentField = value;
                    this.RaisePropertyChanged("ProFormaInvComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProcessCounterSale {
            get {
                return this.ProcessCounterSaleField;
            }
            set {
                if ((this.ProcessCounterSaleField.Equals(value) != true)) {
                    this.ProcessCounterSaleField = value;
                    this.RaisePropertyChanged("ProcessCounterSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProcessQuickEntry {
            get {
                return this.ProcessQuickEntryField;
            }
            set {
                if ((this.ProcessQuickEntryField.Equals(value) != true)) {
                    this.ProcessQuickEntryField = value;
                    this.RaisePropertyChanged("ProcessQuickEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCodeDescription {
            get {
                return this.ProdCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeDescriptionField, value) != true)) {
                    this.ProdCodeDescriptionField = value;
                    this.RaisePropertyChanged("ProdCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectIDDescription {
            get {
                return this.ProjectIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDDescriptionField, value) != true)) {
                    this.ProjectIDDescriptionField = value;
                    this.RaisePropertyChanged("ProjectIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuoteLine {
            get {
                return this.QuoteLineField;
            }
            set {
                if ((this.QuoteLineField.Equals(value) != true)) {
                    this.QuoteLineField = value;
                    this.RaisePropertyChanged("QuoteLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuoteNum {
            get {
                return this.QuoteNumField;
            }
            set {
                if ((this.QuoteNumField.Equals(value) != true)) {
                    this.QuoteNumField = value;
                    this.RaisePropertyChanged("QuoteNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuoteNumCurrencyCode {
            get {
                return this.QuoteNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.QuoteNumCurrencyCodeField, value) != true)) {
                    this.QuoteNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("QuoteNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuoteQtyNum {
            get {
                return this.QuoteQtyNumField;
            }
            set {
                if ((this.QuoteQtyNumField.Equals(value) != true)) {
                    this.QuoteQtyNumField = value;
                    this.RaisePropertyChanged("QuoteQtyNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMALine {
            get {
                return this.RMALineField;
            }
            set {
                if ((this.RMALineField.Equals(value) != true)) {
                    this.RMALineField = value;
                    this.RaisePropertyChanged("RMALine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMANum {
            get {
                return this.RMANumField;
            }
            set {
                if ((this.RMANumField.Equals(value) != true)) {
                    this.RMANumField = value;
                    this.RaisePropertyChanged("RMANum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelJob {
            get {
                return this.RelJobField;
            }
            set {
                if ((this.RelJobField.Equals(value) != true)) {
                    this.RelJobField = value;
                    this.RaisePropertyChanged("RelJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelWasRecInvoiced {
            get {
                return this.RelWasRecInvoicedField;
            }
            set {
                if ((this.RelWasRecInvoicedField.Equals(value) != true)) {
                    this.RelWasRecInvoicedField = value;
                    this.RaisePropertyChanged("RelWasRecInvoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RenewalNbr {
            get {
                return this.RenewalNbrField;
            }
            set {
                if ((this.RenewalNbrField.Equals(value) != true)) {
                    this.RenewalNbrField = value;
                    this.RaisePropertyChanged("RenewalNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate1 {
            get {
                return this.RepRate1Field;
            }
            set {
                if ((this.RepRate1Field.Equals(value) != true)) {
                    this.RepRate1Field = value;
                    this.RaisePropertyChanged("RepRate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate2 {
            get {
                return this.RepRate2Field;
            }
            set {
                if ((this.RepRate2Field.Equals(value) != true)) {
                    this.RepRate2Field = value;
                    this.RaisePropertyChanged("RepRate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate3 {
            get {
                return this.RepRate3Field;
            }
            set {
                if ((this.RepRate3Field.Equals(value) != true)) {
                    this.RepRate3Field = value;
                    this.RaisePropertyChanged("RepRate3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate4 {
            get {
                return this.RepRate4Field;
            }
            set {
                if ((this.RepRate4Field.Equals(value) != true)) {
                    this.RepRate4Field = value;
                    this.RaisePropertyChanged("RepRate4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate5 {
            get {
                return this.RepRate5Field;
            }
            set {
                if ((this.RepRate5Field.Equals(value) != true)) {
                    this.RepRate5Field = value;
                    this.RaisePropertyChanged("RepRate5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit1 {
            get {
                return this.RepSplit1Field;
            }
            set {
                if ((this.RepSplit1Field.Equals(value) != true)) {
                    this.RepSplit1Field = value;
                    this.RaisePropertyChanged("RepSplit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit2 {
            get {
                return this.RepSplit2Field;
            }
            set {
                if ((this.RepSplit2Field.Equals(value) != true)) {
                    this.RepSplit2Field = value;
                    this.RaisePropertyChanged("RepSplit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit3 {
            get {
                return this.RepSplit3Field;
            }
            set {
                if ((this.RepSplit3Field.Equals(value) != true)) {
                    this.RepSplit3Field = value;
                    this.RaisePropertyChanged("RepSplit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit4 {
            get {
                return this.RepSplit4Field;
            }
            set {
                if ((this.RepSplit4Field.Equals(value) != true)) {
                    this.RepSplit4Field = value;
                    this.RaisePropertyChanged("RepSplit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit5 {
            get {
                return this.RepSplit5Field;
            }
            set {
                if ((this.RepSplit5Field.Equals(value) != true)) {
                    this.RepSplit5Field = value;
                    this.RaisePropertyChanged("RepSplit5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RespMessage {
            get {
                return this.RespMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.RespMessageField, value) != true)) {
                    this.RespMessageField = value;
                    this.RaisePropertyChanged("RespMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Rework {
            get {
                return this.ReworkField;
            }
            set {
                if ((this.ReworkField.Equals(value) != true)) {
                    this.ReworkField = value;
                    this.RaisePropertyChanged("Rework");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1AdvanceBillBal {
            get {
                return this.Rpt1AdvanceBillBalField;
            }
            set {
                if ((this.Rpt1AdvanceBillBalField.Equals(value) != true)) {
                    this.Rpt1AdvanceBillBalField = value;
                    this.RaisePropertyChanged("Rpt1AdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Discount {
            get {
                return this.Rpt1DiscountField;
            }
            set {
                if ((this.Rpt1DiscountField.Equals(value) != true)) {
                    this.Rpt1DiscountField = value;
                    this.RaisePropertyChanged("Rpt1Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspDiscount {
            get {
                return this.Rpt1DspDiscountField;
            }
            set {
                if ((this.Rpt1DspDiscountField.Equals(value) != true)) {
                    this.Rpt1DspDiscountField = value;
                    this.RaisePropertyChanged("Rpt1DspDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspUnitPrice {
            get {
                return this.Rpt1DspUnitPriceField;
            }
            set {
                if ((this.Rpt1DspUnitPriceField.Equals(value) != true)) {
                    this.Rpt1DspUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1DspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ExtPrice {
            get {
                return this.Rpt1ExtPriceField;
            }
            set {
                if ((this.Rpt1ExtPriceField.Equals(value) != true)) {
                    this.Rpt1ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt1ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ExtPriceDtl {
            get {
                return this.Rpt1ExtPriceDtlField;
            }
            set {
                if ((this.Rpt1ExtPriceDtlField.Equals(value) != true)) {
                    this.Rpt1ExtPriceDtlField = value;
                    this.RaisePropertyChanged("Rpt1ExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InAdvanceBillBal {
            get {
                return this.Rpt1InAdvanceBillBalField;
            }
            set {
                if ((this.Rpt1InAdvanceBillBalField.Equals(value) != true)) {
                    this.Rpt1InAdvanceBillBalField = value;
                    this.RaisePropertyChanged("Rpt1InAdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InDiscount {
            get {
                return this.Rpt1InDiscountField;
            }
            set {
                if ((this.Rpt1InDiscountField.Equals(value) != true)) {
                    this.Rpt1InDiscountField = value;
                    this.RaisePropertyChanged("Rpt1InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InExtPriceDtl {
            get {
                return this.Rpt1InExtPriceDtlField;
            }
            set {
                if ((this.Rpt1InExtPriceDtlField.Equals(value) != true)) {
                    this.Rpt1InExtPriceDtlField = value;
                    this.RaisePropertyChanged("Rpt1InExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InListPrice {
            get {
                return this.Rpt1InListPriceField;
            }
            set {
                if ((this.Rpt1InListPriceField.Equals(value) != true)) {
                    this.Rpt1InListPriceField = value;
                    this.RaisePropertyChanged("Rpt1InListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InMiscCharges {
            get {
                return this.Rpt1InMiscChargesField;
            }
            set {
                if ((this.Rpt1InMiscChargesField.Equals(value) != true)) {
                    this.Rpt1InMiscChargesField = value;
                    this.RaisePropertyChanged("Rpt1InMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InOrdBasedPrice {
            get {
                return this.Rpt1InOrdBasedPriceField;
            }
            set {
                if ((this.Rpt1InOrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt1InOrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt1InOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InUnitPrice {
            get {
                return this.Rpt1InUnitPriceField;
            }
            set {
                if ((this.Rpt1InUnitPriceField.Equals(value) != true)) {
                    this.Rpt1InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1LessDiscount {
            get {
                return this.Rpt1LessDiscountField;
            }
            set {
                if ((this.Rpt1LessDiscountField.Equals(value) != true)) {
                    this.Rpt1LessDiscountField = value;
                    this.RaisePropertyChanged("Rpt1LessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ListPrice {
            get {
                return this.Rpt1ListPriceField;
            }
            set {
                if ((this.Rpt1ListPriceField.Equals(value) != true)) {
                    this.Rpt1ListPriceField = value;
                    this.RaisePropertyChanged("Rpt1ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1MiscCharges {
            get {
                return this.Rpt1MiscChargesField;
            }
            set {
                if ((this.Rpt1MiscChargesField.Equals(value) != true)) {
                    this.Rpt1MiscChargesField = value;
                    this.RaisePropertyChanged("Rpt1MiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1OrdBasedPrice {
            get {
                return this.Rpt1OrdBasedPriceField;
            }
            set {
                if ((this.Rpt1OrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt1OrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt1OrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalPrice {
            get {
                return this.Rpt1TotalPriceField;
            }
            set {
                if ((this.Rpt1TotalPriceField.Equals(value) != true)) {
                    this.Rpt1TotalPriceField = value;
                    this.RaisePropertyChanged("Rpt1TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1UnitPrice {
            get {
                return this.Rpt1UnitPriceField;
            }
            set {
                if ((this.Rpt1UnitPriceField.Equals(value) != true)) {
                    this.Rpt1UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2AdvanceBillBal {
            get {
                return this.Rpt2AdvanceBillBalField;
            }
            set {
                if ((this.Rpt2AdvanceBillBalField.Equals(value) != true)) {
                    this.Rpt2AdvanceBillBalField = value;
                    this.RaisePropertyChanged("Rpt2AdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Discount {
            get {
                return this.Rpt2DiscountField;
            }
            set {
                if ((this.Rpt2DiscountField.Equals(value) != true)) {
                    this.Rpt2DiscountField = value;
                    this.RaisePropertyChanged("Rpt2Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspDiscount {
            get {
                return this.Rpt2DspDiscountField;
            }
            set {
                if ((this.Rpt2DspDiscountField.Equals(value) != true)) {
                    this.Rpt2DspDiscountField = value;
                    this.RaisePropertyChanged("Rpt2DspDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspUnitPrice {
            get {
                return this.Rpt2DspUnitPriceField;
            }
            set {
                if ((this.Rpt2DspUnitPriceField.Equals(value) != true)) {
                    this.Rpt2DspUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2DspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ExtPrice {
            get {
                return this.Rpt2ExtPriceField;
            }
            set {
                if ((this.Rpt2ExtPriceField.Equals(value) != true)) {
                    this.Rpt2ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt2ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ExtPriceDtl {
            get {
                return this.Rpt2ExtPriceDtlField;
            }
            set {
                if ((this.Rpt2ExtPriceDtlField.Equals(value) != true)) {
                    this.Rpt2ExtPriceDtlField = value;
                    this.RaisePropertyChanged("Rpt2ExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InAdvanceBillBal {
            get {
                return this.Rpt2InAdvanceBillBalField;
            }
            set {
                if ((this.Rpt2InAdvanceBillBalField.Equals(value) != true)) {
                    this.Rpt2InAdvanceBillBalField = value;
                    this.RaisePropertyChanged("Rpt2InAdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InDiscount {
            get {
                return this.Rpt2InDiscountField;
            }
            set {
                if ((this.Rpt2InDiscountField.Equals(value) != true)) {
                    this.Rpt2InDiscountField = value;
                    this.RaisePropertyChanged("Rpt2InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InExtPriceDtl {
            get {
                return this.Rpt2InExtPriceDtlField;
            }
            set {
                if ((this.Rpt2InExtPriceDtlField.Equals(value) != true)) {
                    this.Rpt2InExtPriceDtlField = value;
                    this.RaisePropertyChanged("Rpt2InExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InListPrice {
            get {
                return this.Rpt2InListPriceField;
            }
            set {
                if ((this.Rpt2InListPriceField.Equals(value) != true)) {
                    this.Rpt2InListPriceField = value;
                    this.RaisePropertyChanged("Rpt2InListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InMiscCharges {
            get {
                return this.Rpt2InMiscChargesField;
            }
            set {
                if ((this.Rpt2InMiscChargesField.Equals(value) != true)) {
                    this.Rpt2InMiscChargesField = value;
                    this.RaisePropertyChanged("Rpt2InMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InOrdBasedPrice {
            get {
                return this.Rpt2InOrdBasedPriceField;
            }
            set {
                if ((this.Rpt2InOrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt2InOrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt2InOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InUnitPrice {
            get {
                return this.Rpt2InUnitPriceField;
            }
            set {
                if ((this.Rpt2InUnitPriceField.Equals(value) != true)) {
                    this.Rpt2InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2LessDiscount {
            get {
                return this.Rpt2LessDiscountField;
            }
            set {
                if ((this.Rpt2LessDiscountField.Equals(value) != true)) {
                    this.Rpt2LessDiscountField = value;
                    this.RaisePropertyChanged("Rpt2LessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ListPrice {
            get {
                return this.Rpt2ListPriceField;
            }
            set {
                if ((this.Rpt2ListPriceField.Equals(value) != true)) {
                    this.Rpt2ListPriceField = value;
                    this.RaisePropertyChanged("Rpt2ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2MiscCharges {
            get {
                return this.Rpt2MiscChargesField;
            }
            set {
                if ((this.Rpt2MiscChargesField.Equals(value) != true)) {
                    this.Rpt2MiscChargesField = value;
                    this.RaisePropertyChanged("Rpt2MiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2OrdBasedPrice {
            get {
                return this.Rpt2OrdBasedPriceField;
            }
            set {
                if ((this.Rpt2OrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt2OrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt2OrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalPrice {
            get {
                return this.Rpt2TotalPriceField;
            }
            set {
                if ((this.Rpt2TotalPriceField.Equals(value) != true)) {
                    this.Rpt2TotalPriceField = value;
                    this.RaisePropertyChanged("Rpt2TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2UnitPrice {
            get {
                return this.Rpt2UnitPriceField;
            }
            set {
                if ((this.Rpt2UnitPriceField.Equals(value) != true)) {
                    this.Rpt2UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3AdvanceBillBal {
            get {
                return this.Rpt3AdvanceBillBalField;
            }
            set {
                if ((this.Rpt3AdvanceBillBalField.Equals(value) != true)) {
                    this.Rpt3AdvanceBillBalField = value;
                    this.RaisePropertyChanged("Rpt3AdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Discount {
            get {
                return this.Rpt3DiscountField;
            }
            set {
                if ((this.Rpt3DiscountField.Equals(value) != true)) {
                    this.Rpt3DiscountField = value;
                    this.RaisePropertyChanged("Rpt3Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspDiscount {
            get {
                return this.Rpt3DspDiscountField;
            }
            set {
                if ((this.Rpt3DspDiscountField.Equals(value) != true)) {
                    this.Rpt3DspDiscountField = value;
                    this.RaisePropertyChanged("Rpt3DspDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspUnitPrice {
            get {
                return this.Rpt3DspUnitPriceField;
            }
            set {
                if ((this.Rpt3DspUnitPriceField.Equals(value) != true)) {
                    this.Rpt3DspUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3DspUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ExtPrice {
            get {
                return this.Rpt3ExtPriceField;
            }
            set {
                if ((this.Rpt3ExtPriceField.Equals(value) != true)) {
                    this.Rpt3ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt3ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ExtPriceDtl {
            get {
                return this.Rpt3ExtPriceDtlField;
            }
            set {
                if ((this.Rpt3ExtPriceDtlField.Equals(value) != true)) {
                    this.Rpt3ExtPriceDtlField = value;
                    this.RaisePropertyChanged("Rpt3ExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InAdvanceBillBal {
            get {
                return this.Rpt3InAdvanceBillBalField;
            }
            set {
                if ((this.Rpt3InAdvanceBillBalField.Equals(value) != true)) {
                    this.Rpt3InAdvanceBillBalField = value;
                    this.RaisePropertyChanged("Rpt3InAdvanceBillBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InDiscount {
            get {
                return this.Rpt3InDiscountField;
            }
            set {
                if ((this.Rpt3InDiscountField.Equals(value) != true)) {
                    this.Rpt3InDiscountField = value;
                    this.RaisePropertyChanged("Rpt3InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InExtPriceDtl {
            get {
                return this.Rpt3InExtPriceDtlField;
            }
            set {
                if ((this.Rpt3InExtPriceDtlField.Equals(value) != true)) {
                    this.Rpt3InExtPriceDtlField = value;
                    this.RaisePropertyChanged("Rpt3InExtPriceDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InListPrice {
            get {
                return this.Rpt3InListPriceField;
            }
            set {
                if ((this.Rpt3InListPriceField.Equals(value) != true)) {
                    this.Rpt3InListPriceField = value;
                    this.RaisePropertyChanged("Rpt3InListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InMiscCharges {
            get {
                return this.Rpt3InMiscChargesField;
            }
            set {
                if ((this.Rpt3InMiscChargesField.Equals(value) != true)) {
                    this.Rpt3InMiscChargesField = value;
                    this.RaisePropertyChanged("Rpt3InMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InOrdBasedPrice {
            get {
                return this.Rpt3InOrdBasedPriceField;
            }
            set {
                if ((this.Rpt3InOrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt3InOrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt3InOrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InUnitPrice {
            get {
                return this.Rpt3InUnitPriceField;
            }
            set {
                if ((this.Rpt3InUnitPriceField.Equals(value) != true)) {
                    this.Rpt3InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3LessDiscount {
            get {
                return this.Rpt3LessDiscountField;
            }
            set {
                if ((this.Rpt3LessDiscountField.Equals(value) != true)) {
                    this.Rpt3LessDiscountField = value;
                    this.RaisePropertyChanged("Rpt3LessDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ListPrice {
            get {
                return this.Rpt3ListPriceField;
            }
            set {
                if ((this.Rpt3ListPriceField.Equals(value) != true)) {
                    this.Rpt3ListPriceField = value;
                    this.RaisePropertyChanged("Rpt3ListPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3MiscCharges {
            get {
                return this.Rpt3MiscChargesField;
            }
            set {
                if ((this.Rpt3MiscChargesField.Equals(value) != true)) {
                    this.Rpt3MiscChargesField = value;
                    this.RaisePropertyChanged("Rpt3MiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3OrdBasedPrice {
            get {
                return this.Rpt3OrdBasedPriceField;
            }
            set {
                if ((this.Rpt3OrdBasedPriceField.Equals(value) != true)) {
                    this.Rpt3OrdBasedPriceField = value;
                    this.RaisePropertyChanged("Rpt3OrdBasedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalPrice {
            get {
                return this.Rpt3TotalPriceField;
            }
            set {
                if ((this.Rpt3TotalPriceField.Equals(value) != true)) {
                    this.Rpt3TotalPriceField = value;
                    this.RaisePropertyChanged("Rpt3TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3UnitPrice {
            get {
                return this.Rpt3UnitPriceField;
            }
            set {
                if ((this.Rpt3UnitPriceField.Equals(value) != true)) {
                    this.Rpt3UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesCatID {
            get {
                return this.SalesCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesCatIDField, value) != true)) {
                    this.SalesCatIDField = value;
                    this.RaisePropertyChanged("SalesCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesCatIDDescription {
            get {
                return this.SalesCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesCatIDDescriptionField, value) != true)) {
                    this.SalesCatIDDescriptionField = value;
                    this.RaisePropertyChanged("SalesCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName1 {
            get {
                return this.SalesRepName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName1Field, value) != true)) {
                    this.SalesRepName1Field = value;
                    this.RaisePropertyChanged("SalesRepName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName2 {
            get {
                return this.SalesRepName2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName2Field, value) != true)) {
                    this.SalesRepName2Field = value;
                    this.RaisePropertyChanged("SalesRepName2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName3 {
            get {
                return this.SalesRepName3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName3Field, value) != true)) {
                    this.SalesRepName3Field = value;
                    this.RaisePropertyChanged("SalesRepName3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName4 {
            get {
                return this.SalesRepName4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName4Field, value) != true)) {
                    this.SalesRepName4Field = value;
                    this.RaisePropertyChanged("SalesRepName4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName5 {
            get {
                return this.SalesRepName5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName5Field, value) != true)) {
                    this.SalesRepName5Field = value;
                    this.RaisePropertyChanged("SalesRepName5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SchedJob {
            get {
                return this.SchedJobField;
            }
            set {
                if ((this.SchedJobField.Equals(value) != true)) {
                    this.SchedJobField = value;
                    this.RaisePropertyChanged("SchedJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingFactor {
            get {
                return this.SellingFactorField;
            }
            set {
                if ((this.SellingFactorField.Equals(value) != true)) {
                    this.SellingFactorField = value;
                    this.RaisePropertyChanged("SellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingFactorDirection {
            get {
                return this.SellingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingFactorDirectionField, value) != true)) {
                    this.SellingFactorDirectionField = value;
                    this.RaisePropertyChanged("SellingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingQuantity {
            get {
                return this.SellingQuantityField;
            }
            set {
                if ((this.SellingQuantityField.Equals(value) != true)) {
                    this.SellingQuantityField = value;
                    this.RaisePropertyChanged("SellingQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipComment {
            get {
                return this.ShipCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCommentField, value) != true)) {
                    this.ShipCommentField = value;
                    this.RaisePropertyChanged("ShipComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipLineComplete {
            get {
                return this.ShipLineCompleteField;
            }
            set {
                if ((this.ShipLineCompleteField.Equals(value) != true)) {
                    this.ShipLineCompleteField = value;
                    this.RaisePropertyChanged("ShipLineComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmartString {
            get {
                return this.SmartStringField;
            }
            set {
                if ((object.ReferenceEquals(this.SmartStringField, value) != true)) {
                    this.SmartStringField = value;
                    this.RaisePropertyChanged("SmartString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartStringProcessed {
            get {
                return this.SmartStringProcessedField;
            }
            set {
                if ((this.SmartStringProcessedField.Equals(value) != true)) {
                    this.SmartStringProcessedField = value;
                    this.RaisePropertyChanged("SmartStringProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TMBilling {
            get {
                return this.TMBillingField;
            }
            set {
                if ((this.TMBillingField.Equals(value) != true)) {
                    this.TMBillingField = value;
                    this.RaisePropertyChanged("TMBilling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatIDDescription {
            get {
                return this.TaxCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDDescriptionField, value) != true)) {
                    this.TaxCatIDDescriptionField = value;
                    this.RaisePropertyChanged("TaxCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThisOrderInvtyQty {
            get {
                return this.ThisOrderInvtyQtyField;
            }
            set {
                if ((this.ThisOrderInvtyQtyField.Equals(value) != true)) {
                    this.ThisOrderInvtyQtyField = value;
                    this.RaisePropertyChanged("ThisOrderInvtyQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalReleases {
            get {
                return this.TotalReleasesField;
            }
            set {
                if ((this.TotalReleasesField.Equals(value) != true)) {
                    this.TotalReleasesField = value;
                    this.RaisePropertyChanged("TotalReleases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalShipped {
            get {
                return this.TotalShippedField;
            }
            set {
                if ((this.TotalShippedField.Equals(value) != true)) {
                    this.TotalShippedField = value;
                    this.RaisePropertyChanged("TotalShipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Unders {
            get {
                return this.UndersField;
            }
            set {
                if ((this.UndersField.Equals(value) != true)) {
                    this.UndersField = value;
                    this.RaisePropertyChanged("Unders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UndersPct {
            get {
                return this.UndersPctField;
            }
            set {
                if ((this.UndersPctField.Equals(value) != true)) {
                    this.UndersPctField = value;
                    this.RaisePropertyChanged("UndersPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidLine {
            get {
                return this.VoidLineField;
            }
            set {
                if ((this.VoidLineField.Equals(value) != true)) {
                    this.VoidLineField = value;
                    this.RaisePropertyChanged("VoidLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseDesc {
            get {
                return this.WarehouseDescField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseDescField, value) != true)) {
                    this.WarehouseDescField = value;
                    this.RaisePropertyChanged("WarehouseDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Warranty {
            get {
                return this.WarrantyField;
            }
            set {
                if ((this.WarrantyField.Equals(value) != true)) {
                    this.WarrantyField = value;
                    this.RaisePropertyChanged("Warranty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyCode {
            get {
                return this.WarrantyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCodeField, value) != true)) {
                    this.WarrantyCodeField = value;
                    this.RaisePropertyChanged("WarrantyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyCodeWarrDescription {
            get {
                return this.WarrantyCodeWarrDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCodeWarrDescriptionField, value) != true)) {
                    this.WarrantyCodeWarrDescriptionField = value;
                    this.RaisePropertyChanged("WarrantyCodeWarrDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyComment {
            get {
                return this.WarrantyCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCommentField, value) != true)) {
                    this.WarrantyCommentField = value;
                    this.RaisePropertyChanged("WarrantyComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XPartNum {
            get {
                return this.XPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XPartNumField, value) != true)) {
                    this.XPartNumField = value;
                    this.RaisePropertyChanged("XPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRevisionNum {
            get {
                return this.XRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRevisionNumField, value) != true)) {
                    this.XRevisionNumField = value;
                    this.RaisePropertyChanged("XRevisionNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDtlAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderDtlAttchRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderDtlAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderDtlAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHedRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderHedRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGUseGoodDefaultMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARLOCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AVSAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AVSZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AckEmailSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddlHdlgFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllocPriorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyOrderBasedDiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoOrderBasedDiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoPrintReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvailBTCustListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTAddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTContactEMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTContactFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTContactPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillToCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCApprovalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCCSCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCCSCIDTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCDocAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCDocFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCDocTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCDocTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCStreetAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CCTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCTranIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCTranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSCResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanChangeTaxLiabField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CancelAfterDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardStoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardmemberReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CertOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChrgAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ClosedNotShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommercialInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CounterSOAckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CounterSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreateInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreatePackingSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditCardOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreditOverrideDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditOverrideLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditOverrideTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditOverrideUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustAllowOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustOnCreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustTradePartnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustomerAllowShipTo3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustomerPrintAckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustomerRequiresPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandHeadSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DemandProcessDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandProcessTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandRejectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepositBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispatchReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispatchReasonCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DoNotShipAfterDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DoNotShipBeforeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocCCRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepositBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInTotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInTotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInTotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocOrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalAdvBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalCommField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCPaymentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCPaymentMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EDIAckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EDIOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EDIReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ERSOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ERSOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableJobWizardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSoldToIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpirationMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpirationYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FFCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HDCaseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HDCaseNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMiscChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasOrderLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazmatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HoldSetByDemandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InTotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InTotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InTotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IndividualPackIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntrntlShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvCurrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvCurrCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvcOrderCmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCSRSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LOCHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastBatchNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastScheduleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastTCtrlNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LetterOfInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStdPkgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotifyEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCntryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OTSCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSCustSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSResaleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSSaveAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSSaveCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSTaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderCSRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderOpenCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankBankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OutboundSalesDocCtrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OutboundShipDocsCtrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideCarrierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PSCurrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PSCurrCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayBTCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PickListCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrcConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProFormaInvCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToCalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToFulfillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferencePNRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RepRate5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RepSplit5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReprintSOAckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservePriDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservePriorityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1CCAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1CCFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1CCRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1CCTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1CCTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DepositBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InTotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InTotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InTotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalAdvBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalCommField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2CCAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2CCFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2CCRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2CCTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2CCTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DepositBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InTotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InTotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InTotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalAdvBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalCommField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3CCAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3CCFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3CCRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3CCTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3CCTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DepositBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InTotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InTotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InTotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalAdvBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalCommField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommAmt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommAmt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommAmt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommAmt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommAmt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommableAmt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommableAmt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommableAmt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommableAmt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SRCommableAmt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCode5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepName5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServAuthNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServHomeDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServInstructField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipByTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipExprtDeclartnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipOrderCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToAddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactEMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowApplyOrderDiscountsControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShpConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SndAlrtShpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToAddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToContactEMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToContactFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoldToContactPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TWFiscalPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TWFiscalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWFiscalYearSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIRegNumBuyerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGUIRegNumSellerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWGenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAdvBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCommField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCommLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalInvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRelDatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalReleasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeDescrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVShipFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UPSQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateDtlAndRelRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserChar1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserChar2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserChar3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserChar4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UserDate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UserDate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UserDate3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UserDate4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UserDecimal1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UserDecimal2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserInteger1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserInteger2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WICreditCardorderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebEntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> XRefContractDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ccTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dspBTCustIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGUseGoodDefaultMark {
            get {
                return this.AGUseGoodDefaultMarkField;
            }
            set {
                if ((this.AGUseGoodDefaultMarkField.Equals(value) != true)) {
                    this.AGUseGoodDefaultMarkField = value;
                    this.RaisePropertyChanged("AGUseGoodDefaultMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARLOCID {
            get {
                return this.ARLOCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ARLOCIDField, value) != true)) {
                    this.ARLOCIDField = value;
                    this.RaisePropertyChanged("ARLOCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AVSAddr {
            get {
                return this.AVSAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.AVSAddrField, value) != true)) {
                    this.AVSAddrField = value;
                    this.RaisePropertyChanged("AVSAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AVSZip {
            get {
                return this.AVSZipField;
            }
            set {
                if ((object.ReferenceEquals(this.AVSZipField, value) != true)) {
                    this.AVSZipField = value;
                    this.RaisePropertyChanged("AVSZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AckEmailSent {
            get {
                return this.AckEmailSentField;
            }
            set {
                if ((this.AckEmailSentField.Equals(value) != true)) {
                    this.AckEmailSentField = value;
                    this.RaisePropertyChanged("AckEmailSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddlHdlgFlag {
            get {
                return this.AddlHdlgFlagField;
            }
            set {
                if ((this.AddlHdlgFlagField.Equals(value) != true)) {
                    this.AddlHdlgFlagField = value;
                    this.RaisePropertyChanged("AddlHdlgFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllocPriorityCode {
            get {
                return this.AllocPriorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AllocPriorityCodeField, value) != true)) {
                    this.AllocPriorityCodeField = value;
                    this.RaisePropertyChanged("AllocPriorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyChrg {
            get {
                return this.ApplyChrgField;
            }
            set {
                if ((this.ApplyChrgField.Equals(value) != true)) {
                    this.ApplyChrgField = value;
                    this.RaisePropertyChanged("ApplyChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyOrderBasedDisc {
            get {
                return this.ApplyOrderBasedDiscField;
            }
            set {
                if ((this.ApplyOrderBasedDiscField.Equals(value) != true)) {
                    this.ApplyOrderBasedDiscField = value;
                    this.RaisePropertyChanged("ApplyOrderBasedDisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoOrderBasedDisc {
            get {
                return this.AutoOrderBasedDiscField;
            }
            set {
                if ((this.AutoOrderBasedDiscField.Equals(value) != true)) {
                    this.AutoOrderBasedDiscField = value;
                    this.RaisePropertyChanged("AutoOrderBasedDisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoPrintReady {
            get {
                return this.AutoPrintReadyField;
            }
            set {
                if ((this.AutoPrintReadyField.Equals(value) != true)) {
                    this.AutoPrintReadyField = value;
                    this.RaisePropertyChanged("AutoPrintReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailBTCustList {
            get {
                return this.AvailBTCustListField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailBTCustListField, value) != true)) {
                    this.AvailBTCustListField = value;
                    this.RaisePropertyChanged("AvailBTCustList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTAddressList {
            get {
                return this.BTAddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.BTAddressListField, value) != true)) {
                    this.BTAddressListField = value;
                    this.RaisePropertyChanged("BTAddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTConNum {
            get {
                return this.BTConNumField;
            }
            set {
                if ((this.BTConNumField.Equals(value) != true)) {
                    this.BTConNumField = value;
                    this.RaisePropertyChanged("BTConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTContactEMailAddress {
            get {
                return this.BTContactEMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BTContactEMailAddressField, value) != true)) {
                    this.BTContactEMailAddressField = value;
                    this.RaisePropertyChanged("BTContactEMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTContactFaxNum {
            get {
                return this.BTContactFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTContactFaxNumField, value) != true)) {
                    this.BTContactFaxNumField = value;
                    this.RaisePropertyChanged("BTContactFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTContactName {
            get {
                return this.BTContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTContactNameField, value) != true)) {
                    this.BTContactNameField = value;
                    this.RaisePropertyChanged("BTContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTContactPhoneNum {
            get {
                return this.BTContactPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BTContactPhoneNumField, value) != true)) {
                    this.BTContactPhoneNumField = value;
                    this.RaisePropertyChanged("BTContactPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustNumBTName {
            get {
                return this.BTCustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustNumBTNameField, value) != true)) {
                    this.BTCustNumBTNameField = value;
                    this.RaisePropertyChanged("BTCustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustNumCustID {
            get {
                return this.BTCustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustNumCustIDField, value) != true)) {
                    this.BTCustNumCustIDField = value;
                    this.RaisePropertyChanged("BTCustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustNumName {
            get {
                return this.BTCustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustNumNameField, value) != true)) {
                    this.BTCustNumNameField = value;
                    this.RaisePropertyChanged("BTCustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrencyID {
            get {
                return this.BaseCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrencyIDField, value) != true)) {
                    this.BaseCurrencyIDField = value;
                    this.RaisePropertyChanged("BaseCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillToCustomerName {
            get {
                return this.BillToCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BillToCustomerNameField, value) != true)) {
                    this.BillToCustomerNameField = value;
                    this.RaisePropertyChanged("BillToCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCAmount {
            get {
                return this.CCAmountField;
            }
            set {
                if ((this.CCAmountField.Equals(value) != true)) {
                    this.CCAmountField = value;
                    this.RaisePropertyChanged("CCAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCApprovalNum {
            get {
                return this.CCApprovalNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CCApprovalNumField, value) != true)) {
                    this.CCApprovalNumField = value;
                    this.RaisePropertyChanged("CCApprovalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCCSCID {
            get {
                return this.CCCSCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CCCSCIDField, value) != true)) {
                    this.CCCSCIDField = value;
                    this.RaisePropertyChanged("CCCSCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCCSCIDToken {
            get {
                return this.CCCSCIDTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.CCCSCIDTokenField, value) != true)) {
                    this.CCCSCIDTokenField = value;
                    this.RaisePropertyChanged("CCCSCIDToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCDocAmount {
            get {
                return this.CCDocAmountField;
            }
            set {
                if ((this.CCDocAmountField.Equals(value) != true)) {
                    this.CCDocAmountField = value;
                    this.RaisePropertyChanged("CCDocAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCDocFreight {
            get {
                return this.CCDocFreightField;
            }
            set {
                if ((this.CCDocFreightField.Equals(value) != true)) {
                    this.CCDocFreightField = value;
                    this.RaisePropertyChanged("CCDocFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCDocTax {
            get {
                return this.CCDocTaxField;
            }
            set {
                if ((this.CCDocTaxField.Equals(value) != true)) {
                    this.CCDocTaxField = value;
                    this.RaisePropertyChanged("CCDocTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCDocTotal {
            get {
                return this.CCDocTotalField;
            }
            set {
                if ((this.CCDocTotalField.Equals(value) != true)) {
                    this.CCDocTotalField = value;
                    this.RaisePropertyChanged("CCDocTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCFreight {
            get {
                return this.CCFreightField;
            }
            set {
                if ((this.CCFreightField.Equals(value) != true)) {
                    this.CCFreightField = value;
                    this.RaisePropertyChanged("CCFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCResponse {
            get {
                return this.CCResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.CCResponseField, value) != true)) {
                    this.CCResponseField = value;
                    this.RaisePropertyChanged("CCResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCRounding {
            get {
                return this.CCRoundingField;
            }
            set {
                if ((this.CCRoundingField.Equals(value) != true)) {
                    this.CCRoundingField = value;
                    this.RaisePropertyChanged("CCRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCStreetAddr {
            get {
                return this.CCStreetAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.CCStreetAddrField, value) != true)) {
                    this.CCStreetAddrField = value;
                    this.RaisePropertyChanged("CCStreetAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCTax {
            get {
                return this.CCTaxField;
            }
            set {
                if ((this.CCTaxField.Equals(value) != true)) {
                    this.CCTaxField = value;
                    this.RaisePropertyChanged("CCTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CCTotal {
            get {
                return this.CCTotalField;
            }
            set {
                if ((this.CCTotalField.Equals(value) != true)) {
                    this.CCTotalField = value;
                    this.RaisePropertyChanged("CCTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCTranID {
            get {
                return this.CCTranIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CCTranIDField, value) != true)) {
                    this.CCTranIDField = value;
                    this.RaisePropertyChanged("CCTranID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCTranType {
            get {
                return this.CCTranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CCTranTypeField, value) != true)) {
                    this.CCTranTypeField = value;
                    this.RaisePropertyChanged("CCTranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCZip {
            get {
                return this.CCZipField;
            }
            set {
                if ((object.ReferenceEquals(this.CCZipField, value) != true)) {
                    this.CCZipField = value;
                    this.RaisePropertyChanged("CCZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COD {
            get {
                return this.CODField;
            }
            set {
                if ((this.CODField.Equals(value) != true)) {
                    this.CODField = value;
                    this.RaisePropertyChanged("COD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFreight {
            get {
                return this.CODFreightField;
            }
            set {
                if ((this.CODFreightField.Equals(value) != true)) {
                    this.CODFreightField = value;
                    this.RaisePropertyChanged("CODFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSCResult {
            get {
                return this.CSCResultField;
            }
            set {
                if ((object.ReferenceEquals(this.CSCResultField, value) != true)) {
                    this.CSCResultField = value;
                    this.RaisePropertyChanged("CSCResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanChangeTaxLiab {
            get {
                return this.CanChangeTaxLiabField;
            }
            set {
                if ((this.CanChangeTaxLiabField.Equals(value) != true)) {
                    this.CanChangeTaxLiabField = value;
                    this.RaisePropertyChanged("CanChangeTaxLiab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CancelAfterDate {
            get {
                return this.CancelAfterDateField;
            }
            set {
                if ((this.CancelAfterDateField.Equals(value) != true)) {
                    this.CancelAfterDateField = value;
                    this.RaisePropertyChanged("CancelAfterDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardID {
            get {
                return this.CardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CardIDField, value) != true)) {
                    this.CardIDField = value;
                    this.RaisePropertyChanged("CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardMemberName {
            get {
                return this.CardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardMemberNameField, value) != true)) {
                    this.CardMemberNameField = value;
                    this.RaisePropertyChanged("CardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardStore {
            get {
                return this.CardStoreField;
            }
            set {
                if ((object.ReferenceEquals(this.CardStoreField, value) != true)) {
                    this.CardStoreField = value;
                    this.RaisePropertyChanged("CardStore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeField, value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardTypeDescription {
            get {
                return this.CardTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeDescriptionField, value) != true)) {
                    this.CardTypeDescriptionField = value;
                    this.RaisePropertyChanged("CardTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardmemberReference {
            get {
                return this.CardmemberReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CardmemberReferenceField, value) != true)) {
                    this.CardmemberReferenceField = value;
                    this.RaisePropertyChanged("CardmemberReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CertOfOrigin {
            get {
                return this.CertOfOriginField;
            }
            set {
                if ((this.CertOfOriginField.Equals(value) != true)) {
                    this.CertOfOriginField = value;
                    this.RaisePropertyChanged("CertOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChrgAmount {
            get {
                return this.ChrgAmountField;
            }
            set {
                if ((this.ChrgAmountField.Equals(value) != true)) {
                    this.ChrgAmountField = value;
                    this.RaisePropertyChanged("ChrgAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ClosedNotShipped {
            get {
                return this.ClosedNotShippedField;
            }
            set {
                if ((this.ClosedNotShippedField.Equals(value) != true)) {
                    this.ClosedNotShippedField = value;
                    this.RaisePropertyChanged("ClosedNotShipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommercialInvoice {
            get {
                return this.CommercialInvoiceField;
            }
            set {
                if ((this.CommercialInvoiceField.Equals(value) != true)) {
                    this.CommercialInvoiceField = value;
                    this.RaisePropertyChanged("CommercialInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CounterSOAck {
            get {
                return this.CounterSOAckField;
            }
            set {
                if ((this.CounterSOAckField.Equals(value) != true)) {
                    this.CounterSOAckField = value;
                    this.RaisePropertyChanged("CounterSOAck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CounterSale {
            get {
                return this.CounterSaleField;
            }
            set {
                if ((this.CounterSaleField.Equals(value) != true)) {
                    this.CounterSaleField = value;
                    this.RaisePropertyChanged("CounterSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreateInvoice {
            get {
                return this.CreateInvoiceField;
            }
            set {
                if ((this.CreateInvoiceField.Equals(value) != true)) {
                    this.CreateInvoiceField = value;
                    this.RaisePropertyChanged("CreateInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreatePackingSlip {
            get {
                return this.CreatePackingSlipField;
            }
            set {
                if ((this.CreatePackingSlipField.Equals(value) != true)) {
                    this.CreatePackingSlipField = value;
                    this.RaisePropertyChanged("CreatePackingSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditCardOrder {
            get {
                return this.CreditCardOrderField;
            }
            set {
                if ((this.CreditCardOrderField.Equals(value) != true)) {
                    this.CreditCardOrderField = value;
                    this.RaisePropertyChanged("CreditCardOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditOverride {
            get {
                return this.CreditOverrideField;
            }
            set {
                if ((this.CreditOverrideField.Equals(value) != true)) {
                    this.CreditOverrideField = value;
                    this.RaisePropertyChanged("CreditOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreditOverrideDate {
            get {
                return this.CreditOverrideDateField;
            }
            set {
                if ((this.CreditOverrideDateField.Equals(value) != true)) {
                    this.CreditOverrideDateField = value;
                    this.RaisePropertyChanged("CreditOverrideDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditOverrideLimit {
            get {
                return this.CreditOverrideLimitField;
            }
            set {
                if ((this.CreditOverrideLimitField.Equals(value) != true)) {
                    this.CreditOverrideLimitField = value;
                    this.RaisePropertyChanged("CreditOverrideLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditOverrideTime {
            get {
                return this.CreditOverrideTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditOverrideTimeField, value) != true)) {
                    this.CreditOverrideTimeField = value;
                    this.RaisePropertyChanged("CreditOverrideTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditOverrideUserID {
            get {
                return this.CreditOverrideUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditOverrideUserIDField, value) != true)) {
                    this.CreditOverrideUserIDField = value;
                    this.RaisePropertyChanged("CreditOverrideUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrDesc {
            get {
                return this.CurrencyCodeCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrDescField, value) != true)) {
                    this.CurrencyCodeCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrName {
            get {
                return this.CurrencyCodeCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrNameField, value) != true)) {
                    this.CurrencyCodeCurrNameField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrSymbol {
            get {
                return this.CurrencyCodeCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrSymbolField, value) != true)) {
                    this.CurrencyCodeCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrencyID {
            get {
                return this.CurrencyCodeCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrencyIDField, value) != true)) {
                    this.CurrencyCodeCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeDocumentDesc {
            get {
                return this.CurrencyCodeDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeDocumentDescField, value) != true)) {
                    this.CurrencyCodeDocumentDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustAllowOTS {
            get {
                return this.CustAllowOTSField;
            }
            set {
                if ((this.CustAllowOTSField.Equals(value) != true)) {
                    this.CustAllowOTSField = value;
                    this.RaisePropertyChanged("CustAllowOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustOnCreditHold {
            get {
                return this.CustOnCreditHoldField;
            }
            set {
                if ((this.CustOnCreditHoldField.Equals(value) != true)) {
                    this.CustOnCreditHoldField = value;
                    this.RaisePropertyChanged("CustOnCreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustTradePartnerName {
            get {
                return this.CustTradePartnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustTradePartnerNameField, value) != true)) {
                    this.CustTradePartnerNameField = value;
                    this.RaisePropertyChanged("CustTradePartnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustomerAllowShipTo3 {
            get {
                return this.CustomerAllowShipTo3Field;
            }
            set {
                if ((this.CustomerAllowShipTo3Field.Equals(value) != true)) {
                    this.CustomerAllowShipTo3Field = value;
                    this.RaisePropertyChanged("CustomerAllowShipTo3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBTName {
            get {
                return this.CustomerBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerBTNameField, value) != true)) {
                    this.CustomerBTNameField = value;
                    this.RaisePropertyChanged("CustomerBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustomerPrintAck {
            get {
                return this.CustomerPrintAckField;
            }
            set {
                if ((this.CustomerPrintAckField.Equals(value) != true)) {
                    this.CustomerPrintAckField = value;
                    this.RaisePropertyChanged("CustomerPrintAck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustomerRequiresPO {
            get {
                return this.CustomerRequiresPOField;
            }
            set {
                if ((this.CustomerRequiresPOField.Equals(value) != true)) {
                    this.CustomerRequiresPOField = value;
                    this.RaisePropertyChanged("CustomerRequiresPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredIns {
            get {
                return this.DeclaredInsField;
            }
            set {
                if ((this.DeclaredInsField.Equals(value) != true)) {
                    this.DeclaredInsField = value;
                    this.RaisePropertyChanged("DeclaredIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryConf {
            get {
                return this.DeliveryConfField;
            }
            set {
                if ((this.DeliveryConfField.Equals(value) != true)) {
                    this.DeliveryConfField = value;
                    this.RaisePropertyChanged("DeliveryConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandContract {
            get {
                return this.DemandContractField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandContractField, value) != true)) {
                    this.DemandContractField = value;
                    this.RaisePropertyChanged("DemandContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandContractNum {
            get {
                return this.DemandContractNumField;
            }
            set {
                if ((this.DemandContractNumField.Equals(value) != true)) {
                    this.DemandContractNumField = value;
                    this.RaisePropertyChanged("DemandContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandHeadSeq {
            get {
                return this.DemandHeadSeqField;
            }
            set {
                if ((this.DemandHeadSeqField.Equals(value) != true)) {
                    this.DemandHeadSeqField = value;
                    this.RaisePropertyChanged("DemandHeadSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DemandProcessDate {
            get {
                return this.DemandProcessDateField;
            }
            set {
                if ((this.DemandProcessDateField.Equals(value) != true)) {
                    this.DemandProcessDateField = value;
                    this.RaisePropertyChanged("DemandProcessDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandProcessTime {
            get {
                return this.DemandProcessTimeField;
            }
            set {
                if ((this.DemandProcessTimeField.Equals(value) != true)) {
                    this.DemandProcessTimeField = value;
                    this.RaisePropertyChanged("DemandProcessTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandRejected {
            get {
                return this.DemandRejectedField;
            }
            set {
                if ((this.DemandRejectedField.Equals(value) != true)) {
                    this.DemandRejectedField = value;
                    this.RaisePropertyChanged("DemandRejected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepositBal {
            get {
                return this.DepositBalField;
            }
            set {
                if ((this.DepositBalField.Equals(value) != true)) {
                    this.DepositBalField = value;
                    this.RaisePropertyChanged("DepositBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountPercent {
            get {
                return this.DiscountPercentField;
            }
            set {
                if ((this.DiscountPercentField.Equals(value) != true)) {
                    this.DiscountPercentField = value;
                    this.RaisePropertyChanged("DiscountPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispatchReason {
            get {
                return this.DispatchReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.DispatchReasonField, value) != true)) {
                    this.DispatchReasonField = value;
                    this.RaisePropertyChanged("DispatchReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispatchReasonCodeDescription {
            get {
                return this.DispatchReasonCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DispatchReasonCodeDescriptionField, value) != true)) {
                    this.DispatchReasonCodeDescriptionField = value;
                    this.RaisePropertyChanged("DispatchReasonCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DoNotShipAfterDate {
            get {
                return this.DoNotShipAfterDateField;
            }
            set {
                if ((this.DoNotShipAfterDateField.Equals(value) != true)) {
                    this.DoNotShipAfterDateField = value;
                    this.RaisePropertyChanged("DoNotShipAfterDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DoNotShipBeforeDate {
            get {
                return this.DoNotShipBeforeDateField;
            }
            set {
                if ((this.DoNotShipBeforeDateField.Equals(value) != true)) {
                    this.DoNotShipBeforeDateField = value;
                    this.RaisePropertyChanged("DoNotShipBeforeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocCCRounding {
            get {
                return this.DocCCRoundingField;
            }
            set {
                if ((this.DocCCRoundingField.Equals(value) != true)) {
                    this.DocCCRoundingField = value;
                    this.RaisePropertyChanged("DocCCRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepositBal {
            get {
                return this.DocDepositBalField;
            }
            set {
                if ((this.DocDepositBalField.Equals(value) != true)) {
                    this.DocDepositBalField = value;
                    this.RaisePropertyChanged("DocDepositBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInTotalCharges {
            get {
                return this.DocInTotalChargesField;
            }
            set {
                if ((this.DocInTotalChargesField.Equals(value) != true)) {
                    this.DocInTotalChargesField = value;
                    this.RaisePropertyChanged("DocInTotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInTotalDiscount {
            get {
                return this.DocInTotalDiscountField;
            }
            set {
                if ((this.DocInTotalDiscountField.Equals(value) != true)) {
                    this.DocInTotalDiscountField = value;
                    this.RaisePropertyChanged("DocInTotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInTotalMisc {
            get {
                return this.DocInTotalMiscField;
            }
            set {
                if ((this.DocInTotalMiscField.Equals(value) != true)) {
                    this.DocInTotalMiscField = value;
                    this.RaisePropertyChanged("DocInTotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocOnly {
            get {
                return this.DocOnlyField;
            }
            set {
                if ((this.DocOnlyField.Equals(value) != true)) {
                    this.DocOnlyField = value;
                    this.RaisePropertyChanged("DocOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocOrderAmt {
            get {
                return this.DocOrderAmtField;
            }
            set {
                if ((this.DocOrderAmtField.Equals(value) != true)) {
                    this.DocOrderAmtField = value;
                    this.RaisePropertyChanged("DocOrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRounding {
            get {
                return this.DocRoundingField;
            }
            set {
                if ((this.DocRoundingField.Equals(value) != true)) {
                    this.DocRoundingField = value;
                    this.RaisePropertyChanged("DocRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalAdvBill {
            get {
                return this.DocTotalAdvBillField;
            }
            set {
                if ((this.DocTotalAdvBillField.Equals(value) != true)) {
                    this.DocTotalAdvBillField = value;
                    this.RaisePropertyChanged("DocTotalAdvBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalCharges {
            get {
                return this.DocTotalChargesField;
            }
            set {
                if ((this.DocTotalChargesField.Equals(value) != true)) {
                    this.DocTotalChargesField = value;
                    this.RaisePropertyChanged("DocTotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalComm {
            get {
                return this.DocTotalCommField;
            }
            set {
                if ((this.DocTotalCommField.Equals(value) != true)) {
                    this.DocTotalCommField = value;
                    this.RaisePropertyChanged("DocTotalComm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalDiscount {
            get {
                return this.DocTotalDiscountField;
            }
            set {
                if ((this.DocTotalDiscountField.Equals(value) != true)) {
                    this.DocTotalDiscountField = value;
                    this.RaisePropertyChanged("DocTotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalMisc {
            get {
                return this.DocTotalMiscField;
            }
            set {
                if ((this.DocTotalMiscField.Equals(value) != true)) {
                    this.DocTotalMiscField = value;
                    this.RaisePropertyChanged("DocTotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalNet {
            get {
                return this.DocTotalNetField;
            }
            set {
                if ((this.DocTotalNetField.Equals(value) != true)) {
                    this.DocTotalNetField = value;
                    this.RaisePropertyChanged("DocTotalNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalOrder {
            get {
                return this.DocTotalOrderField;
            }
            set {
                if ((this.DocTotalOrderField.Equals(value) != true)) {
                    this.DocTotalOrderField = value;
                    this.RaisePropertyChanged("DocTotalOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalSATax {
            get {
                return this.DocTotalSATaxField;
            }
            set {
                if ((this.DocTotalSATaxField.Equals(value) != true)) {
                    this.DocTotalSATaxField = value;
                    this.RaisePropertyChanged("DocTotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalTax {
            get {
                return this.DocTotalTaxField;
            }
            set {
                if ((this.DocTotalTaxField.Equals(value) != true)) {
                    this.DocTotalTaxField = value;
                    this.RaisePropertyChanged("DocTotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalWHTax {
            get {
                return this.DocTotalWHTaxField;
            }
            set {
                if ((this.DocTotalWHTaxField.Equals(value) != true)) {
                    this.DocTotalWHTaxField = value;
                    this.RaisePropertyChanged("DocTotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCOrderNum {
            get {
                return this.ECCOrderNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCOrderNumField, value) != true)) {
                    this.ECCOrderNumField = value;
                    this.RaisePropertyChanged("ECCOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCPONum {
            get {
                return this.ECCPONumField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCPONumField, value) != true)) {
                    this.ECCPONumField = value;
                    this.RaisePropertyChanged("ECCPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCPaymentDesc {
            get {
                return this.ECCPaymentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCPaymentDescField, value) != true)) {
                    this.ECCPaymentDescField = value;
                    this.RaisePropertyChanged("ECCPaymentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCPaymentMethod {
            get {
                return this.ECCPaymentMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCPaymentMethodField, value) != true)) {
                    this.ECCPaymentMethodField = value;
                    this.RaisePropertyChanged("ECCPaymentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EDIAck {
            get {
                return this.EDIAckField;
            }
            set {
                if ((this.EDIAckField.Equals(value) != true)) {
                    this.EDIAckField = value;
                    this.RaisePropertyChanged("EDIAck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EDIOrder {
            get {
                return this.EDIOrderField;
            }
            set {
                if ((this.EDIOrderField.Equals(value) != true)) {
                    this.EDIOrderField = value;
                    this.RaisePropertyChanged("EDIOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EDIReady {
            get {
                return this.EDIReadyField;
            }
            set {
                if ((this.EDIReadyField.Equals(value) != true)) {
                    this.EDIReadyField = value;
                    this.RaisePropertyChanged("EDIReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ERSOrder {
            get {
                return this.ERSOrderField;
            }
            set {
                if ((this.ERSOrderField.Equals(value) != true)) {
                    this.ERSOrderField = value;
                    this.RaisePropertyChanged("ERSOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ERSOverride {
            get {
                return this.ERSOverrideField;
            }
            set {
                if ((this.ERSOverrideField.Equals(value) != true)) {
                    this.ERSOverrideField = value;
                    this.RaisePropertyChanged("ERSOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableJobWizard {
            get {
                return this.EnableJobWizardField;
            }
            set {
                if ((this.EnableJobWizardField.Equals(value) != true)) {
                    this.EnableJobWizardField = value;
                    this.RaisePropertyChanged("EnableJobWizard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSoldToID {
            get {
                return this.EnableSoldToIDField;
            }
            set {
                if ((this.EnableSoldToIDField.Equals(value) != true)) {
                    this.EnableSoldToIDField = value;
                    this.RaisePropertyChanged("EnableSoldToID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryMethod {
            get {
                return this.EntryMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryMethodField, value) != true)) {
                    this.EntryMethodField = value;
                    this.RaisePropertyChanged("EntryMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryProcess {
            get {
                return this.EntryProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryProcessField, value) != true)) {
                    this.EntryProcessField = value;
                    this.RaisePropertyChanged("EntryProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpirationMonth {
            get {
                return this.ExpirationMonthField;
            }
            set {
                if ((this.ExpirationMonthField.Equals(value) != true)) {
                    this.ExpirationMonthField = value;
                    this.RaisePropertyChanged("ExpirationMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpirationYear {
            get {
                return this.ExpirationYearField;
            }
            set {
                if ((this.ExpirationYearField.Equals(value) != true)) {
                    this.ExpirationYearField = value;
                    this.RaisePropertyChanged("ExpirationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress1 {
            get {
                return this.FFAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress1Field, value) != true)) {
                    this.FFAddress1Field = value;
                    this.RaisePropertyChanged("FFAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress2 {
            get {
                return this.FFAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress2Field, value) != true)) {
                    this.FFAddress2Field = value;
                    this.RaisePropertyChanged("FFAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress3 {
            get {
                return this.FFAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress3Field, value) != true)) {
                    this.FFAddress3Field = value;
                    this.RaisePropertyChanged("FFAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCity {
            get {
                return this.FFCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCityField, value) != true)) {
                    this.FFCityField = value;
                    this.RaisePropertyChanged("FFCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCompName {
            get {
                return this.FFCompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCompNameField, value) != true)) {
                    this.FFCompNameField = value;
                    this.RaisePropertyChanged("FFCompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFContact {
            get {
                return this.FFContactField;
            }
            set {
                if ((object.ReferenceEquals(this.FFContactField, value) != true)) {
                    this.FFContactField = value;
                    this.RaisePropertyChanged("FFContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCountry {
            get {
                return this.FFCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCountryField, value) != true)) {
                    this.FFCountryField = value;
                    this.RaisePropertyChanged("FFCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FFCountryNum {
            get {
                return this.FFCountryNumField;
            }
            set {
                if ((this.FFCountryNumField.Equals(value) != true)) {
                    this.FFCountryNumField = value;
                    this.RaisePropertyChanged("FFCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFID {
            get {
                return this.FFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FFIDField, value) != true)) {
                    this.FFIDField = value;
                    this.RaisePropertyChanged("FFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFPhoneNum {
            get {
                return this.FFPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FFPhoneNumField, value) != true)) {
                    this.FFPhoneNumField = value;
                    this.RaisePropertyChanged("FFPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFState {
            get {
                return this.FFStateField;
            }
            set {
                if ((object.ReferenceEquals(this.FFStateField, value) != true)) {
                    this.FFStateField = value;
                    this.RaisePropertyChanged("FFState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFZip {
            get {
                return this.FFZipField;
            }
            set {
                if ((object.ReferenceEquals(this.FFZipField, value) != true)) {
                    this.FFZipField = value;
                    this.RaisePropertyChanged("FFZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOB {
            get {
                return this.FOBField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBField, value) != true)) {
                    this.FOBField = value;
                    this.RaisePropertyChanged("FOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOBDescription {
            get {
                return this.FOBDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBDescriptionField, value) != true)) {
                    this.FOBDescriptionField = value;
                    this.RaisePropertyChanged("FOBDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundType {
            get {
                return this.GroundTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundTypeField, value) != true)) {
                    this.GroundTypeField = value;
                    this.RaisePropertyChanged("GroundType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HDCaseDescription {
            get {
                return this.HDCaseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.HDCaseDescriptionField, value) != true)) {
                    this.HDCaseDescriptionField = value;
                    this.RaisePropertyChanged("HDCaseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HDCaseNum {
            get {
                return this.HDCaseNumField;
            }
            set {
                if ((this.HDCaseNumField.Equals(value) != true)) {
                    this.HDCaseNumField = value;
                    this.RaisePropertyChanged("HDCaseNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMiscCharges {
            get {
                return this.HasMiscChargesField;
            }
            set {
                if ((this.HasMiscChargesField.Equals(value) != true)) {
                    this.HasMiscChargesField = value;
                    this.RaisePropertyChanged("HasMiscCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasOrderLines {
            get {
                return this.HasOrderLinesField;
            }
            set {
                if ((this.HasOrderLinesField.Equals(value) != true)) {
                    this.HasOrderLinesField = value;
                    this.RaisePropertyChanged("HasOrderLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hazmat {
            get {
                return this.HazmatField;
            }
            set {
                if ((this.HazmatField.Equals(value) != true)) {
                    this.HazmatField = value;
                    this.RaisePropertyChanged("Hazmat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HoldSetByDemand {
            get {
                return this.HoldSetByDemandField;
            }
            set {
                if ((this.HoldSetByDemandField.Equals(value) != true)) {
                    this.HoldSetByDemandField = value;
                    this.RaisePropertyChanged("HoldSetByDemand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPONum {
            get {
                return this.ICPONumField;
            }
            set {
                if ((this.ICPONumField.Equals(value) != true)) {
                    this.ICPONumField = value;
                    this.RaisePropertyChanged("ICPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InTotalCharges {
            get {
                return this.InTotalChargesField;
            }
            set {
                if ((this.InTotalChargesField.Equals(value) != true)) {
                    this.InTotalChargesField = value;
                    this.RaisePropertyChanged("InTotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InTotalDiscount {
            get {
                return this.InTotalDiscountField;
            }
            set {
                if ((this.InTotalDiscountField.Equals(value) != true)) {
                    this.InTotalDiscountField = value;
                    this.RaisePropertyChanged("InTotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InTotalMisc {
            get {
                return this.InTotalMiscField;
            }
            set {
                if ((this.InTotalMiscField.Equals(value) != true)) {
                    this.InTotalMiscField = value;
                    this.RaisePropertyChanged("InTotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IndividualPackIDs {
            get {
                return this.IndividualPackIDsField;
            }
            set {
                if ((this.IndividualPackIDsField.Equals(value) != true)) {
                    this.IndividualPackIDsField = value;
                    this.RaisePropertyChanged("IndividualPackIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntrntlShip {
            get {
                return this.IntrntlShipField;
            }
            set {
                if ((this.IntrntlShipField.Equals(value) != true)) {
                    this.IntrntlShipField = value;
                    this.RaisePropertyChanged("IntrntlShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvCurrCode {
            get {
                return this.InvCurrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvCurrCodeField, value) != true)) {
                    this.InvCurrCodeField = value;
                    this.RaisePropertyChanged("InvCurrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvCurrCurrDesc {
            get {
                return this.InvCurrCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.InvCurrCurrDescField, value) != true)) {
                    this.InvCurrCurrDescField = value;
                    this.RaisePropertyChanged("InvCurrCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvcOrderCmp {
            get {
                return this.InvcOrderCmpField;
            }
            set {
                if ((this.InvcOrderCmpField.Equals(value) != true)) {
                    this.InvcOrderCmpField = value;
                    this.RaisePropertyChanged("InvcOrderCmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceComment {
            get {
                return this.InvoiceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCommentField, value) != true)) {
                    this.InvoiceCommentField = value;
                    this.RaisePropertyChanged("InvoiceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCSRSet {
            get {
                return this.IsCSRSetField;
            }
            set {
                if ((this.IsCSRSetField.Equals(value) != true)) {
                    this.IsCSRSetField = value;
                    this.RaisePropertyChanged("IsCSRSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LOCHold {
            get {
                return this.LOCHoldField;
            }
            set {
                if ((this.LOCHoldField.Equals(value) != true)) {
                    this.LOCHoldField = value;
                    this.RaisePropertyChanged("LOCHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastBatchNum {
            get {
                return this.LastBatchNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LastBatchNumField, value) != true)) {
                    this.LastBatchNumField = value;
                    this.RaisePropertyChanged("LastBatchNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastScheduleNumber {
            get {
                return this.LastScheduleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LastScheduleNumberField, value) != true)) {
                    this.LastScheduleNumberField = value;
                    this.RaisePropertyChanged("LastScheduleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastTCtrlNum {
            get {
                return this.LastTCtrlNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LastTCtrlNumField, value) != true)) {
                    this.LastTCtrlNumField = value;
                    this.RaisePropertyChanged("LastTCtrlNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LetterOfInstr {
            get {
                return this.LetterOfInstrField;
            }
            set {
                if ((this.LetterOfInstrField.Equals(value) != true)) {
                    this.LetterOfInstrField = value;
                    this.RaisePropertyChanged("LetterOfInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkMsg {
            get {
                return this.LinkMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkMsgField, value) != true)) {
                    this.LinkMsgField = value;
                    this.RaisePropertyChanged("LinkMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockQty {
            get {
                return this.LockQtyField;
            }
            set {
                if ((this.LockQtyField.Equals(value) != true)) {
                    this.LockQtyField = value;
                    this.RaisePropertyChanged("LockQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockRate {
            get {
                return this.LockRateField;
            }
            set {
                if ((this.LockRateField.Equals(value) != true)) {
                    this.LockRateField = value;
                    this.RaisePropertyChanged("LockRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NeedByDate {
            get {
                return this.NeedByDateField;
            }
            set {
                if ((this.NeedByDateField.Equals(value) != true)) {
                    this.NeedByDateField = value;
                    this.RaisePropertyChanged("NeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStdPkg {
            get {
                return this.NonStdPkgField;
            }
            set {
                if ((this.NonStdPkgField.Equals(value) != true)) {
                    this.NonStdPkgField = value;
                    this.RaisePropertyChanged("NonStdPkg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyEMail {
            get {
                return this.NotifyEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyEMailField, value) != true)) {
                    this.NotifyEMailField = value;
                    this.RaisePropertyChanged("NotifyEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyFlag {
            get {
                return this.NotifyFlagField;
            }
            set {
                if ((this.NotifyFlagField.Equals(value) != true)) {
                    this.NotifyFlagField = value;
                    this.RaisePropertyChanged("NotifyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress1 {
            get {
                return this.OTSAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress1Field, value) != true)) {
                    this.OTSAddress1Field = value;
                    this.RaisePropertyChanged("OTSAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress2 {
            get {
                return this.OTSAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress2Field, value) != true)) {
                    this.OTSAddress2Field = value;
                    this.RaisePropertyChanged("OTSAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress3 {
            get {
                return this.OTSAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress3Field, value) != true)) {
                    this.OTSAddress3Field = value;
                    this.RaisePropertyChanged("OTSAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCity {
            get {
                return this.OTSCityField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCityField, value) != true)) {
                    this.OTSCityField = value;
                    this.RaisePropertyChanged("OTSCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCntryDescription {
            get {
                return this.OTSCntryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCntryDescriptionField, value) != true)) {
                    this.OTSCntryDescriptionField = value;
                    this.RaisePropertyChanged("OTSCntryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSContact {
            get {
                return this.OTSContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSContactField, value) != true)) {
                    this.OTSContactField = value;
                    this.RaisePropertyChanged("OTSContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OTSCountryNum {
            get {
                return this.OTSCountryNumField;
            }
            set {
                if ((this.OTSCountryNumField.Equals(value) != true)) {
                    this.OTSCountryNumField = value;
                    this.RaisePropertyChanged("OTSCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSCustSaved {
            get {
                return this.OTSCustSavedField;
            }
            set {
                if ((this.OTSCustSavedField.Equals(value) != true)) {
                    this.OTSCustSavedField = value;
                    this.RaisePropertyChanged("OTSCustSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSFaxNum {
            get {
                return this.OTSFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSFaxNumField, value) != true)) {
                    this.OTSFaxNumField = value;
                    this.RaisePropertyChanged("OTSFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSName {
            get {
                return this.OTSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSNameField, value) != true)) {
                    this.OTSNameField = value;
                    this.RaisePropertyChanged("OTSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSPhoneNum {
            get {
                return this.OTSPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSPhoneNumField, value) != true)) {
                    this.OTSPhoneNumField = value;
                    this.RaisePropertyChanged("OTSPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSResaleID {
            get {
                return this.OTSResaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSResaleIDField, value) != true)) {
                    this.OTSResaleIDField = value;
                    this.RaisePropertyChanged("OTSResaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSSaveAs {
            get {
                return this.OTSSaveAsField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSSaveAsField, value) != true)) {
                    this.OTSSaveAsField = value;
                    this.RaisePropertyChanged("OTSSaveAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSSaveCustID {
            get {
                return this.OTSSaveCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSSaveCustIDField, value) != true)) {
                    this.OTSSaveCustIDField = value;
                    this.RaisePropertyChanged("OTSSaveCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSSaved {
            get {
                return this.OTSSavedField;
            }
            set {
                if ((this.OTSSavedField.Equals(value) != true)) {
                    this.OTSSavedField = value;
                    this.RaisePropertyChanged("OTSSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSShipToNum {
            get {
                return this.OTSShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSShipToNumField, value) != true)) {
                    this.OTSShipToNumField = value;
                    this.RaisePropertyChanged("OTSShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSState {
            get {
                return this.OTSStateField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSStateField, value) != true)) {
                    this.OTSStateField = value;
                    this.RaisePropertyChanged("OTSState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSTaxRegionCode {
            get {
                return this.OTSTaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSTaxRegionCodeField, value) != true)) {
                    this.OTSTaxRegionCodeField = value;
                    this.RaisePropertyChanged("OTSTaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSZIP {
            get {
                return this.OTSZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSZIPField, value) != true)) {
                    this.OTSZIPField = value;
                    this.RaisePropertyChanged("OTSZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenOrder {
            get {
                return this.OpenOrderField;
            }
            set {
                if ((this.OpenOrderField.Equals(value) != true)) {
                    this.OpenOrderField = value;
                    this.RaisePropertyChanged("OpenOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderAmt {
            get {
                return this.OrderAmtField;
            }
            set {
                if ((this.OrderAmtField.Equals(value) != true)) {
                    this.OrderAmtField = value;
                    this.RaisePropertyChanged("OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderCSR {
            get {
                return this.OrderCSRField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCSRField, value) != true)) {
                    this.OrderCSRField = value;
                    this.RaisePropertyChanged("OrderCSR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderComment {
            get {
                return this.OrderCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCommentField, value) != true)) {
                    this.OrderCommentField = value;
                    this.RaisePropertyChanged("OrderComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHeld {
            get {
                return this.OrderHeldField;
            }
            set {
                if ((this.OrderHeldField.Equals(value) != true)) {
                    this.OrderHeldField = value;
                    this.RaisePropertyChanged("OrderHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderOpenCredit {
            get {
                return this.OrderOpenCreditField;
            }
            set {
                if ((this.OrderOpenCreditField.Equals(value) != true)) {
                    this.OrderOpenCreditField = value;
                    this.RaisePropertyChanged("OrderOpenCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderStatusField, value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBank {
            get {
                return this.OurBankField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankField, value) != true)) {
                    this.OurBankField = value;
                    this.RaisePropertyChanged("OurBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankBankName {
            get {
                return this.OurBankBankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankBankNameField, value) != true)) {
                    this.OurBankBankNameField = value;
                    this.RaisePropertyChanged("OurBankBankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankDescription {
            get {
                return this.OurBankDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankDescriptionField, value) != true)) {
                    this.OurBankDescriptionField = value;
                    this.RaisePropertyChanged("OurBankDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OutboundSalesDocCtr {
            get {
                return this.OutboundSalesDocCtrField;
            }
            set {
                if ((this.OutboundSalesDocCtrField.Equals(value) != true)) {
                    this.OutboundSalesDocCtrField = value;
                    this.RaisePropertyChanged("OutboundSalesDocCtr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OutboundShipDocsCtr {
            get {
                return this.OutboundShipDocsCtrField;
            }
            set {
                if ((this.OutboundShipDocsCtrField.Equals(value) != true)) {
                    this.OutboundShipDocsCtrField = value;
                    this.RaisePropertyChanged("OutboundShipDocsCtr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideCarrier {
            get {
                return this.OverrideCarrierField;
            }
            set {
                if ((this.OverrideCarrierField.Equals(value) != true)) {
                    this.OverrideCarrierField = value;
                    this.RaisePropertyChanged("OverrideCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideService {
            get {
                return this.OverrideServiceField;
            }
            set {
                if ((this.OverrideServiceField.Equals(value) != true)) {
                    this.OverrideServiceField = value;
                    this.RaisePropertyChanged("OverrideService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumField, value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PSCurrCode {
            get {
                return this.PSCurrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PSCurrCodeField, value) != true)) {
                    this.PSCurrCodeField = value;
                    this.RaisePropertyChanged("PSCurrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PSCurrCurrDesc {
            get {
                return this.PSCurrCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PSCurrCurrDescField, value) != true)) {
                    this.PSCurrCurrDescField = value;
                    this.RaisePropertyChanged("PSCurrCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentCustNum {
            get {
                return this.ParentCustNumField;
            }
            set {
                if ((this.ParentCustNumField.Equals(value) != true)) {
                    this.ParentCustNumField = value;
                    this.RaisePropertyChanged("ParentCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayAccount {
            get {
                return this.PayAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PayAccountField, value) != true)) {
                    this.PayAccountField = value;
                    this.RaisePropertyChanged("PayAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress1 {
            get {
                return this.PayBTAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress1Field, value) != true)) {
                    this.PayBTAddress1Field = value;
                    this.RaisePropertyChanged("PayBTAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress2 {
            get {
                return this.PayBTAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress2Field, value) != true)) {
                    this.PayBTAddress2Field = value;
                    this.RaisePropertyChanged("PayBTAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress3 {
            get {
                return this.PayBTAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress3Field, value) != true)) {
                    this.PayBTAddress3Field = value;
                    this.RaisePropertyChanged("PayBTAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCity {
            get {
                return this.PayBTCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCityField, value) != true)) {
                    this.PayBTCityField = value;
                    this.RaisePropertyChanged("PayBTCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCountry {
            get {
                return this.PayBTCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCountryField, value) != true)) {
                    this.PayBTCountryField = value;
                    this.RaisePropertyChanged("PayBTCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayBTCountryNum {
            get {
                return this.PayBTCountryNumField;
            }
            set {
                if ((this.PayBTCountryNumField.Equals(value) != true)) {
                    this.PayBTCountryNumField = value;
                    this.RaisePropertyChanged("PayBTCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTPhone {
            get {
                return this.PayBTPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTPhoneField, value) != true)) {
                    this.PayBTPhoneField = value;
                    this.RaisePropertyChanged("PayBTPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTState {
            get {
                return this.PayBTStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTStateField, value) != true)) {
                    this.PayBTStateField = value;
                    this.RaisePropertyChanged("PayBTState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTZip {
            get {
                return this.PayBTZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTZipField, value) != true)) {
                    this.PayBTZipField = value;
                    this.RaisePropertyChanged("PayBTZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayFlag {
            get {
                return this.PayFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.PayFlagField, value) != true)) {
                    this.PayFlagField = value;
                    this.RaisePropertyChanged("PayFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PickListComment {
            get {
                return this.PickListCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.PickListCommentField, value) != true)) {
                    this.PickListCommentField = value;
                    this.RaisePropertyChanged("PickListComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrcConNum {
            get {
                return this.PrcConNumField;
            }
            set {
                if ((this.PrcConNumField.Equals(value) != true)) {
                    this.PrcConNumField = value;
                    this.RaisePropertyChanged("PrcConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProFormaInvComment {
            get {
                return this.ProFormaInvCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ProFormaInvCommentField, value) != true)) {
                    this.ProFormaInvCommentField = value;
                    this.RaisePropertyChanged("ProFormaInvComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessCard {
            get {
                return this.ProcessCardField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessCardField, value) != true)) {
                    this.ProcessCardField = value;
                    this.RaisePropertyChanged("ProcessCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpDescription {
            get {
                return this.RateGrpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpDescriptionField, value) != true)) {
                    this.RateGrpDescriptionField = value;
                    this.RaisePropertyChanged("RateGrpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToCalc {
            get {
                return this.ReadyToCalcField;
            }
            set {
                if ((this.ReadyToCalcField.Equals(value) != true)) {
                    this.ReadyToCalcField = value;
                    this.RaisePropertyChanged("ReadyToCalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToFulfill {
            get {
                return this.ReadyToFulfillField;
            }
            set {
                if ((this.ReadyToFulfillField.Equals(value) != true)) {
                    this.ReadyToFulfillField = value;
                    this.RaisePropertyChanged("ReadyToFulfill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNotes {
            get {
                return this.RefNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNotesField, value) != true)) {
                    this.RefNotesField = value;
                    this.RaisePropertyChanged("RefNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferencePNRef {
            get {
                return this.ReferencePNRefField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferencePNRefField, value) != true)) {
                    this.ReferencePNRefField = value;
                    this.RaisePropertyChanged("ReferencePNRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate1 {
            get {
                return this.RepRate1Field;
            }
            set {
                if ((this.RepRate1Field.Equals(value) != true)) {
                    this.RepRate1Field = value;
                    this.RaisePropertyChanged("RepRate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate2 {
            get {
                return this.RepRate2Field;
            }
            set {
                if ((this.RepRate2Field.Equals(value) != true)) {
                    this.RepRate2Field = value;
                    this.RaisePropertyChanged("RepRate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate3 {
            get {
                return this.RepRate3Field;
            }
            set {
                if ((this.RepRate3Field.Equals(value) != true)) {
                    this.RepRate3Field = value;
                    this.RaisePropertyChanged("RepRate3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate4 {
            get {
                return this.RepRate4Field;
            }
            set {
                if ((this.RepRate4Field.Equals(value) != true)) {
                    this.RepRate4Field = value;
                    this.RaisePropertyChanged("RepRate4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RepRate5 {
            get {
                return this.RepRate5Field;
            }
            set {
                if ((this.RepRate5Field.Equals(value) != true)) {
                    this.RepRate5Field = value;
                    this.RaisePropertyChanged("RepRate5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit1 {
            get {
                return this.RepSplit1Field;
            }
            set {
                if ((this.RepSplit1Field.Equals(value) != true)) {
                    this.RepSplit1Field = value;
                    this.RaisePropertyChanged("RepSplit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit2 {
            get {
                return this.RepSplit2Field;
            }
            set {
                if ((this.RepSplit2Field.Equals(value) != true)) {
                    this.RepSplit2Field = value;
                    this.RaisePropertyChanged("RepSplit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit3 {
            get {
                return this.RepSplit3Field;
            }
            set {
                if ((this.RepSplit3Field.Equals(value) != true)) {
                    this.RepSplit3Field = value;
                    this.RaisePropertyChanged("RepSplit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit4 {
            get {
                return this.RepSplit4Field;
            }
            set {
                if ((this.RepSplit4Field.Equals(value) != true)) {
                    this.RepSplit4Field = value;
                    this.RaisePropertyChanged("RepSplit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepSplit5 {
            get {
                return this.RepSplit5Field;
            }
            set {
                if ((this.RepSplit5Field.Equals(value) != true)) {
                    this.RepSplit5Field = value;
                    this.RaisePropertyChanged("RepSplit5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReprintSOAck {
            get {
                return this.ReprintSOAckField;
            }
            set {
                if ((this.ReprintSOAckField.Equals(value) != true)) {
                    this.ReprintSOAckField = value;
                    this.RaisePropertyChanged("ReprintSOAck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResDelivery {
            get {
                return this.ResDeliveryField;
            }
            set {
                if ((this.ResDeliveryField.Equals(value) != true)) {
                    this.ResDeliveryField = value;
                    this.RaisePropertyChanged("ResDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReservePriDescription {
            get {
                return this.ReservePriDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservePriDescriptionField, value) != true)) {
                    this.ReservePriDescriptionField = value;
                    this.RaisePropertyChanged("ReservePriDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReservePriorityCode {
            get {
                return this.ReservePriorityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservePriorityCodeField, value) != true)) {
                    this.ReservePriorityCodeField = value;
                    this.RaisePropertyChanged("ReservePriorityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rounding {
            get {
                return this.RoundingField;
            }
            set {
                if ((this.RoundingField.Equals(value) != true)) {
                    this.RoundingField = value;
                    this.RaisePropertyChanged("Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1CCAmount {
            get {
                return this.Rpt1CCAmountField;
            }
            set {
                if ((this.Rpt1CCAmountField.Equals(value) != true)) {
                    this.Rpt1CCAmountField = value;
                    this.RaisePropertyChanged("Rpt1CCAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1CCFreight {
            get {
                return this.Rpt1CCFreightField;
            }
            set {
                if ((this.Rpt1CCFreightField.Equals(value) != true)) {
                    this.Rpt1CCFreightField = value;
                    this.RaisePropertyChanged("Rpt1CCFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1CCRounding {
            get {
                return this.Rpt1CCRoundingField;
            }
            set {
                if ((this.Rpt1CCRoundingField.Equals(value) != true)) {
                    this.Rpt1CCRoundingField = value;
                    this.RaisePropertyChanged("Rpt1CCRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1CCTax {
            get {
                return this.Rpt1CCTaxField;
            }
            set {
                if ((this.Rpt1CCTaxField.Equals(value) != true)) {
                    this.Rpt1CCTaxField = value;
                    this.RaisePropertyChanged("Rpt1CCTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1CCTotal {
            get {
                return this.Rpt1CCTotalField;
            }
            set {
                if ((this.Rpt1CCTotalField.Equals(value) != true)) {
                    this.Rpt1CCTotalField = value;
                    this.RaisePropertyChanged("Rpt1CCTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DepositBal {
            get {
                return this.Rpt1DepositBalField;
            }
            set {
                if ((this.Rpt1DepositBalField.Equals(value) != true)) {
                    this.Rpt1DepositBalField = value;
                    this.RaisePropertyChanged("Rpt1DepositBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InTotalCharges {
            get {
                return this.Rpt1InTotalChargesField;
            }
            set {
                if ((this.Rpt1InTotalChargesField.Equals(value) != true)) {
                    this.Rpt1InTotalChargesField = value;
                    this.RaisePropertyChanged("Rpt1InTotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InTotalDiscount {
            get {
                return this.Rpt1InTotalDiscountField;
            }
            set {
                if ((this.Rpt1InTotalDiscountField.Equals(value) != true)) {
                    this.Rpt1InTotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt1InTotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InTotalMisc {
            get {
                return this.Rpt1InTotalMiscField;
            }
            set {
                if ((this.Rpt1InTotalMiscField.Equals(value) != true)) {
                    this.Rpt1InTotalMiscField = value;
                    this.RaisePropertyChanged("Rpt1InTotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1OrderAmt {
            get {
                return this.Rpt1OrderAmtField;
            }
            set {
                if ((this.Rpt1OrderAmtField.Equals(value) != true)) {
                    this.Rpt1OrderAmtField = value;
                    this.RaisePropertyChanged("Rpt1OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Rounding {
            get {
                return this.Rpt1RoundingField;
            }
            set {
                if ((this.Rpt1RoundingField.Equals(value) != true)) {
                    this.Rpt1RoundingField = value;
                    this.RaisePropertyChanged("Rpt1Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalAdvBill {
            get {
                return this.Rpt1TotalAdvBillField;
            }
            set {
                if ((this.Rpt1TotalAdvBillField.Equals(value) != true)) {
                    this.Rpt1TotalAdvBillField = value;
                    this.RaisePropertyChanged("Rpt1TotalAdvBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalCharges {
            get {
                return this.Rpt1TotalChargesField;
            }
            set {
                if ((this.Rpt1TotalChargesField.Equals(value) != true)) {
                    this.Rpt1TotalChargesField = value;
                    this.RaisePropertyChanged("Rpt1TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalComm {
            get {
                return this.Rpt1TotalCommField;
            }
            set {
                if ((this.Rpt1TotalCommField.Equals(value) != true)) {
                    this.Rpt1TotalCommField = value;
                    this.RaisePropertyChanged("Rpt1TotalComm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalDiscount {
            get {
                return this.Rpt1TotalDiscountField;
            }
            set {
                if ((this.Rpt1TotalDiscountField.Equals(value) != true)) {
                    this.Rpt1TotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt1TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalMisc {
            get {
                return this.Rpt1TotalMiscField;
            }
            set {
                if ((this.Rpt1TotalMiscField.Equals(value) != true)) {
                    this.Rpt1TotalMiscField = value;
                    this.RaisePropertyChanged("Rpt1TotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalNet {
            get {
                return this.Rpt1TotalNetField;
            }
            set {
                if ((this.Rpt1TotalNetField.Equals(value) != true)) {
                    this.Rpt1TotalNetField = value;
                    this.RaisePropertyChanged("Rpt1TotalNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalSATax {
            get {
                return this.Rpt1TotalSATaxField;
            }
            set {
                if ((this.Rpt1TotalSATaxField.Equals(value) != true)) {
                    this.Rpt1TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalTax {
            get {
                return this.Rpt1TotalTaxField;
            }
            set {
                if ((this.Rpt1TotalTaxField.Equals(value) != true)) {
                    this.Rpt1TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalWHTax {
            get {
                return this.Rpt1TotalWHTaxField;
            }
            set {
                if ((this.Rpt1TotalWHTaxField.Equals(value) != true)) {
                    this.Rpt1TotalWHTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2CCAmount {
            get {
                return this.Rpt2CCAmountField;
            }
            set {
                if ((this.Rpt2CCAmountField.Equals(value) != true)) {
                    this.Rpt2CCAmountField = value;
                    this.RaisePropertyChanged("Rpt2CCAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2CCFreight {
            get {
                return this.Rpt2CCFreightField;
            }
            set {
                if ((this.Rpt2CCFreightField.Equals(value) != true)) {
                    this.Rpt2CCFreightField = value;
                    this.RaisePropertyChanged("Rpt2CCFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2CCRounding {
            get {
                return this.Rpt2CCRoundingField;
            }
            set {
                if ((this.Rpt2CCRoundingField.Equals(value) != true)) {
                    this.Rpt2CCRoundingField = value;
                    this.RaisePropertyChanged("Rpt2CCRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2CCTax {
            get {
                return this.Rpt2CCTaxField;
            }
            set {
                if ((this.Rpt2CCTaxField.Equals(value) != true)) {
                    this.Rpt2CCTaxField = value;
                    this.RaisePropertyChanged("Rpt2CCTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2CCTotal {
            get {
                return this.Rpt2CCTotalField;
            }
            set {
                if ((this.Rpt2CCTotalField.Equals(value) != true)) {
                    this.Rpt2CCTotalField = value;
                    this.RaisePropertyChanged("Rpt2CCTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DepositBal {
            get {
                return this.Rpt2DepositBalField;
            }
            set {
                if ((this.Rpt2DepositBalField.Equals(value) != true)) {
                    this.Rpt2DepositBalField = value;
                    this.RaisePropertyChanged("Rpt2DepositBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InTotalCharges {
            get {
                return this.Rpt2InTotalChargesField;
            }
            set {
                if ((this.Rpt2InTotalChargesField.Equals(value) != true)) {
                    this.Rpt2InTotalChargesField = value;
                    this.RaisePropertyChanged("Rpt2InTotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InTotalDiscount {
            get {
                return this.Rpt2InTotalDiscountField;
            }
            set {
                if ((this.Rpt2InTotalDiscountField.Equals(value) != true)) {
                    this.Rpt2InTotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt2InTotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InTotalMisc {
            get {
                return this.Rpt2InTotalMiscField;
            }
            set {
                if ((this.Rpt2InTotalMiscField.Equals(value) != true)) {
                    this.Rpt2InTotalMiscField = value;
                    this.RaisePropertyChanged("Rpt2InTotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2OrderAmt {
            get {
                return this.Rpt2OrderAmtField;
            }
            set {
                if ((this.Rpt2OrderAmtField.Equals(value) != true)) {
                    this.Rpt2OrderAmtField = value;
                    this.RaisePropertyChanged("Rpt2OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Rounding {
            get {
                return this.Rpt2RoundingField;
            }
            set {
                if ((this.Rpt2RoundingField.Equals(value) != true)) {
                    this.Rpt2RoundingField = value;
                    this.RaisePropertyChanged("Rpt2Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalAdvBill {
            get {
                return this.Rpt2TotalAdvBillField;
            }
            set {
                if ((this.Rpt2TotalAdvBillField.Equals(value) != true)) {
                    this.Rpt2TotalAdvBillField = value;
                    this.RaisePropertyChanged("Rpt2TotalAdvBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalCharges {
            get {
                return this.Rpt2TotalChargesField;
            }
            set {
                if ((this.Rpt2TotalChargesField.Equals(value) != true)) {
                    this.Rpt2TotalChargesField = value;
                    this.RaisePropertyChanged("Rpt2TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalComm {
            get {
                return this.Rpt2TotalCommField;
            }
            set {
                if ((this.Rpt2TotalCommField.Equals(value) != true)) {
                    this.Rpt2TotalCommField = value;
                    this.RaisePropertyChanged("Rpt2TotalComm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalDiscount {
            get {
                return this.Rpt2TotalDiscountField;
            }
            set {
                if ((this.Rpt2TotalDiscountField.Equals(value) != true)) {
                    this.Rpt2TotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt2TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalMisc {
            get {
                return this.Rpt2TotalMiscField;
            }
            set {
                if ((this.Rpt2TotalMiscField.Equals(value) != true)) {
                    this.Rpt2TotalMiscField = value;
                    this.RaisePropertyChanged("Rpt2TotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalNet {
            get {
                return this.Rpt2TotalNetField;
            }
            set {
                if ((this.Rpt2TotalNetField.Equals(value) != true)) {
                    this.Rpt2TotalNetField = value;
                    this.RaisePropertyChanged("Rpt2TotalNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalSATax {
            get {
                return this.Rpt2TotalSATaxField;
            }
            set {
                if ((this.Rpt2TotalSATaxField.Equals(value) != true)) {
                    this.Rpt2TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalTax {
            get {
                return this.Rpt2TotalTaxField;
            }
            set {
                if ((this.Rpt2TotalTaxField.Equals(value) != true)) {
                    this.Rpt2TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalWHTax {
            get {
                return this.Rpt2TotalWHTaxField;
            }
            set {
                if ((this.Rpt2TotalWHTaxField.Equals(value) != true)) {
                    this.Rpt2TotalWHTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3CCAmount {
            get {
                return this.Rpt3CCAmountField;
            }
            set {
                if ((this.Rpt3CCAmountField.Equals(value) != true)) {
                    this.Rpt3CCAmountField = value;
                    this.RaisePropertyChanged("Rpt3CCAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3CCFreight {
            get {
                return this.Rpt3CCFreightField;
            }
            set {
                if ((this.Rpt3CCFreightField.Equals(value) != true)) {
                    this.Rpt3CCFreightField = value;
                    this.RaisePropertyChanged("Rpt3CCFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3CCRounding {
            get {
                return this.Rpt3CCRoundingField;
            }
            set {
                if ((this.Rpt3CCRoundingField.Equals(value) != true)) {
                    this.Rpt3CCRoundingField = value;
                    this.RaisePropertyChanged("Rpt3CCRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3CCTax {
            get {
                return this.Rpt3CCTaxField;
            }
            set {
                if ((this.Rpt3CCTaxField.Equals(value) != true)) {
                    this.Rpt3CCTaxField = value;
                    this.RaisePropertyChanged("Rpt3CCTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3CCTotal {
            get {
                return this.Rpt3CCTotalField;
            }
            set {
                if ((this.Rpt3CCTotalField.Equals(value) != true)) {
                    this.Rpt3CCTotalField = value;
                    this.RaisePropertyChanged("Rpt3CCTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DepositBal {
            get {
                return this.Rpt3DepositBalField;
            }
            set {
                if ((this.Rpt3DepositBalField.Equals(value) != true)) {
                    this.Rpt3DepositBalField = value;
                    this.RaisePropertyChanged("Rpt3DepositBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InTotalCharges {
            get {
                return this.Rpt3InTotalChargesField;
            }
            set {
                if ((this.Rpt3InTotalChargesField.Equals(value) != true)) {
                    this.Rpt3InTotalChargesField = value;
                    this.RaisePropertyChanged("Rpt3InTotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InTotalDiscount {
            get {
                return this.Rpt3InTotalDiscountField;
            }
            set {
                if ((this.Rpt3InTotalDiscountField.Equals(value) != true)) {
                    this.Rpt3InTotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt3InTotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InTotalMisc {
            get {
                return this.Rpt3InTotalMiscField;
            }
            set {
                if ((this.Rpt3InTotalMiscField.Equals(value) != true)) {
                    this.Rpt3InTotalMiscField = value;
                    this.RaisePropertyChanged("Rpt3InTotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3OrderAmt {
            get {
                return this.Rpt3OrderAmtField;
            }
            set {
                if ((this.Rpt3OrderAmtField.Equals(value) != true)) {
                    this.Rpt3OrderAmtField = value;
                    this.RaisePropertyChanged("Rpt3OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Rounding {
            get {
                return this.Rpt3RoundingField;
            }
            set {
                if ((this.Rpt3RoundingField.Equals(value) != true)) {
                    this.Rpt3RoundingField = value;
                    this.RaisePropertyChanged("Rpt3Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalAdvBill {
            get {
                return this.Rpt3TotalAdvBillField;
            }
            set {
                if ((this.Rpt3TotalAdvBillField.Equals(value) != true)) {
                    this.Rpt3TotalAdvBillField = value;
                    this.RaisePropertyChanged("Rpt3TotalAdvBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalCharges {
            get {
                return this.Rpt3TotalChargesField;
            }
            set {
                if ((this.Rpt3TotalChargesField.Equals(value) != true)) {
                    this.Rpt3TotalChargesField = value;
                    this.RaisePropertyChanged("Rpt3TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalComm {
            get {
                return this.Rpt3TotalCommField;
            }
            set {
                if ((this.Rpt3TotalCommField.Equals(value) != true)) {
                    this.Rpt3TotalCommField = value;
                    this.RaisePropertyChanged("Rpt3TotalComm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalDiscount {
            get {
                return this.Rpt3TotalDiscountField;
            }
            set {
                if ((this.Rpt3TotalDiscountField.Equals(value) != true)) {
                    this.Rpt3TotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt3TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalMisc {
            get {
                return this.Rpt3TotalMiscField;
            }
            set {
                if ((this.Rpt3TotalMiscField.Equals(value) != true)) {
                    this.Rpt3TotalMiscField = value;
                    this.RaisePropertyChanged("Rpt3TotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalNet {
            get {
                return this.Rpt3TotalNetField;
            }
            set {
                if ((this.Rpt3TotalNetField.Equals(value) != true)) {
                    this.Rpt3TotalNetField = value;
                    this.RaisePropertyChanged("Rpt3TotalNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalSATax {
            get {
                return this.Rpt3TotalSATaxField;
            }
            set {
                if ((this.Rpt3TotalSATaxField.Equals(value) != true)) {
                    this.Rpt3TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalTax {
            get {
                return this.Rpt3TotalTaxField;
            }
            set {
                if ((this.Rpt3TotalTaxField.Equals(value) != true)) {
                    this.Rpt3TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalWHTax {
            get {
                return this.Rpt3TotalWHTaxField;
            }
            set {
                if ((this.Rpt3TotalWHTaxField.Equals(value) != true)) {
                    this.Rpt3TotalWHTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommAmt1 {
            get {
                return this.SRCommAmt1Field;
            }
            set {
                if ((this.SRCommAmt1Field.Equals(value) != true)) {
                    this.SRCommAmt1Field = value;
                    this.RaisePropertyChanged("SRCommAmt1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommAmt2 {
            get {
                return this.SRCommAmt2Field;
            }
            set {
                if ((this.SRCommAmt2Field.Equals(value) != true)) {
                    this.SRCommAmt2Field = value;
                    this.RaisePropertyChanged("SRCommAmt2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommAmt3 {
            get {
                return this.SRCommAmt3Field;
            }
            set {
                if ((this.SRCommAmt3Field.Equals(value) != true)) {
                    this.SRCommAmt3Field = value;
                    this.RaisePropertyChanged("SRCommAmt3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommAmt4 {
            get {
                return this.SRCommAmt4Field;
            }
            set {
                if ((this.SRCommAmt4Field.Equals(value) != true)) {
                    this.SRCommAmt4Field = value;
                    this.RaisePropertyChanged("SRCommAmt4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommAmt5 {
            get {
                return this.SRCommAmt5Field;
            }
            set {
                if ((this.SRCommAmt5Field.Equals(value) != true)) {
                    this.SRCommAmt5Field = value;
                    this.RaisePropertyChanged("SRCommAmt5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommableAmt1 {
            get {
                return this.SRCommableAmt1Field;
            }
            set {
                if ((this.SRCommableAmt1Field.Equals(value) != true)) {
                    this.SRCommableAmt1Field = value;
                    this.RaisePropertyChanged("SRCommableAmt1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommableAmt2 {
            get {
                return this.SRCommableAmt2Field;
            }
            set {
                if ((this.SRCommableAmt2Field.Equals(value) != true)) {
                    this.SRCommableAmt2Field = value;
                    this.RaisePropertyChanged("SRCommableAmt2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommableAmt3 {
            get {
                return this.SRCommableAmt3Field;
            }
            set {
                if ((this.SRCommableAmt3Field.Equals(value) != true)) {
                    this.SRCommableAmt3Field = value;
                    this.RaisePropertyChanged("SRCommableAmt3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommableAmt4 {
            get {
                return this.SRCommableAmt4Field;
            }
            set {
                if ((this.SRCommableAmt4Field.Equals(value) != true)) {
                    this.SRCommableAmt4Field = value;
                    this.RaisePropertyChanged("SRCommableAmt4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SRCommableAmt5 {
            get {
                return this.SRCommableAmt5Field;
            }
            set {
                if ((this.SRCommableAmt5Field.Equals(value) != true)) {
                    this.SRCommableAmt5Field = value;
                    this.RaisePropertyChanged("SRCommableAmt5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode1 {
            get {
                return this.SalesRepCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode1Field, value) != true)) {
                    this.SalesRepCode1Field = value;
                    this.RaisePropertyChanged("SalesRepCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode2 {
            get {
                return this.SalesRepCode2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode2Field, value) != true)) {
                    this.SalesRepCode2Field = value;
                    this.RaisePropertyChanged("SalesRepCode2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode3 {
            get {
                return this.SalesRepCode3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode3Field, value) != true)) {
                    this.SalesRepCode3Field = value;
                    this.RaisePropertyChanged("SalesRepCode3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode4 {
            get {
                return this.SalesRepCode4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode4Field, value) != true)) {
                    this.SalesRepCode4Field = value;
                    this.RaisePropertyChanged("SalesRepCode4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode5 {
            get {
                return this.SalesRepCode5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCode5Field, value) != true)) {
                    this.SalesRepCode5Field = value;
                    this.RaisePropertyChanged("SalesRepCode5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepList {
            get {
                return this.SalesRepListField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepListField, value) != true)) {
                    this.SalesRepListField = value;
                    this.RaisePropertyChanged("SalesRepList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName1 {
            get {
                return this.SalesRepName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName1Field, value) != true)) {
                    this.SalesRepName1Field = value;
                    this.RaisePropertyChanged("SalesRepName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName2 {
            get {
                return this.SalesRepName2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName2Field, value) != true)) {
                    this.SalesRepName2Field = value;
                    this.RaisePropertyChanged("SalesRepName2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName3 {
            get {
                return this.SalesRepName3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName3Field, value) != true)) {
                    this.SalesRepName3Field = value;
                    this.RaisePropertyChanged("SalesRepName3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName4 {
            get {
                return this.SalesRepName4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName4Field, value) != true)) {
                    this.SalesRepName4Field = value;
                    this.RaisePropertyChanged("SalesRepName4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepName5 {
            get {
                return this.SalesRepName5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepName5Field, value) != true)) {
                    this.SalesRepName5Field = value;
                    this.RaisePropertyChanged("SalesRepName5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatDelivery {
            get {
                return this.SatDeliveryField;
            }
            set {
                if ((this.SatDeliveryField.Equals(value) != true)) {
                    this.SatDeliveryField = value;
                    this.RaisePropertyChanged("SatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatPickup {
            get {
                return this.SatPickupField;
            }
            set {
                if ((this.SatPickupField.Equals(value) != true)) {
                    this.SatPickupField = value;
                    this.RaisePropertyChanged("SatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAlert {
            get {
                return this.ServAlertField;
            }
            set {
                if ((this.ServAlertField.Equals(value) != true)) {
                    this.ServAlertField = value;
                    this.RaisePropertyChanged("ServAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServAuthNum {
            get {
                return this.ServAuthNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ServAuthNumField, value) != true)) {
                    this.ServAuthNumField = value;
                    this.RaisePropertyChanged("ServAuthNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServDeliveryDate {
            get {
                return this.ServDeliveryDateField;
            }
            set {
                if ((this.ServDeliveryDateField.Equals(value) != true)) {
                    this.ServDeliveryDateField = value;
                    this.RaisePropertyChanged("ServDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServHomeDel {
            get {
                return this.ServHomeDelField;
            }
            set {
                if ((this.ServHomeDelField.Equals(value) != true)) {
                    this.ServHomeDelField = value;
                    this.RaisePropertyChanged("ServHomeDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServInstruct {
            get {
                return this.ServInstructField;
            }
            set {
                if ((object.ReferenceEquals(this.ServInstructField, value) != true)) {
                    this.ServInstructField = value;
                    this.RaisePropertyChanged("ServInstruct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServPhone {
            get {
                return this.ServPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServPhoneField, value) != true)) {
                    this.ServPhoneField = value;
                    this.RaisePropertyChanged("ServPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef1 {
            get {
                return this.ServRef1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef1Field, value) != true)) {
                    this.ServRef1Field = value;
                    this.RaisePropertyChanged("ServRef1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef2 {
            get {
                return this.ServRef2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef2Field, value) != true)) {
                    this.ServRef2Field = value;
                    this.RaisePropertyChanged("ServRef2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef3 {
            get {
                return this.ServRef3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef3Field, value) != true)) {
                    this.ServRef3Field = value;
                    this.RaisePropertyChanged("ServRef3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef4 {
            get {
                return this.ServRef4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef4Field, value) != true)) {
                    this.ServRef4Field = value;
                    this.RaisePropertyChanged("ServRef4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef5 {
            get {
                return this.ServRef5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef5Field, value) != true)) {
                    this.ServRef5Field = value;
                    this.RaisePropertyChanged("ServRef5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServRelease {
            get {
                return this.ServReleaseField;
            }
            set {
                if ((this.ServReleaseField.Equals(value) != true)) {
                    this.ServReleaseField = value;
                    this.RaisePropertyChanged("ServRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSignature {
            get {
                return this.ServSignatureField;
            }
            set {
                if ((this.ServSignatureField.Equals(value) != true)) {
                    this.ServSignatureField = value;
                    this.RaisePropertyChanged("ServSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipByTime {
            get {
                return this.ShipByTimeField;
            }
            set {
                if ((this.ShipByTimeField.Equals(value) != true)) {
                    this.ShipByTimeField = value;
                    this.RaisePropertyChanged("ShipByTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipComment {
            get {
                return this.ShipCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCommentField, value) != true)) {
                    this.ShipCommentField = value;
                    this.RaisePropertyChanged("ShipComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipExprtDeclartn {
            get {
                return this.ShipExprtDeclartnField;
            }
            set {
                if ((this.ShipExprtDeclartnField.Equals(value) != true)) {
                    this.ShipExprtDeclartnField = value;
                    this.RaisePropertyChanged("ShipExprtDeclartn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipOrderComplete {
            get {
                return this.ShipOrderCompleteField;
            }
            set {
                if ((this.ShipOrderCompleteField.Equals(value) != true)) {
                    this.ShipOrderCompleteField = value;
                    this.RaisePropertyChanged("ShipOrderComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddressList {
            get {
                return this.ShipToAddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddressListField, value) != true)) {
                    this.ShipToAddressListField = value;
                    this.RaisePropertyChanged("ShipToAddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactEMailAddress {
            get {
                return this.ShipToContactEMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactEMailAddressField, value) != true)) {
                    this.ShipToContactEMailAddressField = value;
                    this.RaisePropertyChanged("ShipToContactEMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactFaxNum {
            get {
                return this.ShipToContactFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactFaxNumField, value) != true)) {
                    this.ShipToContactFaxNumField = value;
                    this.RaisePropertyChanged("ShipToContactFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactName {
            get {
                return this.ShipToContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactNameField, value) != true)) {
                    this.ShipToContactNameField = value;
                    this.RaisePropertyChanged("ShipToContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactPhoneNum {
            get {
                return this.ShipToContactPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactPhoneNumField, value) != true)) {
                    this.ShipToContactPhoneNumField = value;
                    this.RaisePropertyChanged("ShipToContactPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustId {
            get {
                return this.ShipToCustIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustIdField, value) != true)) {
                    this.ShipToCustIdField = value;
                    this.RaisePropertyChanged("ShipToCustId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowApplyOrderDiscountsControl {
            get {
                return this.ShowApplyOrderDiscountsControlField;
            }
            set {
                if ((this.ShowApplyOrderDiscountsControlField.Equals(value) != true)) {
                    this.ShowApplyOrderDiscountsControlField = value;
                    this.RaisePropertyChanged("ShowApplyOrderDiscountsControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShpConNum {
            get {
                return this.ShpConNumField;
            }
            set {
                if ((this.ShpConNumField.Equals(value) != true)) {
                    this.ShpConNumField = value;
                    this.RaisePropertyChanged("ShpConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SndAlrtShp {
            get {
                return this.SndAlrtShpField;
            }
            set {
                if ((this.SndAlrtShpField.Equals(value) != true)) {
                    this.SndAlrtShpField = value;
                    this.RaisePropertyChanged("SndAlrtShp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToAddressList {
            get {
                return this.SoldToAddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToAddressListField, value) != true)) {
                    this.SoldToAddressListField = value;
                    this.RaisePropertyChanged("SoldToAddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToContactEMailAddress {
            get {
                return this.SoldToContactEMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToContactEMailAddressField, value) != true)) {
                    this.SoldToContactEMailAddressField = value;
                    this.RaisePropertyChanged("SoldToContactEMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToContactFaxNum {
            get {
                return this.SoldToContactFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToContactFaxNumField, value) != true)) {
                    this.SoldToContactFaxNumField = value;
                    this.RaisePropertyChanged("SoldToContactFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToContactName {
            get {
                return this.SoldToContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToContactNameField, value) != true)) {
                    this.SoldToContactNameField = value;
                    this.RaisePropertyChanged("SoldToContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoldToContactPhoneNum {
            get {
                return this.SoldToContactPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SoldToContactPhoneNumField, value) != true)) {
                    this.SoldToContactPhoneNumField = value;
                    this.RaisePropertyChanged("SoldToContactPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TWFiscalPeriod {
            get {
                return this.TWFiscalPeriodField;
            }
            set {
                if ((this.TWFiscalPeriodField.Equals(value) != true)) {
                    this.TWFiscalPeriodField = value;
                    this.RaisePropertyChanged("TWFiscalPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TWFiscalYear {
            get {
                return this.TWFiscalYearField;
            }
            set {
                if ((this.TWFiscalYearField.Equals(value) != true)) {
                    this.TWFiscalYearField = value;
                    this.RaisePropertyChanged("TWFiscalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWFiscalYearSuffix {
            get {
                return this.TWFiscalYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.TWFiscalYearSuffixField, value) != true)) {
                    this.TWFiscalYearSuffixField = value;
                    this.RaisePropertyChanged("TWFiscalYearSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIGroup {
            get {
                return this.TWGUIGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIGroupField, value) != true)) {
                    this.TWGUIGroupField = value;
                    this.RaisePropertyChanged("TWGUIGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIRegNumBuyer {
            get {
                return this.TWGUIRegNumBuyerField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIRegNumBuyerField, value) != true)) {
                    this.TWGUIRegNumBuyerField = value;
                    this.RaisePropertyChanged("TWGUIRegNumBuyer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGUIRegNumSeller {
            get {
                return this.TWGUIRegNumSellerField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGUIRegNumSellerField, value) != true)) {
                    this.TWGUIRegNumSellerField = value;
                    this.RaisePropertyChanged("TWGUIRegNumSeller");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWGenerationType {
            get {
                return this.TWGenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TWGenerationTypeField, value) != true)) {
                    this.TWGenerationTypeField = value;
                    this.RaisePropertyChanged("TWGenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxPoint {
            get {
                return this.TaxPointField;
            }
            set {
                if ((this.TaxPointField.Equals(value) != true)) {
                    this.TaxPointField = value;
                    this.RaisePropertyChanged("TaxPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCodeDescription {
            get {
                return this.TaxRegionCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeDescriptionField, value) != true)) {
                    this.TaxRegionCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCode {
            get {
                return this.TermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeField, value) != true)) {
                    this.TermsCodeField = value;
                    this.RaisePropertyChanged("TermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsCodeDescription {
            get {
                return this.TermsCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsCodeDescriptionField, value) != true)) {
                    this.TermsCodeDescriptionField = value;
                    this.RaisePropertyChanged("TermsCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAdvBill {
            get {
                return this.TotalAdvBillField;
            }
            set {
                if ((this.TotalAdvBillField.Equals(value) != true)) {
                    this.TotalAdvBillField = value;
                    this.RaisePropertyChanged("TotalAdvBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCharges {
            get {
                return this.TotalChargesField;
            }
            set {
                if ((this.TotalChargesField.Equals(value) != true)) {
                    this.TotalChargesField = value;
                    this.RaisePropertyChanged("TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalComm {
            get {
                return this.TotalCommField;
            }
            set {
                if ((this.TotalCommField.Equals(value) != true)) {
                    this.TotalCommField = value;
                    this.RaisePropertyChanged("TotalComm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCommLines {
            get {
                return this.TotalCommLinesField;
            }
            set {
                if ((this.TotalCommLinesField.Equals(value) != true)) {
                    this.TotalCommLinesField = value;
                    this.RaisePropertyChanged("TotalCommLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalDiscount {
            get {
                return this.TotalDiscountField;
            }
            set {
                if ((this.TotalDiscountField.Equals(value) != true)) {
                    this.TotalDiscountField = value;
                    this.RaisePropertyChanged("TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalInvoiced {
            get {
                return this.TotalInvoicedField;
            }
            set {
                if ((this.TotalInvoicedField.Equals(value) != true)) {
                    this.TotalInvoicedField = value;
                    this.RaisePropertyChanged("TotalInvoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalLines {
            get {
                return this.TotalLinesField;
            }
            set {
                if ((this.TotalLinesField.Equals(value) != true)) {
                    this.TotalLinesField = value;
                    this.RaisePropertyChanged("TotalLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalMisc {
            get {
                return this.TotalMiscField;
            }
            set {
                if ((this.TotalMiscField.Equals(value) != true)) {
                    this.TotalMiscField = value;
                    this.RaisePropertyChanged("TotalMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalNet {
            get {
                return this.TotalNetField;
            }
            set {
                if ((this.TotalNetField.Equals(value) != true)) {
                    this.TotalNetField = value;
                    this.RaisePropertyChanged("TotalNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalOrder {
            get {
                return this.TotalOrderField;
            }
            set {
                if ((this.TotalOrderField.Equals(value) != true)) {
                    this.TotalOrderField = value;
                    this.RaisePropertyChanged("TotalOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRelDates {
            get {
                return this.TotalRelDatesField;
            }
            set {
                if ((this.TotalRelDatesField.Equals(value) != true)) {
                    this.TotalRelDatesField = value;
                    this.RaisePropertyChanged("TotalRelDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalReleases {
            get {
                return this.TotalReleasesField;
            }
            set {
                if ((this.TotalReleasesField.Equals(value) != true)) {
                    this.TotalReleasesField = value;
                    this.RaisePropertyChanged("TotalReleases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSATax {
            get {
                return this.TotalSATaxField;
            }
            set {
                if ((this.TotalSATaxField.Equals(value) != true)) {
                    this.TotalSATaxField = value;
                    this.RaisePropertyChanged("TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalShipped {
            get {
                return this.TotalShippedField;
            }
            set {
                if ((this.TotalShippedField.Equals(value) != true)) {
                    this.TotalShippedField = value;
                    this.RaisePropertyChanged("TotalShipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalTax {
            get {
                return this.TotalTaxField;
            }
            set {
                if ((this.TotalTaxField.Equals(value) != true)) {
                    this.TotalTaxField = value;
                    this.RaisePropertyChanged("TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalWHTax {
            get {
                return this.TotalWHTaxField;
            }
            set {
                if ((this.TotalWHTaxField.Equals(value) != true)) {
                    this.TotalWHTaxField = value;
                    this.RaisePropertyChanged("TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeDescr {
            get {
                return this.TranDocTypeDescrField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeDescrField, value) != true)) {
                    this.TranDocTypeDescrField = value;
                    this.RaisePropertyChanged("TranDocTypeDescr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVMemo {
            get {
                return this.UPSQVMemoField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVMemoField, value) != true)) {
                    this.UPSQVMemoField = value;
                    this.RaisePropertyChanged("UPSQVMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVShipFromName {
            get {
                return this.UPSQVShipFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVShipFromNameField, value) != true)) {
                    this.UPSQVShipFromNameField = value;
                    this.RaisePropertyChanged("UPSQVShipFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UPSQuantumView {
            get {
                return this.UPSQuantumViewField;
            }
            set {
                if ((this.UPSQuantumViewField.Equals(value) != true)) {
                    this.UPSQuantumViewField = value;
                    this.RaisePropertyChanged("UPSQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateDtlAndRelRecords {
            get {
                return this.UpdateDtlAndRelRecordsField;
            }
            set {
                if ((this.UpdateDtlAndRelRecordsField.Equals(value) != true)) {
                    this.UpdateDtlAndRelRecordsField = value;
                    this.RaisePropertyChanged("UpdateDtlAndRelRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseOTS {
            get {
                return this.UseOTSField;
            }
            set {
                if ((this.UseOTSField.Equals(value) != true)) {
                    this.UseOTSField = value;
                    this.RaisePropertyChanged("UseOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserChar1 {
            get {
                return this.UserChar1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserChar1Field, value) != true)) {
                    this.UserChar1Field = value;
                    this.RaisePropertyChanged("UserChar1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserChar2 {
            get {
                return this.UserChar2Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserChar2Field, value) != true)) {
                    this.UserChar2Field = value;
                    this.RaisePropertyChanged("UserChar2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserChar3 {
            get {
                return this.UserChar3Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserChar3Field, value) != true)) {
                    this.UserChar3Field = value;
                    this.RaisePropertyChanged("UserChar3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserChar4 {
            get {
                return this.UserChar4Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserChar4Field, value) != true)) {
                    this.UserChar4Field = value;
                    this.RaisePropertyChanged("UserChar4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UserDate1 {
            get {
                return this.UserDate1Field;
            }
            set {
                if ((this.UserDate1Field.Equals(value) != true)) {
                    this.UserDate1Field = value;
                    this.RaisePropertyChanged("UserDate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UserDate2 {
            get {
                return this.UserDate2Field;
            }
            set {
                if ((this.UserDate2Field.Equals(value) != true)) {
                    this.UserDate2Field = value;
                    this.RaisePropertyChanged("UserDate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UserDate3 {
            get {
                return this.UserDate3Field;
            }
            set {
                if ((this.UserDate3Field.Equals(value) != true)) {
                    this.UserDate3Field = value;
                    this.RaisePropertyChanged("UserDate3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UserDate4 {
            get {
                return this.UserDate4Field;
            }
            set {
                if ((this.UserDate4Field.Equals(value) != true)) {
                    this.UserDate4Field = value;
                    this.RaisePropertyChanged("UserDate4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserDecimal1 {
            get {
                return this.UserDecimal1Field;
            }
            set {
                if ((this.UserDecimal1Field.Equals(value) != true)) {
                    this.UserDecimal1Field = value;
                    this.RaisePropertyChanged("UserDecimal1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserDecimal2 {
            get {
                return this.UserDecimal2Field;
            }
            set {
                if ((this.UserDecimal2Field.Equals(value) != true)) {
                    this.UserDecimal2Field = value;
                    this.RaisePropertyChanged("UserDecimal2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserInteger1 {
            get {
                return this.UserInteger1Field;
            }
            set {
                if ((this.UserInteger1Field.Equals(value) != true)) {
                    this.UserInteger1Field = value;
                    this.RaisePropertyChanged("UserInteger1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserInteger2 {
            get {
                return this.UserInteger2Field;
            }
            set {
                if ((this.UserInteger2Field.Equals(value) != true)) {
                    this.UserInteger2Field = value;
                    this.RaisePropertyChanged("UserInteger2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidOrder {
            get {
                return this.VoidOrderField;
            }
            set {
                if ((this.VoidOrderField.Equals(value) != true)) {
                    this.VoidOrderField = value;
                    this.RaisePropertyChanged("VoidOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIApplication {
            get {
                return this.WIApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.WIApplicationField, value) != true)) {
                    this.WIApplicationField = value;
                    this.RaisePropertyChanged("WIApplication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WICreditCardorder {
            get {
                return this.WICreditCardorderField;
            }
            set {
                if ((this.WICreditCardorderField.Equals(value) != true)) {
                    this.WICreditCardorderField = value;
                    this.RaisePropertyChanged("WICreditCardorder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIOrder {
            get {
                return this.WIOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.WIOrderField, value) != true)) {
                    this.WIOrderField = value;
                    this.RaisePropertyChanged("WIOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIUserID {
            get {
                return this.WIUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WIUserIDField, value) != true)) {
                    this.WIUserIDField = value;
                    this.RaisePropertyChanged("WIUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIUsername {
            get {
                return this.WIUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.WIUsernameField, value) != true)) {
                    this.WIUsernameField = value;
                    this.RaisePropertyChanged("WIUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebEntryPerson {
            get {
                return this.WebEntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.WebEntryPersonField, value) != true)) {
                    this.WebEntryPersonField = value;
                    this.RaisePropertyChanged("WebEntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebOrder {
            get {
                return this.WebOrderField;
            }
            set {
                if ((this.WebOrderField.Equals(value) != true)) {
                    this.WebOrderField = value;
                    this.RaisePropertyChanged("WebOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> XRefContractDate {
            get {
                return this.XRefContractDateField;
            }
            set {
                if ((this.XRefContractDateField.Equals(value) != true)) {
                    this.XRefContractDateField = value;
                    this.RaisePropertyChanged("XRefContractDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefContractNum {
            get {
                return this.XRefContractNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefContractNumField, value) != true)) {
                    this.XRefContractNumField = value;
                    this.RaisePropertyChanged("XRefContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ccToken {
            get {
                return this.ccTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ccTokenField, value) != true)) {
                    this.ccTokenField = value;
                    this.RaisePropertyChanged("ccToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dspBTCustID {
            get {
                return this.dspBTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.dspBTCustIDField, value) != true)) {
                    this.dspBTCustIDField = value;
                    this.RaisePropertyChanged("dspBTCustID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHedAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderHedAttchRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHedUPSRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderHedUPSRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedUPSRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeliveryNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FailureNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipmentNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UPSQVSeqField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedUPSRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeliveryNotify {
            get {
                return this.DeliveryNotifyField;
            }
            set {
                if ((this.DeliveryNotifyField.Equals(value) != true)) {
                    this.DeliveryNotifyField = value;
                    this.RaisePropertyChanged("DeliveryNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableQuantumView {
            get {
                return this.EnableQuantumViewField;
            }
            set {
                if ((this.EnableQuantumViewField.Equals(value) != true)) {
                    this.EnableQuantumViewField = value;
                    this.RaisePropertyChanged("EnableQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryProcess {
            get {
                return this.EntryProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryProcessField, value) != true)) {
                    this.EntryProcessField = value;
                    this.RaisePropertyChanged("EntryProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FailureNotify {
            get {
                return this.FailureNotifyField;
            }
            set {
                if ((this.FailureNotifyField.Equals(value) != true)) {
                    this.FailureNotifyField = value;
                    this.RaisePropertyChanged("FailureNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipmentNotify {
            get {
                return this.ShipmentNotifyField;
            }
            set {
                if ((this.ShipmentNotifyField.Equals(value) != true)) {
                    this.ShipmentNotifyField = value;
                    this.RaisePropertyChanged("ShipmentNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UPSQVSeq {
            get {
                return this.UPSQVSeqField;
            }
            set {
                if ((this.UPSQVSeqField.Equals(value) != true)) {
                    this.UPSQVSeqField = value;
                    this.RaisePropertyChanged("UPSQVSeq");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHistRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderHistRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHistRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NewPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NewQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OriginalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHistRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NewPrice {
            get {
                return this.NewPriceField;
            }
            set {
                if ((this.NewPriceField.Equals(value) != true)) {
                    this.NewPriceField = value;
                    this.RaisePropertyChanged("NewPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NewQty {
            get {
                return this.NewQtyField;
            }
            set {
                if ((this.NewQtyField.Equals(value) != true)) {
                    this.NewQtyField = value;
                    this.RaisePropertyChanged("NewQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OriginalPrice {
            get {
                return this.OriginalPriceField;
            }
            set {
                if ((this.OriginalPriceField.Equals(value) != true)) {
                    this.OriginalPriceField = value;
                    this.RaisePropertyChanged("OriginalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderMscRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderMscRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChangeTrackAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChangeTrackApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeTrackMemoDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeTrackMemoTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeTrackStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderMscRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreqCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPOLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPOSeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuotingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChangeTrackAmount {
            get {
                return this.ChangeTrackAmountField;
            }
            set {
                if ((this.ChangeTrackAmountField.Equals(value) != true)) {
                    this.ChangeTrackAmountField = value;
                    this.RaisePropertyChanged("ChangeTrackAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangeTrackApproved {
            get {
                return this.ChangeTrackApprovedField;
            }
            set {
                if ((this.ChangeTrackApprovedField.Equals(value) != true)) {
                    this.ChangeTrackApprovedField = value;
                    this.RaisePropertyChanged("ChangeTrackApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeTrackMemoDesc {
            get {
                return this.ChangeTrackMemoDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackMemoDescField, value) != true)) {
                    this.ChangeTrackMemoDescField = value;
                    this.RaisePropertyChanged("ChangeTrackMemoDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeTrackMemoText {
            get {
                return this.ChangeTrackMemoTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackMemoTextField, value) != true)) {
                    this.ChangeTrackMemoTextField = value;
                    this.RaisePropertyChanged("ChangeTrackMemoText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeTrackStatus {
            get {
                return this.ChangeTrackStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTrackStatusField, value) != true)) {
                    this.ChangeTrackStatusField = value;
                    this.RaisePropertyChanged("ChangeTrackStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderMscRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrSymbol {
            get {
                return this.CurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrSymbolField, value) != true)) {
                    this.CurrSymbolField = value;
                    this.RaisePropertyChanged("CurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDspMiscAmt {
            get {
                return this.DocDspMiscAmtField;
            }
            set {
                if ((this.DocDspMiscAmtField.Equals(value) != true)) {
                    this.DocDspMiscAmtField = value;
                    this.RaisePropertyChanged("DocDspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInMiscAmt {
            get {
                return this.DocInMiscAmtField;
            }
            set {
                if ((this.DocInMiscAmtField.Equals(value) != true)) {
                    this.DocInMiscAmtField = value;
                    this.RaisePropertyChanged("DocInMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMiscAmt {
            get {
                return this.DocMiscAmtField;
            }
            set {
                if ((this.DocMiscAmtField.Equals(value) != true)) {
                    this.DocMiscAmtField = value;
                    this.RaisePropertyChanged("DocMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspMiscAmt {
            get {
                return this.DspMiscAmtField;
            }
            set {
                if ((this.DspMiscAmtField.Equals(value) != true)) {
                    this.DspMiscAmtField = value;
                    this.RaisePropertyChanged("DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryProcess {
            get {
                return this.EntryProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryProcessField, value) != true)) {
                    this.EntryProcessField = value;
                    this.RaisePropertyChanged("EntryProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreqCode {
            get {
                return this.FreqCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FreqCodeField, value) != true)) {
                    this.FreqCodeField = value;
                    this.RaisePropertyChanged("FreqCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPOLine {
            get {
                return this.ICPOLineField;
            }
            set {
                if ((this.ICPOLineField.Equals(value) != true)) {
                    this.ICPOLineField = value;
                    this.RaisePropertyChanged("ICPOLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPONum {
            get {
                return this.ICPONumField;
            }
            set {
                if ((this.ICPONumField.Equals(value) != true)) {
                    this.ICPONumField = value;
                    this.RaisePropertyChanged("ICPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPOSeqNum {
            get {
                return this.ICPOSeqNumField;
            }
            set {
                if ((this.ICPOSeqNumField.Equals(value) != true)) {
                    this.ICPOSeqNumField = value;
                    this.RaisePropertyChanged("ICPOSeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InMiscAmt {
            get {
                return this.InMiscAmtField;
            }
            set {
                if ((this.InMiscAmtField.Equals(value) != true)) {
                    this.InMiscAmtField = value;
                    this.RaisePropertyChanged("InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscAmt {
            get {
                return this.MiscAmtField;
            }
            set {
                if ((this.MiscAmtField.Equals(value) != true)) {
                    this.MiscAmtField = value;
                    this.RaisePropertyChanged("MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeDescription {
            get {
                return this.MiscCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeDescriptionField, value) != true)) {
                    this.MiscCodeDescriptionField = value;
                    this.RaisePropertyChanged("MiscCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenLine {
            get {
                return this.OpenLineField;
            }
            set {
                if ((this.OpenLineField.Equals(value) != true)) {
                    this.OpenLineField = value;
                    this.RaisePropertyChanged("OpenLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineLineDesc {
            get {
                return this.OrderLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineLineDescField, value) != true)) {
                    this.OrderLineLineDescField = value;
                    this.RaisePropertyChanged("OrderLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quoting {
            get {
                return this.QuotingField;
            }
            set {
                if ((object.ReferenceEquals(this.QuotingField, value) != true)) {
                    this.QuotingField = value;
                    this.RaisePropertyChanged("Quoting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DspMiscAmt {
            get {
                return this.Rpt1DspMiscAmtField;
            }
            set {
                if ((this.Rpt1DspMiscAmtField.Equals(value) != true)) {
                    this.Rpt1DspMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InMiscAmt {
            get {
                return this.Rpt1InMiscAmtField;
            }
            set {
                if ((this.Rpt1InMiscAmtField.Equals(value) != true)) {
                    this.Rpt1InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1MiscAmt {
            get {
                return this.Rpt1MiscAmtField;
            }
            set {
                if ((this.Rpt1MiscAmtField.Equals(value) != true)) {
                    this.Rpt1MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt1MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DspMiscAmt {
            get {
                return this.Rpt2DspMiscAmtField;
            }
            set {
                if ((this.Rpt2DspMiscAmtField.Equals(value) != true)) {
                    this.Rpt2DspMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InMiscAmt {
            get {
                return this.Rpt2InMiscAmtField;
            }
            set {
                if ((this.Rpt2InMiscAmtField.Equals(value) != true)) {
                    this.Rpt2InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2MiscAmt {
            get {
                return this.Rpt2MiscAmtField;
            }
            set {
                if ((this.Rpt2MiscAmtField.Equals(value) != true)) {
                    this.Rpt2MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt2MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DspMiscAmt {
            get {
                return this.Rpt3DspMiscAmtField;
            }
            set {
                if ((this.Rpt3DspMiscAmtField.Equals(value) != true)) {
                    this.Rpt3DspMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InMiscAmt {
            get {
                return this.Rpt3InMiscAmtField;
            }
            set {
                if ((this.Rpt3InMiscAmtField.Equals(value) != true)) {
                    this.Rpt3InMiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3MiscAmt {
            get {
                return this.Rpt3MiscAmtField;
            }
            set {
                if ((this.Rpt3MiscAmtField.Equals(value) != true)) {
                    this.Rpt3MiscAmtField = value;
                    this.RaisePropertyChanged("Rpt3MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderRelRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderRelRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowTaxCodeUpdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BuyOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BuyToOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChrgAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderRelRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplianceMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditLimitMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditLimitSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CumeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CumeQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustAllowOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustomerAllowShipTo3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatePickTicketPrintedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DemandSchedRejectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisablePlantWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocSelfAssessTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocWithholdTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DockingStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DropShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspInvMethField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspRevMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableBuyToOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableMakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityUseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExistPOSuggField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FirmReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GetDfltTaxIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazmatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HdrOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPOLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitDisableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkToContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkToPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MakeOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkForAddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkForNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotCompliantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotifyEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFCountryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OTMFCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCntryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OTSCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSCustSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSResaleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSSaveAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSSaveCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSTaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurJobQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurJobShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurReqQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurStockQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurStockShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideCarrierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverrideServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhaseWasRecInvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PickErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrevNeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrevPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrevReqDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrevSellQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrevShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrevXPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PurPointPrimPConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToFulfillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReqDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1SelfAssessTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1WithholdTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2SelfAssessTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2WithholdTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3SelfAssessTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3WithholdTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SNEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SalesOrderLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectForPickingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SelfAssessTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingJobQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingJobShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingReqQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingStockQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingStockShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServAuthNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServHomeDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServInstructField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServPODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipOversField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipRoutingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToAddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactEMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipToSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipbyTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShpConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StagingBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StagingWarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubShipToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPShipToBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPShipToCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPShipToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxConnectCalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThisRelInvtyQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalJobStockShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransportIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateMarkForRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseOTMFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerbalConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WIItemPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WIItemShipCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIOrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WasRecInvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebSKUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WithholdTaxField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowTaxCodeUpd {
            get {
                return this.AllowTaxCodeUpdField;
            }
            set {
                if ((this.AllowTaxCodeUpdField.Equals(value) != true)) {
                    this.AllowTaxCodeUpdField = value;
                    this.RaisePropertyChanged("AllowTaxCodeUpd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyChrg {
            get {
                return this.ApplyChrgField;
            }
            set {
                if ((this.ApplyChrgField.Equals(value) != true)) {
                    this.ApplyChrgField = value;
                    this.RaisePropertyChanged("ApplyChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableQuantity {
            get {
                return this.AvailableQuantityField;
            }
            set {
                if ((this.AvailableQuantityField.Equals(value) != true)) {
                    this.AvailableQuantityField = value;
                    this.RaisePropertyChanged("AvailableQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BuyOverride {
            get {
                return this.BuyOverrideField;
            }
            set {
                if ((this.BuyOverrideField.Equals(value) != true)) {
                    this.BuyOverrideField = value;
                    this.RaisePropertyChanged("BuyOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BuyToOrder {
            get {
                return this.BuyToOrderField;
            }
            set {
                if ((this.BuyToOrderField.Equals(value) != true)) {
                    this.BuyToOrderField = value;
                    this.RaisePropertyChanged("BuyToOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COD {
            get {
                return this.CODField;
            }
            set {
                if ((this.CODField.Equals(value) != true)) {
                    this.CODField = value;
                    this.RaisePropertyChanged("COD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFreight {
            get {
                return this.CODFreightField;
            }
            set {
                if ((this.CODFreightField.Equals(value) != true)) {
                    this.CODFreightField = value;
                    this.RaisePropertyChanged("CODFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChrgAmount {
            get {
                return this.ChrgAmountField;
            }
            set {
                if ((this.ChrgAmountField.Equals(value) != true)) {
                    this.ChrgAmountField = value;
                    this.RaisePropertyChanged("ChrgAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderRelRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplianceMsg {
            get {
                return this.ComplianceMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplianceMsgField, value) != true)) {
                    this.ComplianceMsgField = value;
                    this.RaisePropertyChanged("ComplianceMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractIDField, value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditLimitMessage {
            get {
                return this.CreditLimitMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditLimitMessageField, value) != true)) {
                    this.CreditLimitMessageField = value;
                    this.RaisePropertyChanged("CreditLimitMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditLimitSource {
            get {
                return this.CreditLimitSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditLimitSourceField, value) != true)) {
                    this.CreditLimitSourceField = value;
                    this.RaisePropertyChanged("CreditLimitSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CumeDate {
            get {
                return this.CumeDateField;
            }
            set {
                if ((this.CumeDateField.Equals(value) != true)) {
                    this.CumeDateField = value;
                    this.RaisePropertyChanged("CumeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CumeQty {
            get {
                return this.CumeQtyField;
            }
            set {
                if ((this.CumeQtyField.Equals(value) != true)) {
                    this.CumeQtyField = value;
                    this.RaisePropertyChanged("CumeQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustAllowOTS {
            get {
                return this.CustAllowOTSField;
            }
            set {
                if ((this.CustAllowOTSField.Equals(value) != true)) {
                    this.CustAllowOTSField = value;
                    this.RaisePropertyChanged("CustAllowOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustomerAllowShipTo3 {
            get {
                return this.CustomerAllowShipTo3Field;
            }
            set {
                if ((this.CustomerAllowShipTo3Field.Equals(value) != true)) {
                    this.CustomerAllowShipTo3Field = value;
                    this.RaisePropertyChanged("CustomerAllowShipTo3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DatePickTicketPrinted {
            get {
                return this.DatePickTicketPrintedField;
            }
            set {
                if ((this.DatePickTicketPrintedField.Equals(value) != true)) {
                    this.DatePickTicketPrintedField = value;
                    this.RaisePropertyChanged("DatePickTicketPrinted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredIns {
            get {
                return this.DeclaredInsField;
            }
            set {
                if ((this.DeclaredInsField.Equals(value) != true)) {
                    this.DeclaredInsField = value;
                    this.RaisePropertyChanged("DeclaredIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandReference {
            get {
                return this.DemandReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandReferenceField, value) != true)) {
                    this.DemandReferenceField = value;
                    this.RaisePropertyChanged("DemandReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DemandSchedRejected {
            get {
                return this.DemandSchedRejectedField;
            }
            set {
                if ((this.DemandSchedRejectedField.Equals(value) != true)) {
                    this.DemandSchedRejectedField = value;
                    this.RaisePropertyChanged("DemandSchedRejected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisablePlantWhse {
            get {
                return this.DisablePlantWhseField;
            }
            set {
                if ((this.DisablePlantWhseField.Equals(value) != true)) {
                    this.DisablePlantWhseField = value;
                    this.RaisePropertyChanged("DisablePlantWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocOnly {
            get {
                return this.DocOnlyField;
            }
            set {
                if ((this.DocOnlyField.Equals(value) != true)) {
                    this.DocOnlyField = value;
                    this.RaisePropertyChanged("DocOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocSelfAssessTax {
            get {
                return this.DocSelfAssessTaxField;
            }
            set {
                if ((this.DocSelfAssessTaxField.Equals(value) != true)) {
                    this.DocSelfAssessTaxField = value;
                    this.RaisePropertyChanged("DocSelfAssessTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalTax {
            get {
                return this.DocTotalTaxField;
            }
            set {
                if ((this.DocTotalTaxField.Equals(value) != true)) {
                    this.DocTotalTaxField = value;
                    this.RaisePropertyChanged("DocTotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocWithholdTax {
            get {
                return this.DocWithholdTaxField;
            }
            set {
                if ((this.DocWithholdTaxField.Equals(value) != true)) {
                    this.DocWithholdTaxField = value;
                    this.RaisePropertyChanged("DocWithholdTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DockingStation {
            get {
                return this.DockingStationField;
            }
            set {
                if ((object.ReferenceEquals(this.DockingStationField, value) != true)) {
                    this.DockingStationField = value;
                    this.RaisePropertyChanged("DockingStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DropShipName {
            get {
                return this.DropShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DropShipNameField, value) != true)) {
                    this.DropShipNameField = value;
                    this.RaisePropertyChanged("DropShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShipOverride {
            get {
                return this.DropShipOverrideField;
            }
            set {
                if ((this.DropShipOverrideField.Equals(value) != true)) {
                    this.DropShipOverrideField = value;
                    this.RaisePropertyChanged("DropShipOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspInvMeth {
            get {
                return this.DspInvMethField;
            }
            set {
                if ((object.ReferenceEquals(this.DspInvMethField, value) != true)) {
                    this.DspInvMethField = value;
                    this.RaisePropertyChanged("DspInvMeth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspRevMethod {
            get {
                return this.DspRevMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.DspRevMethodField, value) != true)) {
                    this.DspRevMethodField = value;
                    this.RaisePropertyChanged("DspRevMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCPlant {
            get {
                return this.ECCPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCPlantField, value) != true)) {
                    this.ECCPlantField = value;
                    this.RaisePropertyChanged("ECCPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableBuyToOrder {
            get {
                return this.EnableBuyToOrderField;
            }
            set {
                if ((this.EnableBuyToOrderField.Equals(value) != true)) {
                    this.EnableBuyToOrderField = value;
                    this.RaisePropertyChanged("EnableBuyToOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableMake {
            get {
                return this.EnableMakeField;
            }
            set {
                if ((this.EnableMakeField.Equals(value) != true)) {
                    this.EnableMakeField = value;
                    this.RaisePropertyChanged("EnableMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityUseCode {
            get {
                return this.EntityUseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityUseCodeField, value) != true)) {
                    this.EntityUseCodeField = value;
                    this.RaisePropertyChanged("EntityUseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryProcess {
            get {
                return this.EntryProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryProcessField, value) != true)) {
                    this.EntryProcessField = value;
                    this.RaisePropertyChanged("EntryProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExistPOSugg {
            get {
                return this.ExistPOSuggField;
            }
            set {
                if ((this.ExistPOSuggField.Equals(value) != true)) {
                    this.ExistPOSuggField = value;
                    this.RaisePropertyChanged("ExistPOSugg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompany {
            get {
                return this.ExtCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyField, value) != true)) {
                    this.ExtCompanyField = value;
                    this.RaisePropertyChanged("ExtCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FirmRelease {
            get {
                return this.FirmReleaseField;
            }
            set {
                if ((this.FirmReleaseField.Equals(value) != true)) {
                    this.FirmReleaseField = value;
                    this.RaisePropertyChanged("FirmRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetDfltTaxIds {
            get {
                return this.GetDfltTaxIdsField;
            }
            set {
                if ((this.GetDfltTaxIdsField.Equals(value) != true)) {
                    this.GetDfltTaxIdsField = value;
                    this.RaisePropertyChanged("GetDfltTaxIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundType {
            get {
                return this.GroundTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundTypeField, value) != true)) {
                    this.GroundTypeField = value;
                    this.RaisePropertyChanged("GroundType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hazmat {
            get {
                return this.HazmatField;
            }
            set {
                if ((this.HazmatField.Equals(value) != true)) {
                    this.HazmatField = value;
                    this.RaisePropertyChanged("Hazmat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HdrOTS {
            get {
                return this.HdrOTSField;
            }
            set {
                if ((this.HdrOTSField.Equals(value) != true)) {
                    this.HdrOTSField = value;
                    this.RaisePropertyChanged("HdrOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPOLine {
            get {
                return this.ICPOLineField;
            }
            set {
                if ((this.ICPOLineField.Equals(value) != true)) {
                    this.ICPOLineField = value;
                    this.RaisePropertyChanged("ICPOLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPONum {
            get {
                return this.ICPONumField;
            }
            set {
                if ((this.ICPONumField.Equals(value) != true)) {
                    this.ICPONumField = value;
                    this.RaisePropertyChanged("ICPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPORelNum {
            get {
                return this.ICPORelNumField;
            }
            set {
                if ((this.ICPORelNumField.Equals(value) != true)) {
                    this.ICPORelNumField = value;
                    this.RaisePropertyChanged("ICPORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitDisable {
            get {
                return this.KitDisableField;
            }
            set {
                if ((this.KitDisableField.Equals(value) != true)) {
                    this.KitDisableField = value;
                    this.RaisePropertyChanged("KitDisable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineType {
            get {
                return this.LineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LineTypeField, value) != true)) {
                    this.LineTypeField = value;
                    this.RaisePropertyChanged("LineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkToContract {
            get {
                return this.LinkToContractField;
            }
            set {
                if ((this.LinkToContractField.Equals(value) != true)) {
                    this.LinkToContractField = value;
                    this.RaisePropertyChanged("LinkToContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkToPONum {
            get {
                return this.LinkToPONumField;
            }
            set {
                if ((this.LinkToPONumField.Equals(value) != true)) {
                    this.LinkToPONumField = value;
                    this.RaisePropertyChanged("LinkToPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFCustID {
            get {
                return this.MFCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MFCustIDField, value) != true)) {
                    this.MFCustIDField = value;
                    this.RaisePropertyChanged("MFCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFCustNum {
            get {
                return this.MFCustNumField;
            }
            set {
                if ((this.MFCustNumField.Equals(value) != true)) {
                    this.MFCustNumField = value;
                    this.RaisePropertyChanged("MFCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Make {
            get {
                return this.MakeField;
            }
            set {
                if ((this.MakeField.Equals(value) != true)) {
                    this.MakeField = value;
                    this.RaisePropertyChanged("Make");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MakeOverride {
            get {
                return this.MakeOverrideField;
            }
            set {
                if ((this.MakeOverrideField.Equals(value) != true)) {
                    this.MakeOverrideField = value;
                    this.RaisePropertyChanged("MakeOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkForAddrList {
            get {
                return this.MarkForAddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkForAddrListField, value) != true)) {
                    this.MarkForAddrListField = value;
                    this.RaisePropertyChanged("MarkForAddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkForNum {
            get {
                return this.MarkForNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkForNumField, value) != true)) {
                    this.MarkForNumField = value;
                    this.RaisePropertyChanged("MarkForNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NeedByDate {
            get {
                return this.NeedByDateField;
            }
            set {
                if ((this.NeedByDateField.Equals(value) != true)) {
                    this.NeedByDateField = value;
                    this.RaisePropertyChanged("NeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotCompliant {
            get {
                return this.NotCompliantField;
            }
            set {
                if ((this.NotCompliantField.Equals(value) != true)) {
                    this.NotCompliantField = value;
                    this.RaisePropertyChanged("NotCompliant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyEMail {
            get {
                return this.NotifyEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyEMailField, value) != true)) {
                    this.NotifyEMailField = value;
                    this.RaisePropertyChanged("NotifyEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyFlag {
            get {
                return this.NotifyFlagField;
            }
            set {
                if ((this.NotifyFlagField.Equals(value) != true)) {
                    this.NotifyFlagField = value;
                    this.RaisePropertyChanged("NotifyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFAddress1 {
            get {
                return this.OTMFAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFAddress1Field, value) != true)) {
                    this.OTMFAddress1Field = value;
                    this.RaisePropertyChanged("OTMFAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFAddress2 {
            get {
                return this.OTMFAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFAddress2Field, value) != true)) {
                    this.OTMFAddress2Field = value;
                    this.RaisePropertyChanged("OTMFAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFAddress3 {
            get {
                return this.OTMFAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFAddress3Field, value) != true)) {
                    this.OTMFAddress3Field = value;
                    this.RaisePropertyChanged("OTMFAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFCity {
            get {
                return this.OTMFCityField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFCityField, value) != true)) {
                    this.OTMFCityField = value;
                    this.RaisePropertyChanged("OTMFCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFContact {
            get {
                return this.OTMFContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFContactField, value) != true)) {
                    this.OTMFContactField = value;
                    this.RaisePropertyChanged("OTMFContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFCountryDescription {
            get {
                return this.OTMFCountryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFCountryDescriptionField, value) != true)) {
                    this.OTMFCountryDescriptionField = value;
                    this.RaisePropertyChanged("OTMFCountryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OTMFCountryNum {
            get {
                return this.OTMFCountryNumField;
            }
            set {
                if ((this.OTMFCountryNumField.Equals(value) != true)) {
                    this.OTMFCountryNumField = value;
                    this.RaisePropertyChanged("OTMFCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFFaxNum {
            get {
                return this.OTMFFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFFaxNumField, value) != true)) {
                    this.OTMFFaxNumField = value;
                    this.RaisePropertyChanged("OTMFFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFName {
            get {
                return this.OTMFNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFNameField, value) != true)) {
                    this.OTMFNameField = value;
                    this.RaisePropertyChanged("OTMFName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFPhoneNum {
            get {
                return this.OTMFPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFPhoneNumField, value) != true)) {
                    this.OTMFPhoneNumField = value;
                    this.RaisePropertyChanged("OTMFPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFState {
            get {
                return this.OTMFStateField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFStateField, value) != true)) {
                    this.OTMFStateField = value;
                    this.RaisePropertyChanged("OTMFState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFZIP {
            get {
                return this.OTMFZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFZIPField, value) != true)) {
                    this.OTMFZIPField = value;
                    this.RaisePropertyChanged("OTMFZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress1 {
            get {
                return this.OTSAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress1Field, value) != true)) {
                    this.OTSAddress1Field = value;
                    this.RaisePropertyChanged("OTSAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress2 {
            get {
                return this.OTSAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress2Field, value) != true)) {
                    this.OTSAddress2Field = value;
                    this.RaisePropertyChanged("OTSAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress3 {
            get {
                return this.OTSAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress3Field, value) != true)) {
                    this.OTSAddress3Field = value;
                    this.RaisePropertyChanged("OTSAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCity {
            get {
                return this.OTSCityField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCityField, value) != true)) {
                    this.OTSCityField = value;
                    this.RaisePropertyChanged("OTSCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCntryDescription {
            get {
                return this.OTSCntryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCntryDescriptionField, value) != true)) {
                    this.OTSCntryDescriptionField = value;
                    this.RaisePropertyChanged("OTSCntryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSContact {
            get {
                return this.OTSContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSContactField, value) != true)) {
                    this.OTSContactField = value;
                    this.RaisePropertyChanged("OTSContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OTSCountryNum {
            get {
                return this.OTSCountryNumField;
            }
            set {
                if ((this.OTSCountryNumField.Equals(value) != true)) {
                    this.OTSCountryNumField = value;
                    this.RaisePropertyChanged("OTSCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSCustSaved {
            get {
                return this.OTSCustSavedField;
            }
            set {
                if ((this.OTSCustSavedField.Equals(value) != true)) {
                    this.OTSCustSavedField = value;
                    this.RaisePropertyChanged("OTSCustSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSFaxNum {
            get {
                return this.OTSFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSFaxNumField, value) != true)) {
                    this.OTSFaxNumField = value;
                    this.RaisePropertyChanged("OTSFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSName {
            get {
                return this.OTSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSNameField, value) != true)) {
                    this.OTSNameField = value;
                    this.RaisePropertyChanged("OTSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSPhoneNum {
            get {
                return this.OTSPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSPhoneNumField, value) != true)) {
                    this.OTSPhoneNumField = value;
                    this.RaisePropertyChanged("OTSPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSResaleID {
            get {
                return this.OTSResaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSResaleIDField, value) != true)) {
                    this.OTSResaleIDField = value;
                    this.RaisePropertyChanged("OTSResaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSSaveAs {
            get {
                return this.OTSSaveAsField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSSaveAsField, value) != true)) {
                    this.OTSSaveAsField = value;
                    this.RaisePropertyChanged("OTSSaveAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSSaveCustID {
            get {
                return this.OTSSaveCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSSaveCustIDField, value) != true)) {
                    this.OTSSaveCustIDField = value;
                    this.RaisePropertyChanged("OTSSaveCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSSaved {
            get {
                return this.OTSSavedField;
            }
            set {
                if ((this.OTSSavedField.Equals(value) != true)) {
                    this.OTSSavedField = value;
                    this.RaisePropertyChanged("OTSSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSShipToNum {
            get {
                return this.OTSShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSShipToNumField, value) != true)) {
                    this.OTSShipToNumField = value;
                    this.RaisePropertyChanged("OTSShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSState {
            get {
                return this.OTSStateField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSStateField, value) != true)) {
                    this.OTSStateField = value;
                    this.RaisePropertyChanged("OTSState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSTaxRegionCode {
            get {
                return this.OTSTaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSTaxRegionCodeField, value) != true)) {
                    this.OTSTaxRegionCodeField = value;
                    this.RaisePropertyChanged("OTSTaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSZIP {
            get {
                return this.OTSZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSZIPField, value) != true)) {
                    this.OTSZIPField = value;
                    this.RaisePropertyChanged("OTSZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQuantity {
            get {
                return this.OnHandQuantityField;
            }
            set {
                if ((this.OnHandQuantityField.Equals(value) != true)) {
                    this.OnHandQuantityField = value;
                    this.RaisePropertyChanged("OnHandQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenOrder {
            get {
                return this.OpenOrderField;
            }
            set {
                if ((this.OpenOrderField.Equals(value) != true)) {
                    this.OpenOrderField = value;
                    this.RaisePropertyChanged("OpenOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenRelease {
            get {
                return this.OpenReleaseField;
            }
            set {
                if ((this.OpenReleaseField.Equals(value) != true)) {
                    this.OpenReleaseField = value;
                    this.RaisePropertyChanged("OpenRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineLineDesc {
            get {
                return this.OrderLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineLineDescField, value) != true)) {
                    this.OrderLineLineDescField = value;
                    this.RaisePropertyChanged("OrderLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurJobQty {
            get {
                return this.OurJobQtyField;
            }
            set {
                if ((this.OurJobQtyField.Equals(value) != true)) {
                    this.OurJobQtyField = value;
                    this.RaisePropertyChanged("OurJobQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurJobShippedQty {
            get {
                return this.OurJobShippedQtyField;
            }
            set {
                if ((this.OurJobShippedQtyField.Equals(value) != true)) {
                    this.OurJobShippedQtyField = value;
                    this.RaisePropertyChanged("OurJobShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurReqQty {
            get {
                return this.OurReqQtyField;
            }
            set {
                if ((this.OurReqQtyField.Equals(value) != true)) {
                    this.OurReqQtyField = value;
                    this.RaisePropertyChanged("OurReqQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurStockQty {
            get {
                return this.OurStockQtyField;
            }
            set {
                if ((this.OurStockQtyField.Equals(value) != true)) {
                    this.OurStockQtyField = value;
                    this.RaisePropertyChanged("OurStockQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurStockShippedQty {
            get {
                return this.OurStockShippedQtyField;
            }
            set {
                if ((this.OurStockShippedQtyField.Equals(value) != true)) {
                    this.OurStockShippedQtyField = value;
                    this.RaisePropertyChanged("OurStockShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideCarrier {
            get {
                return this.OverrideCarrierField;
            }
            set {
                if ((this.OverrideCarrierField.Equals(value) != true)) {
                    this.OverrideCarrierField = value;
                    this.RaisePropertyChanged("OverrideCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverrideService {
            get {
                return this.OverrideServiceField;
            }
            set {
                if ((this.OverrideServiceField.Equals(value) != true)) {
                    this.OverrideServiceField = value;
                    this.RaisePropertyChanged("OverrideService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartExists {
            get {
                return this.PartExistsField;
            }
            set {
                if ((this.PartExistsField.Equals(value) != true)) {
                    this.PartExistsField = value;
                    this.RaisePropertyChanged("PartExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhaseID {
            get {
                return this.PhaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PhaseIDField, value) != true)) {
                    this.PhaseIDField = value;
                    this.RaisePropertyChanged("PhaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhaseWasRecInvoiced {
            get {
                return this.PhaseWasRecInvoicedField;
            }
            set {
                if ((this.PhaseWasRecInvoicedField.Equals(value) != true)) {
                    this.PhaseWasRecInvoicedField = value;
                    this.RaisePropertyChanged("PhaseWasRecInvoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PickError {
            get {
                return this.PickErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.PickErrorField, value) != true)) {
                    this.PickErrorField = value;
                    this.RaisePropertyChanged("PickError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrevNeedByDate {
            get {
                return this.PrevNeedByDateField;
            }
            set {
                if ((this.PrevNeedByDateField.Equals(value) != true)) {
                    this.PrevNeedByDateField = value;
                    this.RaisePropertyChanged("PrevNeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevPartNum {
            get {
                return this.PrevPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevPartNumField, value) != true)) {
                    this.PrevPartNumField = value;
                    this.RaisePropertyChanged("PrevPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrevReqDate {
            get {
                return this.PrevReqDateField;
            }
            set {
                if ((this.PrevReqDateField.Equals(value) != true)) {
                    this.PrevReqDateField = value;
                    this.RaisePropertyChanged("PrevReqDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PrevSellQty {
            get {
                return this.PrevSellQtyField;
            }
            set {
                if ((this.PrevSellQtyField.Equals(value) != true)) {
                    this.PrevSellQtyField = value;
                    this.RaisePropertyChanged("PrevSellQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevShipToNum {
            get {
                return this.PrevShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevShipToNumField, value) != true)) {
                    this.PrevShipToNumField = value;
                    this.RaisePropertyChanged("PrevShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevXPartNum {
            get {
                return this.PrevXPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevXPartNumField, value) != true)) {
                    this.PrevXPartNumField = value;
                    this.RaisePropertyChanged("PrevXPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress1 {
            get {
                return this.PurPointAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress1Field, value) != true)) {
                    this.PurPointAddress1Field = value;
                    this.RaisePropertyChanged("PurPointAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress2 {
            get {
                return this.PurPointAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress2Field, value) != true)) {
                    this.PurPointAddress2Field = value;
                    this.RaisePropertyChanged("PurPointAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress3 {
            get {
                return this.PurPointAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress3Field, value) != true)) {
                    this.PurPointAddress3Field = value;
                    this.RaisePropertyChanged("PurPointAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointCity {
            get {
                return this.PurPointCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointCityField, value) != true)) {
                    this.PurPointCityField = value;
                    this.RaisePropertyChanged("PurPointCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointCountry {
            get {
                return this.PurPointCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointCountryField, value) != true)) {
                    this.PurPointCountryField = value;
                    this.RaisePropertyChanged("PurPointCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointName {
            get {
                return this.PurPointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointNameField, value) != true)) {
                    this.PurPointNameField = value;
                    this.RaisePropertyChanged("PurPointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PurPointPrimPCon {
            get {
                return this.PurPointPrimPConField;
            }
            set {
                if ((this.PurPointPrimPConField.Equals(value) != true)) {
                    this.PurPointPrimPConField = value;
                    this.RaisePropertyChanged("PurPointPrimPCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointState {
            get {
                return this.PurPointStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointStateField, value) != true)) {
                    this.PurPointStateField = value;
                    this.RaisePropertyChanged("PurPointState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointZip {
            get {
                return this.PurPointZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointZipField, value) != true)) {
                    this.PurPointZipField = value;
                    this.RaisePropertyChanged("PurPointZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RAN {
            get {
                return this.RANField;
            }
            set {
                if ((object.ReferenceEquals(this.RANField, value) != true)) {
                    this.RANField = value;
                    this.RaisePropertyChanged("RAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToFulfill {
            get {
                return this.ReadyToFulfillField;
            }
            set {
                if ((this.ReadyToFulfillField.Equals(value) != true)) {
                    this.ReadyToFulfillField = value;
                    this.RaisePropertyChanged("ReadyToFulfill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNotes {
            get {
                return this.RefNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNotesField, value) != true)) {
                    this.RefNotesField = value;
                    this.RaisePropertyChanged("RefNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelStatus {
            get {
                return this.RelStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RelStatusField, value) != true)) {
                    this.RelStatusField = value;
                    this.RaisePropertyChanged("RelStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseStatus {
            get {
                return this.ReleaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseStatusField, value) != true)) {
                    this.ReleaseStatusField = value;
                    this.RaisePropertyChanged("ReleaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReqDate {
            get {
                return this.ReqDateField;
            }
            set {
                if ((this.ReqDateField.Equals(value) != true)) {
                    this.ReqDateField = value;
                    this.RaisePropertyChanged("ReqDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResDelivery {
            get {
                return this.ResDeliveryField;
            }
            set {
                if ((this.ResDeliveryField.Equals(value) != true)) {
                    this.ResDeliveryField = value;
                    this.RaisePropertyChanged("ResDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1SelfAssessTax {
            get {
                return this.Rpt1SelfAssessTaxField;
            }
            set {
                if ((this.Rpt1SelfAssessTaxField.Equals(value) != true)) {
                    this.Rpt1SelfAssessTaxField = value;
                    this.RaisePropertyChanged("Rpt1SelfAssessTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalTax {
            get {
                return this.Rpt1TotalTaxField;
            }
            set {
                if ((this.Rpt1TotalTaxField.Equals(value) != true)) {
                    this.Rpt1TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1WithholdTax {
            get {
                return this.Rpt1WithholdTaxField;
            }
            set {
                if ((this.Rpt1WithholdTaxField.Equals(value) != true)) {
                    this.Rpt1WithholdTaxField = value;
                    this.RaisePropertyChanged("Rpt1WithholdTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2SelfAssessTax {
            get {
                return this.Rpt2SelfAssessTaxField;
            }
            set {
                if ((this.Rpt2SelfAssessTaxField.Equals(value) != true)) {
                    this.Rpt2SelfAssessTaxField = value;
                    this.RaisePropertyChanged("Rpt2SelfAssessTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalTax {
            get {
                return this.Rpt2TotalTaxField;
            }
            set {
                if ((this.Rpt2TotalTaxField.Equals(value) != true)) {
                    this.Rpt2TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2WithholdTax {
            get {
                return this.Rpt2WithholdTaxField;
            }
            set {
                if ((this.Rpt2WithholdTaxField.Equals(value) != true)) {
                    this.Rpt2WithholdTaxField = value;
                    this.RaisePropertyChanged("Rpt2WithholdTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3SelfAssessTax {
            get {
                return this.Rpt3SelfAssessTaxField;
            }
            set {
                if ((this.Rpt3SelfAssessTaxField.Equals(value) != true)) {
                    this.Rpt3SelfAssessTaxField = value;
                    this.RaisePropertyChanged("Rpt3SelfAssessTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalTax {
            get {
                return this.Rpt3TotalTaxField;
            }
            set {
                if ((this.Rpt3TotalTaxField.Equals(value) != true)) {
                    this.Rpt3TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3WithholdTax {
            get {
                return this.Rpt3WithholdTaxField;
            }
            set {
                if ((this.Rpt3WithholdTaxField.Equals(value) != true)) {
                    this.Rpt3WithholdTaxField = value;
                    this.RaisePropertyChanged("Rpt3WithholdTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SNEnable {
            get {
                return this.SNEnableField;
            }
            set {
                if ((this.SNEnableField.Equals(value) != true)) {
                    this.SNEnableField = value;
                    this.RaisePropertyChanged("SNEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SalesOrderLinked {
            get {
                return this.SalesOrderLinkedField;
            }
            set {
                if ((this.SalesOrderLinkedField.Equals(value) != true)) {
                    this.SalesOrderLinkedField = value;
                    this.RaisePropertyChanged("SalesOrderLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatDelivery {
            get {
                return this.SatDeliveryField;
            }
            set {
                if ((this.SatDeliveryField.Equals(value) != true)) {
                    this.SatDeliveryField = value;
                    this.RaisePropertyChanged("SatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatPickup {
            get {
                return this.SatPickupField;
            }
            set {
                if ((this.SatPickupField.Equals(value) != true)) {
                    this.SatPickupField = value;
                    this.RaisePropertyChanged("SatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleNumber {
            get {
                return this.ScheduleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleNumberField, value) != true)) {
                    this.ScheduleNumberField = value;
                    this.RaisePropertyChanged("ScheduleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SelectForPicking {
            get {
                return this.SelectForPickingField;
            }
            set {
                if ((this.SelectForPickingField.Equals(value) != true)) {
                    this.SelectForPickingField = value;
                    this.RaisePropertyChanged("SelectForPicking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SelfAssessTax {
            get {
                return this.SelfAssessTaxField;
            }
            set {
                if ((this.SelfAssessTaxField.Equals(value) != true)) {
                    this.SelfAssessTaxField = value;
                    this.RaisePropertyChanged("SelfAssessTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingFactor {
            get {
                return this.SellingFactorField;
            }
            set {
                if ((this.SellingFactorField.Equals(value) != true)) {
                    this.SellingFactorField = value;
                    this.RaisePropertyChanged("SellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingFactorDirection {
            get {
                return this.SellingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingFactorDirectionField, value) != true)) {
                    this.SellingFactorDirectionField = value;
                    this.RaisePropertyChanged("SellingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingJobQty {
            get {
                return this.SellingJobQtyField;
            }
            set {
                if ((this.SellingJobQtyField.Equals(value) != true)) {
                    this.SellingJobQtyField = value;
                    this.RaisePropertyChanged("SellingJobQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingJobShippedQty {
            get {
                return this.SellingJobShippedQtyField;
            }
            set {
                if ((this.SellingJobShippedQtyField.Equals(value) != true)) {
                    this.SellingJobShippedQtyField = value;
                    this.RaisePropertyChanged("SellingJobShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingReqQty {
            get {
                return this.SellingReqQtyField;
            }
            set {
                if ((this.SellingReqQtyField.Equals(value) != true)) {
                    this.SellingReqQtyField = value;
                    this.RaisePropertyChanged("SellingReqQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingStockQty {
            get {
                return this.SellingStockQtyField;
            }
            set {
                if ((this.SellingStockQtyField.Equals(value) != true)) {
                    this.SellingStockQtyField = value;
                    this.RaisePropertyChanged("SellingStockQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingStockShippedQty {
            get {
                return this.SellingStockShippedQtyField;
            }
            set {
                if ((this.SellingStockShippedQtyField.Equals(value) != true)) {
                    this.SellingStockShippedQtyField = value;
                    this.RaisePropertyChanged("SellingStockShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAOD {
            get {
                return this.ServAODField;
            }
            set {
                if ((this.ServAODField.Equals(value) != true)) {
                    this.ServAODField = value;
                    this.RaisePropertyChanged("ServAOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAlert {
            get {
                return this.ServAlertField;
            }
            set {
                if ((this.ServAlertField.Equals(value) != true)) {
                    this.ServAlertField = value;
                    this.RaisePropertyChanged("ServAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServAuthNum {
            get {
                return this.ServAuthNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ServAuthNumField, value) != true)) {
                    this.ServAuthNumField = value;
                    this.RaisePropertyChanged("ServAuthNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServDeliveryDate {
            get {
                return this.ServDeliveryDateField;
            }
            set {
                if ((this.ServDeliveryDateField.Equals(value) != true)) {
                    this.ServDeliveryDateField = value;
                    this.RaisePropertyChanged("ServDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServHomeDel {
            get {
                return this.ServHomeDelField;
            }
            set {
                if ((this.ServHomeDelField.Equals(value) != true)) {
                    this.ServHomeDelField = value;
                    this.RaisePropertyChanged("ServHomeDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServInstruct {
            get {
                return this.ServInstructField;
            }
            set {
                if ((object.ReferenceEquals(this.ServInstructField, value) != true)) {
                    this.ServInstructField = value;
                    this.RaisePropertyChanged("ServInstruct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServPOD {
            get {
                return this.ServPODField;
            }
            set {
                if ((this.ServPODField.Equals(value) != true)) {
                    this.ServPODField = value;
                    this.RaisePropertyChanged("ServPOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServPhone {
            get {
                return this.ServPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServPhoneField, value) != true)) {
                    this.ServPhoneField = value;
                    this.RaisePropertyChanged("ServPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef1 {
            get {
                return this.ServRef1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef1Field, value) != true)) {
                    this.ServRef1Field = value;
                    this.RaisePropertyChanged("ServRef1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef2 {
            get {
                return this.ServRef2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef2Field, value) != true)) {
                    this.ServRef2Field = value;
                    this.RaisePropertyChanged("ServRef2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef3 {
            get {
                return this.ServRef3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef3Field, value) != true)) {
                    this.ServRef3Field = value;
                    this.RaisePropertyChanged("ServRef3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef4 {
            get {
                return this.ServRef4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef4Field, value) != true)) {
                    this.ServRef4Field = value;
                    this.RaisePropertyChanged("ServRef4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef5 {
            get {
                return this.ServRef5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef5Field, value) != true)) {
                    this.ServRef5Field = value;
                    this.RaisePropertyChanged("ServRef5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServRelease {
            get {
                return this.ServReleaseField;
            }
            set {
                if ((this.ServReleaseField.Equals(value) != true)) {
                    this.ServReleaseField = value;
                    this.RaisePropertyChanged("ServRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatDelivery {
            get {
                return this.ServSatDeliveryField;
            }
            set {
                if ((this.ServSatDeliveryField.Equals(value) != true)) {
                    this.ServSatDeliveryField = value;
                    this.RaisePropertyChanged("ServSatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatPickup {
            get {
                return this.ServSatPickupField;
            }
            set {
                if ((this.ServSatPickupField.Equals(value) != true)) {
                    this.ServSatPickupField = value;
                    this.RaisePropertyChanged("ServSatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSignature {
            get {
                return this.ServSignatureField;
            }
            set {
                if ((this.ServSignatureField.Equals(value) != true)) {
                    this.ServSignatureField = value;
                    this.RaisePropertyChanged("ServSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipOvers {
            get {
                return this.ShipOversField;
            }
            set {
                if ((this.ShipOversField.Equals(value) != true)) {
                    this.ShipOversField = value;
                    this.RaisePropertyChanged("ShipOvers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipRouting {
            get {
                return this.ShipRoutingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipRoutingField, value) != true)) {
                    this.ShipRoutingField = value;
                    this.RaisePropertyChanged("ShipRouting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddressList {
            get {
                return this.ShipToAddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddressListField, value) != true)) {
                    this.ShipToAddressListField = value;
                    this.RaisePropertyChanged("ShipToAddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactEMailAddress {
            get {
                return this.ShipToContactEMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactEMailAddressField, value) != true)) {
                    this.ShipToContactEMailAddressField = value;
                    this.RaisePropertyChanged("ShipToContactEMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContactName {
            get {
                return this.ShipToContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContactNameField, value) != true)) {
                    this.ShipToContactNameField = value;
                    this.RaisePropertyChanged("ShipToContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipToSelected {
            get {
                return this.ShipToSelectedField;
            }
            set {
                if ((this.ShipToSelectedField.Equals(value) != true)) {
                    this.ShipToSelectedField = value;
                    this.RaisePropertyChanged("ShipToSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipbyTime {
            get {
                return this.ShipbyTimeField;
            }
            set {
                if ((this.ShipbyTimeField.Equals(value) != true)) {
                    this.ShipbyTimeField = value;
                    this.RaisePropertyChanged("ShipbyTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShpConNum {
            get {
                return this.ShpConNumField;
            }
            set {
                if ((this.ShpConNumField.Equals(value) != true)) {
                    this.ShpConNumField = value;
                    this.RaisePropertyChanged("ShpConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StagingBinNum {
            get {
                return this.StagingBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.StagingBinNumField, value) != true)) {
                    this.StagingBinNumField = value;
                    this.RaisePropertyChanged("StagingBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StagingWarehouseCode {
            get {
                return this.StagingWarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StagingWarehouseCodeField, value) != true)) {
                    this.StagingWarehouseCodeField = value;
                    this.RaisePropertyChanged("StagingWarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubShipTo {
            get {
                return this.SubShipToField;
            }
            set {
                if ((object.ReferenceEquals(this.SubShipToField, value) != true)) {
                    this.SubShipToField = value;
                    this.RaisePropertyChanged("SubShipTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPShipToBTName {
            get {
                return this.TPShipToBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TPShipToBTNameField, value) != true)) {
                    this.TPShipToBTNameField = value;
                    this.RaisePropertyChanged("TPShipToBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPShipToCustID {
            get {
                return this.TPShipToCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TPShipToCustIDField, value) != true)) {
                    this.TPShipToCustIDField = value;
                    this.RaisePropertyChanged("TPShipToCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPShipToName {
            get {
                return this.TPShipToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TPShipToNameField, value) != true)) {
                    this.TPShipToNameField = value;
                    this.RaisePropertyChanged("TPShipToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TaxConnectCalc {
            get {
                return this.TaxConnectCalcField;
            }
            set {
                if ((this.TaxConnectCalcField.Equals(value) != true)) {
                    this.TaxConnectCalcField = value;
                    this.RaisePropertyChanged("TaxConnectCalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCodeDescription {
            get {
                return this.TaxRegionCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeDescriptionField, value) != true)) {
                    this.TaxRegionCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThisRelInvtyQty {
            get {
                return this.ThisRelInvtyQtyField;
            }
            set {
                if ((this.ThisRelInvtyQtyField.Equals(value) != true)) {
                    this.ThisRelInvtyQtyField = value;
                    this.RaisePropertyChanged("ThisRelInvtyQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalJobStockShipped {
            get {
                return this.TotalJobStockShippedField;
            }
            set {
                if ((this.TotalJobStockShippedField.Equals(value) != true)) {
                    this.TotalJobStockShippedField = value;
                    this.RaisePropertyChanged("TotalJobStockShipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalTax {
            get {
                return this.TotalTaxField;
            }
            set {
                if ((this.TotalTaxField.Equals(value) != true)) {
                    this.TotalTaxField = value;
                    this.RaisePropertyChanged("TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransportID {
            get {
                return this.TransportIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransportIDField, value) != true)) {
                    this.TransportIDField = value;
                    this.RaisePropertyChanged("TransportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateMarkForRecords {
            get {
                return this.UpdateMarkForRecordsField;
            }
            set {
                if ((this.UpdateMarkForRecordsField.Equals(value) != true)) {
                    this.UpdateMarkForRecordsField = value;
                    this.RaisePropertyChanged("UpdateMarkForRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseOTMF {
            get {
                return this.UseOTMFField;
            }
            set {
                if ((this.UseOTMFField.Equals(value) != true)) {
                    this.UseOTMFField = value;
                    this.RaisePropertyChanged("UseOTMF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseOTS {
            get {
                return this.UseOTSField;
            }
            set {
                if ((this.UseOTSField.Equals(value) != true)) {
                    this.UseOTSField = value;
                    this.RaisePropertyChanged("UseOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress1 {
            get {
                return this.VendorNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress1Field, value) != true)) {
                    this.VendorNumAddress1Field = value;
                    this.RaisePropertyChanged("VendorNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress2 {
            get {
                return this.VendorNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress2Field, value) != true)) {
                    this.VendorNumAddress2Field = value;
                    this.RaisePropertyChanged("VendorNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress3 {
            get {
                return this.VendorNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress3Field, value) != true)) {
                    this.VendorNumAddress3Field = value;
                    this.RaisePropertyChanged("VendorNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCity {
            get {
                return this.VendorNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCityField, value) != true)) {
                    this.VendorNumCityField = value;
                    this.RaisePropertyChanged("VendorNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCountry {
            get {
                return this.VendorNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCountryField, value) != true)) {
                    this.VendorNumCountryField = value;
                    this.RaisePropertyChanged("VendorNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCurrencyCode {
            get {
                return this.VendorNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCurrencyCodeField, value) != true)) {
                    this.VendorNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumDefaultFOB {
            get {
                return this.VendorNumDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumDefaultFOBField, value) != true)) {
                    this.VendorNumDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorNumDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName {
            get {
                return this.VendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumNameField, value) != true)) {
                    this.VendorNumNameField = value;
                    this.RaisePropertyChanged("VendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumState {
            get {
                return this.VendorNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumStateField, value) != true)) {
                    this.VendorNumStateField = value;
                    this.RaisePropertyChanged("VendorNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumTermsCode {
            get {
                return this.VendorNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumTermsCodeField, value) != true)) {
                    this.VendorNumTermsCodeField = value;
                    this.RaisePropertyChanged("VendorNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumVendorID {
            get {
                return this.VendorNumVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumVendorIDField, value) != true)) {
                    this.VendorNumVendorIDField = value;
                    this.RaisePropertyChanged("VendorNumVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumZIP {
            get {
                return this.VendorNumZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumZIPField, value) != true)) {
                    this.VendorNumZIPField = value;
                    this.RaisePropertyChanged("VendorNumZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerbalConf {
            get {
                return this.VerbalConfField;
            }
            set {
                if ((this.VerbalConfField.Equals(value) != true)) {
                    this.VerbalConfField = value;
                    this.RaisePropertyChanged("VerbalConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidOrder {
            get {
                return this.VoidOrderField;
            }
            set {
                if ((this.VoidOrderField.Equals(value) != true)) {
                    this.VoidOrderField = value;
                    this.RaisePropertyChanged("VoidOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidRelease {
            get {
                return this.VoidReleaseField;
            }
            set {
                if ((this.VoidReleaseField.Equals(value) != true)) {
                    this.VoidReleaseField = value;
                    this.RaisePropertyChanged("VoidRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WIItemPrice {
            get {
                return this.WIItemPriceField;
            }
            set {
                if ((this.WIItemPriceField.Equals(value) != true)) {
                    this.WIItemPriceField = value;
                    this.RaisePropertyChanged("WIItemPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WIItemShipCost {
            get {
                return this.WIItemShipCostField;
            }
            set {
                if ((this.WIItemShipCostField.Equals(value) != true)) {
                    this.WIItemShipCostField = value;
                    this.RaisePropertyChanged("WIItemShipCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIOrder {
            get {
                return this.WIOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.WIOrderField, value) != true)) {
                    this.WIOrderField = value;
                    this.RaisePropertyChanged("WIOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIOrderLine {
            get {
                return this.WIOrderLineField;
            }
            set {
                if ((object.ReferenceEquals(this.WIOrderLineField, value) != true)) {
                    this.WIOrderLineField = value;
                    this.RaisePropertyChanged("WIOrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCodeDescription {
            get {
                return this.WarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeDescriptionField, value) != true)) {
                    this.WarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WasRecInvoiced {
            get {
                return this.WasRecInvoicedField;
            }
            set {
                if ((this.WasRecInvoicedField.Equals(value) != true)) {
                    this.WasRecInvoicedField = value;
                    this.RaisePropertyChanged("WasRecInvoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSKU {
            get {
                return this.WebSKUField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSKUField, value) != true)) {
                    this.WebSKUField = value;
                    this.RaisePropertyChanged("WebSKU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WithholdTax {
            get {
                return this.WithholdTaxField;
            }
            set {
                if ((this.WithholdTaxField.Equals(value) != true)) {
                    this.WithholdTaxField = value;
                    this.RaisePropertyChanged("WithholdTax");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderRelTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderRelTaxRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollectionTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderRelTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoChangeManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesTaxDescDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionTypeDescription {
            get {
                return this.CollectionTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionTypeDescriptionField, value) != true)) {
                    this.CollectionTypeDescriptionField = value;
                    this.RaisePropertyChanged("CollectionTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderRelTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDiscount {
            get {
                return this.DocDiscountField;
            }
            set {
                if ((this.DocDiscountField.Equals(value) != true)) {
                    this.DocDiscountField = value;
                    this.RaisePropertyChanged("DocDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryProcess {
            get {
                return this.EntryProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryProcessField, value) != true)) {
                    this.EntryProcessField = value;
                    this.RaisePropertyChanged("EntryProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoChangeManual {
            get {
                return this.NoChangeManualField;
            }
            set {
                if ((this.NoChangeManualField.Equals(value) != true)) {
                    this.NoChangeManualField = value;
                    this.RaisePropertyChanged("NoChangeManual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescDescription {
            get {
                return this.RateCodeDescDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescDescriptionField, value) != true)) {
                    this.RateCodeDescDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Discount {
            get {
                return this.Rpt1DiscountField;
            }
            set {
                if ((this.Rpt1DiscountField.Equals(value) != true)) {
                    this.Rpt1DiscountField = value;
                    this.RaisePropertyChanged("Rpt1Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Discount {
            get {
                return this.Rpt2DiscountField;
            }
            set {
                if ((this.Rpt2DiscountField.Equals(value) != true)) {
                    this.Rpt2DiscountField = value;
                    this.RaisePropertyChanged("Rpt2Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Discount {
            get {
                return this.Rpt3DiscountField;
            }
            set {
                if ((this.Rpt3DiscountField.Equals(value) != true)) {
                    this.Rpt3DiscountField = value;
                    this.RaisePropertyChanged("Rpt3Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesTaxDescDescription {
            get {
                return this.SalesTaxDescDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesTaxDescDescriptionField, value) != true)) {
                    this.SalesTaxDescDescriptionField = value;
                    this.RaisePropertyChanged("SalesTaxDescDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderRepCommRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderRepCommRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderRepCommRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommSaleAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeqField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderRepCommRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CommAmt {
            get {
                return this.CommAmtField;
            }
            set {
                if ((this.CommAmtField.Equals(value) != true)) {
                    this.CommAmtField = value;
                    this.RaisePropertyChanged("CommAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommLines {
            get {
                return this.CommLinesField;
            }
            set {
                if ((this.CommLinesField.Equals(value) != true)) {
                    this.CommLinesField = value;
                    this.RaisePropertyChanged("CommLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CommSaleAmt {
            get {
                return this.CommSaleAmtField;
            }
            set {
                if ((this.CommSaleAmtField.Equals(value) != true)) {
                    this.CommSaleAmtField = value;
                    this.RaisePropertyChanged("CommSaleAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRepCode {
            get {
                return this.SalesRepCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepCodeField, value) != true)) {
                    this.SalesRepCodeField = value;
                    this.RaisePropertyChanged("SalesRepCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Seq {
            get {
                return this.SeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SeqField, value) != true)) {
                    this.SeqField = value;
                    this.RaisePropertyChanged("Seq");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartSubsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartSubsRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.PartSubsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultSubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubPartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubPartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubPartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubPartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SugOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SuggestedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.PartSubsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultSub {
            get {
                return this.DefaultSubField;
            }
            set {
                if ((this.DefaultSubField.Equals(value) != true)) {
                    this.DefaultSubField = value;
                    this.RaisePropertyChanged("DefaultSub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyPer {
            get {
                return this.QtyPerField;
            }
            set {
                if ((this.QtyPerField.Equals(value) != true)) {
                    this.QtyPerField = value;
                    this.RaisePropertyChanged("QtyPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecType {
            get {
                return this.RecTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecTypeField, value) != true)) {
                    this.RecTypeField = value;
                    this.RaisePropertyChanged("RecType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPart {
            get {
                return this.SubPartField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartField, value) != true)) {
                    this.SubPartField = value;
                    this.RaisePropertyChanged("SubPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartIUM {
            get {
                return this.SubPartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartIUMField, value) != true)) {
                    this.SubPartIUMField = value;
                    this.RaisePropertyChanged("SubPartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartPartDescription {
            get {
                return this.SubPartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartPartDescriptionField, value) != true)) {
                    this.SubPartPartDescriptionField = value;
                    this.RaisePropertyChanged("SubPartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartPricePerCode {
            get {
                return this.SubPartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartPricePerCodeField, value) != true)) {
                    this.SubPartPricePerCodeField = value;
                    this.RaisePropertyChanged("SubPartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartSalesUM {
            get {
                return this.SubPartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartSalesUMField, value) != true)) {
                    this.SubPartSalesUMField = value;
                    this.RaisePropertyChanged("SubPartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubPartSellingFactor {
            get {
                return this.SubPartSellingFactorField;
            }
            set {
                if ((this.SubPartSellingFactorField.Equals(value) != true)) {
                    this.SubPartSellingFactorField = value;
                    this.RaisePropertyChanged("SubPartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubPartTrackDimension {
            get {
                return this.SubPartTrackDimensionField;
            }
            set {
                if ((this.SubPartTrackDimensionField.Equals(value) != true)) {
                    this.SubPartTrackDimensionField = value;
                    this.RaisePropertyChanged("SubPartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubPartTrackLots {
            get {
                return this.SubPartTrackLotsField;
            }
            set {
                if ((this.SubPartTrackLotsField.Equals(value) != true)) {
                    this.SubPartTrackLotsField = value;
                    this.RaisePropertyChanged("SubPartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubPartTrackSerialNum {
            get {
                return this.SubPartTrackSerialNumField;
            }
            set {
                if ((this.SubPartTrackSerialNumField.Equals(value) != true)) {
                    this.SubPartTrackSerialNumField = value;
                    this.RaisePropertyChanged("SubPartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SugOrderQty {
            get {
                return this.SugOrderQtyField;
            }
            set {
                if ((this.SugOrderQtyField.Equals(value) != true)) {
                    this.SugOrderQtyField = value;
                    this.RaisePropertyChanged("SugOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SuggestedQty {
            get {
                return this.SuggestedQtyField;
            }
            set {
                if ((this.SuggestedQtyField.Equals(value) != true)) {
                    this.SuggestedQtyField = value;
                    this.RaisePropertyChanged("SuggestedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SNFormatRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SNFormatRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadingZeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialMaskMaskTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SNFormatRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSerialNumbers {
            get {
                return this.HasSerialNumbersField;
            }
            set {
                if ((this.HasSerialNumbersField.Equals(value) != true)) {
                    this.HasSerialNumbersField = value;
                    this.RaisePropertyChanged("HasSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeadingZeroes {
            get {
                return this.LeadingZeroesField;
            }
            set {
                if ((this.LeadingZeroesField.Equals(value) != true)) {
                    this.LeadingZeroesField = value;
                    this.RaisePropertyChanged("LeadingZeroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDigits {
            get {
                return this.NumberOfDigitsField;
            }
            set {
                if ((this.NumberOfDigitsField.Equals(value) != true)) {
                    this.NumberOfDigitsField = value;
                    this.RaisePropertyChanged("NumberOfDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskDescription {
            get {
                return this.SerialMaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskDescriptionField, value) != true)) {
                    this.SerialMaskDescriptionField = value;
                    this.RaisePropertyChanged("SerialMaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskExample {
            get {
                return this.SerialMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskExampleField, value) != true)) {
                    this.SerialMaskExampleField = value;
                    this.RaisePropertyChanged("SerialMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskMask {
            get {
                return this.SerialMaskMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskMaskField, value) != true)) {
                    this.SerialMaskMaskField = value;
                    this.RaisePropertyChanged("SerialMaskMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialMaskMaskType {
            get {
                return this.SerialMaskMaskTypeField;
            }
            set {
                if ((this.SerialMaskMaskTypeField.Equals(value) != true)) {
                    this.SerialMaskMaskTypeField = value;
                    this.RaisePropertyChanged("SerialMaskMaskType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedSerialNumbersRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SelectedSerialNumbersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBLbrActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBLbrActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotSavedToDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PassedInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreDeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventDeselectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScrappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScrappedReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SelectedSerialNumbersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deselected {
            get {
                return this.DeselectedField;
            }
            set {
                if ((this.DeselectedField.Equals(value) != true)) {
                    this.DeselectedField = value;
                    this.RaisePropertyChanged("Deselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBLbrAction {
            get {
                return this.KBLbrActionField;
            }
            set {
                if ((this.KBLbrActionField.Equals(value) != true)) {
                    this.KBLbrActionField = value;
                    this.RaisePropertyChanged("KBLbrAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBLbrActionDesc {
            get {
                return this.KBLbrActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBLbrActionDescField, value) != true)) {
                    this.KBLbrActionDescField = value;
                    this.RaisePropertyChanged("KBLbrActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotSavedToDB {
            get {
                return this.NotSavedToDBField;
            }
            set {
                if ((this.NotSavedToDBField.Equals(value) != true)) {
                    this.NotSavedToDBField = value;
                    this.RaisePropertyChanged("NotSavedToDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PassedInspection {
            get {
                return this.PassedInspectionField;
            }
            set {
                if ((this.PassedInspectionField.Equals(value) != true)) {
                    this.PassedInspectionField = value;
                    this.RaisePropertyChanged("PassedInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreDeselected {
            get {
                return this.PreDeselectedField;
            }
            set {
                if ((this.PreDeselectedField.Equals(value) != true)) {
                    this.PreDeselectedField = value;
                    this.RaisePropertyChanged("PreDeselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventDeselect {
            get {
                return this.PreventDeselectField;
            }
            set {
                if ((this.PreventDeselectField.Equals(value) != true)) {
                    this.PreventDeselectField = value;
                    this.RaisePropertyChanged("PreventDeselect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSerialNum {
            get {
                return this.RawSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSerialNumField, value) != true)) {
                    this.RawSerialNumField = value;
                    this.RaisePropertyChanged("RawSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDesc {
            get {
                return this.ReasonCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescField, value) != true)) {
                    this.ReasonCodeDescField = value;
                    this.RaisePropertyChanged("ReasonCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeType {
            get {
                return this.ReasonCodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeTypeField, value) != true)) {
                    this.ReasonCodeTypeField = value;
                    this.RaisePropertyChanged("ReasonCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseNumber {
            get {
                return this.SNBaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseNumberField, value) != true)) {
                    this.SNBaseNumberField = value;
                    this.RaisePropertyChanged("SNBaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Scrapped {
            get {
                return this.ScrappedField;
            }
            set {
                if ((this.ScrappedField.Equals(value) != true)) {
                    this.ScrappedField = value;
                    this.RaisePropertyChanged("Scrapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScrappedReasonCode {
            get {
                return this.ScrappedReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScrappedReasonCodeField, value) != true)) {
                    this.ScrappedReasonCodeField = value;
                    this.RaisePropertyChanged("ScrappedReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceRowID {
            get {
                return this.SourceRowIDField;
            }
            set {
                if ((this.SourceRowIDField.Equals(value) != true)) {
                    this.SourceRowIDField = value;
                    this.RaisePropertyChanged("SourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransType {
            get {
                return this.TransTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransTypeField, value) != true)) {
                    this.TransTypeField = value;
                    this.RaisePropertyChanged("TransType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartNum {
            get {
                return this.XRefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartNumField, value) != true)) {
                    this.XRefPartNumField = value;
                    this.RaisePropertyChanged("XRefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartType {
            get {
                return this.XRefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartTypeField, value) != true)) {
                    this.XRefPartTypeField = value;
                    this.RaisePropertyChanged("XRefPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxConnectStatusRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class TaxConnectStatusRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.TaxConnectStatusRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ETCOfflineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TCStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.TaxConnectStatusRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ETCOffline {
            get {
                return this.ETCOfflineField;
            }
            set {
                if ((this.ETCOfflineField.Equals(value) != true)) {
                    this.ETCOfflineField = value;
                    this.RaisePropertyChanged("ETCOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TCStatus {
            get {
                return this.TCStatusField;
            }
            set {
                if ((this.TCStatusField.Equals(value) != true)) {
                    this.TCStatusField = value;
                    this.RaisePropertyChanged("TCStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHedListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class OrderHedListRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.OrderHedListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustOnCreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DepositBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDepositBalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHeldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustNumCustID {
            get {
                return this.BTCustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustNumCustIDField, value) != true)) {
                    this.BTCustNumCustIDField = value;
                    this.RaisePropertyChanged("BTCustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustNumName {
            get {
                return this.BTCustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustNumNameField, value) != true)) {
                    this.BTCustNumNameField = value;
                    this.RaisePropertyChanged("BTCustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustOnCreditHold {
            get {
                return this.CustOnCreditHoldField;
            }
            set {
                if ((this.CustOnCreditHoldField.Equals(value) != true)) {
                    this.CustOnCreditHoldField = value;
                    this.RaisePropertyChanged("CustOnCreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBTName {
            get {
                return this.CustomerBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerBTNameField, value) != true)) {
                    this.CustomerBTNameField = value;
                    this.RaisePropertyChanged("CustomerBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandContract {
            get {
                return this.DemandContractField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandContractField, value) != true)) {
                    this.DemandContractField = value;
                    this.RaisePropertyChanged("DemandContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepositBal {
            get {
                return this.DepositBalField;
            }
            set {
                if ((this.DepositBalField.Equals(value) != true)) {
                    this.DepositBalField = value;
                    this.RaisePropertyChanged("DepositBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDepositBal {
            get {
                return this.DocDepositBalField;
            }
            set {
                if ((this.DocDepositBalField.Equals(value) != true)) {
                    this.DocDepositBalField = value;
                    this.RaisePropertyChanged("DocDepositBal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NeedByDate {
            get {
                return this.NeedByDateField;
            }
            set {
                if ((this.NeedByDateField.Equals(value) != true)) {
                    this.NeedByDateField = value;
                    this.RaisePropertyChanged("NeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenOrder {
            get {
                return this.OpenOrderField;
            }
            set {
                if ((this.OpenOrderField.Equals(value) != true)) {
                    this.OpenOrderField = value;
                    this.RaisePropertyChanged("OpenOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHeld {
            get {
                return this.OrderHeldField;
            }
            set {
                if ((this.OrderHeldField.Equals(value) != true)) {
                    this.OrderHeldField = value;
                    this.RaisePropertyChanged("OrderHeld");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumField, value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VoidOrder {
            get {
                return this.VoidOrderField;
            }
            set {
                if ((this.VoidOrderField.Equals(value) != true)) {
                    this.VoidOrderField = value;
                    this.RaisePropertyChanged("VoidOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveOTSParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SaveOTSParamsRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OTSCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSCustSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSResaleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSSaveAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSSaveCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OTSSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSTaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSZIPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress1 {
            get {
                return this.OTSAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress1Field, value) != true)) {
                    this.OTSAddress1Field = value;
                    this.RaisePropertyChanged("OTSAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress2 {
            get {
                return this.OTSAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress2Field, value) != true)) {
                    this.OTSAddress2Field = value;
                    this.RaisePropertyChanged("OTSAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddress3 {
            get {
                return this.OTSAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddress3Field, value) != true)) {
                    this.OTSAddress3Field = value;
                    this.RaisePropertyChanged("OTSAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCity {
            get {
                return this.OTSCityField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCityField, value) != true)) {
                    this.OTSCityField = value;
                    this.RaisePropertyChanged("OTSCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSContact {
            get {
                return this.OTSContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSContactField, value) != true)) {
                    this.OTSContactField = value;
                    this.RaisePropertyChanged("OTSContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OTSCountryNum {
            get {
                return this.OTSCountryNumField;
            }
            set {
                if ((this.OTSCountryNumField.Equals(value) != true)) {
                    this.OTSCountryNumField = value;
                    this.RaisePropertyChanged("OTSCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSCustSaved {
            get {
                return this.OTSCustSavedField;
            }
            set {
                if ((this.OTSCustSavedField.Equals(value) != true)) {
                    this.OTSCustSavedField = value;
                    this.RaisePropertyChanged("OTSCustSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSFaxNum {
            get {
                return this.OTSFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSFaxNumField, value) != true)) {
                    this.OTSFaxNumField = value;
                    this.RaisePropertyChanged("OTSFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSName {
            get {
                return this.OTSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSNameField, value) != true)) {
                    this.OTSNameField = value;
                    this.RaisePropertyChanged("OTSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSOverride {
            get {
                return this.OTSOverrideField;
            }
            set {
                if ((this.OTSOverrideField.Equals(value) != true)) {
                    this.OTSOverrideField = value;
                    this.RaisePropertyChanged("OTSOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSPhoneNum {
            get {
                return this.OTSPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSPhoneNumField, value) != true)) {
                    this.OTSPhoneNumField = value;
                    this.RaisePropertyChanged("OTSPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSResaleID {
            get {
                return this.OTSResaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSResaleIDField, value) != true)) {
                    this.OTSResaleIDField = value;
                    this.RaisePropertyChanged("OTSResaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSSaveAs {
            get {
                return this.OTSSaveAsField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSSaveAsField, value) != true)) {
                    this.OTSSaveAsField = value;
                    this.RaisePropertyChanged("OTSSaveAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSSaveCustID {
            get {
                return this.OTSSaveCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSSaveCustIDField, value) != true)) {
                    this.OTSSaveCustIDField = value;
                    this.RaisePropertyChanged("OTSSaveCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OTSSaved {
            get {
                return this.OTSSavedField;
            }
            set {
                if ((this.OTSSavedField.Equals(value) != true)) {
                    this.OTSSavedField = value;
                    this.RaisePropertyChanged("OTSSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSShipToNum {
            get {
                return this.OTSShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSShipToNumField, value) != true)) {
                    this.OTSShipToNumField = value;
                    this.RaisePropertyChanged("OTSShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSState {
            get {
                return this.OTSStateField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSStateField, value) != true)) {
                    this.OTSStateField = value;
                    this.RaisePropertyChanged("OTSState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSTaxRegionCode {
            get {
                return this.OTSTaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSTaxRegionCodeField, value) != true)) {
                    this.OTSTaxRegionCodeField = value;
                    this.RaisePropertyChanged("OTSTaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSZIP {
            get {
                return this.OTSZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSZIPField, value) != true)) {
                    this.OTSZIPField = value;
                    this.RaisePropertyChanged("OTSZIP");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCAddressRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ETCAddressRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ACWPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierRouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierRouteDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.ETCAddressRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FipsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidLine4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidPostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidRegionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ACWPercentage {
            get {
                return this.ACWPercentageField;
            }
            set {
                if ((this.ACWPercentageField.Equals(value) != true)) {
                    this.ACWPercentageField = value;
                    this.RaisePropertyChanged("ACWPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSource {
            get {
                return this.AddrSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceField, value) != true)) {
                    this.AddrSourceField = value;
                    this.RaisePropertyChanged("AddrSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSourceID {
            get {
                return this.AddrSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceIDField, value) != true)) {
                    this.AddrSourceIDField = value;
                    this.RaisePropertyChanged("AddrSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressCode {
            get {
                return this.AddressCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressCodeField, value) != true)) {
                    this.AddressCodeField = value;
                    this.RaisePropertyChanged("AddressCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeField, value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressTypeDesc {
            get {
                return this.AddressTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeDescField, value) != true)) {
                    this.AddressTypeDescField = value;
                    this.RaisePropertyChanged("AddressTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierRoute {
            get {
                return this.CarrierRouteField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierRouteField, value) != true)) {
                    this.CarrierRouteField = value;
                    this.RaisePropertyChanged("CarrierRoute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierRouteDesc {
            get {
                return this.CarrierRouteDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierRouteDescField, value) != true)) {
                    this.CarrierRouteDescField = value;
                    this.RaisePropertyChanged("CarrierRouteDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.ETCAddressRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryNum {
            get {
                return this.CountryNumField;
            }
            set {
                if ((this.CountryNumField.Equals(value) != true)) {
                    this.CountryNumField = value;
                    this.RaisePropertyChanged("CountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FipsCode {
            get {
                return this.FipsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FipsCodeField, value) != true)) {
                    this.FipsCodeField = value;
                    this.RaisePropertyChanged("FipsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line1 {
            get {
                return this.Line1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line1Field, value) != true)) {
                    this.Line1Field = value;
                    this.RaisePropertyChanged("Line1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line2 {
            get {
                return this.Line2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line2Field, value) != true)) {
                    this.Line2Field = value;
                    this.RaisePropertyChanged("Line2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line3 {
            get {
                return this.Line3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line3Field, value) != true)) {
                    this.Line3Field = value;
                    this.RaisePropertyChanged("Line3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSCountry {
            get {
                return this.OTSCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSCountryField, value) != true)) {
                    this.OTSCountryField = value;
                    this.RaisePropertyChanged("OTSCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostNet {
            get {
                return this.PostNetField;
            }
            set {
                if ((object.ReferenceEquals(this.PostNetField, value) != true)) {
                    this.PostNetField = value;
                    this.RaisePropertyChanged("PostNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestID {
            get {
                return this.RequestIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIDField, value) != true)) {
                    this.RequestIDField = value;
                    this.RaisePropertyChanged("RequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultCodeField, value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultSeq {
            get {
                return this.ResultSeqField;
            }
            set {
                if ((this.ResultSeqField.Equals(value) != true)) {
                    this.ResultSeqField = value;
                    this.RaisePropertyChanged("ResultSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateAddr {
            get {
                return this.UpdateAddrField;
            }
            set {
                if ((this.UpdateAddrField.Equals(value) != true)) {
                    this.UpdateAddrField = value;
                    this.RaisePropertyChanged("UpdateAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateAllowed {
            get {
                return this.UpdateAllowedField;
            }
            set {
                if ((this.UpdateAllowedField.Equals(value) != true)) {
                    this.UpdateAllowedField = value;
                    this.RaisePropertyChanged("UpdateAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidCity {
            get {
                return this.ValidCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidCityField, value) != true)) {
                    this.ValidCityField = value;
                    this.RaisePropertyChanged("ValidCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidCountry {
            get {
                return this.ValidCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidCountryField, value) != true)) {
                    this.ValidCountryField = value;
                    this.RaisePropertyChanged("ValidCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine1 {
            get {
                return this.ValidLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine1Field, value) != true)) {
                    this.ValidLine1Field = value;
                    this.RaisePropertyChanged("ValidLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine2 {
            get {
                return this.ValidLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine2Field, value) != true)) {
                    this.ValidLine2Field = value;
                    this.RaisePropertyChanged("ValidLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine3 {
            get {
                return this.ValidLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine3Field, value) != true)) {
                    this.ValidLine3Field = value;
                    this.RaisePropertyChanged("ValidLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidLine4 {
            get {
                return this.ValidLine4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ValidLine4Field, value) != true)) {
                    this.ValidLine4Field = value;
                    this.RaisePropertyChanged("ValidLine4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidPostalCode {
            get {
                return this.ValidPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidPostalCodeField, value) != true)) {
                    this.ValidPostalCodeField = value;
                    this.RaisePropertyChanged("ValidPostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidRegion {
            get {
                return this.ValidRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidRegionField, value) != true)) {
                    this.ValidRegionField = value;
                    this.RaisePropertyChanged("ValidRegion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCMessageRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ETCMessageRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.ETCMessageRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelplinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefersToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSource {
            get {
                return this.AddrSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceField, value) != true)) {
                    this.AddrSourceField = value;
                    this.RaisePropertyChanged("AddrSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrSourceID {
            get {
                return this.AddrSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrSourceIDField, value) != true)) {
                    this.AddrSourceIDField = value;
                    this.RaisePropertyChanged("AddrSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.ETCMessageRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Helplink {
            get {
                return this.HelplinkField;
            }
            set {
                if ((object.ReferenceEquals(this.HelplinkField, value) != true)) {
                    this.HelplinkField = value;
                    this.RaisePropertyChanged("Helplink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefersTo {
            get {
                return this.RefersToField;
            }
            set {
                if ((object.ReferenceEquals(this.RefersToField, value) != true)) {
                    this.RefersToField = value;
                    this.RaisePropertyChanged("RefersTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestID {
            get {
                return this.RequestIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIDField, value) != true)) {
                    this.RequestIDField = value;
                    this.RaisePropertyChanged("RequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((object.ReferenceEquals(this.SeverityField, value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIDField, value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProdRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class JobProdRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AsmPartDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AsmPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.JobProdRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandDtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandHeadSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandLinkSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandLinkStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemandScheduleSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JHPartDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JHPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MakeToJobQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MakeToStockQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeToTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxAllowedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MtlPartDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MtlPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrdWIPQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurStockQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ProdQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PullFromStockWarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PullFromStockWarehouseDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SplitQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StkWIPQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TFLineNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TFOrdLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TFOrdNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetAssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetJobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetMtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSplitQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WIPQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AsmPartDesc {
            get {
                return this.AsmPartDescField;
            }
            set {
                if ((object.ReferenceEquals(this.AsmPartDescField, value) != true)) {
                    this.AsmPartDescField = value;
                    this.RaisePropertyChanged("AsmPartDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AsmPartNum {
            get {
                return this.AsmPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.AsmPartNumField, value) != true)) {
                    this.AsmPartNumField = value;
                    this.RaisePropertyChanged("AsmPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallLine {
            get {
                return this.CallLineField;
            }
            set {
                if ((this.CallLineField.Equals(value) != true)) {
                    this.CallLineField = value;
                    this.RaisePropertyChanged("CallLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallLineLineDesc {
            get {
                return this.CallLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLineLineDescField, value) != true)) {
                    this.CallLineLineDescField = value;
                    this.RaisePropertyChanged("CallLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallNum {
            get {
                return this.CallNumField;
            }
            set {
                if ((this.CallNumField.Equals(value) != true)) {
                    this.CallNumField = value;
                    this.RaisePropertyChanged("CallNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.JobProdRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustName {
            get {
                return this.CustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNameField, value) != true)) {
                    this.CustNameField = value;
                    this.RaisePropertyChanged("CustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandContractNum {
            get {
                return this.DemandContractNumField;
            }
            set {
                if ((this.DemandContractNumField.Equals(value) != true)) {
                    this.DemandContractNumField = value;
                    this.RaisePropertyChanged("DemandContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandDtlSeq {
            get {
                return this.DemandDtlSeqField;
            }
            set {
                if ((this.DemandDtlSeqField.Equals(value) != true)) {
                    this.DemandDtlSeqField = value;
                    this.RaisePropertyChanged("DemandDtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandHeadSeq {
            get {
                return this.DemandHeadSeqField;
            }
            set {
                if ((this.DemandHeadSeqField.Equals(value) != true)) {
                    this.DemandHeadSeqField = value;
                    this.RaisePropertyChanged("DemandHeadSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandLinkSource {
            get {
                return this.DemandLinkSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandLinkSourceField, value) != true)) {
                    this.DemandLinkSourceField = value;
                    this.RaisePropertyChanged("DemandLinkSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandLinkStatus {
            get {
                return this.DemandLinkStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandLinkStatusField, value) != true)) {
                    this.DemandLinkStatusField = value;
                    this.RaisePropertyChanged("DemandLinkStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemandScheduleSeq {
            get {
                return this.DemandScheduleSeqField;
            }
            set {
                if ((this.DemandScheduleSeqField.Equals(value) != true)) {
                    this.DemandScheduleSeqField = value;
                    this.RaisePropertyChanged("DemandScheduleSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JHPartDesc {
            get {
                return this.JHPartDescField;
            }
            set {
                if ((object.ReferenceEquals(this.JHPartDescField, value) != true)) {
                    this.JHPartDescField = value;
                    this.RaisePropertyChanged("JHPartDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JHPartNum {
            get {
                return this.JHPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JHPartNumField, value) != true)) {
                    this.JHPartNumField = value;
                    this.RaisePropertyChanged("JHPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNumPartDescription {
            get {
                return this.JobNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumPartDescriptionField, value) != true)) {
                    this.JobNumPartDescriptionField = value;
                    this.RaisePropertyChanged("JobNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MakeToJobQty {
            get {
                return this.MakeToJobQtyField;
            }
            set {
                if ((this.MakeToJobQtyField.Equals(value) != true)) {
                    this.MakeToJobQtyField = value;
                    this.RaisePropertyChanged("MakeToJobQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MakeToStockQty {
            get {
                return this.MakeToStockQtyField;
            }
            set {
                if ((this.MakeToStockQtyField.Equals(value) != true)) {
                    this.MakeToStockQtyField = value;
                    this.RaisePropertyChanged("MakeToStockQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeToType {
            get {
                return this.MakeToTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeToTypeField, value) != true)) {
                    this.MakeToTypeField = value;
                    this.RaisePropertyChanged("MakeToType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxAllowedQty {
            get {
                return this.MaxAllowedQtyField;
            }
            set {
                if ((this.MaxAllowedQtyField.Equals(value) != true)) {
                    this.MaxAllowedQtyField = value;
                    this.RaisePropertyChanged("MaxAllowedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MtlPartDesc {
            get {
                return this.MtlPartDescField;
            }
            set {
                if ((object.ReferenceEquals(this.MtlPartDescField, value) != true)) {
                    this.MtlPartDescField = value;
                    this.RaisePropertyChanged("MtlPartDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MtlPartNum {
            get {
                return this.MtlPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MtlPartNumField, value) != true)) {
                    this.MtlPartNumField = value;
                    this.RaisePropertyChanged("MtlPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrdWIPQty {
            get {
                return this.OrdWIPQtyField;
            }
            set {
                if ((this.OrdWIPQtyField.Equals(value) != true)) {
                    this.OrdWIPQtyField = value;
                    this.RaisePropertyChanged("OrdWIPQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineLineDesc {
            get {
                return this.OrderLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineLineDescField, value) != true)) {
                    this.OrderLineLineDescField = value;
                    this.RaisePropertyChanged("OrderLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurStockQty {
            get {
                return this.OurStockQtyField;
            }
            set {
                if ((this.OurStockQtyField.Equals(value) != true)) {
                    this.OurStockQtyField = value;
                    this.RaisePropertyChanged("OurStockQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanIDField, value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanUserID {
            get {
                return this.PlanUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanUserIDField, value) != true)) {
                    this.PlanUserIDField = value;
                    this.RaisePropertyChanged("PlanUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ProdQty {
            get {
                return this.ProdQtyField;
            }
            set {
                if ((this.ProdQtyField.Equals(value) != true)) {
                    this.ProdQtyField = value;
                    this.RaisePropertyChanged("ProdQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PullFromStockWarehouseCode {
            get {
                return this.PullFromStockWarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PullFromStockWarehouseCodeField, value) != true)) {
                    this.PullFromStockWarehouseCodeField = value;
                    this.RaisePropertyChanged("PullFromStockWarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PullFromStockWarehouseDesc {
            get {
                return this.PullFromStockWarehouseDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PullFromStockWarehouseDescField, value) != true)) {
                    this.PullFromStockWarehouseDescField = value;
                    this.RaisePropertyChanged("PullFromStockWarehouseDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipBy {
            get {
                return this.ShipByField;
            }
            set {
                if ((this.ShipByField.Equals(value) != true)) {
                    this.ShipByField = value;
                    this.RaisePropertyChanged("ShipBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShippedQty {
            get {
                return this.ShippedQtyField;
            }
            set {
                if ((this.ShippedQtyField.Equals(value) != true)) {
                    this.ShippedQtyField = value;
                    this.RaisePropertyChanged("ShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SplitQty {
            get {
                return this.SplitQtyField;
            }
            set {
                if ((this.SplitQtyField.Equals(value) != true)) {
                    this.SplitQtyField = value;
                    this.RaisePropertyChanged("SplitQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StkWIPQty {
            get {
                return this.StkWIPQtyField;
            }
            set {
                if ((this.StkWIPQtyField.Equals(value) != true)) {
                    this.StkWIPQtyField = value;
                    this.RaisePropertyChanged("StkWIPQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TFLineNum {
            get {
                return this.TFLineNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TFLineNumField, value) != true)) {
                    this.TFLineNumField = value;
                    this.RaisePropertyChanged("TFLineNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TFOrdLine {
            get {
                return this.TFOrdLineField;
            }
            set {
                if ((this.TFOrdLineField.Equals(value) != true)) {
                    this.TFOrdLineField = value;
                    this.RaisePropertyChanged("TFOrdLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TFOrdNum {
            get {
                return this.TFOrdNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TFOrdNumField, value) != true)) {
                    this.TFOrdNumField = value;
                    this.RaisePropertyChanged("TFOrdNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetAssemblySeq {
            get {
                return this.TargetAssemblySeqField;
            }
            set {
                if ((this.TargetAssemblySeqField.Equals(value) != true)) {
                    this.TargetAssemblySeqField = value;
                    this.RaisePropertyChanged("TargetAssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetJobNum {
            get {
                return this.TargetJobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetJobNumField, value) != true)) {
                    this.TargetJobNumField = value;
                    this.RaisePropertyChanged("TargetJobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetMtlSeq {
            get {
                return this.TargetMtlSeqField;
            }
            set {
                if ((this.TargetMtlSeqField.Equals(value) != true)) {
                    this.TargetMtlSeqField = value;
                    this.RaisePropertyChanged("TargetMtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSplitQuantity {
            get {
                return this.TotalSplitQuantityField;
            }
            set {
                if ((this.TotalSplitQuantityField.Equals(value) != true)) {
                    this.TotalSplitQuantityField = value;
                    this.RaisePropertyChanged("TotalSplitQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackSerialNumbers {
            get {
                return this.TrackSerialNumbersField;
            }
            set {
                if ((this.TrackSerialNumbersField.Equals(value) != true)) {
                    this.TrackSerialNumbersField = value;
                    this.RaisePropertyChanged("TrackSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WIPQty {
            get {
                return this.WIPQtyField;
            }
            set {
                if ((this.WIPQtyField.Equals(value) != true)) {
                    this.WIPQtyField = value;
                    this.RaisePropertyChanged("WIPQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCodeDescription {
            get {
                return this.WarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeDescriptionField, value) != true)) {
                    this.WarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseCodeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : EpicorConsole.Epicor.SalesOrderSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderCustTrkRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderCustTrkRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenOrder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHeld = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpConNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrcConNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHedNeedByDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHedRequestDate = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenLine = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingQuantity = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnitPrice = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCodeDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDtlNeedByDate = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDtlRequestDate = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebOrder = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnCreditHold = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPartNum = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRevisionNum = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddressList = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTContactFaxNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTContactPhoneNum = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTContactName = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTConNum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditOverride = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustID = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToCustName = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToName = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineRef = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 47,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuoteQtyRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum QuoteQtyRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurQuantity = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitPrice = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnitPrice = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePerCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlBurMarkUp = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialMarkUp = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubcontractMarkUp = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborMarkUp = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BurdenMarkUp = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCostDesc = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCost = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCostMarkUp = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommissionPct = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PercentType = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactor = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingQuantity = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactorDirection = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarkUpID = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1UnitPrice = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2UnitPrice = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3UnitPrice = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InUnitPrice = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInUnitPrice = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InUnitPrice = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InUnitPrice = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InUnitPrice = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceSource = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePerAdl1000 = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalSellPrice = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocPricePerAdl1000 = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalSellPrice = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChangedUnitPrice = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcProfit = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcProfitProfit = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcUnitCost = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcUnitPriceMarkup = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcUnitPriceProfit = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcUPCommMarkup = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcUPCommProfit = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrSymbol = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableMtlMarkup = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialMarkupM = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialMarkupP = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscChrg = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceBurMarkup = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceBurProfit = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceLbrMarkup = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceLbrProfit = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceMscChrgMarkup = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceMscChrgProfit = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceMtlBurMarkup = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceMtlBurProfit = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceMtlMarkup = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceMtlProfit = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePerFactor = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceSubMarkup = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceSubProfit = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceTotalCommMarkup = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceTotalCommProfit = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceTotalMarkup = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceTotalProfit = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuotedMarkup = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuotedProfit = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RollUpCostNeeded = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalBurCost = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalCommission = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalCommProfit = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalCost = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalLbrCost = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalMarkup = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalMtlBurCost = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalMtlCost = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalProdBurHrs = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalProdLbrHrs = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalProfit = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalQuotedPrice = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalSetupBurHrs = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalSetupLbrHrs = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalSubCost = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WQUnitPrice = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcMarkup = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcMarkupProfit = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteLineLineDesc = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteNumCurrencyCode = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 100,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectSerialNumbersParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        partNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        quantity = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        whereClause = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        transType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        sourceRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableCreate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableSelect = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableRetrieve = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allowVoided = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        plant = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SOEntryUIParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SOEntryUIParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcQtysPreference = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCAllowSales = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCEnableAddress = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCEnableCSC = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableICPOSugTool = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Localization = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOReadyToCalcDflt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuppressSOMakeDirWrn = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrjAllowWBSPhase = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseTerritorySecurity = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbSugPOChgRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum GlbSugPOChgRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuggestionCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyerID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequireDate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceName = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SurplusQty = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancelReason = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorChange = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransDate = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABCCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuggestionStatus = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Review = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySuggestionStatus = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewOurQuantity = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewShipByDate = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesIUM = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 32,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HedTaxSumRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum HedTaxSumRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HedNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxDescription = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocDepInvcNum = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 29,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OHOrderMscRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OHOrderMscRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMiscAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreqCode = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quoting = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPONum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPOLine = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPOSeqNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1MiscAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2MiscAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3MiscAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InMiscAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInMiscAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InMiscAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InMiscAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InMiscAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percentage = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Type = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackApproved = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackAmount = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackMemoDesc = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackMemoText = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackStatus = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrSymbol = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspMiscAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspMiscAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryProcess = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspMiscAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspMiscAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspMiscAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeDescription = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 50,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDtlRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderDtlRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidLine = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenLine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commissionable = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscountPercent = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitPrice = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnitPrice = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderQty = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discount = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDiscount = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestDate = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPartNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRevisionNum = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePerCode = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderComment = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipComment = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceComment = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PickListComment = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvanceBillBal = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocAdvanceBillBal = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteNum = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteLine = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TMBilling = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigWhyNoTax = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rework = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMANum = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMALine = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractNum = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCode = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BasePartNum = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warranty = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCode = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialDuration = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborDuration = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscDuration = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialMod = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborMod = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyComment = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Onsite = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MatCovered = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabCovered = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCovered = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactor = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingQuantity = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesCatID = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipLineComplete = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CumeQty = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CumeDate = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MktgCampaignID = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MktgEvntSeq = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockQty = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPONum = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPOLine = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastConfigDate = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastConfigTime = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastConfigUserID = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfigUnitPrice = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfigBaseUnitPrice = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListCode = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BreakListCode = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricingQty = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockPrice = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListPrice = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocListPrice = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrdBasedPrice = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOrdBasedPrice = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceGroupCode = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverridePriceList = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseRevisionNum = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricingValue = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySeq = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitParentLine = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitAllowUpdate = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitShipComplete = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitBackFlush = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPrintCompsPS = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPrintCompsInv = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPricing = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitQtyPer = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactorDirection = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate1 = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate2 = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate3 = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate4 = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate5 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit1 = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit2 = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit3 = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit4 = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit5 = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandContractLine = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateNewJob = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoNotShipBeforeDate = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetDtls = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoNotShipAfterDate = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SchedJob = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelJob = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableCreateNewJob = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableGetDtls = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSchedJob = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableRelJob = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterSaleWarehouse = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterSaleBinNum = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterSaleLotNum = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterSaleDimCode = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDtlRejected = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitFlag = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitsLoaded = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandContractNum = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandHeadSeq = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDtlSeq = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalReleases = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1UnitPrice = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2UnitPrice = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3UnitPrice = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Discount = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Discount = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Discount = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1AdvanceBillBal = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2AdvanceBillBal = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3AdvanceBillBal = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ListPrice = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ListPrice = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ListPrice = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1OrdBasedPrice = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2OrdBasedPrice = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3OrdBasedPrice = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtPriceDtl = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocExtPriceDtl = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ExtPriceDtl = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ExtPriceDtl = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ExtPriceDtl = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineStatus = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InUnitPrice = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInUnitPrice = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InDiscount = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInDiscount = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InListPrice = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInListPrice = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InOrdBasedPrice = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInOrdBasedPrice = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InUnitPrice = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InUnitPrice = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InUnitPrice = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InDiscount = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InDiscount = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InDiscount = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InListPrice = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InListPrice = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InListPrice = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InOrdBasedPrice = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InOrdBasedPrice = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InOrdBasedPrice = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InExtPriceDtl = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInExtPriceDtl = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InExtPriceDtl = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InExtPriceDtl = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InExtPriceDtl = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldOurOpenQty = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldSellingOpenQty = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldOpenValue = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldProdCode = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevSellQty = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevPartNum = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevXPartNum = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitCompOrigSeq = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitCompOrigPart = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmartStringProcessed = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmartString = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RenewalNbr = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscBreakListCode = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscListPrice = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockDisc = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideDiscPriceList = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupSeq = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCOrderNum = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCOrderLine = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DupOnJobCrt = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UndersPct = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Overs = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unders = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OversUnitPrice = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlanUserID = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlanGUID = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MOMsourceType = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MOMsourceEst = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultOversPricing = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCPlant = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCQuoteNum = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCQuoteLine = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgJobType = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProFormaInvComment = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateJob = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractID = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkToContract = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInAdvanceBillBal = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAdvanceBillBal = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InAdvanceBillBal = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InAdvanceBillBal = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InAdvanceBillBal = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCLinkRemoved = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvailableQuantity = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvailUMFromQuote = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Configured = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterSale = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLimitMessage = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLimitSource = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyID = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrSymbol = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQuantity = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCode = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimConvFactor = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspDiscount = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspUnitPrice = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocExtPrice = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInMiscCharges = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLessDiscount = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMiscCharges = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalPrice = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDiscount = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspJobType = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspUnitPrice = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DUM = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCDiscount = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCPreventRepricing = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableKitUnitPrice = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableRenewalNbr = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSellingQty = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryProcess = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtPrice = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromQuoteLineFlag = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasComplement = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasDowngrade = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasSubstitute = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasUpgrade = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InMiscCharges = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvtyUOM = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobTypeDesc = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobWasCreated = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitChangeParms = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitDisable = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitFlagDescription = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitOrderQtyUOM = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitStandard = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessDiscount = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCharges = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleReleases = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQuantity = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartExists = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineRef = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceListCodeDesc = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessCounterSale = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessQuickEntry = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteQtyNum = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelWasRecInvoiced = 284,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RespMessage = 285,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspDiscount = 286,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspUnitPrice = 287,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ExtPrice = 288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InMiscCharges = 289,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1LessDiscount = 290,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1MiscCharges = 291,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 292,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalPrice = 293,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspDiscount = 294,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspUnitPrice = 295,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ExtPrice = 296,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InMiscCharges = 297,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2LessDiscount = 298,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2MiscCharges = 299,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalPrice = 301,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspDiscount = 302,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspUnitPrice = 303,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ExtPrice = 304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InMiscCharges = 305,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3LessDiscount = 306,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3MiscCharges = 307,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 308,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalPrice = 309,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName1 = 310,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName2 = 311,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName3 = 312,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName4 = 313,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName5 = 314,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 315,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisOrderInvtyQty = 316,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalPrice = 317,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalShipped = 318,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 319,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseDesc = 320,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvailPriceLists = 321,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrencyID = 322,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 323,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 324,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfigType = 325,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCConfigSysRowId = 326,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 327,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCodeContractDescription = 328,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 329,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 330,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 331,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscBreakListCodeListDescription = 332,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscBreakListCodeEndDate = 333,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscBreakListCodeStartDate = 334,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MktgCampaignIDCampDescription = 335,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MktgEvntEvntDescription = 336,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumBTCustNum = 337,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 338,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 339,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 340,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 341,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 342,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 343,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 344,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 345,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 346,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 347,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceBreakListDescription = 348,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceBreakStartDate = 349,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceBreakEndDate = 350,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCodeDescription = 351,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectIDDescription = 352,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteNumCurrencyCode = 353,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesCatIDDescription = 354,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatIDDescription = 355,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCodeWarrDescription = 356,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 357,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 358,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDtlAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderDtlAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHedRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderHedRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenOrder = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidOrder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHeld = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOB = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCode = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscountPercent = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrcConNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpConNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepList = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderComment = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipComment = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceComment = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PickListComment = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositBal = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepositBal = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByDate = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditOverride = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditOverrideUserID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditOverrideDate = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditOverrideTime = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditOverrideLimit = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SndAlrtShp = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRate = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockRate = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardMemberName = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardNumber = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardType = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationMonth = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationYear = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardID = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardmemberReference = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocPriorityCode = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReservePriorityCode = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipOrderComplete = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebOrder = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCApprovalNum = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIOrder = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIAck = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPONum = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebEntryPerson = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AckEmailSent = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyOrderBasedDisc = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoOrderBasedDisc = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryMethod = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HDCaseNum = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterSale = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateInvoice = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatePackingSlip = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockQty = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessCard = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCAmount = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCFreight = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCTax = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCTotal = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCDocAmount = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCDocFreight = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCDocTax = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCDocTotal = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCStreetAddr = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCZip = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTConNum = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate4 = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate5 = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit1 = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit2 = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit3 = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit4 = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepSplit5 = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate1 = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate2 = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RepRate3 = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutboundSalesDocCtr = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutboundShipDocsCtr = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandContractNum = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoNotShipBeforeDate = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResDelivery = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoNotShipAfterDate = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatDelivery = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatPickup = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hazmat = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOnly = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefNotes = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyChrg = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChrgAmount = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COD = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFreight = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroundType = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyFlag = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyEMail = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredIns = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancelAfterDate = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandRejected = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideCarrier = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideService = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditCardOrder = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandHeadSeq = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayFlag = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayAccount = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress1 = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress2 = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCity = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTState = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTZip = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountry = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialInvoice = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipExprtDeclartn = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertOfOrigin = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LetterOfInstr = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFID = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress1 = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress2 = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCity = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFState = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFZip = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountry = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFContact = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCompName = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFPhoneNum = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntrntlShip = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoPrintReady = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIReady = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualPackIDs = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress3 = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryConf = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddlHdlgFlag = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStdPkg = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSignature = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAlert = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServHomeDel = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryType = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServDeliveryDate = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServInstruct = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef1 = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef2 = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef3 = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef4 = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef5 = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountryNum = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPhone = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRelease = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAuthNum = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress3 = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountryNum = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTPhone = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQuantumView = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVShipFromName = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVMemo = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToCalc = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalCharges = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalMisc = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalDiscount = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalComm = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalAdvBill = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalLines = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalReleases = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalRelDates = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalCharges = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalMisc = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalDiscount = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalComm = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalTax = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalTax = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalAdvBill = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalShipped = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalInvoiced = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalCommLines = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommAmt1 = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommAmt2 = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommAmt3 = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommAmt4 = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommAmt5 = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommableAmt1 = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommableAmt2 = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommableAmt3 = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommableAmt4 = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRCommableAmt5 = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rounding = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DepositBal = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRounding = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DepositBal = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DepositBal = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalCharges = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalCharges = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalCharges = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalAdvBill = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalAdvBill = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalAdvBill = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalMisc = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalMisc = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalMisc = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalDiscount = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalDiscount = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalDiscount = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalComm = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalComm = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalComm = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalTax = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalTax = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Rounding = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Rounding = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Rounding = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpCode = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalTax = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1CCAmount = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2CCAmount = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3CCAmount = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1CCFreight = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2CCFreight = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3CCFreight = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1CCTax = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2CCTax = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3CCTax = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1CCTotal = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2CCTotal = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3CCTotal = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderAmt = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOrderAmt = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1OrderAmt = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2OrderAmt = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3OrderAmt = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxPoint = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseOTS = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSName = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress1 = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress2 = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress3 = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCity = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSState = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSZIP = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSResaleID = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSContact = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSFaxNum = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSPhoneNum = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCountryNum = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalWHTax = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalWHTax = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalWHTax = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalWHTax = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalWHTax = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalSATax = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalSATax = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalSATax = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalSATax = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalSATax = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaveAs = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaveCustID = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCustSaved = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderStatus = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoldSetByDemand = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InTotalCharges = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InTotalMisc = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InTotalDiscount = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInTotalCharges = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInTotalMisc = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInTotalDiscount = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InTotalCharges = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InTotalCharges = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InTotalCharges = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InTotalMisc = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InTotalMisc = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InTotalMisc = 284,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InTotalDiscount = 285,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InTotalDiscount = 286,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InTotalDiscount = 287,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARLOCID = 288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBank = 289,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERSOrder = 290,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOCHold = 291,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PSCurrCode = 292,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvCurrCode = 293,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 294,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 295,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefContractNum = 296,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefContractDate = 297,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandProcessDate = 298,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandProcessTime = 299,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastScheduleNumber = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastTCtrlNum = 301,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastBatchNum = 302,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCOrderNum = 303,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCPONum = 304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIOrder = 305,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIApplication = 306,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIUsername = 307,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIUserID = 308,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WICreditCardorder = 309,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderCSR = 310,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChar1 = 311,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChar2 = 312,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChar3 = 313,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChar4 = 314,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDate1 = 315,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDate2 = 316,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDate3 = 317,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDate4 = 318,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDecimal1 = 319,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDecimal2 = 320,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserInteger1 = 321,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserInteger2 = 322,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 323,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 324,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsCSRSet = 325,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCPaymentMethod = 326,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGUseGoodDefaultMark = 327,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSShipToNum = 328,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProFormaInvComment = 329,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ccToken = 330,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvcOrderCmp = 331,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReprintSOAck = 332,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterSOAck = 333,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispatchReason = 334,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 335,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToFulfill = 336,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipByTime = 337,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWFiscalYear = 338,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWFiscalYearSuffix = 339,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWFiscalPeriod = 340,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIGroup = 341,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIRegNumSeller = 342,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGUIRegNumBuyer = 343,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderOpenCredit = 344,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClosedNotShipped = 345,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvailBTCustList = 346,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTContactEMailAddress = 347,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTContactFaxNum = 348,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTContactName = 349,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTContactPhoneNum = 350,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 351,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanChangeTaxLiab = 352,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardStore = 353,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCCSCID = 354,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCCSCIDToken = 355,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCResponse = 356,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCRounding = 357,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCTranID = 358,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCTranType = 359,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSCResult = 360,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 361,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustAllowOTS = 362,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerPrintAck = 363,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerRequiresPO = 364,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustOnCreditHold = 365,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustTradePartnerName = 366,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandContract = 367,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispatchReasonCodeDescription = 368,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCCRounding = 369,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalNet = 370,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalOrder = 371,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dspBTCustID = 372,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCPaymentDesc = 373,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableJobWizard = 374,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSoldToID = 375,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryProcess = 376,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERSOverride = 377,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasMiscCharges = 378,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasOrderLines = 379,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkMsg = 380,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaved = 381,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSTaxRegionCode = 382,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentCustNum = 383,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReferencePNRef = 384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1CCRounding = 385,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalNet = 386,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2CCRounding = 387,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalNet = 388,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3CCRounding = 389,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalNet = 390,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode1 = 391,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode2 = 392,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode3 = 393,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode4 = 394,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode5 = 395,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName1 = 396,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName2 = 397,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName3 = 398,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName4 = 399,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepName5 = 400,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToAddressList = 401,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactEMailAddress = 402,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactFaxNum = 403,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactName = 404,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactPhoneNum = 405,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustId = 406,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowApplyOrderDiscountsControl = 407,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToAddressList = 408,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToContactEMailAddress = 409,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToContactFaxNum = 410,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToContactName = 411,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoldToContactPhoneNum = 412,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalNet = 413,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalOrder = 414,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeDescr = 415,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWGenerationType = 416,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDtlAndRelRecords = 417,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AVSAddr = 418,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AVSZip = 419,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrencyID = 420,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 421,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillToCustomerName = 422,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTAddressList = 423,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 424,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNumCustID = 425,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNumName = 426,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNumBTName = 427,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardTypeDescription = 428,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrName = 429,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrSymbol = 430,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeDocumentDesc = 431,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrencyID = 432,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrDesc = 433,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBTName = 434,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 435,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 436,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerAllowShipTo3 = 437,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOBDescription = 438,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HDCaseDescription = 439,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvCurrCurrDesc = 440,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCntryDescription = 441,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankDescription = 442,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankBankName = 443,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PSCurrCurrDesc = 444,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpDescription = 445,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReservePriDescription = 446,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 447,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 448,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCodeDescription = 449,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TermsCodeDescription = 450,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 451,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 452,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHedAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderHedAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHedUPSRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderHedUPSRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailAddress = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipmentNotify = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailureNotify = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryNotify = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableQuantumView = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryProcess = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHistRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderHistRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderQty = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOM = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OriginalPrice = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewPrice = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewQty = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderMscRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderMscRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMiscAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreqCode = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quoting = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPONum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPOLine = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPOSeqNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1MiscAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2MiscAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3MiscAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InMiscAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInMiscAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InMiscAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InMiscAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InMiscAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percentage = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Type = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackApproved = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackAmount = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackMemoDesc = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackMemoText = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTrackStatus = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrSymbol = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDspMiscAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspMiscAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryProcess = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenLine = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DspMiscAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DspMiscAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DspMiscAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeDescription = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLineLineDesc = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 52,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderRelRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderRelRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqDate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurReqQty = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenRelease = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirmRelease = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Make = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurJobQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurJobShippedQty = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidRelease = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurStockQty = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurStockShippedQty = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExempt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpConNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByDate = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingReqQty = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingJobQty = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingJobShippedQty = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingStockQty = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingStockShippedQty = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectForPicking = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StagingWarehouseCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StagingBinNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PickError = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CumeQty = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CumeDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPONum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPOLine = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPORelNum = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompany = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScheduleNumber = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarkForNum = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShipName = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RAN = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandReference = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandSchedRejected = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatePickTicketPrinted = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResDelivery = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatDelivery = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatPickup = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerbalConf = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hazmat = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOnly = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefNotes = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyChrg = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChrgAmount = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COD = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFreight = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroundType = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyFlag = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyEMail = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredIns = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatDelivery = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatPickup = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSignature = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAlert = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPOD = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAOD = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServHomeDel = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryType = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServDeliveryDate = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPhone = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServInstruct = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRelease = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAuthNum = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef1 = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef2 = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef3 = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef4 = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef5 = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideCarrier = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideService = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DockingStation = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransportID = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipbyTime = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxConnectCalc = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetDfltTaxIds = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseOTS = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSName = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress1 = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress2 = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress3 = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCity = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSState = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSZIP = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSResaleID = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSContact = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSFaxNum = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSPhoneNum = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCountryNum = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubShipTo = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipRouting = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyToOrder = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenOrder = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaveAs = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaveCustID = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCustSaved = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelStatus = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComplianceMsg = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevSellQty = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevPartNum = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevXPartNum = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevNeedByDate = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevReqDate = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevShipToNum = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFCustNum = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseOTMF = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFName = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFAddress1 = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFAddress2 = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFAddress3 = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFCity = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFState = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFZIP = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFContact = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFFaxNum = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFPhoneNum = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFCountryNum = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCPlant = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIOrderLine = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIOrder = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebSKU = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipOvers = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIItemPrice = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIItemShipCost = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityUseCode = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhaseID = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSShipToNum = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WasRecInvoiced = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractID = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkToContract = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToFulfill = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvailableQuantity = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyOverride = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLimitMessage = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLimitSource = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustAllowOTS = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerAllowShipTo3 = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocSelfAssessTax = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocWithholdTax = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShipOverride = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspInvMeth = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspRevMethod = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableMake = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryProcess = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExistPOSugg = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HdrOTS = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitDisable = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkToPONum = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MakeOverride = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarkForAddrList = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFCustID = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotCompliant = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQuantity = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaved = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSTaxRegionCode = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartExists = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhaseWasRecInvoiced = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReleaseStatus = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1SelfAssessTax = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalTax = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1WithholdTax = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2SelfAssessTax = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalTax = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2WithholdTax = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3SelfAssessTax = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalTax = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3WithholdTax = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesOrderLinked = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelfAssessTax = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactor = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactorDirection = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToAddressList = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactEMailAddress = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContactName = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToSelected = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNEnable = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisRelInvtyQty = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalJobStockShipped = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalTax = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateMarkForRecords = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidOrder = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithholdTax = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowTaxCodeUpd = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalTax = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisablePlantWhse = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableBuyToOrder = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLineLineDesc = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFCountryDescription = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCntryDescription = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress3 = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointZip = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointName = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointCountry = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress1 = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointState = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointCity = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress2 = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointPrimPCon = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCodeDescription = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TPShipToName = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TPShipToBTName = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TPShipToCustID = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumState = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumZIP = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress2 = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCountry = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCurrencyCode = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCity = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress3 = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumVendorID = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumDefaultFOB = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumTermsCode = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress1 = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCodeDescription = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 265,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderRelTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderRelTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discount = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDiscount = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Discount = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Discount = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Discount = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesTaxDescDescription = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionTypeDescription = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoChangeManual = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryProcess = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescDescription = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 75,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderRepCommRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderRepCommRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesRepCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommLines = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommSaleAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Seq = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartSubsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartSubsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPart = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyPer = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultSub = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Price = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuggestedQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selected = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SugOrderQty = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartSellingFactor = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartTrackSerialNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartTrackDimension = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartPartDescription = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartIUM = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartSalesUM = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartTrackLots = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartPricePerCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 33,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SNFormatRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfDigits = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadingZeroes = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasSerialNumbers = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMaskType = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskExample = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskDescription = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectedSerialNumbersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrapped = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrappedReasonCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseNumber = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedInspection = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deselected = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrAction = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrActionDesc = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreventDeselect = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartType = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreDeselected = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSavedToDB = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxConnectStatusRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum TaxConnectStatusRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETCOffline = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorMessage = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TCStatus = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHedListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum OrderHedListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenOrder = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoidOrder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHeld = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDate = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositBal = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDepositBal = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustOnCreditHold = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBTName = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNumCustID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNumName = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandContract = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 22,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveOTSParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SaveOTSParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress1 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress2 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddress3 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCity = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSContact = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCountryNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCustSaved = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSFaxNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSPhoneNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSResaleID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaveAs = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaveCustID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSSaved = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSShipToNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSState = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSTaxRegionCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSZIP = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSOverride = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 21,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCAddressRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ETCAddressRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line1 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line2 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line3 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostalCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Region = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSource = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSourceID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateAddr = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateAllowed = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressType = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarrierRoute = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidCity = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidCountry = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        County = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FipsCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine1 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine2 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine3 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidLine4 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidPostalCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostNet = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidRegion = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultCode = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultSeq = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarrierRouteDesc = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeDesc = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSCountry = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACWPercentage = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 39,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETCMessageRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ETCMessageRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Details = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Helplink = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefersTo = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Severity = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Source = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Summary = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSource = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrSourceID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobProdRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum JobProdRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdQty = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetJobNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetAssemblySeq = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetMtlSeq = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippedQty = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedQty = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIPQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallLine = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFLineNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandContractNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandHeadSeq = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandDtlSeq = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandScheduleSeq = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlanUserID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlanID = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AsmPartDesc = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AsmPartNum = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustName = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandLinkSource = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandLinkStatus = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JHPartDesc = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JHPartNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MakeToJobQty = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MakeToStockQty = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MakeToType = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxAllowedQty = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlPartDesc = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlPartNum = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrdWIPQty = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurStockQty = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PullFromStockWarehouseCode = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PullFromStockWarehouseDesc = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipBy = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SplitQty = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StkWIPQty = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdLine = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdNum = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalSplitQuantity = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackSerialNumbers = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Valid = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallLineLineDesc = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNumPartDescription = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLineLineDesc = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCodeDescription = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 69,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectSerialNumbersParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectSerialNumbersParamsRow")]
    [System.SerializableAttribute()]
    public class SelectSerialNumbersParamsTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SOEntryUIParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SOEntryUIParamsRow")]
    [System.SerializableAttribute()]
    public class SOEntryUIParamsTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="GlbSugPOChgTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="GlbSugPOChgRow")]
    [System.SerializableAttribute()]
    public class GlbSugPOChgTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="HedTaxSumTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="HedTaxSumRow")]
    [System.SerializableAttribute()]
    public class HedTaxSumTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.HedTaxSumRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OHOrderMscTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OHOrderMscRow")]
    [System.SerializableAttribute()]
    public class OHOrderMscTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OHOrderMscRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderDtlTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderDtlRow")]
    [System.SerializableAttribute()]
    public class OrderDtlTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderDtlRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderDtlAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderDtlAttchRow")]
    [System.SerializableAttribute()]
    public class OrderDtlAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderDtlAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderHedTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderHedRow")]
    [System.SerializableAttribute()]
    public class OrderHedTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderHedRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderHedAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderHedAttchRow")]
    [System.SerializableAttribute()]
    public class OrderHedAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderHedAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderHedUPSTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderHedUPSRow")]
    [System.SerializableAttribute()]
    public class OrderHedUPSTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderHedUPSRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderHistTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderHistRow")]
    [System.SerializableAttribute()]
    public class OrderHistTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderHistRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderMscTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderMscRow")]
    [System.SerializableAttribute()]
    public class OrderMscTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderMscRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderRelTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderRelRow")]
    [System.SerializableAttribute()]
    public class OrderRelTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderRelRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderRelTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderRelTaxRow")]
    [System.SerializableAttribute()]
    public class OrderRelTaxTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderRelTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderRepCommTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderRepCommRow")]
    [System.SerializableAttribute()]
    public class OrderRepCommTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderRepCommRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartSubsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartSubsRow")]
    [System.SerializableAttribute()]
    public class PartSubsTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.PartSubsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SNFormatTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SNFormatRow")]
    [System.SerializableAttribute()]
    public class SNFormatTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.SNFormatRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectedSerialNumbersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectedSerialNumbersRow")]
    [System.SerializableAttribute()]
    public class SelectedSerialNumbersTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.SelectedSerialNumbersRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TaxConnectStatusTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="TaxConnectStatusRow")]
    [System.SerializableAttribute()]
    public class TaxConnectStatusTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.TaxConnectStatusRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OrderHedListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="OrderHedListRow")]
    [System.SerializableAttribute()]
    public class OrderHedListTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.OrderHedListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SaveOTSParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SaveOTSParamsRow")]
    [System.SerializableAttribute()]
    public class SaveOTSParamsTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ETCAddressTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ETCAddressRow")]
    [System.SerializableAttribute()]
    public class ETCAddressTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.ETCAddressRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ETCMessageTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ETCMessageRow")]
    [System.SerializableAttribute()]
    public class ETCMessageTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.ETCMessageRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="JobProdTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="JobProdRow")]
    [System.SerializableAttribute()]
    public class JobProdTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.JobProdRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<EpicorConsole.Epicor.SalesOrderSvc.BOUpdErrorRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:SalesOrder", ConfigurationName="Epicor.SalesOrderSvc.SalesOrderSvcContract")]
    public interface SalesOrderSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetQuoteQty", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetQuoteQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetQuoteQtyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyResponse GetQuoteQty(EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetQuoteQty", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetQuoteQtyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyResponse> GetQuoteQtyAsync(EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRowsCustomerTracker", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRowsCustomerTrackerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRowsCustomerTrackerEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerResponse GetRowsCustomerTracker(EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRowsCustomerTracker", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRowsCustomerTrackerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerResponse> GetRowsCustomerTrackerAsync(EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSelectSerialNumbersParamsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSelectSerialNumbersParamsEpicorFaultDe" +
            "tailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipPartNum, string ipWhseCode, string ipBinNum, decimal ipQuantity, string ipTranType, System.Guid ipRowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSelectSerialNumbersParamsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipPartNum, string ipWhseCode, string ipBinNum, decimal ipQuantity, string ipTranType, System.Guid ipRowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSmartString", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSmartStringResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSmartStringEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringResponse GetSmartString(EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSmartString", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetSmartStringResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringResponse> GetSmartStringAsync(EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetUIParams", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetUIParamsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetUIParamsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsTableset GetUIParams();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetUIParams", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetUIParamsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsTableset> GetUIParamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgDelete", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgDeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgDeleteEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset GlbSugPOChgDelete(string cRowIdent);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgDelete", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgDeleteResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset> GlbSugPOChgDeleteAsync(string cRowIdent);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgUpdate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateResponse GlbSugPOChgUpdate(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgUpdate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GlbSugPOChgUpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateResponse> GlbSugPOChgUpdateAsync(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/JobProdDelete", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/JobProdDeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/JobProdDeleteEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void JobProdDelete(int iOrderNum, int iOrderLine, int iOrderRelNum, string cJobNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/JobProdDelete", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/JobProdDeleteResponse")]
        System.Threading.Tasks.Task JobProdDeleteAsync(int iOrderNum, int iOrderLine, int iOrderRelNum, string cJobNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/KitCompPartCreate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/KitCompPartCreateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/KitCompPartCreateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="NewPartAlreadyExists")]
        bool KitCompPartCreate(int OrderNum, int OrderLine, string PartNum, string RevisionNum, string SmartString, string NewPartNum, string NewCustPartNum, bool ResponseAutoCrtPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/KitCompPartCreate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/KitCompPartCreateResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="NewPartAlreadyExists")]
        System.Threading.Tasks.Task<bool> KitCompPartCreateAsync(int OrderNum, int OrderLine, string PartNum, string RevisionNum, string SmartString, string NewPartNum, string NewCustPartNum, bool ResponseAutoCrtPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/MasterUpdate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/MasterUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/MasterUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateResponse MasterUpdate(EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/MasterUpdate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/MasterUpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateResponse> MasterUpdateAsync(EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeARLOCID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeARLOCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeARLOCIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDResponse OnChangeARLOCID(EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeARLOCID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeARLOCIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDResponse> OnChangeARLOCIDAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeCreditCardOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeCreditCardOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeCreditCardOrderEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderResponse OnChangeCreditCardOrder(EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeCreditCardOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeCreditCardOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderResponse> OnChangeCreditCardOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTConNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTConNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTConNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumResponse OnChangeofBTConNum(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTConNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTConNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumResponse> OnChangeofBTConNumAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTCustID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTCustIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTCustIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDResponse OnChangeofBTCustID(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTCustID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofBTCustIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDResponse> OnChangeofBTCustIDAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfFixedAmount", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfFixedAmountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfFixedAmountEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountResponse OnChangeOfFixedAmount(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfFixedAmount", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfFixedAmountResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountResponse> OnChangeOfFixedAmountAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgCampaign", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgCampaignResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgCampaignEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignResponse OnChangeOfMktgCampaign(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgCampaign", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgCampaignResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignResponse> OnChangeOfMktgCampaignAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgEvnt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgEvntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgEvntEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntResponse OnChangeOfMktgEvnt(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgEvnt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfMktgEvntResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntResponse> OnChangeOfMktgEvntAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofPhaseID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofPhaseIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofPhaseIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDResponse OnChangeofPhaseID(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofPhaseID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofPhaseIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDResponse> OnChangeofPhaseIDAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofSoldToCreditCheck", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofSoldToCreditCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofSoldToCreditCheckEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckResponse OnChangeofSoldToCreditCheck(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofSoldToCreditCheck", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofSoldToCreditCheckResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckResponse> OnChangeofSoldToCreditCheckAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxAmt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtResponse OnChangeOfTaxAmt(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxAmt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtResponse> OnChangeOfTaxAmtAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxPercent", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxPercentEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentResponse OnChangeOfTaxPercent(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxPercent", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeOfTaxPercentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentResponse> OnChangeOfTaxPercentAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofTaxRgn", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofTaxRgnResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofTaxRgnEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnResponse OnChangeofTaxRgn(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofTaxRgn", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeofTaxRgnResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnResponse> OnChangeofTaxRgnAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeRateCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeRateCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeRateCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeResponse OnChangeRateCode(EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeRateCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeRateCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeResponse> OnChangeRateCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxableAmt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxableAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtResponse OnChangeTaxableAmt(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxableAmt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxableAmtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtResponse> OnChangeTaxableAmtAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeResponse OnChangeTaxCode(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTaxCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeResponse> OnChangeTaxCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewContracts", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewContractsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewContractsEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsResponse OrderDtlGetNewContracts(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewContracts", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewContractsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsResponse> OrderDtlGetNewContractsAsync(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewCounterSale", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewCounterSaleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewCounterSaleEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleResponse OrderDtlGetNewCounterSale(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewCounterSale", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewCounterSaleResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleResponse> OrderDtlGetNewCounterSaleAsync(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewFromQuote", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewFromQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewFromQuoteEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteResponse OrderDtlGetNewFromQuote(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewFromQuote", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OrderDtlGetNewFromQuoteResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteResponse> OrderDtlGetNewFromQuoteAsync(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OverCreditLimitUpdateAllowed", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OverCreditLimitUpdateAllowedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OverCreditLimitUpdateAllowedEpicorFaultDe" +
            "tailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="lUpdateAllowed")]
        bool OverCreditLimitUpdateAllowed(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OverCreditLimitUpdateAllowed", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OverCreditLimitUpdateAllowedResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="lUpdateAllowed")]
        System.Threading.Tasks.Task<bool> OverCreditLimitUpdateAllowedAsync(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/PhantomComponents", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/PhantomComponentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/PhantomComponentsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsResponse PhantomComponents(EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/PhantomComponents", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/PhantomComponentsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsResponse> PhantomComponentsAsync(EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessCounterSale", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessCounterSaleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessCounterSaleEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleResponse ProcessCounterSale(EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessCounterSale", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessCounterSaleResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleResponse> ProcessCounterSaleAsync(EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessQuickEntry", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessQuickEntryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessQuickEntryEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryResponse ProcessQuickEntry(EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessQuickEntry", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ProcessQuickEntryResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryResponse> ProcessQuickEntryAsync(EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/RebuildShipUPS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/RebuildShipUPSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/RebuildShipUPSEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSResponse RebuildShipUPS(EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/RebuildShipUPS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/RebuildShipUPSResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSResponse> RebuildShipUPSAsync(EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/RecalcKitPriceAfterConfig", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/RecalcKitPriceAfterConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/RecalcKitPriceAfterConfigEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void RecalcKitPriceAfterConfig(int iOrderNum, int iOrderLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/RecalcKitPriceAfterConfig", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/RecalcKitPriceAfterConfigResponse")]
        System.Threading.Tasks.Task RecalcKitPriceAfterConfigAsync(int iOrderNum, int iOrderLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/RemoveICPOLink", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/RemoveICPOLinkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/RemoveICPOLinkEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset RemoveICPOLink(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/RemoveICPOLink", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/RemoveICPOLinkResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> RemoveICPOLinkAsync(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ReopenOrder(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> ReopenOrderAsync(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrderLine", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrderLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrderLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ReopenOrderLine(int iOrderNum, int iOrderLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrderLine", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenOrderLineResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> ReopenOrderLineAsync(int iOrderNum, int iOrderLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenRelease", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenReleaseEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ReopenRelease(int iOrderNum, int iOrderLine, int iOrderRelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenRelease", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ReopenReleaseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> ReopenReleaseAsync(int iOrderNum, int iOrderLine, int iOrderRelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/REVISIONHISTORY06", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/REVISIONHISTORY06Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/REVISIONHISTORY06EpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void REVISIONHISTORY06();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/REVISIONHISTORY06", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/REVISIONHISTORY06Response")]
        System.Threading.Tasks.Task REVISIONHISTORY06Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SendLinkedICPOSuggestion", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SendLinkedICPOSuggestionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SendLinkedICPOSuggestionEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void SendLinkedICPOSuggestion();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SendLinkedICPOSuggestion", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SendLinkedICPOSuggestionResponse")]
        System.Threading.Tasks.Task SendLinkedICPOSuggestionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SetCalcQtysPref", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SetCalcQtysPrefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SetCalcQtysPrefEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void SetCalcQtysPref(bool ipCalcQtyPref);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SetCalcQtysPref", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SetCalcQtysPrefResponse")]
        System.Threading.Tasks.Task SetCalcQtysPrefAsync(bool ipCalcQtyPref);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SetReadyToCalc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SetReadyToCalcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SetReadyToCalcEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcResponse SetReadyToCalc(EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SetReadyToCalc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SetReadyToCalcResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcResponse> SetReadyToCalcAsync(EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SetUPSQVEnable", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SetUPSQVEnableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SetUPSQVEnableEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableResponse SetUPSQVEnable(EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SetUPSQVEnable", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SetUPSQVEnableResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableResponse> SetUPSQVEnableAsync(EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateInvQty", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateInvQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateInvQtyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyResponse ValidateInvQty(EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateInvQty", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateInvQtyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyResponse> ValidateInvQtyAsync(EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSN", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSNEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isVoided")]
        bool ValidateSN(string ipSerialNum, string ipPartNum, decimal ipOurInvShipQty, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, string ipWarehouseCode, string ipBinNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSN", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSNResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isVoided")]
        System.Threading.Tasks.Task<bool> ValidateSNAsync(string ipSerialNum, string ipPartNum, decimal ipOurInvShipQty, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, string ipWarehouseCode, string ipBinNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSNs", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSNsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSNsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsResponse ValidateSNs(EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSNs", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateSNsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsResponse> ValidateSNsAsync(EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/VerifySendICPOSugg", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/VerifySendICPOSuggResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/VerifySendICPOSuggEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cVerifySendMsgText")]
        string VerifySendICPOSugg();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/VerifySendICPOSugg", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/VerifySendICPOSuggResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cVerifySendMsgText")]
        System.Threading.Tasks.Task<string> VerifySendICPOSuggAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/HasMultipleSubs", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/HasMultipleSubsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/HasMultipleSubsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool HasMultipleSubs(string iPartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/HasMultipleSubs", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/HasMultipleSubsResponse")]
        System.Threading.Tasks.Task<bool> HasMultipleSubsAsync(string iPartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/IsRunOutOnHand", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/IsRunOutOnHandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/IsRunOutOnHandEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool IsRunOutOnHand(string iPartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/IsRunOutOnHand", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/IsRunOutOnHandResponse")]
        System.Threading.Tasks.Task<bool> IsRunOutOnHandAsync(string iPartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SubmitNewOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SubmitNewOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SubmitNewOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderResponse SubmitNewOrder(EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/SubmitNewOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/SubmitNewOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderResponse> SubmitNewOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ECCUpdate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ECCUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ECCUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateResponse ECCUpdate(EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ECCUpdate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ECCUpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateResponse> ECCUpdateAsync(EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExistingOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExistingOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExistingOrderEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void UpdateExistingOrder(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExistingOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExistingOrderResponse")]
        System.Threading.Tasks.Task UpdateExistingOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateOrderDtlDiscountPercent", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateOrderDtlDiscountPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateOrderDtlDiscountPercentEpicorFaultD" +
            "etailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset UpdateOrderDtlDiscountPercent(int orderNum, string orderLines);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateOrderDtlDiscountPercent", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateOrderDtlDiscountPercentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> UpdateOrderDtlDiscountPercentAsync(int orderNum, string orderLines);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBasePartForConfig", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBasePartForConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBasePartForConfigEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigResponse GetBasePartForConfig(EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBasePartForConfig", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBasePartForConfigResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigResponse> GetBasePartForConfigAsync(EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/InvoiceExists", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/InvoiceExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/InvoiceExistsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool InvoiceExists(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/InvoiceExists", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/InvoiceExistsResponse")]
        System.Threading.Tasks.Task<bool> InvoiceExistsAsync(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTranDocTypeID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTranDocTypeIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTranDocTypeIDEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDResponse OnChangeTranDocTypeID(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTranDocTypeID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/OnChangeTranDocTypeIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDResponse> OnChangeTranDocTypeIDAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateProjectID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateProjectIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateProjectIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDResponse ValidateProjectID(EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateProjectID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateProjectIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDResponse> ValidateProjectIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateCustomer", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerResponse ValidateCustomer(EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateCustomer", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ValidateCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerResponse> ValidateCustomerAsync(EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHed", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedResponse GetNewOrderHed(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHed", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedResponse> GetNewOrderHedAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedAttch", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedAttchEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchResponse GetNewOrderHedAttch(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedAttch", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchResponse> GetNewOrderHedAttchAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOHOrderMsc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOHOrderMscResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOHOrderMscEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscResponse GetNewOHOrderMsc(EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOHOrderMsc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOHOrderMscResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscResponse> GetNewOHOrderMscAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtl", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlResponse GetNewOrderDtl(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtl", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtlResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlResponse> GetNewOrderDtlAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtlAttch", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtlAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtlAttchEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchResponse GetNewOrderDtlAttch(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtlAttch", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderDtlAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchResponse> GetNewOrderDtlAttchAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderMsc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderMscResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderMscEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscResponse GetNewOrderMsc(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderMsc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderMscResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscResponse> GetNewOrderMscAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRel", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRelEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelResponse GetNewOrderRel(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRel", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRelResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelResponse> GetNewOrderRelAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRelTax", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRelTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRelTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxResponse GetNewOrderRelTax(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRelTax", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderRelTaxResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxResponse> GetNewOrderRelTaxAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedUPS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedUPSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedUPSEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSResponse GetNewOrderHedUPS(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedUPS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewOrderHedUPSResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSResponse> GetNewOrderHedUPSAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/DeleteByID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/DeleteByID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetByID(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> GetByIDAsync(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetListResponse GetList(EpicorConsole.Epicor.SalesOrderSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.SalesOrderSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRows", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetRowsResponse GetRows(EpicorConsole.Epicor.SalesOrderSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRows", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.SalesOrderSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/Update", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.UpdateResponse Update(EpicorConsole.Epicor.SalesOrderSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/Update", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.SalesOrderSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.UpdateExtResponse UpdateExt(EpicorConsole.Epicor.SalesOrderSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.SalesOrderSvc.UpdateExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/getBreakListCodeDesc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/getBreakListCodeDescResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/getBreakListCodeDescEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string getBreakListCodeDesc(string pcListCode, string pcPartNum, string pcLineWarehouse, string pcCurrencyCode, System.Nullable<System.DateTime> pdtOrderDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/getBreakListCodeDesc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/getBreakListCodeDescResponse")]
        System.Threading.Tasks.Task<string> getBreakListCodeDescAsync(string pcListCode, string pcPartNum, string pcLineWarehouse, string pcCurrencyCode, System.Nullable<System.DateTime> pdtOrderDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ApplyOrderBasedDiscounts", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ApplyOrderBasedDiscountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ApplyOrderBasedDiscountsEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ApplyOrderBasedDiscounts(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ApplyOrderBasedDiscounts", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ApplyOrderBasedDiscountsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> ApplyOrderBasedDiscountsAsync(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCodeDescList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCodeDescListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCodeDescList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/NegativeInventoryTestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/NegativeInventoryTestEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestResponse NegativeInventoryTest(EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/NegativeInventoryTestResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestResponse> NegativeInventoryTestAsync(EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CCClear", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CCClearResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CCClearEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CCClearResponse CCClear(EpicorConsole.Epicor.SalesOrderSvc.CCClearRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CCClear", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CCClearResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CCClearResponse> CCClearAsync(EpicorConsole.Epicor.SalesOrderSvc.CCClearRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CCLoadTranData", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CCLoadTranDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CCLoadTranDataEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataResponse CCLoadTranData(EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CCLoadTranData", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CCLoadTranDataResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataResponse> CCLoadTranDataAsync(EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CCProcessCard", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CCProcessCardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CCProcessCardEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardResponse CCProcessCard(EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CCProcessCard", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CCProcessCardResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardResponse> CCProcessCardAsync(EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeBTCustIDMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeBTCustIDMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeBTCustIDMasterEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterResponse ChangeBTCustIDMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeBTCustIDMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeBTCustIDMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterResponse> ChangeBTCustIDMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCardNumber", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCardNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCardNumberEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberResponse ChangeCardNumber(EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCardNumber", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCardNumberResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberResponse> ChangeCardNumberAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCCAmounts", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCCAmountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCCAmountsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsResponse ChangeCCAmounts(EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCCAmounts", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCCAmountsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsResponse> ChangeCCAmountsAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCommissionable", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCommissionableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCommissionableEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableResponse ChangeCommissionable(EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCommissionable", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCommissionableResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableResponse> ChangeCommissionableAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumResponse ChangeContractNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumResponse> ChangeContractNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNumMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNumMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNumMasterEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterResponse ChangeContractNumMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNumMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeContractNumMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterResponse> ChangeContractNumMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCounterSale", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCounterSaleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCounterSaleEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleResponse ChangeCounterSale(EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCounterSale", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCounterSaleResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleResponse> ChangeCounterSaleAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCreditExp", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCreditExpResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCreditExpEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpResponse ChangeCreditExp(EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCreditExp", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCreditExpResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpResponse> ChangeCreditExpAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCurrencyCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCurrencyCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCurrencyCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeResponse ChangeCurrencyCode(EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCurrencyCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCurrencyCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeResponse> ChangeCurrencyCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCustomer", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCustomerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerResponse ChangeCustomer(EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCustomer", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeCustomerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerResponse> ChangeCustomerAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangedCardNumber", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangedCardNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangedCardNumberEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberResponse ChangedCardNumber(EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangedCardNumber", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangedCardNumberResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberResponse> ChangedCardNumberAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscBreakListCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscBreakListCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscBreakListCodeEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeResponse ChangeDiscBreakListCode(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscBreakListCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscBreakListCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeResponse> ChangeDiscBreakListCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountAmount", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountAmountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountAmountEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountResponse ChangeDiscountAmount(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountAmount", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountAmountResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountResponse> ChangeDiscountAmountAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountPercent", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountPercentEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentResponse ChangeDiscountPercent(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountPercent", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeDiscountPercentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentResponse> ChangeDiscountPercentAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeERSOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeERSOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeERSOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderResponse ChangeERSOrder(EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeERSOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeERSOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderResponse> ChangeERSOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeGroup", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeGroupEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupResponse ChangeGroup(EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeGroup", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeGroupResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupResponse> ChangeGroupAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedOTSCountryNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedOTSCountryNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedOTSCountryNumEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumResponse ChangeHedOTSCountryNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedOTSCountryNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedOTSCountryNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumResponse> ChangeHedOTSCountryNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedUseOTS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedUseOTSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedUseOTSEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSResponse ChangeHedUseOTS(EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedUseOTS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeHedUseOTSResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSResponse> ChangeHedUseOTSAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitPricing", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitPricingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitPricingEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingResponse ChangeKitPricing(EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitPricing", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitPricingResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingResponse> ChangeKitPricingAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitQtyPer", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitQtyPerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitQtyPerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerResponse ChangeKitQtyPer(EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitQtyPer", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeKitQtyPerResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerResponse> ChangeKitQtyPerAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMake", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMakeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMakeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeResponse ChangeMake(EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMake", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMakeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeResponse> ChangeMakeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeManualTaxCalc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeManualTaxCalcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeManualTaxCalcEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcResponse ChangeManualTaxCalc(EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeManualTaxCalc", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeManualTaxCalcResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcResponse> ChangeManualTaxCalcAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscAmount", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscAmountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscAmountEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountResponse ChangeMiscAmount(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscAmount", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscAmountResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountResponse> ChangeMiscAmountAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeResponse ChangeMiscCode(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeResponse> ChangeMiscCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscPercent", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscPercentEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentResponse ChangeMiscPercent(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscPercent", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeMiscPercentResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentResponse> ChangeMiscPercentAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNeedByDate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNeedByDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNeedByDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateResponse ChangeNeedByDate(EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNeedByDate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNeedByDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateResponse> ChangeNeedByDateAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewNeedByDate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewNeedByDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewNeedByDateEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateResponse ChangeNewNeedByDate(EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewNeedByDate", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewNeedByDateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateResponse> ChangeNewNeedByDateAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewSellingQuantity", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewSellingQuantityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewSellingQuantityEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityResponse ChangeNewSellingQuantity(EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewSellingQuantity", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeNewSellingQuantityResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityResponse> ChangeNewSellingQuantityAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderDtlPWContract", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderDtlPWContractResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderDtlPWContractEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractResponse ChangeOrderDtlPWContract(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderDtlPWContract", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderDtlPWContractResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractResponse> ChangeOrderDtlPWContractAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeODtlWarehouse", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeODtlWarehouseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeODtlWarehouseEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseResponse ChangeODtlWarehouse(EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeODtlWarehouse", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeODtlWarehouseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseResponse> ChangeODtlWarehouseAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelBuyToOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelBuyToOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelBuyToOrderEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderResponse ChangeOrderRelBuyToOrder(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelBuyToOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelBuyToOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderResponse> ChangeOrderRelBuyToOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelDropShip", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelDropShipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelDropShipEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipResponse ChangeOrderRelDropShip(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelDropShip", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelDropShipResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipResponse> ChangeOrderRelDropShipAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMarkForNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMarkForNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMarkForNumEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumResponse ChangeOrderRelMarkForNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMarkForNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMarkForNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumResponse> ChangeOrderRelMarkForNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMFCustID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMFCustIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMFCustIDEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDResponse ChangeOrderRelMFCustID(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMFCustID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelMFCustIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDResponse> ChangeOrderRelMFCustIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelPWContract", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelPWContractResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelPWContractEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractResponse ChangeOrderRelPWContract(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelPWContract", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelPWContractResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractResponse> ChangeOrderRelPWContractAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipTo", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToResponse ChangeOrderRelShipTo(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipTo", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToResponse> ChangeOrderRelShipToAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToContact", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToContactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToContactEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactResponse ChangeOrderRelShipToContact(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToContact", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToContactResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactResponse> ChangeOrderRelShipToContactAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToCustID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToCustIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToCustIDEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDResponse ChangeOrderRelShipToCustID(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToCustID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelShipToCustIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDResponse> ChangeOrderRelShipToCustIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelUseOTMF", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelUseOTMFResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelUseOTMFEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFResponse ChangeOrderRelUseOTMF(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelUseOTMF", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelUseOTMFResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFResponse> ChangeOrderRelUseOTMFAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelVendorID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelVendorIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelVendorIDEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDResponse ChangeOrderRelVendorID(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelVendorID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOrderRelVendorIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDResponse> ChangeOrderRelVendorIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeORelWarehouse", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeORelWarehouseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeORelWarehouseEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseResponse ChangeORelWarehouse(EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeORelWarehouse", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeORelWarehouseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseResponse> ChangeORelWarehouseAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverrideDiscPriceList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverrideDiscPriceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverrideDiscPriceListEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListResponse ChangeOverrideDiscPriceList(EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverrideDiscPriceList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverrideDiscPriceListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListResponse> ChangeOverrideDiscPriceListAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverridePriceList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverridePriceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverridePriceListEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListResponse ChangeOverridePriceList(EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverridePriceList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeOverridePriceListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListResponse> ChangeOverridePriceListAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumResponse ChangePartNum(EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumResponse> ChangePartNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNumMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNumMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNumMasterEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterResponse ChangePartNumMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNumMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePartNumMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterResponse> ChangePartNumMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePlant", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePlantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePlantEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePlantResponse ChangePlant(EpicorConsole.Epicor.SalesOrderSvc.ChangePlantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePlant", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePlantResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePlantResponse> ChangePlantAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePlantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePriceList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePriceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePriceListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListResponse ChangePriceList(EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePriceList", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePriceListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListResponse> ChangePriceListAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePricePerCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePricePerCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePricePerCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeResponse ChangePricePerCode(EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePricePerCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangePricePerCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeResponse> ChangePricePerCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuickEntryOption", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuickEntryOptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuickEntryOptionEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionResponse ChangeQuickEntryOption(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuickEntryOption", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuickEntryOptionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionResponse> ChangeQuickEntryOptionAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteLine", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineResponse ChangeQuoteLine(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteLine", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteLineResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineResponse> ChangeQuoteLineAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteQtyNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteQtyNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteQtyNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumResponse ChangeQuoteQtyNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteQtyNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeQuoteQtyNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumResponse> ChangeQuoteQtyNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRelUseOTS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRelUseOTSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRelUseOTSEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSResponse ChangeRelUseOTS(EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRelUseOTS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRelUseOTSResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSResponse> ChangeRelUseOTSAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbr", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbrResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbrEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrResponse ChangeRenewalNbr(EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbr", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbrResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrResponse> ChangeRenewalNbrAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbrMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbrMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbrMasterEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterResponse ChangeRenewalNbrMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbrMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRenewalNbrMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterResponse> ChangeRenewalNbrMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevisionNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevisionNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevisionNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumResponse ChangeRevisionNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevisionNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevisionNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumResponse> ChangeRevisionNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevNumMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevNumMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevNumMasterEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterResponse ChangeRevNumMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevNumMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRevNumMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterResponse> ChangeRevNumMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRMANum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRMANumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRMANumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumResponse ChangeRMANum(EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRMANum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeRMANumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumResponse> ChangeRMANumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesRep", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesRepResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesRepEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepResponse ChangeSalesRep(EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesRep", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesRepResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepResponse> ChangeSalesRepAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesUOM", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesUOMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesUOMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMResponse ChangeSalesUOM(EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesUOM", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSalesUOMResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMResponse> ChangeSalesUOMAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQtyMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQtyMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQtyMasterEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterResponse ChangeSellingQtyMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQtyMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQtyMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterResponse> ChangeSellingQtyMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQuantity", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQuantityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQuantityEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityResponse ChangeSellingQuantity(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQuantity", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingQuantityResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityResponse> ChangeSellingQuantityAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingReqQty", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingReqQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingReqQtyEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyResponse ChangeSellingReqQty(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingReqQty", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSellingReqQtyResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyResponse> ChangeSellingReqQtyAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToContact", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToContactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToContactEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactResponse ChangeShipToContact(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToContact", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToContactResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactResponse> ChangeShipToContactAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToCustID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToCustIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToCustIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDResponse ChangeShipToCustID(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToCustID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToCustIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDResponse> ChangeShipToCustIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDResponse ChangeShipToID(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeShipToIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDResponse> ChangeShipToIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToContact", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToContactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToContactEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactResponse ChangeSoldToContact(EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToContact", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToContactResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactResponse> ChangeSoldToContactAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDResponse ChangeSoldToID(EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeSoldToIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDResponse> ChangeSoldToIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeTaxRegionCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeTaxRegionCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeTaxRegionCodeEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ChangeTaxRegionCode(int ipOrderNum, string ipNewCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeTaxRegionCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeTaxRegionCodeResponse")]
        System.Threading.Tasks.Task ChangeTaxRegionCodeAsync(int ipOrderNum, string ipNewCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeUnitPrice", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeUnitPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeUnitPriceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceResponse ChangeUnitPrice(EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeUnitPrice", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeUnitPriceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceResponse> ChangeUnitPriceAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeVendorChange", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeVendorChangeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeVendorChangeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeResponse ChangeVendorChange(EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeVendorChange", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeVendorChangeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeResponse> ChangeVendorChangeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeWhseCodeMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeWhseCodeMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeWhseCodeMasterEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterResponse ChangeWhseCodeMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeWhseCodeMaster", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeWhseCodeMasterResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterResponse> ChangeWhseCodeMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeProjectID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeProjectIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeProjectIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDResponse ChangeProjectID(EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeProjectID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeProjectIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDResponse> ChangeProjectIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeXPartNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeXPartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeXPartNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumResponse ChangeXPartNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeXPartNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ChangeXPartNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumResponse> ChangeXPartNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceFail", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceFailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceFailEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="compliant")]
        bool CheckComplianceFail(int orderNum, int orderLine, int orderRelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceFail", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceFailResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="compliant")]
        System.Threading.Tasks.Task<bool> CheckComplianceFailAsync(int orderNum, int orderLine, int orderRelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceOrderFail", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceOrderFailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceOrderFailEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="compliantMsg")]
        string CheckComplianceOrderFail(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceOrderFail", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckComplianceOrderFailResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="compliantMsg")]
        System.Threading.Tasks.Task<string> CheckComplianceOrderFailAsync(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckConfiguration", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckConfigurationEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationResponse CheckConfiguration(EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckConfiguration", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckConfigurationResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationResponse> CheckConfigurationAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckContractNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckContractNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckContractNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CheckContractNum(int iOrderNum, int iOrderLine, int iContractNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckContractNum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckContractNumResponse")]
        System.Threading.Tasks.Task CheckContractNumAsync(int iOrderNum, int iOrderLine, int iContractNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditLimit", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditLimitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditLimitEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitResponse CheckCustomerCreditLimit(EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditLimit", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditLimitResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitResponse> CheckCustomerCreditLimitAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditRelease", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditReleaseEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseResponse CheckCustomerCreditRelease(EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditRelease", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustomerCreditReleaseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseResponse> CheckCustomerCreditReleaseAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustOnCreditHold", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustOnCreditHoldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustOnCreditHoldEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldResponse CheckCustOnCreditHold(EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustOnCreditHold", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckCustOnCreditHoldResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldResponse> CheckCustOnCreditHoldAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPO", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPOEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="icpoFound")]
        bool CheckICPO();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPO", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPOResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="icpoFound")]
        System.Threading.Tasks.Task<bool> CheckICPOAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPOReadyToSend", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPOReadyToSendResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPOReadyToSendEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cReadyToSendMsgText")]
        string CheckICPOReadyToSend(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPOReadyToSend", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckICPOReadyToSendResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cReadyToSendMsgText")]
        System.Threading.Tasks.Task<string> CheckICPOReadyToSendAsync(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckKitRevision", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckKitRevisionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckKitRevisionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outMsg")]
        string CheckKitRevision(string iPartNum, string iRevisionNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckKitRevision", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckKitRevisionResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outMsg")]
        System.Threading.Tasks.Task<string> CheckKitRevisionAsync(string iPartNum, string iRevisionNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckLtrOfCrdt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckLtrOfCrdtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckLtrOfCrdtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtResponse CheckLtrOfCrdt(EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckLtrOfCrdt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckLtrOfCrdtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtResponse> CheckLtrOfCrdtAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckMakeDirectReleases", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckMakeDirectReleasesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckMakeDirectReleasesEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opIssueWarning")]
        bool CheckMakeDirectReleases(int ipOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckMakeDirectReleases", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckMakeDirectReleasesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opIssueWarning")]
        System.Threading.Tasks.Task<bool> CheckMakeDirectReleasesAsync(int ipOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedDispatchReason", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedDispatchReasonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedDispatchReasonEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonResponse CheckOrderHedDispatchReason(EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedDispatchReason", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedDispatchReasonResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonResponse> CheckOrderHedDispatchReasonAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedChanges", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedChangesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedChangesEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesResponse CheckOrderHedChanges(EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedChanges", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderHedChangesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesResponse> CheckOrderHedChangesAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderLinkToInterCompanyPO", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderLinkToInterCompanyPOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderLinkToInterCompanyPOEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cICPOLinkMessage")]
        string CheckOrderLinkToInterCompanyPO(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderLinkToInterCompanyPO", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckOrderLinkToInterCompanyPOResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cICPOLinkMessage")]
        System.Threading.Tasks.Task<string> CheckOrderLinkToInterCompanyPOAsync(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckPartRevisionChange", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckPartRevisionChangeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckPartRevisionChangeEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeResponse CheckPartRevisionChange(EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckPartRevisionChange", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckPartRevisionChangeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeResponse> CheckPartRevisionChangeAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckProjectID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckProjectIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckProjectIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDResponse CheckProjectID(EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckProjectID", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckProjectIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDResponse> CheckProjectIDAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteLinesNoQuantity", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteLinesNoQuantityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteLinesNoQuantityEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cQuoteLineWOQtyMsgText")]
        string CheckQuoteLinesNoQuantity(int iQuoteNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteLinesNoQuantity", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteLinesNoQuantityResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cQuoteLineWOQtyMsgText")]
        System.Threading.Tasks.Task<string> CheckQuoteLinesNoQuantityAsync(int iQuoteNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRateGrpCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRateGrpCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRateGrpCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeResponse CheckRateGrpCode(EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRateGrpCode", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRateGrpCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeResponse> CheckRateGrpCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRenewalNbr", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRenewalNbrResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRenewalNbrEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CheckRenewalNbr(int iOrderNum, int iOrderLine, int iContractNum, int iRenewalNbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRenewalNbr", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckRenewalNbrResponse")]
        System.Threading.Tasks.Task CheckRenewalNbrAsync(int iOrderNum, int iOrderLine, int iContractNum, int iRenewalNbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingFactorDirection", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingFactorDirectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingFactorDirectionEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionResponse CheckSellingFactorDirection(EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingFactorDirection", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingFactorDirectionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionResponse> CheckSellingFactorDirectionAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingQuantityChange", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingQuantityChangeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingQuantityChangeEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cSellingQuantityChangedMsgText")]
        string CheckSellingQuantityChange(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, decimal dSellingQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingQuantityChange", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSellingQuantityChangeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cSellingQuantityChangedMsgText")]
        System.Threading.Tasks.Task<string> CheckSellingQuantityChangeAsync(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, decimal dSellingQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSONum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSONumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSONumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckSONumResponse CheckSONum(EpicorConsole.Epicor.SalesOrderSvc.CheckSONumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSONum", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckSONumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckSONumResponse> CheckSONumAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckSONumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteForCreditLimit", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteForCreditLimitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteForCreditLimitEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitResponse CheckQuoteForCreditLimit(EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteForCreditLimit", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CheckQuoteForCreditLimitResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitResponse> CheckQuoteForCreditLimitAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/chkCustomerCreditLimitForCopyOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/chkCustomerCreditLimitForCopyOrderRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/chkCustomerCreditLimitForCopyOrderEpicorF" +
            "aultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderResponse chkCustomerCreditLimitForCopyOrder(EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/chkCustomerCreditLimitForCopyOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/chkCustomerCreditLimitForCopyOrderRespons" +
            "e")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderResponse> chkCustomerCreditLimitForCopyOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/chkLtrOfCrdt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/chkLtrOfCrdtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/chkLtrOfCrdtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outMsg")]
        string chkLtrOfCrdt(int iOrderNum, string cARLOCID, decimal dTotalCharges);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/chkLtrOfCrdt", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/chkLtrOfCrdtResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outMsg")]
        System.Threading.Tasks.Task<string> chkLtrOfCrdtAsync(int iOrderNum, string cARLOCID, decimal dTotalCharges);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CloseOrder(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CloseOrderAsync(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrderLine", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrderLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrderLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CloseOrderLine(int iOrderNum, int iOrderLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrderLine", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseOrderLineResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CloseOrderLineAsync(int iOrderNum, int iOrderLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseRelease", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseReleaseEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CloseRelease(int iOrderNum, int iOrderLine, int iOrderRelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseRelease", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CloseReleaseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CloseReleaseAsync(int iOrderNum, int iOrderLine, int iOrderRelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/PreCopyOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/PreCopyOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/PreCopyOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="holdMessage")]
        string PreCopyOrder(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/PreCopyOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/PreCopyOrderResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="holdMessage")]
        System.Threading.Tasks.Task<string> PreCopyOrderAsync(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CopyOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CopyOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CopyOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CopyOrderResponse CopyOrder(EpicorConsole.Epicor.SalesOrderSvc.CopyOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CopyOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CopyOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CopyOrderResponse> CopyOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.CopyOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateGlbSugPOChg", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateGlbSugPOChgResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateGlbSugPOChgEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgResponse CreateGlbSugPOChg(EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateGlbSugPOChg", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateGlbSugPOChgResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgResponse> CreateGlbSugPOChgAsync(EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLineMiscChargesFromQuote", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLineMiscChargesFromQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLineMiscChargesFromQuoteEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteResponse CreateLineMiscChargesFromQuote(EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLineMiscChargesFromQuote", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLineMiscChargesFromQuoteResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteResponse> CreateLineMiscChargesFromQuoteAsync(EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLinesFromHistory", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLinesFromHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLinesFromHistoryEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryResponse CreateLinesFromHistory(EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLinesFromHistory", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateLinesFromHistoryResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryResponse> CreateLinesFromHistoryAsync(EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderDtlComplements", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderDtlComplementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderDtlComplementsEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsResponse CreateOrderDtlComplements(EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderDtlComplements", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderDtlComplementsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsResponse> CreateOrderDtlComplementsAsync(EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuote", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuoteEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CreateOrderFromQuote(int iQuoteNum, string iPoNum, string iCreditStatus, bool iCreditHold);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuote", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuoteResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CreateOrderFromQuoteAsync(int iQuoteNum, string iPoNum, string iCreditStatus, bool iCreditHold);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuoteSaveOTS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuoteSaveOTSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuoteSaveOTSEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CreateOrderFromQuoteSaveOTS(int iQuoteNum, EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuoteSaveOTS", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/CreateOrderFromQuoteSaveOTSResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CreateOrderFromQuoteSaveOTSAsync(int iQuoteNum, EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ETCValidateAddress", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ETCValidateAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ETCValidateAddressEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressResponse ETCValidateAddress(EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/ETCValidateAddress", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/ETCValidateAddressResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressResponse> ETCValidateAddressAsync(EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByIDLinkedOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByIDLinkedOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByIDLinkedOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetByIDLinkedOrder(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByIDLinkedOrder", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetByIDLinkedOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> GetByIDLinkedOrderAsync(int iOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCalcQtyPref", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCalcQtyPrefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCalcQtyPrefEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opCalcQtyPref")]
        bool GetCalcQtyPref();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCalcQtyPref", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetCalcQtyPrefResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opCalcQtyPref")]
        System.Threading.Tasks.Task<bool> GetCalcQtyPrefAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetGlbSugPOChg", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetGlbSugPOChgResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetGlbSugPOChgEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgResponse GetGlbSugPOChg(EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetGlbSugPOChg", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetGlbSugPOChgResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgResponse> GetGlbSugPOChgAsync(EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetInventoryQuantities", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetInventoryQuantitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetInventoryQuantitiesEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesResponse GetInventoryQuantities(EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetInventoryQuantities", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetInventoryQuantitiesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesResponse> GetInventoryQuantitiesAsync(EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetJobProd", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetJobProdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetJobProdEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetJobProdResponse GetJobProd(EpicorConsole.Epicor.SalesOrderSvc.GetJobProdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetJobProd", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetJobProdResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetJobProdResponse> GetJobProdAsync(EpicorConsole.Epicor.SalesOrderSvc.GetJobProdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetKitComponents", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetKitComponentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetKitComponentsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsResponse GetKitComponents(EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetKitComponents", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetKitComponentsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsResponse> GetKitComponentsAsync(EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetListCustom", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetListCustomResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetListCustomEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetListCustomResponse GetListCustom(EpicorConsole.Epicor.SalesOrderSvc.GetListCustomRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetListCustom", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetListCustomResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetListCustomResponse> GetListCustomAsync(EpicorConsole.Epicor.SalesOrderSvc.GetListCustomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewSalesKit", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewSalesKitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewSalesKitEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitResponse GetNewSalesKit(EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewSalesKit", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetNewSalesKitResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitResponse> GetNewSalesKitAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPayBTFlagDefaults", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPayBTFlagDefaultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPayBTFlagDefaultsEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsResponse GetPayBTFlagDefaults(EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPayBTFlagDefaults", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPayBTFlagDefaultsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsResponse> GetPayBTFlagDefaultsAsync(EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPlantConfCtrlInfo", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPlantConfCtrlInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.SalesOrderSvc.EpicorFaultDetail), Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPlantConfCtrlInfoEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opSuppressWarning")]
        bool GetPlantConfCtrlInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPlantConfCtrlInfo", ReplyAction="Erp:BO:SalesOrder/SalesOrderSvcContract/GetPlantConfCtrlInfoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opSuppressWarning")]
        System.Threading.Tasks.Task<bool> GetPlantConfCtrlInfoAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQuoteQty", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetQuoteQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iQuoteNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iQuoteLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int absolutePage;
        
        public GetQuoteQtyRequest() {
        }
        
        public GetQuoteQtyRequest(int iQuoteNum, int iQuoteLine, int pageSize, int absolutePage) {
            this.iQuoteNum = iQuoteNum;
            this.iQuoteLine = iQuoteLine;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQuoteQtyResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetQuoteQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.OrdDtlQuoteQtyTableset GetQuoteQtyResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool morePages;
        
        public GetQuoteQtyResponse() {
        }
        
        public GetQuoteQtyResponse(EpicorConsole.Epicor.SalesOrderSvc.OrdDtlQuoteQtyTableset GetQuoteQtyResult, bool morePages) {
            this.GetQuoteQtyResult = GetQuoteQtyResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCustomerTracker", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetRowsCustomerTrackerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string whereClauseOrderHed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string whereClauseOrderHedAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string whereClauseOHOrderMsc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string whereClauseOrderDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string whereClauseOrderDtlAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public string whereClauseOrderMsc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public string whereClauseOrderRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=7)]
        public string whereClauseOrderRepComm;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=8)]
        public string whereClauseSelectedSerialNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=9)]
        public string whereClauseSerialNumberSearch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=10)]
        public string whereClauseSNFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=11)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=12)]
        public int absolutePage;
        
        public GetRowsCustomerTrackerRequest() {
        }
        
        public GetRowsCustomerTrackerRequest(string whereClauseOrderHed, string whereClauseOrderHedAttch, string whereClauseOHOrderMsc, string whereClauseOrderDtl, string whereClauseOrderDtlAttch, string whereClauseOrderMsc, string whereClauseOrderRel, string whereClauseOrderRepComm, string whereClauseSelectedSerialNumbers, string whereClauseSerialNumberSearch, string whereClauseSNFormat, int pageSize, int absolutePage) {
            this.whereClauseOrderHed = whereClauseOrderHed;
            this.whereClauseOrderHedAttch = whereClauseOrderHedAttch;
            this.whereClauseOHOrderMsc = whereClauseOHOrderMsc;
            this.whereClauseOrderDtl = whereClauseOrderDtl;
            this.whereClauseOrderDtlAttch = whereClauseOrderDtlAttch;
            this.whereClauseOrderMsc = whereClauseOrderMsc;
            this.whereClauseOrderRel = whereClauseOrderRel;
            this.whereClauseOrderRepComm = whereClauseOrderRepComm;
            this.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            this.whereClauseSerialNumberSearch = whereClauseSerialNumberSearch;
            this.whereClauseSNFormat = whereClauseSNFormat;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCustomerTrackerResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetRowsCustomerTrackerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkTableset GetRowsCustomerTrackerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool morePages;
        
        public GetRowsCustomerTrackerResponse() {
        }
        
        public GetRowsCustomerTrackerResponse(EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkTableset GetRowsCustomerTrackerResult, bool morePages) {
            this.GetRowsCustomerTrackerResult = GetRowsCustomerTrackerResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSmartString", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetSmartStringRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int OrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int OrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string PartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string RevisionNum;
        
        public GetSmartStringRequest() {
        }
        
        public GetSmartStringRequest(int OrderNum, int OrderLine, string PartNum, string RevisionNum) {
            this.OrderNum = OrderNum;
            this.OrderLine = OrderLine;
            this.PartNum = PartNum;
            this.RevisionNum = RevisionNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSmartStringResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetSmartStringResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string SmartString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool CreatePart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool PromptForPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public bool NotifyOfExistingPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string NewPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public bool CreateCustPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public bool PromptForCustPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=7)]
        public string NewCustPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=8)]
        public bool PromptForAutoCreatePart;
        
        public GetSmartStringResponse() {
        }
        
        public GetSmartStringResponse(string SmartString, bool CreatePart, bool PromptForPartNum, bool NotifyOfExistingPart, string NewPartNum, bool CreateCustPart, bool PromptForCustPartNum, string NewCustPartNum, bool PromptForAutoCreatePart) {
            this.SmartString = SmartString;
            this.CreatePart = CreatePart;
            this.PromptForPartNum = PromptForPartNum;
            this.NotifyOfExistingPart = NotifyOfExistingPart;
            this.NewPartNum = NewPartNum;
            this.CreateCustPart = CreateCustPart;
            this.PromptForCustPartNum = PromptForCustPartNum;
            this.NewCustPartNum = NewCustPartNum;
            this.PromptForAutoCreatePart = PromptForAutoCreatePart;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GlbSugPOChgUpdate", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GlbSugPOChgUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        public GlbSugPOChgUpdateRequest() {
        }
        
        public GlbSugPOChgUpdateRequest(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GlbSugPOChgUpdateResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GlbSugPOChgUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        public GlbSugPOChgUpdateResponse() {
        }
        
        public GlbSugPOChgUpdateResponse(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MasterUpdate", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class MasterUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool lCheckForOrderChangedMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lcheckForResponse;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string cTableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int iCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public bool lweLicensed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public MasterUpdateRequest() {
        }
        
        public MasterUpdateRequest(bool lCheckForOrderChangedMsg, bool lcheckForResponse, string cTableName, int iCustNum, int iOrderNum, bool lweLicensed, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.lCheckForOrderChangedMsg = lCheckForOrderChangedMsg;
            this.lcheckForResponse = lcheckForResponse;
            this.cTableName = cTableName;
            this.iCustNum = iCustNum;
            this.iOrderNum = iOrderNum;
            this.lweLicensed = lweLicensed;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MasterUpdateResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class MasterUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool lContinue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cResponseMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string cCreditShipAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string cDisplayMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string cCompliantMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public string cResponseMsgOrdRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public MasterUpdateResponse() {
        }
        
        public MasterUpdateResponse(bool lContinue, string cResponseMsg, string cCreditShipAction, string cDisplayMsg, string cCompliantMsg, string cResponseMsgOrdRel, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.lContinue = lContinue;
            this.cResponseMsg = cResponseMsg;
            this.cCreditShipAction = cCreditShipAction;
            this.cDisplayMsg = cDisplayMsg;
            this.cCompliantMsg = cCompliantMsg;
            this.cResponseMsgOrdRel = cResponseMsgOrdRel;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeARLOCID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeARLOCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipARLOCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeARLOCIDRequest() {
        }
        
        public OnChangeARLOCIDRequest(string ipARLOCID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipARLOCID = ipARLOCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeARLOCIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeARLOCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string opOverwriteValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string opFieldName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string opMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeARLOCIDResponse() {
        }
        
        public OnChangeARLOCIDResponse(string opOverwriteValue, string opFieldName, string opMsg, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.opOverwriteValue = opOverwriteValue;
            this.opFieldName = opFieldName;
            this.opMsg = opMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCreditCardOrder", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeCreditCardOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool ipCreditCardOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeCreditCardOrderRequest() {
        }
        
        public OnChangeCreditCardOrderRequest(bool ipCreditCardOrder, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipCreditCardOrder = ipCreditCardOrder;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCreditCardOrderResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeCreditCardOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeCreditCardOrderResponse() {
        }
        
        public OnChangeCreditCardOrderResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofBTConNum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofBTConNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int NewBillToConNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofBTConNumRequest() {
        }
        
        public OnChangeofBTConNumRequest(int NewBillToConNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.NewBillToConNum = NewBillToConNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofBTConNumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofBTConNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofBTConNumResponse() {
        }
        
        public OnChangeofBTConNumResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofBTCustID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofBTCustIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string NewBillToCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofBTCustIDRequest() {
        }
        
        public OnChangeofBTCustIDRequest(string NewBillToCustID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.NewBillToCustID = NewBillToCustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofBTCustIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofBTCustIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofBTCustIDResponse() {
        }
        
        public OnChangeofBTCustIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfFixedAmount", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfFixedAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int OrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int OrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int OrderRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string RateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public decimal NewFixedAmount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfFixedAmountRequest() {
        }
        
        public OnChangeOfFixedAmountRequest(int OrderNum, int OrderLine, int OrderRel, string TaxCode, string RateCode, decimal NewFixedAmount, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.OrderNum = OrderNum;
            this.OrderLine = OrderLine;
            this.OrderRel = OrderRel;
            this.TaxCode = TaxCode;
            this.RateCode = RateCode;
            this.NewFixedAmount = NewFixedAmount;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfFixedAmountResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfFixedAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfFixedAmountResponse() {
        }
        
        public OnChangeOfFixedAmountResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfMktgCampaign", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfMktgCampaignRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string MktgCampaignID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfMktgCampaignRequest() {
        }
        
        public OnChangeOfMktgCampaignRequest(string MktgCampaignID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.MktgCampaignID = MktgCampaignID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfMktgCampaignResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfMktgCampaignResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfMktgCampaignResponse() {
        }
        
        public OnChangeOfMktgCampaignResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfMktgEvnt", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfMktgEvntRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string MktgCampaignID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int MktgEvntSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfMktgEvntRequest() {
        }
        
        public OnChangeOfMktgEvntRequest(string MktgCampaignID, int MktgEvntSeq, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.MktgCampaignID = MktgCampaignID;
            this.MktgEvntSeq = MktgEvntSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfMktgEvntResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfMktgEvntResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfMktgEvntResponse() {
        }
        
        public OnChangeOfMktgEvntResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPhaseID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofPhaseIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipPhaseID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool ipIsChanging;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofPhaseIDRequest() {
        }
        
        public OnChangeofPhaseIDRequest(string ipPhaseID, bool ipIsChanging, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipPhaseID = ipPhaseID;
            this.ipIsChanging = ipIsChanging;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofPhaseIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofPhaseIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string opProjMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofPhaseIDResponse() {
        }
        
        public OnChangeofPhaseIDResponse(string opProjMsg, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.opProjMsg = opProjMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofSoldToCreditCheck", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofSoldToCreditCheckRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string iCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofSoldToCreditCheckRequest() {
        }
        
        public OnChangeofSoldToCreditCheckRequest(int iOrderNum, string iCustID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iOrderNum = iOrderNum;
            this.iCustID = iCustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofSoldToCreditCheckResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofSoldToCreditCheckResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cCreditLimitMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lContinue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofSoldToCreditCheckResponse() {
        }
        
        public OnChangeofSoldToCreditCheckResponse(string cCreditLimitMessage, bool lContinue, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.cCreditLimitMessage = cCreditLimitMessage;
            this.lContinue = lContinue;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfTaxAmt", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfTaxAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int OrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int OrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int OrderRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public decimal NewTaxAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfTaxAmtRequest() {
        }
        
        public OnChangeOfTaxAmtRequest(int OrderNum, int OrderLine, int OrderRel, string TaxCode, decimal NewTaxAmt, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.OrderNum = OrderNum;
            this.OrderLine = OrderLine;
            this.OrderRel = OrderRel;
            this.TaxCode = TaxCode;
            this.NewTaxAmt = NewTaxAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfTaxAmtResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfTaxAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfTaxAmtResponse() {
        }
        
        public OnChangeOfTaxAmtResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfTaxPercent", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfTaxPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int OrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int OrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int OrderRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public decimal NewPercent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfTaxPercentRequest() {
        }
        
        public OnChangeOfTaxPercentRequest(int OrderNum, int OrderLine, int OrderRel, string TaxCode, decimal NewPercent, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.OrderNum = OrderNum;
            this.OrderLine = OrderLine;
            this.OrderRel = OrderRel;
            this.TaxCode = TaxCode;
            this.NewPercent = NewPercent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOfTaxPercentResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeOfTaxPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeOfTaxPercentResponse() {
        }
        
        public OnChangeOfTaxPercentResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxRgn", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofTaxRgnRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string iTaxRegionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofTaxRgnRequest() {
        }
        
        public OnChangeofTaxRgnRequest(string iTaxRegionCode, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iTaxRegionCode = iTaxRegionCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeofTaxRgnResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeofTaxRgnResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeofTaxRgnResponse() {
        }
        
        public OnChangeofTaxRgnResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRateCode", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeRateCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string proposedRateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeRateCodeRequest() {
        }
        
        public OnChangeRateCodeRequest(string proposedRateCode, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.proposedRateCode = proposedRateCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRateCodeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeRateCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeRateCodeResponse() {
        }
        
        public OnChangeRateCodeResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxableAmt", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeTaxableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int OrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int OrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int OrderRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string TaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string RateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public decimal NewTaxableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeTaxableAmtRequest() {
        }
        
        public OnChangeTaxableAmtRequest(int OrderNum, int OrderLine, int OrderRel, string TaxCode, string RateCode, decimal NewTaxableAmt, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.OrderNum = OrderNum;
            this.OrderLine = OrderLine;
            this.OrderRel = OrderRel;
            this.TaxCode = TaxCode;
            this.RateCode = RateCode;
            this.NewTaxableAmt = NewTaxableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxableAmtResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeTaxableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeTaxableAmtResponse() {
        }
        
        public OnChangeTaxableAmtResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxCode", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeTaxCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int ipLineNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int ipRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string ipTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeTaxCodeRequest() {
        }
        
        public OnChangeTaxCodeRequest(int ipOrderNum, int ipLineNum, int ipRelNum, string ipTaxCode, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipOrderNum = ipOrderNum;
            this.ipLineNum = ipLineNum;
            this.ipRelNum = ipRelNum;
            this.ipTaxCode = ipTaxCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxCodeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeTaxCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeTaxCodeResponse() {
        }
        
        public OnChangeTaxCodeResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OrderDtlGetNewContracts", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OrderDtlGetNewContractsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderNum;
        
        public OrderDtlGetNewContractsRequest() {
        }
        
        public OrderDtlGetNewContractsRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int iOrderNum) {
            this.ds = ds;
            this.iOrderNum = iOrderNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OrderDtlGetNewContractsResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OrderDtlGetNewContractsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OrderDtlGetNewContractsResponse() {
        }
        
        public OrderDtlGetNewContractsResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OrderDtlGetNewCounterSale", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OrderDtlGetNewCounterSaleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderNum;
        
        public OrderDtlGetNewCounterSaleRequest() {
        }
        
        public OrderDtlGetNewCounterSaleRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int iOrderNum) {
            this.ds = ds;
            this.iOrderNum = iOrderNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OrderDtlGetNewCounterSaleResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OrderDtlGetNewCounterSaleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OrderDtlGetNewCounterSaleResponse() {
        }
        
        public OrderDtlGetNewCounterSaleResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OrderDtlGetNewFromQuote", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OrderDtlGetNewFromQuoteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderNum;
        
        public OrderDtlGetNewFromQuoteRequest() {
        }
        
        public OrderDtlGetNewFromQuoteRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int iOrderNum) {
            this.ds = ds;
            this.iOrderNum = iOrderNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OrderDtlGetNewFromQuoteResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OrderDtlGetNewFromQuoteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OrderDtlGetNewFromQuoteResponse() {
        }
        
        public OrderDtlGetNewFromQuoteResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PhantomComponents", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class PhantomComponentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string phPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int OrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int OrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string errMessage;
        
        public PhantomComponentsRequest() {
        }
        
        public PhantomComponentsRequest(string phPartNum, int OrderNum, int OrderLine, string errMessage) {
            this.phPartNum = phPartNum;
            this.OrderNum = OrderNum;
            this.OrderLine = OrderLine;
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PhantomComponentsResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class PhantomComponentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string errMessage;
        
        public PhantomComponentsResponse() {
        }
        
        public PhantomComponentsResponse(string errMessage) {
            this.errMessage = errMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessCounterSale", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ProcessCounterSaleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lGeneratePackingSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool lGenerateInvoice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public bool lReadyToShip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string cCreditShipAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ProcessCounterSaleRequest() {
        }
        
        public ProcessCounterSaleRequest(int iOrderNum, bool lGeneratePackingSlip, bool lGenerateInvoice, bool lReadyToShip, string cCreditShipAction, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iOrderNum = iOrderNum;
            this.lGeneratePackingSlip = lGeneratePackingSlip;
            this.lGenerateInvoice = lGenerateInvoice;
            this.lReadyToShip = lReadyToShip;
            this.cCreditShipAction = cCreditShipAction;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessCounterSaleResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ProcessCounterSaleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iInvoiceNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string opMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ProcessCounterSaleResponse() {
        }
        
        public ProcessCounterSaleResponse(string cPackNum, int iInvoiceNum, string opMessage, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.cPackNum = cPackNum;
            this.iInvoiceNum = iInvoiceNum;
            this.opMessage = opMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessQuickEntry", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ProcessQuickEntryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ProcessQuickEntryRequest() {
        }
        
        public ProcessQuickEntryRequest(int iOrderNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iOrderNum = iOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessQuickEntryResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ProcessQuickEntryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool lProcessComplete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ProcessQuickEntryResponse() {
        }
        
        public ProcessQuickEntryResponse(bool lProcessComplete, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.lProcessComplete = lProcessComplete;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RebuildShipUPS", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class RebuildShipUPSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int ipCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string ipShipToNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public RebuildShipUPSRequest() {
        }
        
        public RebuildShipUPSRequest(int ipCustNum, string ipShipToNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipCustNum = ipCustNum;
            this.ipShipToNum = ipShipToNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RebuildShipUPSResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class RebuildShipUPSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public RebuildShipUPSResponse() {
        }
        
        public RebuildShipUPSResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetReadyToCalc", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class SetReadyToCalcRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public SetReadyToCalcRequest() {
        }
        
        public SetReadyToCalcRequest(int ipOrderNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipOrderNum = ipOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetReadyToCalcResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class SetReadyToCalcResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public SetReadyToCalcResponse() {
        }
        
        public SetReadyToCalcResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUPSQVEnable", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class SetUPSQVEnableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool ipQVEnable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public SetUPSQVEnableRequest() {
        }
        
        public SetUPSQVEnableRequest(bool ipQVEnable, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipQVEnable = ipQVEnable;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUPSQVEnableResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class SetUPSQVEnableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public SetUPSQVEnableResponse() {
        }
        
        public SetUPSQVEnableResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateInvQty", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ValidateInvQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ValidateInvQtyRequest() {
        }
        
        public ValidateInvQtyRequest(int ipOrderNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipOrderNum = ipOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateInvQtyResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ValidateInvQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string opNegInvMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string opNegQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ValidateInvQtyResponse() {
        }
        
        public ValidateInvQtyResponse(string opNegInvMessage, string opNegQtyAction, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.opNegInvMessage = opNegInvMessage;
            this.opNegQtyAction = opNegQtyAction;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSNs", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ValidateSNsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ValidateSNsRequest() {
        }
        
        public ValidateSNsRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSNsResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ValidateSNsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ValidateSNsResponse() {
        }
        
        public ValidateSNsResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitNewOrder", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class SubmitNewOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public SubmitNewOrderRequest() {
        }
        
        public SubmitNewOrderRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitNewOrderResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class SubmitNewOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public SubmitNewOrderResponse() {
        }
        
        public SubmitNewOrderResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ECCUpdate", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ECCUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ECCUpdateRequest() {
        }
        
        public ECCUpdateRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ECCUpdateResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ECCUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ECCUpdateResponse() {
        }
        
        public ECCUpdateResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBasePartForConfig", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetBasePartForConfigRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public System.Guid sourceSysRowID;
        
        public GetBasePartForConfigRequest() {
        }
        
        public GetBasePartForConfigRequest(System.Guid sourceSysRowID) {
            this.sourceSysRowID = sourceSysRowID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBasePartForConfigResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetBasePartForConfigResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cfgPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cfgRevisionNum;
        
        public GetBasePartForConfigResponse() {
        }
        
        public GetBasePartForConfigResponse(string cfgPartNum, string cfgRevisionNum) {
            this.cfgPartNum = cfgPartNum;
            this.cfgRevisionNum = cfgRevisionNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTranDocTypeID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeTranDocTypeIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeTranDocTypeIDRequest() {
        }
        
        public OnChangeTranDocTypeIDRequest(int orderNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.orderNum = orderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTranDocTypeIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class OnChangeTranDocTypeIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public OnChangeTranDocTypeIDResponse() {
        }
        
        public OnChangeTranDocTypeIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateProjectID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ValidateProjectIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string Prj;
        
        public ValidateProjectIDRequest() {
        }
        
        public ValidateProjectIDRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string Prj) {
            this.ds = ds;
            this.Prj = Prj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateProjectIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ValidateProjectIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ValidateProjectIDResponse() {
        }
        
        public ValidateProjectIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateCustomer", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ValidateCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string Cust;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string Prj;
        
        public ValidateCustomerRequest() {
        }
        
        public ValidateCustomerRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string Cust, string Prj) {
            this.ds = ds;
            this.Cust = Cust;
            this.Prj = Prj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateCustomerResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ValidateCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ValidateCustomerResponse() {
        }
        
        public ValidateCustomerResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderHed", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderHedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOrderHedRequest() {
        }
        
        public GetNewOrderHedRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderHedResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderHedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOrderHedResponse() {
        }
        
        public GetNewOrderHedResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderHedAttch", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderHedAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int orderNum;
        
        public GetNewOrderHedAttchRequest() {
        }
        
        public GetNewOrderHedAttchRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum) {
            this.ds = ds;
            this.orderNum = orderNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderHedAttchResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderHedAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOrderHedAttchResponse() {
        }
        
        public GetNewOrderHedAttchResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOHOrderMsc", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOHOrderMscRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int orderLine;
        
        public GetNewOHOrderMscRequest() {
        }
        
        public GetNewOHOrderMscRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine) {
            this.ds = ds;
            this.orderNum = orderNum;
            this.orderLine = orderLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOHOrderMscResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOHOrderMscResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOHOrderMscResponse() {
        }
        
        public GetNewOHOrderMscResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderDtl", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int orderNum;
        
        public GetNewOrderDtlRequest() {
        }
        
        public GetNewOrderDtlRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum) {
            this.ds = ds;
            this.orderNum = orderNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderDtlResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOrderDtlResponse() {
        }
        
        public GetNewOrderDtlResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderDtlAttch", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderDtlAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int orderLine;
        
        public GetNewOrderDtlAttchRequest() {
        }
        
        public GetNewOrderDtlAttchRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine) {
            this.ds = ds;
            this.orderNum = orderNum;
            this.orderLine = orderLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderDtlAttchResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderDtlAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOrderDtlAttchResponse() {
        }
        
        public GetNewOrderDtlAttchResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderMsc", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderMscRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int orderLine;
        
        public GetNewOrderMscRequest() {
        }
        
        public GetNewOrderMscRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine) {
            this.ds = ds;
            this.orderNum = orderNum;
            this.orderLine = orderLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderMscResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderMscResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOrderMscResponse() {
        }
        
        public GetNewOrderMscResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderRel", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderRelRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int orderLine;
        
        public GetNewOrderRelRequest() {
        }
        
        public GetNewOrderRelRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine) {
            this.ds = ds;
            this.orderNum = orderNum;
            this.orderLine = orderLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderRelResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderRelResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOrderRelResponse() {
        }
        
        public GetNewOrderRelResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderRelTax", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderRelTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int orderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int orderRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public string rateCode;
        
        public GetNewOrderRelTaxRequest() {
        }
        
        public GetNewOrderRelTaxRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine, int orderRelNum, string taxCode, string rateCode) {
            this.ds = ds;
            this.orderNum = orderNum;
            this.orderLine = orderLine;
            this.orderRelNum = orderRelNum;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderRelTaxResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderRelTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOrderRelTaxResponse() {
        }
        
        public GetNewOrderRelTaxResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderHedUPS", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderHedUPSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int orderNum;
        
        public GetNewOrderHedUPSRequest() {
        }
        
        public GetNewOrderHedUPSRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum) {
            this.ds = ds;
            this.orderNum = orderNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrderHedUPSResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewOrderHedUPSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewOrderHedUPSResponse() {
        }
        
        public GetNewOrderHedUPSResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicorConsole.Epicor.SalesOrderSvc.OrderHedListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string whereClauseOrderHed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string whereClauseOrderHedAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string whereClauseOHOrderMsc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string whereClauseOrderDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string whereClauseOrderDtlAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public string whereClauseOrderMsc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public string whereClauseOrderRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=7)]
        public string whereClauseOrderRelTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=8)]
        public string whereClauseOrderHedUPS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=9)]
        public string whereClauseOrderRepComm;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=10)]
        public string whereClauseHedTaxSum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=11)]
        public string whereClauseOrderHist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=12)]
        public string whereClausePartSubs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=13)]
        public string whereClauseSelectedSerialNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=14)]
        public string whereClauseSNFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=15)]
        public string whereClauseTaxConnectStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=16)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=17)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(
                    string whereClauseOrderHed, 
                    string whereClauseOrderHedAttch, 
                    string whereClauseOHOrderMsc, 
                    string whereClauseOrderDtl, 
                    string whereClauseOrderDtlAttch, 
                    string whereClauseOrderMsc, 
                    string whereClauseOrderRel, 
                    string whereClauseOrderRelTax, 
                    string whereClauseOrderHedUPS, 
                    string whereClauseOrderRepComm, 
                    string whereClauseHedTaxSum, 
                    string whereClauseOrderHist, 
                    string whereClausePartSubs, 
                    string whereClauseSelectedSerialNumbers, 
                    string whereClauseSNFormat, 
                    string whereClauseTaxConnectStatus, 
                    int pageSize, 
                    int absolutePage) {
            this.whereClauseOrderHed = whereClauseOrderHed;
            this.whereClauseOrderHedAttch = whereClauseOrderHedAttch;
            this.whereClauseOHOrderMsc = whereClauseOHOrderMsc;
            this.whereClauseOrderDtl = whereClauseOrderDtl;
            this.whereClauseOrderDtlAttch = whereClauseOrderDtlAttch;
            this.whereClauseOrderMsc = whereClauseOrderMsc;
            this.whereClauseOrderRel = whereClauseOrderRel;
            this.whereClauseOrderRelTax = whereClauseOrderRelTax;
            this.whereClauseOrderHedUPS = whereClauseOrderHedUPS;
            this.whereClauseOrderRepComm = whereClauseOrderRepComm;
            this.whereClauseHedTaxSum = whereClauseHedTaxSum;
            this.whereClauseOrderHist = whereClauseOrderHist;
            this.whereClausePartSubs = whereClausePartSubs;
            this.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            this.whereClauseSNFormat = whereClauseSNFormat;
            this.whereClauseTaxConnectStatus = whereClauseTaxConnectStatus;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.UpdExtSalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(EpicorConsole.Epicor.SalesOrderSvc.UpdExtSalesOrderTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.UpdExtSalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(EpicorConsole.Epicor.SalesOrderSvc.BOUpdErrorTableset UpdateExtResult, EpicorConsole.Epicor.SalesOrderSvc.UpdExtSalesOrderTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTest", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class NegativeInventoryTestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string pcPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string pcWhseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string pcBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string pcLotNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string pcPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public string pcDimCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public int pdDimConvFactor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=7)]
        public decimal ipSellingQuantity;
        
        public NegativeInventoryTestRequest() {
        }
        
        public NegativeInventoryTestRequest(string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, string pcPCID, string pcDimCode, int pdDimConvFactor, decimal ipSellingQuantity) {
            this.pcPartNum = pcPartNum;
            this.pcWhseCode = pcWhseCode;
            this.pcBinNum = pcBinNum;
            this.pcLotNum = pcLotNum;
            this.pcPCID = pcPCID;
            this.pcDimCode = pcDimCode;
            this.pdDimConvFactor = pdDimConvFactor;
            this.ipSellingQuantity = ipSellingQuantity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTestResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class NegativeInventoryTestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string pcNeqQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string pcMessage;
        
        public NegativeInventoryTestResponse() {
        }
        
        public NegativeInventoryTestResponse(string pcNeqQtyAction, string pcMessage) {
            this.pcNeqQtyAction = pcNeqQtyAction;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CCClear", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CCClearRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CCClearRequest() {
        }
        
        public CCClearRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CCClearResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CCClearResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CCClearResponse() {
        }
        
        public CCClearResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CCLoadTranData", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CCLoadTranDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public System.Nullable<System.DateTime> inTranDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int inTranTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int inTranNum;
        
        public CCLoadTranDataRequest() {
        }
        
        public CCLoadTranDataRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, System.Nullable<System.DateTime> inTranDate, int inTranTime, int inTranNum) {
            this.ds = ds;
            this.inTranDate = inTranDate;
            this.inTranTime = inTranTime;
            this.inTranNum = inTranNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CCLoadTranDataResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CCLoadTranDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CCLoadTranDataResponse() {
        }
        
        public CCLoadTranDataResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CCProcessCard", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CCProcessCardRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string inTranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CCProcessCardRequest() {
        }
        
        public CCProcessCardRequest(string inTranType, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.inTranType = inTranType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CCProcessCardResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CCProcessCardResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string opMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CCProcessCardResponse() {
        }
        
        public CCProcessCardResponse(string opMessage, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.opMessage = opMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeBTCustIDMaster", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeBTCustIDMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string NewBillToCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lchkCustCredHold;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeBTCustIDMasterRequest() {
        }
        
        public ChangeBTCustIDMasterRequest(string NewBillToCustID, bool lchkCustCredHold, int iOrderNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.NewBillToCustID = NewBillToCustID;
            this.lchkCustCredHold = lchkCustCredHold;
            this.iOrderNum = iOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeBTCustIDMasterResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeBTCustIDMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cCreditLimitMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lCustomerAllowed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeBTCustIDMasterResponse() {
        }
        
        public ChangeBTCustIDMasterResponse(string cCreditLimitMessage, bool lCustomerAllowed, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.cCreditLimitMessage = cCreditLimitMessage;
            this.lCustomerAllowed = lCustomerAllowed;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCardNumber", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCardNumberRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string inCardNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCardNumberRequest() {
        }
        
        public ChangeCardNumberRequest(string inCardNumber, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.inCardNumber = inCardNumber;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCardNumberResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCardNumberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCardNumberResponse() {
        }
        
        public ChangeCardNumberResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCCAmounts", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCCAmountsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCCAmountsRequest() {
        }
        
        public ChangeCCAmountsRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCCAmountsResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCCAmountsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCCAmountsResponse() {
        }
        
        public ChangeCCAmountsResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCommissionable", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCommissionableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCommissionableRequest() {
        }
        
        public ChangeCommissionableRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCommissionableResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCommissionableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCommissionableResponse() {
        }
        
        public ChangeCommissionableResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeContractNum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeContractNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeContractNumRequest() {
        }
        
        public ChangeContractNumRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeContractNumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeContractNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeContractNumResponse() {
        }
        
        public ChangeContractNumResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeContractNumMaster", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeContractNumMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int iContractNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeContractNumMasterRequest() {
        }
        
        public ChangeContractNumMasterRequest(int iOrderNum, int iOrderLine, int iContractNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iOrderNum = iOrderNum;
            this.iOrderLine = iOrderLine;
            this.iContractNum = iContractNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeContractNumMasterResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeContractNumMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string outMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeContractNumMasterResponse() {
        }
        
        public ChangeContractNumMasterResponse(string outMsg, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.outMsg = outMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCounterSale", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCounterSaleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCounterSaleRequest() {
        }
        
        public ChangeCounterSaleRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCounterSaleResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCounterSaleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCounterSaleResponse() {
        }
        
        public ChangeCounterSaleResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCreditExp", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCreditExpRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int ipExpMonth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int ipExpYear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCreditExpRequest() {
        }
        
        public ChangeCreditExpRequest(int ipExpMonth, int ipExpYear, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipExpMonth = ipExpMonth;
            this.ipExpYear = ipExpYear;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCreditExpResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCreditExpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCreditExpResponse() {
        }
        
        public ChangeCreditExpResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCurrencyCode", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCurrencyCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCurrencyCodeRequest() {
        }
        
        public ChangeCurrencyCodeRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCurrencyCodeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCurrencyCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCurrencyCodeResponse() {
        }
        
        public ChangeCurrencyCodeResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustomer", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCustomerRequest() {
        }
        
        public ChangeCustomerRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeCustomerResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeCustomerResponse() {
        }
        
        public ChangeCustomerResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangedCardNumber", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangedCardNumberRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangedCardNumberRequest() {
        }
        
        public ChangedCardNumberRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangedCardNumberResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangedCardNumberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangedCardNumberResponse() {
        }
        
        public ChangedCardNumberResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDiscBreakListCode", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeDiscBreakListCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeDiscBreakListCodeRequest() {
        }
        
        public ChangeDiscBreakListCodeRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDiscBreakListCodeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeDiscBreakListCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeDiscBreakListCodeResponse() {
        }
        
        public ChangeDiscBreakListCodeResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDiscountAmount", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeDiscountAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeDiscountAmountRequest() {
        }
        
        public ChangeDiscountAmountRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDiscountAmountResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeDiscountAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeDiscountAmountResponse() {
        }
        
        public ChangeDiscountAmountResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDiscountPercent", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeDiscountPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeDiscountPercentRequest() {
        }
        
        public ChangeDiscountPercentRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeDiscountPercentResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeDiscountPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeDiscountPercentResponse() {
        }
        
        public ChangeDiscountPercentResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeERSOrder", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeERSOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool proposedERSOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeERSOrderRequest() {
        }
        
        public ChangeERSOrderRequest(bool proposedERSOrder, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.proposedERSOrder = proposedERSOrder;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeERSOrderResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeERSOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeERSOrderResponse() {
        }
        
        public ChangeERSOrderResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeGroup", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeGroupRequest() {
        }
        
        public ChangeGroupRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeGroupResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeGroupResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeGroupResponse() {
        }
        
        public ChangeGroupResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHedOTSCountryNum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeHedOTSCountryNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeHedOTSCountryNumRequest() {
        }
        
        public ChangeHedOTSCountryNumRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHedOTSCountryNumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeHedOTSCountryNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeHedOTSCountryNumResponse() {
        }
        
        public ChangeHedOTSCountryNumResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHedUseOTS", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeHedUseOTSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeHedUseOTSRequest() {
        }
        
        public ChangeHedUseOTSRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeHedUseOTSResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeHedUseOTSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeHedUseOTSResponse() {
        }
        
        public ChangeHedUseOTSResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeKitPricing", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeKitPricingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeKitPricingRequest() {
        }
        
        public ChangeKitPricingRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeKitPricingResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeKitPricingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeKitPricingResponse() {
        }
        
        public ChangeKitPricingResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeKitQtyPer", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeKitQtyPerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeKitQtyPerRequest() {
        }
        
        public ChangeKitQtyPerRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeKitQtyPerResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeKitQtyPerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeKitQtyPerResponse() {
        }
        
        public ChangeKitQtyPerResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMake", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeMakeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool ipMake;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeMakeRequest() {
        }
        
        public ChangeMakeRequest(bool ipMake, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipMake = ipMake;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMakeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeMakeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeMakeResponse() {
        }
        
        public ChangeMakeResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeManualTaxCalc", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeManualTaxCalcRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int ipLineNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int ipRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string ipTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string ipRateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeManualTaxCalcRequest() {
        }
        
        public ChangeManualTaxCalcRequest(int ipOrderNum, int ipLineNum, int ipRelNum, string ipTaxCode, string ipRateCode, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipOrderNum = ipOrderNum;
            this.ipLineNum = ipLineNum;
            this.ipRelNum = ipRelNum;
            this.ipTaxCode = ipTaxCode;
            this.ipRateCode = ipRateCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeManualTaxCalcResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeManualTaxCalcResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeManualTaxCalcResponse() {
        }
        
        public ChangeManualTaxCalcResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMiscAmount", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeMiscAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string tableName;
        
        public ChangeMiscAmountRequest() {
        }
        
        public ChangeMiscAmountRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string tableName) {
            this.ds = ds;
            this.tableName = tableName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMiscAmountResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeMiscAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeMiscAmountResponse() {
        }
        
        public ChangeMiscAmountResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMiscCode", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeMiscCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string tableName;
        
        public ChangeMiscCodeRequest() {
        }
        
        public ChangeMiscCodeRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string tableName) {
            this.ds = ds;
            this.tableName = tableName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMiscCodeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeMiscCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeMiscCodeResponse() {
        }
        
        public ChangeMiscCodeResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMiscPercent", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeMiscPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string tableName;
        
        public ChangeMiscPercentRequest() {
        }
        
        public ChangeMiscPercentRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string tableName) {
            this.ds = ds;
            this.tableName = tableName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeMiscPercentResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeMiscPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeMiscPercentResponse() {
        }
        
        public ChangeMiscPercentResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeNeedByDate", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeNeedByDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cTableName;
        
        public ChangeNeedByDateRequest() {
        }
        
        public ChangeNeedByDateRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string cTableName) {
            this.ds = ds;
            this.cTableName = cTableName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeNeedByDateResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeNeedByDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeNeedByDateResponse() {
        }
        
        public ChangeNeedByDateResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeNewNeedByDate", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeNewNeedByDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        public ChangeNewNeedByDateRequest() {
        }
        
        public ChangeNewNeedByDateRequest(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeNewNeedByDateResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeNewNeedByDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        public ChangeNewNeedByDateResponse() {
        }
        
        public ChangeNewNeedByDateResponse(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeNewSellingQuantity", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeNewSellingQuantityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        public ChangeNewSellingQuantityRequest() {
        }
        
        public ChangeNewSellingQuantityRequest(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeNewSellingQuantityResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeNewSellingQuantityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        public ChangeNewSellingQuantityResponse() {
        }
        
        public ChangeNewSellingQuantityResponse(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderDtlPWContract", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderDtlPWContractRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipContractID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderDtlPWContractRequest() {
        }
        
        public ChangeOrderDtlPWContractRequest(string ipContractID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipContractID = ipContractID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderDtlPWContractResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderDtlPWContractResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipContractID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderDtlPWContractResponse() {
        }
        
        public ChangeOrderDtlPWContractResponse(string ipContractID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipContractID = ipContractID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeODtlWarehouse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeODtlWarehouseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeODtlWarehouseRequest() {
        }
        
        public ChangeODtlWarehouseRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeODtlWarehouseResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeODtlWarehouseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeODtlWarehouseResponse() {
        }
        
        public ChangeODtlWarehouseResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelBuyToOrder", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelBuyToOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool ipBuyToOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelBuyToOrderRequest() {
        }
        
        public ChangeOrderRelBuyToOrderRequest(bool ipBuyToOrder, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipBuyToOrder = ipBuyToOrder;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelBuyToOrderResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelBuyToOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelBuyToOrderResponse() {
        }
        
        public ChangeOrderRelBuyToOrderResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelDropShip", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelDropShipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool ipDropShip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelDropShipRequest() {
        }
        
        public ChangeOrderRelDropShipRequest(bool ipDropShip, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipDropShip = ipDropShip;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelDropShipResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelDropShipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelDropShipResponse() {
        }
        
        public ChangeOrderRelDropShipResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelMarkForNum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelMarkForNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ProposedMarkForNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelMarkForNumRequest() {
        }
        
        public ChangeOrderRelMarkForNumRequest(string ProposedMarkForNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ProposedMarkForNum = ProposedMarkForNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelMarkForNumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelMarkForNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelMarkForNumResponse() {
        }
        
        public ChangeOrderRelMarkForNumResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelMFCustID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelMFCustIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipMFCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelMFCustIDRequest() {
        }
        
        public ChangeOrderRelMFCustIDRequest(string ipMFCustID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipMFCustID = ipMFCustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelMFCustIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelMFCustIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelMFCustIDResponse() {
        }
        
        public ChangeOrderRelMFCustIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelPWContract", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelPWContractRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipContractID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelPWContractRequest() {
        }
        
        public ChangeOrderRelPWContractRequest(string ipContractID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipContractID = ipContractID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelPWContractResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelPWContractResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipContractID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelPWContractResponse() {
        }
        
        public ChangeOrderRelPWContractResponse(string ipContractID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipContractID = ipContractID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelShipTo", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelShipToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelShipToRequest() {
        }
        
        public ChangeOrderRelShipToRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelShipToResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelShipToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelShipToResponse() {
        }
        
        public ChangeOrderRelShipToResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelShipToContact", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelShipToContactRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelShipToContactRequest() {
        }
        
        public ChangeOrderRelShipToContactRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelShipToContactResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelShipToContactResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelShipToContactResponse() {
        }
        
        public ChangeOrderRelShipToContactResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelShipToCustID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelShipToCustIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string iShipToCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelShipToCustIDRequest() {
        }
        
        public ChangeOrderRelShipToCustIDRequest(string iShipToCustID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iShipToCustID = iShipToCustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelShipToCustIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelShipToCustIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelShipToCustIDResponse() {
        }
        
        public ChangeOrderRelShipToCustIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelUseOTMF", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelUseOTMFRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelUseOTMFRequest() {
        }
        
        public ChangeOrderRelUseOTMFRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelUseOTMFResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelUseOTMFResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelUseOTMFResponse() {
        }
        
        public ChangeOrderRelUseOTMFResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelVendorID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelVendorIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipVendorID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelVendorIDRequest() {
        }
        
        public ChangeOrderRelVendorIDRequest(string ipVendorID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipVendorID = ipVendorID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOrderRelVendorIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOrderRelVendorIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOrderRelVendorIDResponse() {
        }
        
        public ChangeOrderRelVendorIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeORelWarehouse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeORelWarehouseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeORelWarehouseRequest() {
        }
        
        public ChangeORelWarehouseRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeORelWarehouseResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeORelWarehouseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeORelWarehouseResponse() {
        }
        
        public ChangeORelWarehouseResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOverrideDiscPriceList", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOverrideDiscPriceListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOverrideDiscPriceListRequest() {
        }
        
        public ChangeOverrideDiscPriceListRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOverrideDiscPriceListResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOverrideDiscPriceListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOverrideDiscPriceListResponse() {
        }
        
        public ChangeOverrideDiscPriceListResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOverridePriceList", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOverridePriceListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOverridePriceListRequest() {
        }
        
        public ChangeOverridePriceListRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOverridePriceListResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeOverridePriceListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeOverridePriceListResponse() {
        }
        
        public ChangeOverridePriceListResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartNum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lSubstitutePartsExist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string uomCode;
        
        public ChangePartNumRequest() {
        }
        
        public ChangePartNumRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, bool lSubstitutePartsExist, string uomCode) {
            this.ds = ds;
            this.lSubstitutePartsExist = lSubstitutePartsExist;
            this.uomCode = uomCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartNumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangePartNumResponse() {
        }
        
        public ChangePartNumResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartNumMaster", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePartNumMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lSubstitutePartExist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool lIsPhantom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string uomCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public System.Guid SysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public string rowType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public bool salesKitView;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=7)]
        public bool removeKitComponents;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=8)]
        public bool suppressUserPrompts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=9)]
        public bool getPartXRefInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=10)]
        public bool checkPartRevisionChange;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=11)]
        public bool checkChangeKitParent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=12)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangePartNumMasterRequest() {
        }
        
        public ChangePartNumMasterRequest(string partNum, bool lSubstitutePartExist, bool lIsPhantom, string uomCode, System.Guid SysRowID, string rowType, bool salesKitView, bool removeKitComponents, bool suppressUserPrompts, bool getPartXRefInfo, bool checkPartRevisionChange, bool checkChangeKitParent, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.partNum = partNum;
            this.lSubstitutePartExist = lSubstitutePartExist;
            this.lIsPhantom = lIsPhantom;
            this.uomCode = uomCode;
            this.SysRowID = SysRowID;
            this.rowType = rowType;
            this.salesKitView = salesKitView;
            this.removeKitComponents = removeKitComponents;
            this.suppressUserPrompts = suppressUserPrompts;
            this.getPartXRefInfo = getPartXRefInfo;
            this.checkPartRevisionChange = checkPartRevisionChange;
            this.checkChangeKitParent = checkChangeKitParent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartNumMasterResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePartNumMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lSubstitutePartExist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool lIsPhantom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string uomCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string cDeleteComponentsMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public string questionString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public string cWarningMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=7)]
        public bool multipleMatch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=8)]
        public bool promptToExplodeBOM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=9)]
        public string cConfigPartMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=10)]
        public string cSubPartMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=11)]
        public string explodeBOMerrMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=12)]
        public string cMsgType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=13)]
        public bool multiSubsAvail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=14)]
        public bool runOutQtyAvail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=15)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangePartNumMasterResponse() {
        }
        
        public ChangePartNumMasterResponse(
                    string partNum, 
                    bool lSubstitutePartExist, 
                    bool lIsPhantom, 
                    string uomCode, 
                    string cDeleteComponentsMessage, 
                    string questionString, 
                    string cWarningMessage, 
                    bool multipleMatch, 
                    bool promptToExplodeBOM, 
                    string cConfigPartMessage, 
                    string cSubPartMessage, 
                    string explodeBOMerrMessage, 
                    string cMsgType, 
                    bool multiSubsAvail, 
                    bool runOutQtyAvail, 
                    EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.partNum = partNum;
            this.lSubstitutePartExist = lSubstitutePartExist;
            this.lIsPhantom = lIsPhantom;
            this.uomCode = uomCode;
            this.cDeleteComponentsMessage = cDeleteComponentsMessage;
            this.questionString = questionString;
            this.cWarningMessage = cWarningMessage;
            this.multipleMatch = multipleMatch;
            this.promptToExplodeBOM = promptToExplodeBOM;
            this.cConfigPartMessage = cConfigPartMessage;
            this.cSubPartMessage = cSubPartMessage;
            this.explodeBOMerrMessage = explodeBOMerrMessage;
            this.cMsgType = cMsgType;
            this.multiSubsAvail = multiSubsAvail;
            this.runOutQtyAvail = runOutQtyAvail;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePlant", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePlantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ProposedPlant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangePlantRequest() {
        }
        
        public ChangePlantRequest(string ProposedPlant, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ProposedPlant = ProposedPlant;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePlantResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePlantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangePlantResponse() {
        }
        
        public ChangePlantResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePriceList", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePriceListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangePriceListRequest() {
        }
        
        public ChangePriceListRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePriceListResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePriceListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangePriceListResponse() {
        }
        
        public ChangePriceListResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePricePerCode", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePricePerCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangePricePerCodeRequest() {
        }
        
        public ChangePricePerCodeRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePricePerCodeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangePricePerCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangePricePerCodeResponse() {
        }
        
        public ChangePricePerCodeResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQuickEntryOption", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeQuickEntryOptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeQuickEntryOptionRequest() {
        }
        
        public ChangeQuickEntryOptionRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQuickEntryOptionResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeQuickEntryOptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeQuickEntryOptionResponse() {
        }
        
        public ChangeQuickEntryOptionResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQuoteLine", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeQuoteLineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeQuoteLineRequest() {
        }
        
        public ChangeQuoteLineRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQuoteLineResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeQuoteLineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeQuoteLineResponse() {
        }
        
        public ChangeQuoteLineResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQuoteQtyNum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeQuoteQtyNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeQuoteQtyNumRequest() {
        }
        
        public ChangeQuoteQtyNumRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQuoteQtyNumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeQuoteQtyNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeQuoteQtyNumResponse() {
        }
        
        public ChangeQuoteQtyNumResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelUseOTS", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRelUseOTSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRelUseOTSRequest() {
        }
        
        public ChangeRelUseOTSRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRelUseOTSResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRelUseOTSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRelUseOTSResponse() {
        }
        
        public ChangeRelUseOTSResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRenewalNbr", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRenewalNbrRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRenewalNbrRequest() {
        }
        
        public ChangeRenewalNbrRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRenewalNbrResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRenewalNbrResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRenewalNbrResponse() {
        }
        
        public ChangeRenewalNbrResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRenewalNbrMaster", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRenewalNbrMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int iContractNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int iRenewalNbr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRenewalNbrMasterRequest() {
        }
        
        public ChangeRenewalNbrMasterRequest(int iOrderNum, int iOrderLine, int iContractNum, int iRenewalNbr, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iOrderNum = iOrderNum;
            this.iOrderLine = iOrderLine;
            this.iContractNum = iContractNum;
            this.iRenewalNbr = iRenewalNbr;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRenewalNbrMasterResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRenewalNbrMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRenewalNbrMasterResponse() {
        }
        
        public ChangeRenewalNbrMasterResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRevisionNum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRevisionNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRevisionNumRequest() {
        }
        
        public ChangeRevisionNumRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRevisionNumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRevisionNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRevisionNumResponse() {
        }
        
        public ChangeRevisionNumResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRevNumMaster", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRevNumMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool checkPartRevChange;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool checkComponents;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool removeKitComponents;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public bool suppressUserPrompts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string proposedRev;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRevNumMasterRequest() {
        }
        
        public ChangeRevNumMasterRequest(bool checkPartRevChange, bool checkComponents, bool removeKitComponents, bool suppressUserPrompts, string proposedRev, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.checkPartRevChange = checkPartRevChange;
            this.checkComponents = checkComponents;
            this.removeKitComponents = removeKitComponents;
            this.suppressUserPrompts = suppressUserPrompts;
            this.proposedRev = proposedRev;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRevNumMasterResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRevNumMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cConfigPartMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cDeleteComponentsMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRevNumMasterResponse() {
        }
        
        public ChangeRevNumMasterResponse(string cConfigPartMessage, string cDeleteComponentsMessage, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.cConfigPartMessage = cConfigPartMessage;
            this.cDeleteComponentsMessage = cDeleteComponentsMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRMANum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRMANumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRMANumRequest() {
        }
        
        public ChangeRMANumRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeRMANumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeRMANumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeRMANumResponse() {
        }
        
        public ChangeRMANumResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSalesRep", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSalesRepRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cSalesRepCode;
        
        public ChangeSalesRepRequest() {
        }
        
        public ChangeSalesRepRequest(string cSalesRepCode) {
            this.cSalesRepCode = cSalesRepCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSalesRepResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSalesRepResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public decimal dRepRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iRepSplit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string cRepName;
        
        public ChangeSalesRepResponse() {
        }
        
        public ChangeSalesRepResponse(decimal dRepRate, int iRepSplit, string cRepName) {
            this.dRepRate = dRepRate;
            this.iRepSplit = iRepSplit;
            this.cRepName = cRepName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSalesUOM", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSalesUOMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeSalesUOMRequest() {
        }
        
        public ChangeSalesUOMRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSalesUOMResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSalesUOMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeSalesUOMResponse() {
        }
        
        public ChangeSalesUOMResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSellingQtyMaster", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSellingQtyMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public decimal ipSellingQuantity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool chkSellQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public bool negInvTest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public bool chgSellQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public bool chgDiscPer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public bool suppressUserPrompts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=7)]
        public bool lKeepUnitPrice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=8)]
        public string pcPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=9)]
        public string pcWhseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=10)]
        public string pcBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=11)]
        public string pcLotNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=12)]
        public string pcDimCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=13)]
        public decimal pdDimConvFactor;
        
        public ChangeSellingQtyMasterRequest() {
        }
        
        public ChangeSellingQtyMasterRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, decimal ipSellingQuantity, bool chkSellQty, bool negInvTest, bool chgSellQty, bool chgDiscPer, bool suppressUserPrompts, bool lKeepUnitPrice, string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, string pcDimCode, decimal pdDimConvFactor) {
            this.ds = ds;
            this.ipSellingQuantity = ipSellingQuantity;
            this.chkSellQty = chkSellQty;
            this.negInvTest = negInvTest;
            this.chgSellQty = chgSellQty;
            this.chgDiscPer = chgDiscPer;
            this.suppressUserPrompts = suppressUserPrompts;
            this.lKeepUnitPrice = lKeepUnitPrice;
            this.pcPartNum = pcPartNum;
            this.pcWhseCode = pcWhseCode;
            this.pcBinNum = pcBinNum;
            this.pcLotNum = pcLotNum;
            this.pcDimCode = pcDimCode;
            this.pdDimConvFactor = pdDimConvFactor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSellingQtyMasterResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSellingQtyMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string pcMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string pcNeqQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string opWarningMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string cSellingQuantityChangedMsgText;
        
        public ChangeSellingQtyMasterResponse() {
        }
        
        public ChangeSellingQtyMasterResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string pcMessage, string pcNeqQtyAction, string opWarningMsg, string cSellingQuantityChangedMsgText) {
            this.ds = ds;
            this.pcMessage = pcMessage;
            this.pcNeqQtyAction = pcNeqQtyAction;
            this.opWarningMsg = opWarningMsg;
            this.cSellingQuantityChangedMsgText = cSellingQuantityChangedMsgText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSellingQuantity", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSellingQuantityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lKeepUnitPrice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public decimal ipSellingQuantity;
        
        public ChangeSellingQuantityRequest() {
        }
        
        public ChangeSellingQuantityRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, bool lKeepUnitPrice, decimal ipSellingQuantity) {
            this.ds = ds;
            this.lKeepUnitPrice = lKeepUnitPrice;
            this.ipSellingQuantity = ipSellingQuantity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSellingQuantityResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSellingQuantityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string opWarningMsg;
        
        public ChangeSellingQuantityResponse() {
        }
        
        public ChangeSellingQuantityResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string opWarningMsg) {
            this.ds = ds;
            this.opWarningMsg = opWarningMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSellingReqQty", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSellingReqQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public decimal ipSellingReqQty;
        
        public ChangeSellingReqQtyRequest() {
        }
        
        public ChangeSellingReqQtyRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, decimal ipSellingReqQty) {
            this.ds = ds;
            this.ipSellingReqQty = ipSellingReqQty;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSellingReqQtyResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSellingReqQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string opWarningMsg;
        
        public ChangeSellingReqQtyResponse() {
        }
        
        public ChangeSellingReqQtyResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string opWarningMsg) {
            this.ds = ds;
            this.opWarningMsg = opWarningMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipToContact", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeShipToContactRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeShipToContactRequest() {
        }
        
        public ChangeShipToContactRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipToContactResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeShipToContactResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeShipToContactResponse() {
        }
        
        public ChangeShipToContactResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipToCustID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeShipToCustIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string iShipToCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeShipToCustIDRequest() {
        }
        
        public ChangeShipToCustIDRequest(string iShipToCustID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iShipToCustID = iShipToCustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipToCustIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeShipToCustIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeShipToCustIDResponse() {
        }
        
        public ChangeShipToCustIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipToID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeShipToIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeShipToIDRequest() {
        }
        
        public ChangeShipToIDRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipToIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeShipToIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeShipToIDResponse() {
        }
        
        public ChangeShipToIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSoldToContact", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSoldToContactRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeSoldToContactRequest() {
        }
        
        public ChangeSoldToContactRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSoldToContactResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSoldToContactResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeSoldToContactResponse() {
        }
        
        public ChangeSoldToContactResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSoldToID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSoldToIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeSoldToIDRequest() {
        }
        
        public ChangeSoldToIDRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSoldToIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeSoldToIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeSoldToIDResponse() {
        }
        
        public ChangeSoldToIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUnitPrice", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeUnitPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeUnitPriceRequest() {
        }
        
        public ChangeUnitPriceRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUnitPriceResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeUnitPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeUnitPriceResponse() {
        }
        
        public ChangeUnitPriceResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeVendorChange", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeVendorChangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        public ChangeVendorChangeRequest() {
        }
        
        public ChangeVendorChangeRequest(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeVendorChangeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeVendorChangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        public ChangeVendorChangeResponse() {
        }
        
        public ChangeVendorChangeResponse(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeWhseCodeMaster", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeWhseCodeMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool negInvTest;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool chgDtlWhse;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public bool suppressUserPrompts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string pcPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public string pcWhseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public string pcBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=7)]
        public string pcLotNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=8)]
        public string pcDimCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=9)]
        public decimal pdDimConvFactor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=10)]
        public decimal pdSellingQuantity;
        
        public ChangeWhseCodeMasterRequest() {
        }
        
        public ChangeWhseCodeMasterRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, bool negInvTest, bool chgDtlWhse, bool suppressUserPrompts, string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, string pcDimCode, decimal pdDimConvFactor, decimal pdSellingQuantity) {
            this.ds = ds;
            this.negInvTest = negInvTest;
            this.chgDtlWhse = chgDtlWhse;
            this.suppressUserPrompts = suppressUserPrompts;
            this.pcPartNum = pcPartNum;
            this.pcWhseCode = pcWhseCode;
            this.pcBinNum = pcBinNum;
            this.pcLotNum = pcLotNum;
            this.pcDimCode = pcDimCode;
            this.pdDimConvFactor = pdDimConvFactor;
            this.pdSellingQuantity = pdSellingQuantity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeWhseCodeMasterResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeWhseCodeMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string pcMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string pcNeqQtyAction;
        
        public ChangeWhseCodeMasterResponse() {
        }
        
        public ChangeWhseCodeMasterResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string pcMessage, string pcNeqQtyAction) {
            this.ds = ds;
            this.pcMessage = pcMessage;
            this.pcNeqQtyAction = pcNeqQtyAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeProjectID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeProjectIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeProjectIDRequest() {
        }
        
        public ChangeProjectIDRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeProjectIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeProjectIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeProjectIDResponse() {
        }
        
        public ChangeProjectIDResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeXPartNum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeXPartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeXPartNumRequest() {
        }
        
        public ChangeXPartNumRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeXPartNumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ChangeXPartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public ChangeXPartNumResponse() {
        }
        
        public ChangeXPartNumResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckConfiguration", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int orderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string sourcePart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string sourceRev;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public bool findRevision;
        
        public CheckConfigurationRequest() {
        }
        
        public CheckConfigurationRequest(int orderNum, int orderLine, string sourcePart, string sourceRev, bool findRevision) {
            this.orderNum = orderNum;
            this.orderLine = orderLine;
            this.sourcePart = sourcePart;
            this.sourceRev = sourceRev;
            this.findRevision = findRevision;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckConfigurationResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool canGetDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool needsConfiguration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string configureRevision;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string reasonMessage;
        
        public CheckConfigurationResponse() {
        }
        
        public CheckConfigurationResponse(bool canGetDetails, bool needsConfiguration, string configureRevision, string reasonMessage) {
            this.canGetDetails = canGetDetails;
            this.needsConfiguration = needsConfiguration;
            this.configureRevision = configureRevision;
            this.reasonMessage = reasonMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCustomerCreditLimit", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckCustomerCreditLimitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckCustomerCreditLimitRequest() {
        }
        
        public CheckCustomerCreditLimitRequest(int iOrderNum, int iCustNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iOrderNum = iOrderNum;
            this.iCustNum = iCustNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCustomerCreditLimitResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckCustomerCreditLimitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cCreditLimitMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cCreditShipAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool lContinue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckCustomerCreditLimitResponse() {
        }
        
        public CheckCustomerCreditLimitResponse(string cCreditLimitMessage, string cCreditShipAction, bool lContinue, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.cCreditLimitMessage = cCreditLimitMessage;
            this.cCreditShipAction = cCreditShipAction;
            this.lContinue = lContinue;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCustomerCreditRelease", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckCustomerCreditReleaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderDtlNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int iCustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckCustomerCreditReleaseRequest() {
        }
        
        public CheckCustomerCreditReleaseRequest(int iOrderNum, int iOrderDtlNum, int iCustNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iOrderNum = iOrderNum;
            this.iOrderDtlNum = iOrderDtlNum;
            this.iCustNum = iCustNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCustomerCreditReleaseResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckCustomerCreditReleaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cCreditLimitMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lContinue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckCustomerCreditReleaseResponse() {
        }
        
        public CheckCustomerCreditReleaseResponse(string cCreditLimitMessage, bool lContinue, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.cCreditLimitMessage = cCreditLimitMessage;
            this.lContinue = lContinue;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCustOnCreditHold", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckCustOnCreditHoldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cCustID;
        
        public CheckCustOnCreditHoldRequest() {
        }
        
        public CheckCustOnCreditHoldRequest(int iOrderNum, string cCustID) {
            this.iOrderNum = iOrderNum;
            this.cCustID = cCustID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCustOnCreditHoldResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckCustOnCreditHoldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cCreditLimitMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool lCustomerAllowed;
        
        public CheckCustOnCreditHoldResponse() {
        }
        
        public CheckCustOnCreditHoldResponse(string cCreditLimitMessage, bool lCustomerAllowed) {
            this.cCreditLimitMessage = cCreditLimitMessage;
            this.lCustomerAllowed = lCustomerAllowed;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLtrOfCrdt", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckLtrOfCrdtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cARLOCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public decimal dTotalCharges;
        
        public CheckLtrOfCrdtRequest() {
        }
        
        public CheckLtrOfCrdtRequest(int iOrderNum, string cARLOCID, decimal dTotalCharges) {
            this.iOrderNum = iOrderNum;
            this.cARLOCID = cARLOCID;
            this.dTotalCharges = dTotalCharges;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLtrOfCrdtResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckLtrOfCrdtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CheckLtrOfCrdtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string outMsg;
        
        public CheckLtrOfCrdtResponse() {
        }
        
        public CheckLtrOfCrdtResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CheckLtrOfCrdtResult, string outMsg) {
            this.CheckLtrOfCrdtResult = CheckLtrOfCrdtResult;
            this.outMsg = outMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckOrderHedDispatchReason", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckOrderHedDispatchReasonRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipDispatchReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckOrderHedDispatchReasonRequest() {
        }
        
        public CheckOrderHedDispatchReasonRequest(string ipDispatchReason, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipDispatchReason = ipDispatchReason;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckOrderHedDispatchReasonResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckOrderHedDispatchReasonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckOrderHedDispatchReasonResponse() {
        }
        
        public CheckOrderHedDispatchReasonResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckOrderHedChanges", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckOrderHedChangesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckOrderHedChangesRequest() {
        }
        
        public CheckOrderHedChangesRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckOrderHedChangesResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckOrderHedChangesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cOrderChangedMsgText;
        
        public CheckOrderHedChangesResponse() {
        }
        
        public CheckOrderHedChangesResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string cOrderChangedMsgText) {
            this.ds = ds;
            this.cOrderChangedMsgText = cOrderChangedMsgText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPartRevisionChange", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckPartRevisionChangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string cFieldName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string cPartNum;
        
        public CheckPartRevisionChangeRequest() {
        }
        
        public CheckPartRevisionChangeRequest(int iOrderNum, int iOrderLine, string cFieldName, string cPartNum) {
            this.iOrderNum = iOrderNum;
            this.iOrderLine = iOrderLine;
            this.cFieldName = cFieldName;
            this.cPartNum = cPartNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPartRevisionChangeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckPartRevisionChangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cConfigPartMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string cSubPartMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public bool lSubAvail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public string cMsgType;
        
        public CheckPartRevisionChangeResponse() {
        }
        
        public CheckPartRevisionChangeResponse(string cPartNum, string cConfigPartMessage, string cSubPartMessage, bool lSubAvail, string cMsgType) {
            this.cPartNum = cPartNum;
            this.cConfigPartMessage = cConfigPartMessage;
            this.cSubPartMessage = cSubPartMessage;
            this.lSubAvail = lSubAvail;
            this.cMsgType = cMsgType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckProjectID", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckProjectIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipProjectID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckProjectIDRequest() {
        }
        
        public CheckProjectIDRequest(string ipProjectID, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipProjectID = ipProjectID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckProjectIDResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckProjectIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string opProjMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckProjectIDResponse() {
        }
        
        public CheckProjectIDResponse(string opProjMsg, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.opProjMsg = opProjMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckRateGrpCode", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckRateGrpCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ipRateGrpCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckRateGrpCodeRequest() {
        }
        
        public CheckRateGrpCodeRequest(string ipRateGrpCode, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipRateGrpCode = ipRateGrpCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckRateGrpCodeResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckRateGrpCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckRateGrpCodeResponse() {
        }
        
        public CheckRateGrpCodeResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckSellingFactorDirection", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckSellingFactorDirectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string ip_SellingFactorDirection;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckSellingFactorDirectionRequest() {
        }
        
        public CheckSellingFactorDirectionRequest(string ip_SellingFactorDirection, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ip_SellingFactorDirection = ip_SellingFactorDirection;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckSellingFactorDirectionResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckSellingFactorDirectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CheckSellingFactorDirectionResponse() {
        }
        
        public CheckSellingFactorDirectionResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckSONum", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckSONumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int ProposedSONum;
        
        public CheckSONumRequest() {
        }
        
        public CheckSONumRequest(int ProposedSONum) {
            this.ProposedSONum = ProposedSONum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckSONumResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckSONumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool opFoundSO;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string opMessage;
        
        public CheckSONumResponse() {
        }
        
        public CheckSONumResponse(bool opFoundSO, string opMessage) {
            this.opFoundSO = opFoundSO;
            this.opMessage = opMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckQuoteForCreditLimit", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckQuoteForCreditLimitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iQuoteNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iCustNum;
        
        public CheckQuoteForCreditLimitRequest() {
        }
        
        public CheckQuoteForCreditLimitRequest(int iQuoteNum, int iCustNum) {
            this.iQuoteNum = iQuoteNum;
            this.iCustNum = iCustNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckQuoteForCreditLimitResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CheckQuoteForCreditLimitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cCreditLimitMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cCreditStatus;
        
        public CheckQuoteForCreditLimitResponse() {
        }
        
        public CheckQuoteForCreditLimitResponse(string cCreditLimitMessage, string cCreditStatus) {
            this.cCreditLimitMessage = cCreditLimitMessage;
            this.cCreditStatus = cCreditStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="chkCustomerCreditLimitForCopyOrder", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class chkCustomerCreditLimitForCopyOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int CustNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int OrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string ARLocId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public decimal NewLineAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public bool updCreditHold;
        
        public chkCustomerCreditLimitForCopyOrderRequest() {
        }
        
        public chkCustomerCreditLimitForCopyOrderRequest(int CustNum, int OrderNum, string ARLocId, decimal NewLineAmt, bool updCreditHold) {
            this.CustNum = CustNum;
            this.OrderNum = OrderNum;
            this.ARLocId = ARLocId;
            this.NewLineAmt = NewLineAmt;
            this.updCreditHold = updCreditHold;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="chkCustomerCreditLimitForCopyOrderResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class chkCustomerCreditLimitForCopyOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string cCreditOrderAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string cCreditShipAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public string cCreditLimitMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string cCreditStatus;
        
        public chkCustomerCreditLimitForCopyOrderResponse() {
        }
        
        public chkCustomerCreditLimitForCopyOrderResponse(string cCreditOrderAction, string cCreditShipAction, string cCreditLimitMessage, string cCreditStatus) {
            this.cCreditOrderAction = cCreditOrderAction;
            this.cCreditShipAction = cCreditShipAction;
            this.cCreditLimitMessage = cCreditLimitMessage;
            this.cCreditStatus = cCreditStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CopyOrder", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CopyOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string ipPONum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool ipOpenRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public bool ipReNbr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public bool ipPreserve;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public bool ipCalc;
        
        public CopyOrderRequest() {
        }
        
        public CopyOrderRequest(int orderNum, string ipPONum, bool ipOpenRel, bool ipReNbr, bool ipPreserve, bool ipCalc) {
            this.orderNum = orderNum;
            this.ipPONum = ipPONum;
            this.ipOpenRel = ipOpenRel;
            this.ipReNbr = ipReNbr;
            this.ipPreserve = ipPreserve;
            this.ipCalc = ipCalc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CopyOrderResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CopyOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int NewOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string OutMessage;
        
        public CopyOrderResponse() {
        }
        
        public CopyOrderResponse(int NewOrderNum, string OutMessage) {
            this.NewOrderNum = NewOrderNum;
            this.OutMessage = OutMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateGlbSugPOChg", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CreateGlbSugPOChgRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int iOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int iOrderRel;
        
        public CreateGlbSugPOChgRequest() {
        }
        
        public CreateGlbSugPOChgRequest(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds, int iOrderNum, int iOrderLine, int iOrderRel) {
            this.ds = ds;
            this.iOrderNum = iOrderNum;
            this.iOrderLine = iOrderLine;
            this.iOrderRel = iOrderRel;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateGlbSugPOChgResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CreateGlbSugPOChgResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds;
        
        public CreateGlbSugPOChgResponse() {
        }
        
        public CreateGlbSugPOChgResponse(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLineMiscChargesFromQuote", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CreateLineMiscChargesFromQuoteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int ipOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int ipQuoteNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int ipQuoteLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public int ipQtyNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CreateLineMiscChargesFromQuoteRequest() {
        }
        
        public CreateLineMiscChargesFromQuoteRequest(int ipOrderNum, int ipOrderLine, int ipQuoteNum, int ipQuoteLine, int ipQtyNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ipOrderNum = ipOrderNum;
            this.ipOrderLine = ipOrderLine;
            this.ipQuoteNum = ipQuoteNum;
            this.ipQuoteLine = ipQuoteLine;
            this.ipQtyNum = ipQtyNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLineMiscChargesFromQuoteResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CreateLineMiscChargesFromQuoteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CreateLineMiscChargesFromQuoteResponse() {
        }
        
        public CreateLineMiscChargesFromQuoteResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLinesFromHistory", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CreateLinesFromHistoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CreateLinesFromHistoryRequest() {
        }
        
        public CreateLinesFromHistoryRequest(int iOrderNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iOrderNum = iOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLinesFromHistoryResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CreateLinesFromHistoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CreateLinesFromHistoryResponse() {
        }
        
        public CreateLinesFromHistoryResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOrderDtlComplements", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CreateOrderDtlComplementsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CreateOrderDtlComplementsRequest() {
        }
        
        public CreateOrderDtlComplementsRequest(int iOrderNum, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iOrderNum = iOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOrderDtlComplementsResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class CreateOrderDtlComplementsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public CreateOrderDtlComplementsResponse() {
        }
        
        public CreateOrderDtlComplementsResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ETCValidateAddress", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ETCValidateAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int OrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int OrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int OrderRelNum;
        
        public ETCValidateAddressRequest() {
        }
        
        public ETCValidateAddressRequest(int OrderNum, int OrderLine, int OrderRelNum) {
            this.OrderNum = OrderNum;
            this.OrderLine = OrderLine;
            this.OrderRelNum = OrderRelNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ETCValidateAddressResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class ETCValidateAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.ETCAddrValidationTableset ETCValidateAddressResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool StatusFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public bool ErrorFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string ErrorMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public bool ExceptionFlag;
        
        public ETCValidateAddressResponse() {
        }
        
        public ETCValidateAddressResponse(EpicorConsole.Epicor.SalesOrderSvc.ETCAddrValidationTableset ETCValidateAddressResult, bool StatusFlag, bool ErrorFlag, string ErrorMsg, bool ExceptionFlag) {
            this.ETCValidateAddressResult = ETCValidateAddressResult;
            this.StatusFlag = StatusFlag;
            this.ErrorFlag = ErrorFlag;
            this.ErrorMsg = ErrorMsg;
            this.ExceptionFlag = ExceptionFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGlbSugPOChg", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetGlbSugPOChgRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int iOrderRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public int absolutePage;
        
        public GetGlbSugPOChgRequest() {
        }
        
        public GetGlbSugPOChgRequest(int iOrderNum, int iOrderLine, int iOrderRelNum, int pageSize, int absolutePage) {
            this.iOrderNum = iOrderNum;
            this.iOrderLine = iOrderLine;
            this.iOrderRelNum = iOrderRelNum;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGlbSugPOChgResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetGlbSugPOChgResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset GetGlbSugPOChgResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool morePages;
        
        public GetGlbSugPOChgResponse() {
        }
        
        public GetGlbSugPOChgResponse(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset GetGlbSugPOChgResult, bool morePages) {
            this.GetGlbSugPOChgResult = GetGlbSugPOChgResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQuantities", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetInventoryQuantitiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public bool lOnlyRel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetInventoryQuantitiesRequest() {
        }
        
        public GetInventoryQuantitiesRequest(bool lOnlyRel, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.lOnlyRel = lOnlyRel;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQuantitiesResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetInventoryQuantitiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetInventoryQuantitiesResponse() {
        }
        
        public GetInventoryQuantitiesResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJobProd", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetJobProdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int iOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int absolutePage;
        
        public GetJobProdRequest() {
        }
        
        public GetJobProdRequest(int iOrderNum, int iOrderLine, int pageSize, int absolutePage) {
            this.iOrderNum = iOrderNum;
            this.iOrderLine = iOrderLine;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJobProdResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetJobProdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.OrdRelJobProdTableset GetJobProdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool morePages;
        
        public GetJobProdResponse() {
        }
        
        public GetJobProdResponse(EpicorConsole.Epicor.SalesOrderSvc.OrdRelJobProdTableset GetJobProdResult, bool morePages) {
            this.GetJobProdResult = GetJobProdResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetKitComponents", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetKitComponentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string iPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public string iRevisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int iTargetAsm;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=4)]
        public int orderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=5)]
        public bool iUseMethodForParts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=6)]
        public bool regenerateKit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=7)]
        public string errorMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=8)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetKitComponentsRequest() {
        }
        
        public GetKitComponentsRequest(string iPartNum, string iRevisionNum, int iTargetAsm, int orderNum, int orderLine, bool iUseMethodForParts, bool regenerateKit, string errorMsg, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.iPartNum = iPartNum;
            this.iRevisionNum = iRevisionNum;
            this.iTargetAsm = iTargetAsm;
            this.orderNum = orderNum;
            this.orderLine = orderLine;
            this.iUseMethodForParts = iUseMethodForParts;
            this.regenerateKit = regenerateKit;
            this.errorMsg = errorMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetKitComponentsResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetKitComponentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string errorMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int errorType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetKitComponentsResponse() {
        }
        
        public GetKitComponentsResponse(string errorMsg, int errorType, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.errorMsg = errorMsg;
            this.errorType = errorType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListCustom", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetListCustomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public int absolutePage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=3)]
        public string customClause;
        
        public GetListCustomRequest() {
        }
        
        public GetListCustomRequest(string whereClause, int pageSize, int absolutePage, string customClause) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
            this.customClause = customClause;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListCustomResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetListCustomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedListTableset GetListCustomResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public bool morePages;
        
        public GetListCustomResponse() {
        }
        
        public GetListCustomResponse(EpicorConsole.Epicor.SalesOrderSvc.OrderHedListTableset GetListCustomResult, bool morePages) {
            this.GetListCustomResult = GetListCustomResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewSalesKit", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewSalesKitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public int OrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=1)]
        public int OrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=2)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewSalesKitRequest() {
        }
        
        public GetNewSalesKitRequest(int OrderNum, int OrderLine, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.OrderNum = OrderNum;
            this.OrderLine = OrderLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewSalesKitResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetNewSalesKitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetNewSalesKitResponse() {
        }
        
        public GetNewSalesKitResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPayBTFlagDefaults", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetPayBTFlagDefaultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetPayBTFlagDefaultsRequest() {
        }
        
        public GetPayBTFlagDefaultsRequest(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPayBTFlagDefaultsResponse", WrapperNamespace="Erp:BO:SalesOrder", IsWrapped=true)]
    public partial class GetPayBTFlagDefaultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:SalesOrder", Order=0)]
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds;
        
        public GetPayBTFlagDefaultsResponse() {
        }
        
        public GetPayBTFlagDefaultsResponse(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SalesOrderSvcContractChannel : EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesOrderSvcContractClient : System.ServiceModel.ClientBase<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract>, EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract {
        
        public SalesOrderSvcContractClient() {
        }
        
        public SalesOrderSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesOrderSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesOrderSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesOrderSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetQuoteQty(EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyRequest request) {
            return base.Channel.GetQuoteQty(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.OrdDtlQuoteQtyTableset GetQuoteQty(int iQuoteNum, int iQuoteLine, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyRequest();
            inValue.iQuoteNum = iQuoteNum;
            inValue.iQuoteLine = iQuoteLine;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetQuoteQty(inValue);
            morePages = retVal.morePages;
            return retVal.GetQuoteQtyResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyResponse> GetQuoteQtyAsync(EpicorConsole.Epicor.SalesOrderSvc.GetQuoteQtyRequest request) {
            return base.Channel.GetQuoteQtyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetRowsCustomerTracker(EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerRequest request) {
            return base.Channel.GetRowsCustomerTracker(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.OrderCustTrkTableset GetRowsCustomerTracker(string whereClauseOrderHed, string whereClauseOrderHedAttch, string whereClauseOHOrderMsc, string whereClauseOrderDtl, string whereClauseOrderDtlAttch, string whereClauseOrderMsc, string whereClauseOrderRel, string whereClauseOrderRepComm, string whereClauseSelectedSerialNumbers, string whereClauseSerialNumberSearch, string whereClauseSNFormat, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerRequest();
            inValue.whereClauseOrderHed = whereClauseOrderHed;
            inValue.whereClauseOrderHedAttch = whereClauseOrderHedAttch;
            inValue.whereClauseOHOrderMsc = whereClauseOHOrderMsc;
            inValue.whereClauseOrderDtl = whereClauseOrderDtl;
            inValue.whereClauseOrderDtlAttch = whereClauseOrderDtlAttch;
            inValue.whereClauseOrderMsc = whereClauseOrderMsc;
            inValue.whereClauseOrderRel = whereClauseOrderRel;
            inValue.whereClauseOrderRepComm = whereClauseOrderRepComm;
            inValue.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            inValue.whereClauseSerialNumberSearch = whereClauseSerialNumberSearch;
            inValue.whereClauseSNFormat = whereClauseSNFormat;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetRowsCustomerTracker(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsCustomerTrackerResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerResponse> GetRowsCustomerTrackerAsync(EpicorConsole.Epicor.SalesOrderSvc.GetRowsCustomerTrackerRequest request) {
            return base.Channel.GetRowsCustomerTrackerAsync(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipPartNum, string ipWhseCode, string ipBinNum, decimal ipQuantity, string ipTranType, System.Guid ipRowID) {
            return base.Channel.GetSelectSerialNumbersParams(ipPartNum, ipWhseCode, ipBinNum, ipQuantity, ipTranType, ipRowID);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipPartNum, string ipWhseCode, string ipBinNum, decimal ipQuantity, string ipTranType, System.Guid ipRowID) {
            return base.Channel.GetSelectSerialNumbersParamsAsync(ipPartNum, ipWhseCode, ipBinNum, ipQuantity, ipTranType, ipRowID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetSmartString(EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringRequest request) {
            return base.Channel.GetSmartString(request);
        }
        
        public string GetSmartString(int OrderNum, int OrderLine, string PartNum, string RevisionNum, out bool CreatePart, out bool PromptForPartNum, out bool NotifyOfExistingPart, out string NewPartNum, out bool CreateCustPart, out bool PromptForCustPartNum, out string NewCustPartNum, out bool PromptForAutoCreatePart) {
            EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringRequest();
            inValue.OrderNum = OrderNum;
            inValue.OrderLine = OrderLine;
            inValue.PartNum = PartNum;
            inValue.RevisionNum = RevisionNum;
            EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetSmartString(inValue);
            CreatePart = retVal.CreatePart;
            PromptForPartNum = retVal.PromptForPartNum;
            NotifyOfExistingPart = retVal.NotifyOfExistingPart;
            NewPartNum = retVal.NewPartNum;
            CreateCustPart = retVal.CreateCustPart;
            PromptForCustPartNum = retVal.PromptForCustPartNum;
            NewCustPartNum = retVal.NewCustPartNum;
            PromptForAutoCreatePart = retVal.PromptForAutoCreatePart;
            return retVal.SmartString;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringResponse> GetSmartStringAsync(EpicorConsole.Epicor.SalesOrderSvc.GetSmartStringRequest request) {
            return base.Channel.GetSmartStringAsync(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsTableset GetUIParams() {
            return base.Channel.GetUIParams();
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SOEntryUIParamsTableset> GetUIParamsAsync() {
            return base.Channel.GetUIParamsAsync();
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset GlbSugPOChgDelete(string cRowIdent) {
            return base.Channel.GlbSugPOChgDelete(cRowIdent);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset> GlbSugPOChgDeleteAsync(string cRowIdent) {
            return base.Channel.GlbSugPOChgDeleteAsync(cRowIdent);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GlbSugPOChgUpdate(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateRequest request) {
            return base.Channel.GlbSugPOChgUpdate(request);
        }
        
        public void GlbSugPOChgUpdate(ref EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GlbSugPOChgUpdate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateResponse> GlbSugPOChgUpdateAsync(EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgUpdateRequest request) {
            return base.Channel.GlbSugPOChgUpdateAsync(request);
        }
        
        public void JobProdDelete(int iOrderNum, int iOrderLine, int iOrderRelNum, string cJobNum) {
            base.Channel.JobProdDelete(iOrderNum, iOrderLine, iOrderRelNum, cJobNum);
        }
        
        public System.Threading.Tasks.Task JobProdDeleteAsync(int iOrderNum, int iOrderLine, int iOrderRelNum, string cJobNum) {
            return base.Channel.JobProdDeleteAsync(iOrderNum, iOrderLine, iOrderRelNum, cJobNum);
        }
        
        public bool KitCompPartCreate(int OrderNum, int OrderLine, string PartNum, string RevisionNum, string SmartString, string NewPartNum, string NewCustPartNum, bool ResponseAutoCrtPart) {
            return base.Channel.KitCompPartCreate(OrderNum, OrderLine, PartNum, RevisionNum, SmartString, NewPartNum, NewCustPartNum, ResponseAutoCrtPart);
        }
        
        public System.Threading.Tasks.Task<bool> KitCompPartCreateAsync(int OrderNum, int OrderLine, string PartNum, string RevisionNum, string SmartString, string NewPartNum, string NewCustPartNum, bool ResponseAutoCrtPart) {
            return base.Channel.KitCompPartCreateAsync(OrderNum, OrderLine, PartNum, RevisionNum, SmartString, NewPartNum, NewCustPartNum, ResponseAutoCrtPart);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.MasterUpdate(EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateRequest request) {
            return base.Channel.MasterUpdate(request);
        }
        
        public bool MasterUpdate(bool lCheckForOrderChangedMsg, bool lcheckForResponse, string cTableName, int iCustNum, int iOrderNum, bool lweLicensed, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, out string cResponseMsg, out string cCreditShipAction, out string cDisplayMsg, out string cCompliantMsg, out string cResponseMsgOrdRel) {
            EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateRequest();
            inValue.lCheckForOrderChangedMsg = lCheckForOrderChangedMsg;
            inValue.lcheckForResponse = lcheckForResponse;
            inValue.cTableName = cTableName;
            inValue.iCustNum = iCustNum;
            inValue.iOrderNum = iOrderNum;
            inValue.lweLicensed = lweLicensed;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).MasterUpdate(inValue);
            cResponseMsg = retVal.cResponseMsg;
            cCreditShipAction = retVal.cCreditShipAction;
            cDisplayMsg = retVal.cDisplayMsg;
            cCompliantMsg = retVal.cCompliantMsg;
            cResponseMsgOrdRel = retVal.cResponseMsgOrdRel;
            ds = retVal.ds;
            return retVal.lContinue;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateResponse> MasterUpdateAsync(EpicorConsole.Epicor.SalesOrderSvc.MasterUpdateRequest request) {
            return base.Channel.MasterUpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeARLOCID(EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDRequest request) {
            return base.Channel.OnChangeARLOCID(request);
        }
        
        public string OnChangeARLOCID(string ipARLOCID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, out string opFieldName, out string opMsg) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDRequest();
            inValue.ipARLOCID = ipARLOCID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeARLOCID(inValue);
            opFieldName = retVal.opFieldName;
            opMsg = retVal.opMsg;
            ds = retVal.ds;
            return retVal.opOverwriteValue;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDResponse> OnChangeARLOCIDAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeARLOCIDRequest request) {
            return base.Channel.OnChangeARLOCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeCreditCardOrder(EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderRequest request) {
            return base.Channel.OnChangeCreditCardOrder(request);
        }
        
        public void OnChangeCreditCardOrder(bool ipCreditCardOrder, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderRequest();
            inValue.ipCreditCardOrder = ipCreditCardOrder;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeCreditCardOrder(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderResponse> OnChangeCreditCardOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeCreditCardOrderRequest request) {
            return base.Channel.OnChangeCreditCardOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeofBTConNum(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumRequest request) {
            return base.Channel.OnChangeofBTConNum(request);
        }
        
        public void OnChangeofBTConNum(int NewBillToConNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumRequest();
            inValue.NewBillToConNum = NewBillToConNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeofBTConNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumResponse> OnChangeofBTConNumAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTConNumRequest request) {
            return base.Channel.OnChangeofBTConNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeofBTCustID(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDRequest request) {
            return base.Channel.OnChangeofBTCustID(request);
        }
        
        public void OnChangeofBTCustID(string NewBillToCustID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDRequest();
            inValue.NewBillToCustID = NewBillToCustID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeofBTCustID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDResponse> OnChangeofBTCustIDAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofBTCustIDRequest request) {
            return base.Channel.OnChangeofBTCustIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeOfFixedAmount(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountRequest request) {
            return base.Channel.OnChangeOfFixedAmount(request);
        }
        
        public void OnChangeOfFixedAmount(int OrderNum, int OrderLine, int OrderRel, string TaxCode, string RateCode, decimal NewFixedAmount, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountRequest();
            inValue.OrderNum = OrderNum;
            inValue.OrderLine = OrderLine;
            inValue.OrderRel = OrderRel;
            inValue.TaxCode = TaxCode;
            inValue.RateCode = RateCode;
            inValue.NewFixedAmount = NewFixedAmount;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeOfFixedAmount(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountResponse> OnChangeOfFixedAmountAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfFixedAmountRequest request) {
            return base.Channel.OnChangeOfFixedAmountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeOfMktgCampaign(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignRequest request) {
            return base.Channel.OnChangeOfMktgCampaign(request);
        }
        
        public void OnChangeOfMktgCampaign(string MktgCampaignID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignRequest();
            inValue.MktgCampaignID = MktgCampaignID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeOfMktgCampaign(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignResponse> OnChangeOfMktgCampaignAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgCampaignRequest request) {
            return base.Channel.OnChangeOfMktgCampaignAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeOfMktgEvnt(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntRequest request) {
            return base.Channel.OnChangeOfMktgEvnt(request);
        }
        
        public void OnChangeOfMktgEvnt(string MktgCampaignID, int MktgEvntSeq, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntRequest();
            inValue.MktgCampaignID = MktgCampaignID;
            inValue.MktgEvntSeq = MktgEvntSeq;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeOfMktgEvnt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntResponse> OnChangeOfMktgEvntAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfMktgEvntRequest request) {
            return base.Channel.OnChangeOfMktgEvntAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeofPhaseID(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDRequest request) {
            return base.Channel.OnChangeofPhaseID(request);
        }
        
        public string OnChangeofPhaseID(string ipPhaseID, bool ipIsChanging, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDRequest();
            inValue.ipPhaseID = ipPhaseID;
            inValue.ipIsChanging = ipIsChanging;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeofPhaseID(inValue);
            ds = retVal.ds;
            return retVal.opProjMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDResponse> OnChangeofPhaseIDAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofPhaseIDRequest request) {
            return base.Channel.OnChangeofPhaseIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeofSoldToCreditCheck(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckRequest request) {
            return base.Channel.OnChangeofSoldToCreditCheck(request);
        }
        
        public string OnChangeofSoldToCreditCheck(int iOrderNum, string iCustID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, out bool lContinue) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.iCustID = iCustID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeofSoldToCreditCheck(inValue);
            lContinue = retVal.lContinue;
            ds = retVal.ds;
            return retVal.cCreditLimitMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckResponse> OnChangeofSoldToCreditCheckAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofSoldToCreditCheckRequest request) {
            return base.Channel.OnChangeofSoldToCreditCheckAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeOfTaxAmt(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtRequest request) {
            return base.Channel.OnChangeOfTaxAmt(request);
        }
        
        public void OnChangeOfTaxAmt(int OrderNum, int OrderLine, int OrderRel, string TaxCode, decimal NewTaxAmt, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtRequest();
            inValue.OrderNum = OrderNum;
            inValue.OrderLine = OrderLine;
            inValue.OrderRel = OrderRel;
            inValue.TaxCode = TaxCode;
            inValue.NewTaxAmt = NewTaxAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeOfTaxAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtResponse> OnChangeOfTaxAmtAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxAmtRequest request) {
            return base.Channel.OnChangeOfTaxAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeOfTaxPercent(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentRequest request) {
            return base.Channel.OnChangeOfTaxPercent(request);
        }
        
        public void OnChangeOfTaxPercent(int OrderNum, int OrderLine, int OrderRel, string TaxCode, decimal NewPercent, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentRequest();
            inValue.OrderNum = OrderNum;
            inValue.OrderLine = OrderLine;
            inValue.OrderRel = OrderRel;
            inValue.TaxCode = TaxCode;
            inValue.NewPercent = NewPercent;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeOfTaxPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentResponse> OnChangeOfTaxPercentAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeOfTaxPercentRequest request) {
            return base.Channel.OnChangeOfTaxPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeofTaxRgn(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnRequest request) {
            return base.Channel.OnChangeofTaxRgn(request);
        }
        
        public void OnChangeofTaxRgn(string iTaxRegionCode, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnRequest();
            inValue.iTaxRegionCode = iTaxRegionCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeofTaxRgn(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnResponse> OnChangeofTaxRgnAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeofTaxRgnRequest request) {
            return base.Channel.OnChangeofTaxRgnAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeRateCode(EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeRequest request) {
            return base.Channel.OnChangeRateCode(request);
        }
        
        public void OnChangeRateCode(string proposedRateCode, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeRequest();
            inValue.proposedRateCode = proposedRateCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeRateCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeResponse> OnChangeRateCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeRateCodeRequest request) {
            return base.Channel.OnChangeRateCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeTaxableAmt(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtRequest request) {
            return base.Channel.OnChangeTaxableAmt(request);
        }
        
        public void OnChangeTaxableAmt(int OrderNum, int OrderLine, int OrderRel, string TaxCode, string RateCode, decimal NewTaxableAmt, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtRequest();
            inValue.OrderNum = OrderNum;
            inValue.OrderLine = OrderLine;
            inValue.OrderRel = OrderRel;
            inValue.TaxCode = TaxCode;
            inValue.RateCode = RateCode;
            inValue.NewTaxableAmt = NewTaxableAmt;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeTaxableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtResponse> OnChangeTaxableAmtAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxableAmtRequest request) {
            return base.Channel.OnChangeTaxableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeTaxCode(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeRequest request) {
            return base.Channel.OnChangeTaxCode(request);
        }
        
        public void OnChangeTaxCode(int ipOrderNum, int ipLineNum, int ipRelNum, string ipTaxCode, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeRequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ipLineNum = ipLineNum;
            inValue.ipRelNum = ipRelNum;
            inValue.ipTaxCode = ipTaxCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeTaxCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeResponse> OnChangeTaxCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTaxCodeRequest request) {
            return base.Channel.OnChangeTaxCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OrderDtlGetNewContracts(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsRequest request) {
            return base.Channel.OrderDtlGetNewContracts(request);
        }
        
        public void OrderDtlGetNewContracts(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int iOrderNum) {
            EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsRequest();
            inValue.ds = ds;
            inValue.iOrderNum = iOrderNum;
            EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OrderDtlGetNewContracts(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsResponse> OrderDtlGetNewContractsAsync(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewContractsRequest request) {
            return base.Channel.OrderDtlGetNewContractsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OrderDtlGetNewCounterSale(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleRequest request) {
            return base.Channel.OrderDtlGetNewCounterSale(request);
        }
        
        public void OrderDtlGetNewCounterSale(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int iOrderNum) {
            EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleRequest();
            inValue.ds = ds;
            inValue.iOrderNum = iOrderNum;
            EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OrderDtlGetNewCounterSale(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleResponse> OrderDtlGetNewCounterSaleAsync(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewCounterSaleRequest request) {
            return base.Channel.OrderDtlGetNewCounterSaleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OrderDtlGetNewFromQuote(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteRequest request) {
            return base.Channel.OrderDtlGetNewFromQuote(request);
        }
        
        public void OrderDtlGetNewFromQuote(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int iOrderNum) {
            EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteRequest();
            inValue.ds = ds;
            inValue.iOrderNum = iOrderNum;
            EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OrderDtlGetNewFromQuote(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteResponse> OrderDtlGetNewFromQuoteAsync(EpicorConsole.Epicor.SalesOrderSvc.OrderDtlGetNewFromQuoteRequest request) {
            return base.Channel.OrderDtlGetNewFromQuoteAsync(request);
        }
        
        public bool OverCreditLimitUpdateAllowed(int iOrderNum) {
            return base.Channel.OverCreditLimitUpdateAllowed(iOrderNum);
        }
        
        public System.Threading.Tasks.Task<bool> OverCreditLimitUpdateAllowedAsync(int iOrderNum) {
            return base.Channel.OverCreditLimitUpdateAllowedAsync(iOrderNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.PhantomComponents(EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsRequest request) {
            return base.Channel.PhantomComponents(request);
        }
        
        public void PhantomComponents(string phPartNum, int OrderNum, int OrderLine, ref string errMessage) {
            EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsRequest();
            inValue.phPartNum = phPartNum;
            inValue.OrderNum = OrderNum;
            inValue.OrderLine = OrderLine;
            inValue.errMessage = errMessage;
            EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).PhantomComponents(inValue);
            errMessage = retVal.errMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsResponse> PhantomComponentsAsync(EpicorConsole.Epicor.SalesOrderSvc.PhantomComponentsRequest request) {
            return base.Channel.PhantomComponentsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ProcessCounterSale(EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleRequest request) {
            return base.Channel.ProcessCounterSale(request);
        }
        
        public string ProcessCounterSale(int iOrderNum, bool lGeneratePackingSlip, bool lGenerateInvoice, bool lReadyToShip, string cCreditShipAction, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, out int iInvoiceNum, out string opMessage) {
            EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.lGeneratePackingSlip = lGeneratePackingSlip;
            inValue.lGenerateInvoice = lGenerateInvoice;
            inValue.lReadyToShip = lReadyToShip;
            inValue.cCreditShipAction = cCreditShipAction;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ProcessCounterSale(inValue);
            iInvoiceNum = retVal.iInvoiceNum;
            opMessage = retVal.opMessage;
            ds = retVal.ds;
            return retVal.cPackNum;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleResponse> ProcessCounterSaleAsync(EpicorConsole.Epicor.SalesOrderSvc.ProcessCounterSaleRequest request) {
            return base.Channel.ProcessCounterSaleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ProcessQuickEntry(EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryRequest request) {
            return base.Channel.ProcessQuickEntry(request);
        }
        
        public bool ProcessQuickEntry(int iOrderNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ProcessQuickEntry(inValue);
            ds = retVal.ds;
            return retVal.lProcessComplete;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryResponse> ProcessQuickEntryAsync(EpicorConsole.Epicor.SalesOrderSvc.ProcessQuickEntryRequest request) {
            return base.Channel.ProcessQuickEntryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.RebuildShipUPS(EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSRequest request) {
            return base.Channel.RebuildShipUPS(request);
        }
        
        public void RebuildShipUPS(int ipCustNum, string ipShipToNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSRequest();
            inValue.ipCustNum = ipCustNum;
            inValue.ipShipToNum = ipShipToNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).RebuildShipUPS(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSResponse> RebuildShipUPSAsync(EpicorConsole.Epicor.SalesOrderSvc.RebuildShipUPSRequest request) {
            return base.Channel.RebuildShipUPSAsync(request);
        }
        
        public void RecalcKitPriceAfterConfig(int iOrderNum, int iOrderLine) {
            base.Channel.RecalcKitPriceAfterConfig(iOrderNum, iOrderLine);
        }
        
        public System.Threading.Tasks.Task RecalcKitPriceAfterConfigAsync(int iOrderNum, int iOrderLine) {
            return base.Channel.RecalcKitPriceAfterConfigAsync(iOrderNum, iOrderLine);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset RemoveICPOLink(int iOrderNum) {
            return base.Channel.RemoveICPOLink(iOrderNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> RemoveICPOLinkAsync(int iOrderNum) {
            return base.Channel.RemoveICPOLinkAsync(iOrderNum);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ReopenOrder(int iOrderNum) {
            return base.Channel.ReopenOrder(iOrderNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> ReopenOrderAsync(int iOrderNum) {
            return base.Channel.ReopenOrderAsync(iOrderNum);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ReopenOrderLine(int iOrderNum, int iOrderLine) {
            return base.Channel.ReopenOrderLine(iOrderNum, iOrderLine);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> ReopenOrderLineAsync(int iOrderNum, int iOrderLine) {
            return base.Channel.ReopenOrderLineAsync(iOrderNum, iOrderLine);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ReopenRelease(int iOrderNum, int iOrderLine, int iOrderRelNum) {
            return base.Channel.ReopenRelease(iOrderNum, iOrderLine, iOrderRelNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> ReopenReleaseAsync(int iOrderNum, int iOrderLine, int iOrderRelNum) {
            return base.Channel.ReopenReleaseAsync(iOrderNum, iOrderLine, iOrderRelNum);
        }
        
        public void REVISIONHISTORY06() {
            base.Channel.REVISIONHISTORY06();
        }
        
        public System.Threading.Tasks.Task REVISIONHISTORY06Async() {
            return base.Channel.REVISIONHISTORY06Async();
        }
        
        public void SendLinkedICPOSuggestion() {
            base.Channel.SendLinkedICPOSuggestion();
        }
        
        public System.Threading.Tasks.Task SendLinkedICPOSuggestionAsync() {
            return base.Channel.SendLinkedICPOSuggestionAsync();
        }
        
        public void SetCalcQtysPref(bool ipCalcQtyPref) {
            base.Channel.SetCalcQtysPref(ipCalcQtyPref);
        }
        
        public System.Threading.Tasks.Task SetCalcQtysPrefAsync(bool ipCalcQtyPref) {
            return base.Channel.SetCalcQtysPrefAsync(ipCalcQtyPref);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.SetReadyToCalc(EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcRequest request) {
            return base.Channel.SetReadyToCalc(request);
        }
        
        public void SetReadyToCalc(int ipOrderNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcRequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).SetReadyToCalc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcResponse> SetReadyToCalcAsync(EpicorConsole.Epicor.SalesOrderSvc.SetReadyToCalcRequest request) {
            return base.Channel.SetReadyToCalcAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.SetUPSQVEnable(EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableRequest request) {
            return base.Channel.SetUPSQVEnable(request);
        }
        
        public void SetUPSQVEnable(bool ipQVEnable, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableRequest();
            inValue.ipQVEnable = ipQVEnable;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).SetUPSQVEnable(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableResponse> SetUPSQVEnableAsync(EpicorConsole.Epicor.SalesOrderSvc.SetUPSQVEnableRequest request) {
            return base.Channel.SetUPSQVEnableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ValidateInvQty(EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyRequest request) {
            return base.Channel.ValidateInvQty(request);
        }
        
        public string ValidateInvQty(int ipOrderNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, out string opNegQtyAction) {
            EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyRequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ValidateInvQty(inValue);
            opNegQtyAction = retVal.opNegQtyAction;
            ds = retVal.ds;
            return retVal.opNegInvMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyResponse> ValidateInvQtyAsync(EpicorConsole.Epicor.SalesOrderSvc.ValidateInvQtyRequest request) {
            return base.Channel.ValidateInvQtyAsync(request);
        }
        
        public bool ValidateSN(string ipSerialNum, string ipPartNum, decimal ipOurInvShipQty, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, string ipWarehouseCode, string ipBinNum) {
            return base.Channel.ValidateSN(ipSerialNum, ipPartNum, ipOurInvShipQty, ipOrderNum, ipOrderLine, ipOrderRelNum, ipWarehouseCode, ipBinNum);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateSNAsync(string ipSerialNum, string ipPartNum, decimal ipOurInvShipQty, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, string ipWarehouseCode, string ipBinNum) {
            return base.Channel.ValidateSNAsync(ipSerialNum, ipPartNum, ipOurInvShipQty, ipOrderNum, ipOrderLine, ipOrderRelNum, ipWarehouseCode, ipBinNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ValidateSNs(EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsRequest request) {
            return base.Channel.ValidateSNs(request);
        }
        
        public void ValidateSNs(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ValidateSNs(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsResponse> ValidateSNsAsync(EpicorConsole.Epicor.SalesOrderSvc.ValidateSNsRequest request) {
            return base.Channel.ValidateSNsAsync(request);
        }
        
        public string VerifySendICPOSugg() {
            return base.Channel.VerifySendICPOSugg();
        }
        
        public System.Threading.Tasks.Task<string> VerifySendICPOSuggAsync() {
            return base.Channel.VerifySendICPOSuggAsync();
        }
        
        public bool HasMultipleSubs(string iPartNum) {
            return base.Channel.HasMultipleSubs(iPartNum);
        }
        
        public System.Threading.Tasks.Task<bool> HasMultipleSubsAsync(string iPartNum) {
            return base.Channel.HasMultipleSubsAsync(iPartNum);
        }
        
        public bool IsRunOutOnHand(string iPartNum) {
            return base.Channel.IsRunOutOnHand(iPartNum);
        }
        
        public System.Threading.Tasks.Task<bool> IsRunOutOnHandAsync(string iPartNum) {
            return base.Channel.IsRunOutOnHandAsync(iPartNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.SubmitNewOrder(EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderRequest request) {
            return base.Channel.SubmitNewOrder(request);
        }
        
        public void SubmitNewOrder(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).SubmitNewOrder(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderResponse> SubmitNewOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.SubmitNewOrderRequest request) {
            return base.Channel.SubmitNewOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ECCUpdate(EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateRequest request) {
            return base.Channel.ECCUpdate(request);
        }
        
        public void ECCUpdate(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ECCUpdate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateResponse> ECCUpdateAsync(EpicorConsole.Epicor.SalesOrderSvc.ECCUpdateRequest request) {
            return base.Channel.ECCUpdateAsync(request);
        }
        
        public void UpdateExistingOrder(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            base.Channel.UpdateExistingOrder(ds);
        }
        
        public System.Threading.Tasks.Task UpdateExistingOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            return base.Channel.UpdateExistingOrderAsync(ds);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset UpdateOrderDtlDiscountPercent(int orderNum, string orderLines) {
            return base.Channel.UpdateOrderDtlDiscountPercent(orderNum, orderLines);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> UpdateOrderDtlDiscountPercentAsync(int orderNum, string orderLines) {
            return base.Channel.UpdateOrderDtlDiscountPercentAsync(orderNum, orderLines);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetBasePartForConfig(EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigRequest request) {
            return base.Channel.GetBasePartForConfig(request);
        }
        
        public string GetBasePartForConfig(System.Guid sourceSysRowID, out string cfgRevisionNum) {
            EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigRequest();
            inValue.sourceSysRowID = sourceSysRowID;
            EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetBasePartForConfig(inValue);
            cfgRevisionNum = retVal.cfgRevisionNum;
            return retVal.cfgPartNum;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigResponse> GetBasePartForConfigAsync(EpicorConsole.Epicor.SalesOrderSvc.GetBasePartForConfigRequest request) {
            return base.Channel.GetBasePartForConfigAsync(request);
        }
        
        public bool InvoiceExists(int orderNum) {
            return base.Channel.InvoiceExists(orderNum);
        }
        
        public System.Threading.Tasks.Task<bool> InvoiceExistsAsync(int orderNum) {
            return base.Channel.InvoiceExistsAsync(orderNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.OnChangeTranDocTypeID(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDRequest request) {
            return base.Channel.OnChangeTranDocTypeID(request);
        }
        
        public void OnChangeTranDocTypeID(int orderNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDRequest();
            inValue.orderNum = orderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).OnChangeTranDocTypeID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDResponse> OnChangeTranDocTypeIDAsync(EpicorConsole.Epicor.SalesOrderSvc.OnChangeTranDocTypeIDRequest request) {
            return base.Channel.OnChangeTranDocTypeIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ValidateProjectID(EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDRequest request) {
            return base.Channel.ValidateProjectID(request);
        }
        
        public void ValidateProjectID(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string Prj) {
            EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDRequest();
            inValue.ds = ds;
            inValue.Prj = Prj;
            EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ValidateProjectID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDResponse> ValidateProjectIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ValidateProjectIDRequest request) {
            return base.Channel.ValidateProjectIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ValidateCustomer(EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerRequest request) {
            return base.Channel.ValidateCustomer(request);
        }
        
        public void ValidateCustomer(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string Cust, string Prj) {
            EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerRequest();
            inValue.ds = ds;
            inValue.Cust = Cust;
            inValue.Prj = Prj;
            EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ValidateCustomer(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerResponse> ValidateCustomerAsync(EpicorConsole.Epicor.SalesOrderSvc.ValidateCustomerRequest request) {
            return base.Channel.ValidateCustomerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewOrderHed(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedRequest request) {
            return base.Channel.GetNewOrderHed(request);
        }
        
        public void GetNewOrderHed(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewOrderHed(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedResponse> GetNewOrderHedAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedRequest request) {
            return base.Channel.GetNewOrderHedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewOrderHedAttch(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchRequest request) {
            return base.Channel.GetNewOrderHedAttch(request);
        }
        
        public void GetNewOrderHedAttch(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchRequest();
            inValue.ds = ds;
            inValue.orderNum = orderNum;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewOrderHedAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchResponse> GetNewOrderHedAttchAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedAttchRequest request) {
            return base.Channel.GetNewOrderHedAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewOHOrderMsc(EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscRequest request) {
            return base.Channel.GetNewOHOrderMsc(request);
        }
        
        public void GetNewOHOrderMsc(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscRequest();
            inValue.ds = ds;
            inValue.orderNum = orderNum;
            inValue.orderLine = orderLine;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewOHOrderMsc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscResponse> GetNewOHOrderMscAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOHOrderMscRequest request) {
            return base.Channel.GetNewOHOrderMscAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewOrderDtl(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlRequest request) {
            return base.Channel.GetNewOrderDtl(request);
        }
        
        public void GetNewOrderDtl(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlRequest();
            inValue.ds = ds;
            inValue.orderNum = orderNum;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewOrderDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlResponse> GetNewOrderDtlAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlRequest request) {
            return base.Channel.GetNewOrderDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewOrderDtlAttch(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchRequest request) {
            return base.Channel.GetNewOrderDtlAttch(request);
        }
        
        public void GetNewOrderDtlAttch(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchRequest();
            inValue.ds = ds;
            inValue.orderNum = orderNum;
            inValue.orderLine = orderLine;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewOrderDtlAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchResponse> GetNewOrderDtlAttchAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderDtlAttchRequest request) {
            return base.Channel.GetNewOrderDtlAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewOrderMsc(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscRequest request) {
            return base.Channel.GetNewOrderMsc(request);
        }
        
        public void GetNewOrderMsc(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscRequest();
            inValue.ds = ds;
            inValue.orderNum = orderNum;
            inValue.orderLine = orderLine;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewOrderMsc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscResponse> GetNewOrderMscAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderMscRequest request) {
            return base.Channel.GetNewOrderMscAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewOrderRel(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelRequest request) {
            return base.Channel.GetNewOrderRel(request);
        }
        
        public void GetNewOrderRel(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelRequest();
            inValue.ds = ds;
            inValue.orderNum = orderNum;
            inValue.orderLine = orderLine;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewOrderRel(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelResponse> GetNewOrderRelAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelRequest request) {
            return base.Channel.GetNewOrderRelAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewOrderRelTax(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxRequest request) {
            return base.Channel.GetNewOrderRelTax(request);
        }
        
        public void GetNewOrderRelTax(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum, int orderLine, int orderRelNum, string taxCode, string rateCode) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxRequest();
            inValue.ds = ds;
            inValue.orderNum = orderNum;
            inValue.orderLine = orderLine;
            inValue.orderRelNum = orderRelNum;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewOrderRelTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxResponse> GetNewOrderRelTaxAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderRelTaxRequest request) {
            return base.Channel.GetNewOrderRelTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewOrderHedUPS(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSRequest request) {
            return base.Channel.GetNewOrderHedUPS(request);
        }
        
        public void GetNewOrderHedUPS(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, int orderNum) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSRequest();
            inValue.ds = ds;
            inValue.orderNum = orderNum;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewOrderHedUPS(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSResponse> GetNewOrderHedUPSAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewOrderHedUPSRequest request) {
            return base.Channel.GetNewOrderHedUPSAsync(request);
        }
        
        public void DeleteByID(int orderNum) {
            base.Channel.DeleteByID(orderNum);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(int orderNum) {
            return base.Channel.DeleteByIDAsync(orderNum);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetByID(int orderNum) {
            return base.Channel.GetByID(orderNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> GetByIDAsync(int orderNum) {
            return base.Channel.GetByIDAsync(orderNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetListResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetList(EpicorConsole.Epicor.SalesOrderSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.SalesOrderSvc.GetListRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.SalesOrderSvc.GetListResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.SalesOrderSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetRowsResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetRows(EpicorConsole.Epicor.SalesOrderSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetRows(
                    string whereClauseOrderHed, 
                    string whereClauseOrderHedAttch, 
                    string whereClauseOHOrderMsc, 
                    string whereClauseOrderDtl, 
                    string whereClauseOrderDtlAttch, 
                    string whereClauseOrderMsc, 
                    string whereClauseOrderRel, 
                    string whereClauseOrderRelTax, 
                    string whereClauseOrderHedUPS, 
                    string whereClauseOrderRepComm, 
                    string whereClauseHedTaxSum, 
                    string whereClauseOrderHist, 
                    string whereClausePartSubs, 
                    string whereClauseSelectedSerialNumbers, 
                    string whereClauseSNFormat, 
                    string whereClauseTaxConnectStatus, 
                    int pageSize, 
                    int absolutePage, 
                    out bool morePages) {
            EpicorConsole.Epicor.SalesOrderSvc.GetRowsRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetRowsRequest();
            inValue.whereClauseOrderHed = whereClauseOrderHed;
            inValue.whereClauseOrderHedAttch = whereClauseOrderHedAttch;
            inValue.whereClauseOHOrderMsc = whereClauseOHOrderMsc;
            inValue.whereClauseOrderDtl = whereClauseOrderDtl;
            inValue.whereClauseOrderDtlAttch = whereClauseOrderDtlAttch;
            inValue.whereClauseOrderMsc = whereClauseOrderMsc;
            inValue.whereClauseOrderRel = whereClauseOrderRel;
            inValue.whereClauseOrderRelTax = whereClauseOrderRelTax;
            inValue.whereClauseOrderHedUPS = whereClauseOrderHedUPS;
            inValue.whereClauseOrderRepComm = whereClauseOrderRepComm;
            inValue.whereClauseHedTaxSum = whereClauseHedTaxSum;
            inValue.whereClauseOrderHist = whereClauseOrderHist;
            inValue.whereClausePartSubs = whereClausePartSubs;
            inValue.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            inValue.whereClauseSNFormat = whereClauseSNFormat;
            inValue.whereClauseTaxConnectStatus = whereClauseTaxConnectStatus;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.SalesOrderSvc.GetRowsResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.SalesOrderSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.UpdateResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.Update(EpicorConsole.Epicor.SalesOrderSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.UpdateRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.UpdateRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.UpdateResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.SalesOrderSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.UpdateExtResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.UpdateExt(EpicorConsole.Epicor.SalesOrderSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.BOUpdErrorTableset UpdateExt(ref EpicorConsole.Epicor.SalesOrderSvc.UpdExtSalesOrderTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            EpicorConsole.Epicor.SalesOrderSvc.UpdateExtRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            EpicorConsole.Epicor.SalesOrderSvc.UpdateExtResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.SalesOrderSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
        
        public string getBreakListCodeDesc(string pcListCode, string pcPartNum, string pcLineWarehouse, string pcCurrencyCode, System.Nullable<System.DateTime> pdtOrderDate) {
            return base.Channel.getBreakListCodeDesc(pcListCode, pcPartNum, pcLineWarehouse, pcCurrencyCode, pdtOrderDate);
        }
        
        public System.Threading.Tasks.Task<string> getBreakListCodeDescAsync(string pcListCode, string pcPartNum, string pcLineWarehouse, string pcCurrencyCode, System.Nullable<System.DateTime> pdtOrderDate) {
            return base.Channel.getBreakListCodeDescAsync(pcListCode, pcPartNum, pcLineWarehouse, pcCurrencyCode, pdtOrderDate);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ApplyOrderBasedDiscounts(int iOrderNum) {
            return base.Channel.ApplyOrderBasedDiscounts(iOrderNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> ApplyOrderBasedDiscountsAsync(int iOrderNum) {
            return base.Channel.ApplyOrderBasedDiscountsAsync(iOrderNum);
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.NegativeInventoryTest(EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTest(request);
        }
        
        public string NegativeInventoryTest(string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, string pcPCID, string pcDimCode, int pdDimConvFactor, decimal ipSellingQuantity, out string pcMessage) {
            EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestRequest();
            inValue.pcPartNum = pcPartNum;
            inValue.pcWhseCode = pcWhseCode;
            inValue.pcBinNum = pcBinNum;
            inValue.pcLotNum = pcLotNum;
            inValue.pcPCID = pcPCID;
            inValue.pcDimCode = pcDimCode;
            inValue.pdDimConvFactor = pdDimConvFactor;
            inValue.ipSellingQuantity = ipSellingQuantity;
            EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).NegativeInventoryTest(inValue);
            pcMessage = retVal.pcMessage;
            return retVal.pcNeqQtyAction;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestResponse> NegativeInventoryTestAsync(EpicorConsole.Epicor.SalesOrderSvc.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTestAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CCClearResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CCClear(EpicorConsole.Epicor.SalesOrderSvc.CCClearRequest request) {
            return base.Channel.CCClear(request);
        }
        
        public void CCClear(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CCClearRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CCClearRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CCClearResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CCClear(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CCClearResponse> CCClearAsync(EpicorConsole.Epicor.SalesOrderSvc.CCClearRequest request) {
            return base.Channel.CCClearAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CCLoadTranData(EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataRequest request) {
            return base.Channel.CCLoadTranData(request);
        }
        
        public void CCLoadTranData(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, System.Nullable<System.DateTime> inTranDate, int inTranTime, int inTranNum) {
            EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataRequest();
            inValue.ds = ds;
            inValue.inTranDate = inTranDate;
            inValue.inTranTime = inTranTime;
            inValue.inTranNum = inTranNum;
            EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CCLoadTranData(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataResponse> CCLoadTranDataAsync(EpicorConsole.Epicor.SalesOrderSvc.CCLoadTranDataRequest request) {
            return base.Channel.CCLoadTranDataAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CCProcessCard(EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardRequest request) {
            return base.Channel.CCProcessCard(request);
        }
        
        public string CCProcessCard(string inTranType, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardRequest();
            inValue.inTranType = inTranType;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CCProcessCard(inValue);
            ds = retVal.ds;
            return retVal.opMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardResponse> CCProcessCardAsync(EpicorConsole.Epicor.SalesOrderSvc.CCProcessCardRequest request) {
            return base.Channel.CCProcessCardAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeBTCustIDMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterRequest request) {
            return base.Channel.ChangeBTCustIDMaster(request);
        }
        
        public string ChangeBTCustIDMaster(string NewBillToCustID, bool lchkCustCredHold, int iOrderNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, out bool lCustomerAllowed) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterRequest();
            inValue.NewBillToCustID = NewBillToCustID;
            inValue.lchkCustCredHold = lchkCustCredHold;
            inValue.iOrderNum = iOrderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeBTCustIDMaster(inValue);
            lCustomerAllowed = retVal.lCustomerAllowed;
            ds = retVal.ds;
            return retVal.cCreditLimitMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterResponse> ChangeBTCustIDMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeBTCustIDMasterRequest request) {
            return base.Channel.ChangeBTCustIDMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeCardNumber(EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberRequest request) {
            return base.Channel.ChangeCardNumber(request);
        }
        
        public void ChangeCardNumber(string inCardNumber, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberRequest();
            inValue.inCardNumber = inCardNumber;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeCardNumber(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberResponse> ChangeCardNumberAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCardNumberRequest request) {
            return base.Channel.ChangeCardNumberAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeCCAmounts(EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsRequest request) {
            return base.Channel.ChangeCCAmounts(request);
        }
        
        public void ChangeCCAmounts(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeCCAmounts(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsResponse> ChangeCCAmountsAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCCAmountsRequest request) {
            return base.Channel.ChangeCCAmountsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeCommissionable(EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableRequest request) {
            return base.Channel.ChangeCommissionable(request);
        }
        
        public void ChangeCommissionable(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeCommissionable(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableResponse> ChangeCommissionableAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCommissionableRequest request) {
            return base.Channel.ChangeCommissionableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeContractNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumRequest request) {
            return base.Channel.ChangeContractNum(request);
        }
        
        public void ChangeContractNum(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeContractNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumResponse> ChangeContractNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumRequest request) {
            return base.Channel.ChangeContractNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeContractNumMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterRequest request) {
            return base.Channel.ChangeContractNumMaster(request);
        }
        
        public string ChangeContractNumMaster(int iOrderNum, int iOrderLine, int iContractNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.iOrderLine = iOrderLine;
            inValue.iContractNum = iContractNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeContractNumMaster(inValue);
            ds = retVal.ds;
            return retVal.outMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterResponse> ChangeContractNumMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeContractNumMasterRequest request) {
            return base.Channel.ChangeContractNumMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeCounterSale(EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleRequest request) {
            return base.Channel.ChangeCounterSale(request);
        }
        
        public void ChangeCounterSale(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeCounterSale(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleResponse> ChangeCounterSaleAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCounterSaleRequest request) {
            return base.Channel.ChangeCounterSaleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeCreditExp(EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpRequest request) {
            return base.Channel.ChangeCreditExp(request);
        }
        
        public void ChangeCreditExp(int ipExpMonth, int ipExpYear, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpRequest();
            inValue.ipExpMonth = ipExpMonth;
            inValue.ipExpYear = ipExpYear;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeCreditExp(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpResponse> ChangeCreditExpAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCreditExpRequest request) {
            return base.Channel.ChangeCreditExpAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeCurrencyCode(EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeRequest request) {
            return base.Channel.ChangeCurrencyCode(request);
        }
        
        public void ChangeCurrencyCode(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeCurrencyCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeResponse> ChangeCurrencyCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCurrencyCodeRequest request) {
            return base.Channel.ChangeCurrencyCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeCustomer(EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerRequest request) {
            return base.Channel.ChangeCustomer(request);
        }
        
        public void ChangeCustomer(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeCustomer(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerResponse> ChangeCustomerAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeCustomerRequest request) {
            return base.Channel.ChangeCustomerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangedCardNumber(EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberRequest request) {
            return base.Channel.ChangedCardNumber(request);
        }
        
        public void ChangedCardNumber(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangedCardNumber(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberResponse> ChangedCardNumberAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangedCardNumberRequest request) {
            return base.Channel.ChangedCardNumberAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeDiscBreakListCode(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeRequest request) {
            return base.Channel.ChangeDiscBreakListCode(request);
        }
        
        public void ChangeDiscBreakListCode(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeDiscBreakListCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeResponse> ChangeDiscBreakListCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscBreakListCodeRequest request) {
            return base.Channel.ChangeDiscBreakListCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeDiscountAmount(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountRequest request) {
            return base.Channel.ChangeDiscountAmount(request);
        }
        
        public void ChangeDiscountAmount(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeDiscountAmount(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountResponse> ChangeDiscountAmountAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountAmountRequest request) {
            return base.Channel.ChangeDiscountAmountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeDiscountPercent(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentRequest request) {
            return base.Channel.ChangeDiscountPercent(request);
        }
        
        public void ChangeDiscountPercent(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeDiscountPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentResponse> ChangeDiscountPercentAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeDiscountPercentRequest request) {
            return base.Channel.ChangeDiscountPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeERSOrder(EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderRequest request) {
            return base.Channel.ChangeERSOrder(request);
        }
        
        public void ChangeERSOrder(bool proposedERSOrder, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderRequest();
            inValue.proposedERSOrder = proposedERSOrder;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeERSOrder(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderResponse> ChangeERSOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeERSOrderRequest request) {
            return base.Channel.ChangeERSOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeGroup(EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupRequest request) {
            return base.Channel.ChangeGroup(request);
        }
        
        public void ChangeGroup(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeGroup(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupResponse> ChangeGroupAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeGroupRequest request) {
            return base.Channel.ChangeGroupAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeHedOTSCountryNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumRequest request) {
            return base.Channel.ChangeHedOTSCountryNum(request);
        }
        
        public void ChangeHedOTSCountryNum(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeHedOTSCountryNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumResponse> ChangeHedOTSCountryNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeHedOTSCountryNumRequest request) {
            return base.Channel.ChangeHedOTSCountryNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeHedUseOTS(EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSRequest request) {
            return base.Channel.ChangeHedUseOTS(request);
        }
        
        public void ChangeHedUseOTS(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeHedUseOTS(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSResponse> ChangeHedUseOTSAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeHedUseOTSRequest request) {
            return base.Channel.ChangeHedUseOTSAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeKitPricing(EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingRequest request) {
            return base.Channel.ChangeKitPricing(request);
        }
        
        public void ChangeKitPricing(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeKitPricing(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingResponse> ChangeKitPricingAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeKitPricingRequest request) {
            return base.Channel.ChangeKitPricingAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeKitQtyPer(EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerRequest request) {
            return base.Channel.ChangeKitQtyPer(request);
        }
        
        public void ChangeKitQtyPer(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeKitQtyPer(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerResponse> ChangeKitQtyPerAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeKitQtyPerRequest request) {
            return base.Channel.ChangeKitQtyPerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeMake(EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeRequest request) {
            return base.Channel.ChangeMake(request);
        }
        
        public void ChangeMake(bool ipMake, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeRequest();
            inValue.ipMake = ipMake;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeMake(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeResponse> ChangeMakeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeMakeRequest request) {
            return base.Channel.ChangeMakeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeManualTaxCalc(EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcRequest request) {
            return base.Channel.ChangeManualTaxCalc(request);
        }
        
        public void ChangeManualTaxCalc(int ipOrderNum, int ipLineNum, int ipRelNum, string ipTaxCode, string ipRateCode, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcRequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ipLineNum = ipLineNum;
            inValue.ipRelNum = ipRelNum;
            inValue.ipTaxCode = ipTaxCode;
            inValue.ipRateCode = ipRateCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeManualTaxCalc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcResponse> ChangeManualTaxCalcAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeManualTaxCalcRequest request) {
            return base.Channel.ChangeManualTaxCalcAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeMiscAmount(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountRequest request) {
            return base.Channel.ChangeMiscAmount(request);
        }
        
        public void ChangeMiscAmount(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string tableName) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountRequest();
            inValue.ds = ds;
            inValue.tableName = tableName;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeMiscAmount(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountResponse> ChangeMiscAmountAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscAmountRequest request) {
            return base.Channel.ChangeMiscAmountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeMiscCode(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeRequest request) {
            return base.Channel.ChangeMiscCode(request);
        }
        
        public void ChangeMiscCode(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string tableName) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeRequest();
            inValue.ds = ds;
            inValue.tableName = tableName;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeMiscCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeResponse> ChangeMiscCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscCodeRequest request) {
            return base.Channel.ChangeMiscCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeMiscPercent(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentRequest request) {
            return base.Channel.ChangeMiscPercent(request);
        }
        
        public void ChangeMiscPercent(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string tableName) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentRequest();
            inValue.ds = ds;
            inValue.tableName = tableName;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeMiscPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentResponse> ChangeMiscPercentAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeMiscPercentRequest request) {
            return base.Channel.ChangeMiscPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeNeedByDate(EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateRequest request) {
            return base.Channel.ChangeNeedByDate(request);
        }
        
        public void ChangeNeedByDate(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, string cTableName) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateRequest();
            inValue.ds = ds;
            inValue.cTableName = cTableName;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeNeedByDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateResponse> ChangeNeedByDateAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeNeedByDateRequest request) {
            return base.Channel.ChangeNeedByDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeNewNeedByDate(EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateRequest request) {
            return base.Channel.ChangeNewNeedByDate(request);
        }
        
        public void ChangeNewNeedByDate(ref EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeNewNeedByDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateResponse> ChangeNewNeedByDateAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeNewNeedByDateRequest request) {
            return base.Channel.ChangeNewNeedByDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeNewSellingQuantity(EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityRequest request) {
            return base.Channel.ChangeNewSellingQuantity(request);
        }
        
        public void ChangeNewSellingQuantity(ref EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeNewSellingQuantity(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityResponse> ChangeNewSellingQuantityAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeNewSellingQuantityRequest request) {
            return base.Channel.ChangeNewSellingQuantityAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderDtlPWContract(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractRequest request) {
            return base.Channel.ChangeOrderDtlPWContract(request);
        }
        
        public void ChangeOrderDtlPWContract(ref string ipContractID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractRequest();
            inValue.ipContractID = ipContractID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderDtlPWContract(inValue);
            ipContractID = retVal.ipContractID;
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractResponse> ChangeOrderDtlPWContractAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderDtlPWContractRequest request) {
            return base.Channel.ChangeOrderDtlPWContractAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeODtlWarehouse(EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseRequest request) {
            return base.Channel.ChangeODtlWarehouse(request);
        }
        
        public void ChangeODtlWarehouse(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeODtlWarehouse(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseResponse> ChangeODtlWarehouseAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeODtlWarehouseRequest request) {
            return base.Channel.ChangeODtlWarehouseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelBuyToOrder(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderRequest request) {
            return base.Channel.ChangeOrderRelBuyToOrder(request);
        }
        
        public void ChangeOrderRelBuyToOrder(bool ipBuyToOrder, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderRequest();
            inValue.ipBuyToOrder = ipBuyToOrder;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelBuyToOrder(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderResponse> ChangeOrderRelBuyToOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelBuyToOrderRequest request) {
            return base.Channel.ChangeOrderRelBuyToOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelDropShip(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipRequest request) {
            return base.Channel.ChangeOrderRelDropShip(request);
        }
        
        public void ChangeOrderRelDropShip(bool ipDropShip, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipRequest();
            inValue.ipDropShip = ipDropShip;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelDropShip(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipResponse> ChangeOrderRelDropShipAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelDropShipRequest request) {
            return base.Channel.ChangeOrderRelDropShipAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelMarkForNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumRequest request) {
            return base.Channel.ChangeOrderRelMarkForNum(request);
        }
        
        public void ChangeOrderRelMarkForNum(string ProposedMarkForNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumRequest();
            inValue.ProposedMarkForNum = ProposedMarkForNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelMarkForNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumResponse> ChangeOrderRelMarkForNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMarkForNumRequest request) {
            return base.Channel.ChangeOrderRelMarkForNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelMFCustID(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDRequest request) {
            return base.Channel.ChangeOrderRelMFCustID(request);
        }
        
        public void ChangeOrderRelMFCustID(string ipMFCustID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDRequest();
            inValue.ipMFCustID = ipMFCustID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelMFCustID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDResponse> ChangeOrderRelMFCustIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelMFCustIDRequest request) {
            return base.Channel.ChangeOrderRelMFCustIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelPWContract(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractRequest request) {
            return base.Channel.ChangeOrderRelPWContract(request);
        }
        
        public void ChangeOrderRelPWContract(ref string ipContractID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractRequest();
            inValue.ipContractID = ipContractID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelPWContract(inValue);
            ipContractID = retVal.ipContractID;
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractResponse> ChangeOrderRelPWContractAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelPWContractRequest request) {
            return base.Channel.ChangeOrderRelPWContractAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelShipTo(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToRequest request) {
            return base.Channel.ChangeOrderRelShipTo(request);
        }
        
        public void ChangeOrderRelShipTo(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelShipTo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToResponse> ChangeOrderRelShipToAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToRequest request) {
            return base.Channel.ChangeOrderRelShipToAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelShipToContact(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactRequest request) {
            return base.Channel.ChangeOrderRelShipToContact(request);
        }
        
        public void ChangeOrderRelShipToContact(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelShipToContact(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactResponse> ChangeOrderRelShipToContactAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToContactRequest request) {
            return base.Channel.ChangeOrderRelShipToContactAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelShipToCustID(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDRequest request) {
            return base.Channel.ChangeOrderRelShipToCustID(request);
        }
        
        public void ChangeOrderRelShipToCustID(string iShipToCustID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDRequest();
            inValue.iShipToCustID = iShipToCustID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelShipToCustID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDResponse> ChangeOrderRelShipToCustIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelShipToCustIDRequest request) {
            return base.Channel.ChangeOrderRelShipToCustIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelUseOTMF(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFRequest request) {
            return base.Channel.ChangeOrderRelUseOTMF(request);
        }
        
        public void ChangeOrderRelUseOTMF(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelUseOTMF(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFResponse> ChangeOrderRelUseOTMFAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelUseOTMFRequest request) {
            return base.Channel.ChangeOrderRelUseOTMFAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOrderRelVendorID(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDRequest request) {
            return base.Channel.ChangeOrderRelVendorID(request);
        }
        
        public void ChangeOrderRelVendorID(string ipVendorID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDRequest();
            inValue.ipVendorID = ipVendorID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOrderRelVendorID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDResponse> ChangeOrderRelVendorIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOrderRelVendorIDRequest request) {
            return base.Channel.ChangeOrderRelVendorIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeORelWarehouse(EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseRequest request) {
            return base.Channel.ChangeORelWarehouse(request);
        }
        
        public void ChangeORelWarehouse(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeORelWarehouse(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseResponse> ChangeORelWarehouseAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeORelWarehouseRequest request) {
            return base.Channel.ChangeORelWarehouseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOverrideDiscPriceList(EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListRequest request) {
            return base.Channel.ChangeOverrideDiscPriceList(request);
        }
        
        public void ChangeOverrideDiscPriceList(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOverrideDiscPriceList(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListResponse> ChangeOverrideDiscPriceListAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOverrideDiscPriceListRequest request) {
            return base.Channel.ChangeOverrideDiscPriceListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeOverridePriceList(EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListRequest request) {
            return base.Channel.ChangeOverridePriceList(request);
        }
        
        public void ChangeOverridePriceList(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeOverridePriceList(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListResponse> ChangeOverridePriceListAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeOverridePriceListRequest request) {
            return base.Channel.ChangeOverridePriceListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangePartNum(EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumRequest request) {
            return base.Channel.ChangePartNum(request);
        }
        
        public void ChangePartNum(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, bool lSubstitutePartsExist, string uomCode) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumRequest();
            inValue.ds = ds;
            inValue.lSubstitutePartsExist = lSubstitutePartsExist;
            inValue.uomCode = uomCode;
            EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangePartNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumResponse> ChangePartNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumRequest request) {
            return base.Channel.ChangePartNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangePartNumMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterRequest request) {
            return base.Channel.ChangePartNumMaster(request);
        }
        
        public string ChangePartNumMaster(
                    ref string partNum, 
                    ref bool lSubstitutePartExist, 
                    ref bool lIsPhantom, 
                    ref string uomCode, 
                    System.Guid SysRowID, 
                    string rowType, 
                    bool salesKitView, 
                    bool removeKitComponents, 
                    bool suppressUserPrompts, 
                    bool getPartXRefInfo, 
                    bool checkPartRevisionChange, 
                    bool checkChangeKitParent, 
                    ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, 
                    out string questionString, 
                    out string cWarningMessage, 
                    out bool multipleMatch, 
                    out bool promptToExplodeBOM, 
                    out string cConfigPartMessage, 
                    out string cSubPartMessage, 
                    out string explodeBOMerrMessage, 
                    out string cMsgType, 
                    out bool multiSubsAvail, 
                    out bool runOutQtyAvail) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterRequest();
            inValue.partNum = partNum;
            inValue.lSubstitutePartExist = lSubstitutePartExist;
            inValue.lIsPhantom = lIsPhantom;
            inValue.uomCode = uomCode;
            inValue.SysRowID = SysRowID;
            inValue.rowType = rowType;
            inValue.salesKitView = salesKitView;
            inValue.removeKitComponents = removeKitComponents;
            inValue.suppressUserPrompts = suppressUserPrompts;
            inValue.getPartXRefInfo = getPartXRefInfo;
            inValue.checkPartRevisionChange = checkPartRevisionChange;
            inValue.checkChangeKitParent = checkChangeKitParent;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangePartNumMaster(inValue);
            partNum = retVal.partNum;
            lSubstitutePartExist = retVal.lSubstitutePartExist;
            lIsPhantom = retVal.lIsPhantom;
            uomCode = retVal.uomCode;
            questionString = retVal.questionString;
            cWarningMessage = retVal.cWarningMessage;
            multipleMatch = retVal.multipleMatch;
            promptToExplodeBOM = retVal.promptToExplodeBOM;
            cConfigPartMessage = retVal.cConfigPartMessage;
            cSubPartMessage = retVal.cSubPartMessage;
            explodeBOMerrMessage = retVal.explodeBOMerrMessage;
            cMsgType = retVal.cMsgType;
            multiSubsAvail = retVal.multiSubsAvail;
            runOutQtyAvail = retVal.runOutQtyAvail;
            ds = retVal.ds;
            return retVal.cDeleteComponentsMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterResponse> ChangePartNumMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePartNumMasterRequest request) {
            return base.Channel.ChangePartNumMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePlantResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangePlant(EpicorConsole.Epicor.SalesOrderSvc.ChangePlantRequest request) {
            return base.Channel.ChangePlant(request);
        }
        
        public void ChangePlant(string ProposedPlant, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangePlantRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangePlantRequest();
            inValue.ProposedPlant = ProposedPlant;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangePlantResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangePlant(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePlantResponse> ChangePlantAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePlantRequest request) {
            return base.Channel.ChangePlantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangePriceList(EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListRequest request) {
            return base.Channel.ChangePriceList(request);
        }
        
        public void ChangePriceList(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangePriceList(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListResponse> ChangePriceListAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePriceListRequest request) {
            return base.Channel.ChangePriceListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangePricePerCode(EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeRequest request) {
            return base.Channel.ChangePricePerCode(request);
        }
        
        public void ChangePricePerCode(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangePricePerCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeResponse> ChangePricePerCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangePricePerCodeRequest request) {
            return base.Channel.ChangePricePerCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeQuickEntryOption(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionRequest request) {
            return base.Channel.ChangeQuickEntryOption(request);
        }
        
        public void ChangeQuickEntryOption(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeQuickEntryOption(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionResponse> ChangeQuickEntryOptionAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuickEntryOptionRequest request) {
            return base.Channel.ChangeQuickEntryOptionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeQuoteLine(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineRequest request) {
            return base.Channel.ChangeQuoteLine(request);
        }
        
        public void ChangeQuoteLine(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeQuoteLine(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineResponse> ChangeQuoteLineAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteLineRequest request) {
            return base.Channel.ChangeQuoteLineAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeQuoteQtyNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumRequest request) {
            return base.Channel.ChangeQuoteQtyNum(request);
        }
        
        public void ChangeQuoteQtyNum(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeQuoteQtyNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumResponse> ChangeQuoteQtyNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeQuoteQtyNumRequest request) {
            return base.Channel.ChangeQuoteQtyNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeRelUseOTS(EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSRequest request) {
            return base.Channel.ChangeRelUseOTS(request);
        }
        
        public void ChangeRelUseOTS(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeRelUseOTS(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSResponse> ChangeRelUseOTSAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRelUseOTSRequest request) {
            return base.Channel.ChangeRelUseOTSAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeRenewalNbr(EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrRequest request) {
            return base.Channel.ChangeRenewalNbr(request);
        }
        
        public void ChangeRenewalNbr(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeRenewalNbr(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrResponse> ChangeRenewalNbrAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrRequest request) {
            return base.Channel.ChangeRenewalNbrAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeRenewalNbrMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterRequest request) {
            return base.Channel.ChangeRenewalNbrMaster(request);
        }
        
        public void ChangeRenewalNbrMaster(int iOrderNum, int iOrderLine, int iContractNum, int iRenewalNbr, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.iOrderLine = iOrderLine;
            inValue.iContractNum = iContractNum;
            inValue.iRenewalNbr = iRenewalNbr;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeRenewalNbrMaster(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterResponse> ChangeRenewalNbrMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRenewalNbrMasterRequest request) {
            return base.Channel.ChangeRenewalNbrMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeRevisionNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumRequest request) {
            return base.Channel.ChangeRevisionNum(request);
        }
        
        public void ChangeRevisionNum(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeRevisionNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumResponse> ChangeRevisionNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRevisionNumRequest request) {
            return base.Channel.ChangeRevisionNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeRevNumMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterRequest request) {
            return base.Channel.ChangeRevNumMaster(request);
        }
        
        public string ChangeRevNumMaster(bool checkPartRevChange, bool checkComponents, bool removeKitComponents, bool suppressUserPrompts, string proposedRev, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, out string cDeleteComponentsMessage) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterRequest();
            inValue.checkPartRevChange = checkPartRevChange;
            inValue.checkComponents = checkComponents;
            inValue.removeKitComponents = removeKitComponents;
            inValue.suppressUserPrompts = suppressUserPrompts;
            inValue.proposedRev = proposedRev;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeRevNumMaster(inValue);
            cDeleteComponentsMessage = retVal.cDeleteComponentsMessage;
            ds = retVal.ds;
            return retVal.cConfigPartMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterResponse> ChangeRevNumMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRevNumMasterRequest request) {
            return base.Channel.ChangeRevNumMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeRMANum(EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumRequest request) {
            return base.Channel.ChangeRMANum(request);
        }
        
        public void ChangeRMANum(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeRMANum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumResponse> ChangeRMANumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeRMANumRequest request) {
            return base.Channel.ChangeRMANumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeSalesRep(EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepRequest request) {
            return base.Channel.ChangeSalesRep(request);
        }
        
        public decimal ChangeSalesRep(string cSalesRepCode, out int iRepSplit, out string cRepName) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepRequest();
            inValue.cSalesRepCode = cSalesRepCode;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeSalesRep(inValue);
            iRepSplit = retVal.iRepSplit;
            cRepName = retVal.cRepName;
            return retVal.dRepRate;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepResponse> ChangeSalesRepAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesRepRequest request) {
            return base.Channel.ChangeSalesRepAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeSalesUOM(EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMRequest request) {
            return base.Channel.ChangeSalesUOM(request);
        }
        
        public void ChangeSalesUOM(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeSalesUOM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMResponse> ChangeSalesUOMAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSalesUOMRequest request) {
            return base.Channel.ChangeSalesUOMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeSellingQtyMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterRequest request) {
            return base.Channel.ChangeSellingQtyMaster(request);
        }
        
        public string ChangeSellingQtyMaster(
                    ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, 
                    decimal ipSellingQuantity, 
                    bool chkSellQty, 
                    bool negInvTest, 
                    bool chgSellQty, 
                    bool chgDiscPer, 
                    bool suppressUserPrompts, 
                    bool lKeepUnitPrice, 
                    string pcPartNum, 
                    string pcWhseCode, 
                    string pcBinNum, 
                    string pcLotNum, 
                    string pcDimCode, 
                    decimal pdDimConvFactor, 
                    out string pcNeqQtyAction, 
                    out string opWarningMsg, 
                    out string cSellingQuantityChangedMsgText) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterRequest();
            inValue.ds = ds;
            inValue.ipSellingQuantity = ipSellingQuantity;
            inValue.chkSellQty = chkSellQty;
            inValue.negInvTest = negInvTest;
            inValue.chgSellQty = chgSellQty;
            inValue.chgDiscPer = chgDiscPer;
            inValue.suppressUserPrompts = suppressUserPrompts;
            inValue.lKeepUnitPrice = lKeepUnitPrice;
            inValue.pcPartNum = pcPartNum;
            inValue.pcWhseCode = pcWhseCode;
            inValue.pcBinNum = pcBinNum;
            inValue.pcLotNum = pcLotNum;
            inValue.pcDimCode = pcDimCode;
            inValue.pdDimConvFactor = pdDimConvFactor;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeSellingQtyMaster(inValue);
            ds = retVal.ds;
            pcNeqQtyAction = retVal.pcNeqQtyAction;
            opWarningMsg = retVal.opWarningMsg;
            cSellingQuantityChangedMsgText = retVal.cSellingQuantityChangedMsgText;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterResponse> ChangeSellingQtyMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQtyMasterRequest request) {
            return base.Channel.ChangeSellingQtyMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeSellingQuantity(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityRequest request) {
            return base.Channel.ChangeSellingQuantity(request);
        }
        
        public string ChangeSellingQuantity(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, bool lKeepUnitPrice, decimal ipSellingQuantity) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityRequest();
            inValue.ds = ds;
            inValue.lKeepUnitPrice = lKeepUnitPrice;
            inValue.ipSellingQuantity = ipSellingQuantity;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeSellingQuantity(inValue);
            ds = retVal.ds;
            return retVal.opWarningMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityResponse> ChangeSellingQuantityAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingQuantityRequest request) {
            return base.Channel.ChangeSellingQuantityAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeSellingReqQty(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyRequest request) {
            return base.Channel.ChangeSellingReqQty(request);
        }
        
        public string ChangeSellingReqQty(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, decimal ipSellingReqQty) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyRequest();
            inValue.ds = ds;
            inValue.ipSellingReqQty = ipSellingReqQty;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeSellingReqQty(inValue);
            ds = retVal.ds;
            return retVal.opWarningMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyResponse> ChangeSellingReqQtyAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSellingReqQtyRequest request) {
            return base.Channel.ChangeSellingReqQtyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeShipToContact(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactRequest request) {
            return base.Channel.ChangeShipToContact(request);
        }
        
        public void ChangeShipToContact(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeShipToContact(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactResponse> ChangeShipToContactAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToContactRequest request) {
            return base.Channel.ChangeShipToContactAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeShipToCustID(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDRequest request) {
            return base.Channel.ChangeShipToCustID(request);
        }
        
        public void ChangeShipToCustID(string iShipToCustID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDRequest();
            inValue.iShipToCustID = iShipToCustID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeShipToCustID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDResponse> ChangeShipToCustIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToCustIDRequest request) {
            return base.Channel.ChangeShipToCustIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeShipToID(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDRequest request) {
            return base.Channel.ChangeShipToID(request);
        }
        
        public void ChangeShipToID(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeShipToID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDResponse> ChangeShipToIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeShipToIDRequest request) {
            return base.Channel.ChangeShipToIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeSoldToContact(EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactRequest request) {
            return base.Channel.ChangeSoldToContact(request);
        }
        
        public void ChangeSoldToContact(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeSoldToContact(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactResponse> ChangeSoldToContactAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToContactRequest request) {
            return base.Channel.ChangeSoldToContactAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeSoldToID(EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDRequest request) {
            return base.Channel.ChangeSoldToID(request);
        }
        
        public void ChangeSoldToID(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeSoldToID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDResponse> ChangeSoldToIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeSoldToIDRequest request) {
            return base.Channel.ChangeSoldToIDAsync(request);
        }
        
        public void ChangeTaxRegionCode(int ipOrderNum, string ipNewCode) {
            base.Channel.ChangeTaxRegionCode(ipOrderNum, ipNewCode);
        }
        
        public System.Threading.Tasks.Task ChangeTaxRegionCodeAsync(int ipOrderNum, string ipNewCode) {
            return base.Channel.ChangeTaxRegionCodeAsync(ipOrderNum, ipNewCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeUnitPrice(EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceRequest request) {
            return base.Channel.ChangeUnitPrice(request);
        }
        
        public void ChangeUnitPrice(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeUnitPrice(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceResponse> ChangeUnitPriceAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeUnitPriceRequest request) {
            return base.Channel.ChangeUnitPriceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeVendorChange(EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeRequest request) {
            return base.Channel.ChangeVendorChange(request);
        }
        
        public void ChangeVendorChange(ref EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeVendorChange(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeResponse> ChangeVendorChangeAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeVendorChangeRequest request) {
            return base.Channel.ChangeVendorChangeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeWhseCodeMaster(EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterRequest request) {
            return base.Channel.ChangeWhseCodeMaster(request);
        }
        
        public string ChangeWhseCodeMaster(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, bool negInvTest, bool chgDtlWhse, bool suppressUserPrompts, string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, string pcDimCode, decimal pdDimConvFactor, decimal pdSellingQuantity, out string pcNeqQtyAction) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterRequest();
            inValue.ds = ds;
            inValue.negInvTest = negInvTest;
            inValue.chgDtlWhse = chgDtlWhse;
            inValue.suppressUserPrompts = suppressUserPrompts;
            inValue.pcPartNum = pcPartNum;
            inValue.pcWhseCode = pcWhseCode;
            inValue.pcBinNum = pcBinNum;
            inValue.pcLotNum = pcLotNum;
            inValue.pcDimCode = pcDimCode;
            inValue.pdDimConvFactor = pdDimConvFactor;
            inValue.pdSellingQuantity = pdSellingQuantity;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeWhseCodeMaster(inValue);
            ds = retVal.ds;
            pcNeqQtyAction = retVal.pcNeqQtyAction;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterResponse> ChangeWhseCodeMasterAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeWhseCodeMasterRequest request) {
            return base.Channel.ChangeWhseCodeMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeProjectID(EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDRequest request) {
            return base.Channel.ChangeProjectID(request);
        }
        
        public void ChangeProjectID(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeProjectID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDResponse> ChangeProjectIDAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeProjectIDRequest request) {
            return base.Channel.ChangeProjectIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ChangeXPartNum(EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumRequest request) {
            return base.Channel.ChangeXPartNum(request);
        }
        
        public void ChangeXPartNum(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ChangeXPartNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumResponse> ChangeXPartNumAsync(EpicorConsole.Epicor.SalesOrderSvc.ChangeXPartNumRequest request) {
            return base.Channel.ChangeXPartNumAsync(request);
        }
        
        public bool CheckComplianceFail(int orderNum, int orderLine, int orderRelNum) {
            return base.Channel.CheckComplianceFail(orderNum, orderLine, orderRelNum);
        }
        
        public System.Threading.Tasks.Task<bool> CheckComplianceFailAsync(int orderNum, int orderLine, int orderRelNum) {
            return base.Channel.CheckComplianceFailAsync(orderNum, orderLine, orderRelNum);
        }
        
        public string CheckComplianceOrderFail(int orderNum) {
            return base.Channel.CheckComplianceOrderFail(orderNum);
        }
        
        public System.Threading.Tasks.Task<string> CheckComplianceOrderFailAsync(int orderNum) {
            return base.Channel.CheckComplianceOrderFailAsync(orderNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckConfiguration(EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationRequest request) {
            return base.Channel.CheckConfiguration(request);
        }
        
        public bool CheckConfiguration(int orderNum, int orderLine, string sourcePart, string sourceRev, bool findRevision, out bool needsConfiguration, out string configureRevision, out string reasonMessage) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationRequest();
            inValue.orderNum = orderNum;
            inValue.orderLine = orderLine;
            inValue.sourcePart = sourcePart;
            inValue.sourceRev = sourceRev;
            inValue.findRevision = findRevision;
            EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckConfiguration(inValue);
            needsConfiguration = retVal.needsConfiguration;
            configureRevision = retVal.configureRevision;
            reasonMessage = retVal.reasonMessage;
            return retVal.canGetDetails;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationResponse> CheckConfigurationAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckConfigurationRequest request) {
            return base.Channel.CheckConfigurationAsync(request);
        }
        
        public void CheckContractNum(int iOrderNum, int iOrderLine, int iContractNum) {
            base.Channel.CheckContractNum(iOrderNum, iOrderLine, iContractNum);
        }
        
        public System.Threading.Tasks.Task CheckContractNumAsync(int iOrderNum, int iOrderLine, int iContractNum) {
            return base.Channel.CheckContractNumAsync(iOrderNum, iOrderLine, iContractNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckCustomerCreditLimit(EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitRequest request) {
            return base.Channel.CheckCustomerCreditLimit(request);
        }
        
        public string CheckCustomerCreditLimit(int iOrderNum, int iCustNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, out string cCreditShipAction, out bool lContinue) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.iCustNum = iCustNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckCustomerCreditLimit(inValue);
            cCreditShipAction = retVal.cCreditShipAction;
            lContinue = retVal.lContinue;
            ds = retVal.ds;
            return retVal.cCreditLimitMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitResponse> CheckCustomerCreditLimitAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditLimitRequest request) {
            return base.Channel.CheckCustomerCreditLimitAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckCustomerCreditRelease(EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseRequest request) {
            return base.Channel.CheckCustomerCreditRelease(request);
        }
        
        public string CheckCustomerCreditRelease(int iOrderNum, int iOrderDtlNum, int iCustNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, out bool lContinue) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.iOrderDtlNum = iOrderDtlNum;
            inValue.iCustNum = iCustNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckCustomerCreditRelease(inValue);
            lContinue = retVal.lContinue;
            ds = retVal.ds;
            return retVal.cCreditLimitMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseResponse> CheckCustomerCreditReleaseAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckCustomerCreditReleaseRequest request) {
            return base.Channel.CheckCustomerCreditReleaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckCustOnCreditHold(EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldRequest request) {
            return base.Channel.CheckCustOnCreditHold(request);
        }
        
        public string CheckCustOnCreditHold(int iOrderNum, string cCustID, out bool lCustomerAllowed) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.cCustID = cCustID;
            EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckCustOnCreditHold(inValue);
            lCustomerAllowed = retVal.lCustomerAllowed;
            return retVal.cCreditLimitMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldResponse> CheckCustOnCreditHoldAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckCustOnCreditHoldRequest request) {
            return base.Channel.CheckCustOnCreditHoldAsync(request);
        }
        
        public bool CheckICPO() {
            return base.Channel.CheckICPO();
        }
        
        public System.Threading.Tasks.Task<bool> CheckICPOAsync() {
            return base.Channel.CheckICPOAsync();
        }
        
        public string CheckICPOReadyToSend(int iOrderNum) {
            return base.Channel.CheckICPOReadyToSend(iOrderNum);
        }
        
        public System.Threading.Tasks.Task<string> CheckICPOReadyToSendAsync(int iOrderNum) {
            return base.Channel.CheckICPOReadyToSendAsync(iOrderNum);
        }
        
        public string CheckKitRevision(string iPartNum, string iRevisionNum) {
            return base.Channel.CheckKitRevision(iPartNum, iRevisionNum);
        }
        
        public System.Threading.Tasks.Task<string> CheckKitRevisionAsync(string iPartNum, string iRevisionNum) {
            return base.Channel.CheckKitRevisionAsync(iPartNum, iRevisionNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckLtrOfCrdt(EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtRequest request) {
            return base.Channel.CheckLtrOfCrdt(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CheckLtrOfCrdt(int iOrderNum, string cARLOCID, decimal dTotalCharges, out string outMsg) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.cARLOCID = cARLOCID;
            inValue.dTotalCharges = dTotalCharges;
            EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckLtrOfCrdt(inValue);
            outMsg = retVal.outMsg;
            return retVal.CheckLtrOfCrdtResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtResponse> CheckLtrOfCrdtAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckLtrOfCrdtRequest request) {
            return base.Channel.CheckLtrOfCrdtAsync(request);
        }
        
        public bool CheckMakeDirectReleases(int ipOrderNum) {
            return base.Channel.CheckMakeDirectReleases(ipOrderNum);
        }
        
        public System.Threading.Tasks.Task<bool> CheckMakeDirectReleasesAsync(int ipOrderNum) {
            return base.Channel.CheckMakeDirectReleasesAsync(ipOrderNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckOrderHedDispatchReason(EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonRequest request) {
            return base.Channel.CheckOrderHedDispatchReason(request);
        }
        
        public void CheckOrderHedDispatchReason(string ipDispatchReason, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonRequest();
            inValue.ipDispatchReason = ipDispatchReason;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckOrderHedDispatchReason(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonResponse> CheckOrderHedDispatchReasonAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedDispatchReasonRequest request) {
            return base.Channel.CheckOrderHedDispatchReasonAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckOrderHedChanges(EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesRequest request) {
            return base.Channel.CheckOrderHedChanges(request);
        }
        
        public string CheckOrderHedChanges(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckOrderHedChanges(inValue);
            ds = retVal.ds;
            return retVal.cOrderChangedMsgText;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesResponse> CheckOrderHedChangesAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckOrderHedChangesRequest request) {
            return base.Channel.CheckOrderHedChangesAsync(request);
        }
        
        public string CheckOrderLinkToInterCompanyPO(int iOrderNum) {
            return base.Channel.CheckOrderLinkToInterCompanyPO(iOrderNum);
        }
        
        public System.Threading.Tasks.Task<string> CheckOrderLinkToInterCompanyPOAsync(int iOrderNum) {
            return base.Channel.CheckOrderLinkToInterCompanyPOAsync(iOrderNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckPartRevisionChange(EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeRequest request) {
            return base.Channel.CheckPartRevisionChange(request);
        }
        
        public string CheckPartRevisionChange(int iOrderNum, int iOrderLine, string cFieldName, ref string cPartNum, out string cSubPartMessage, out bool lSubAvail, out string cMsgType) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.iOrderLine = iOrderLine;
            inValue.cFieldName = cFieldName;
            inValue.cPartNum = cPartNum;
            EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckPartRevisionChange(inValue);
            cPartNum = retVal.cPartNum;
            cSubPartMessage = retVal.cSubPartMessage;
            lSubAvail = retVal.lSubAvail;
            cMsgType = retVal.cMsgType;
            return retVal.cConfigPartMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeResponse> CheckPartRevisionChangeAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckPartRevisionChangeRequest request) {
            return base.Channel.CheckPartRevisionChangeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckProjectID(EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDRequest request) {
            return base.Channel.CheckProjectID(request);
        }
        
        public string CheckProjectID(string ipProjectID, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDRequest();
            inValue.ipProjectID = ipProjectID;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckProjectID(inValue);
            ds = retVal.ds;
            return retVal.opProjMsg;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDResponse> CheckProjectIDAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckProjectIDRequest request) {
            return base.Channel.CheckProjectIDAsync(request);
        }
        
        public string CheckQuoteLinesNoQuantity(int iQuoteNum) {
            return base.Channel.CheckQuoteLinesNoQuantity(iQuoteNum);
        }
        
        public System.Threading.Tasks.Task<string> CheckQuoteLinesNoQuantityAsync(int iQuoteNum) {
            return base.Channel.CheckQuoteLinesNoQuantityAsync(iQuoteNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckRateGrpCode(EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeRequest request) {
            return base.Channel.CheckRateGrpCode(request);
        }
        
        public void CheckRateGrpCode(string ipRateGrpCode, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeRequest();
            inValue.ipRateGrpCode = ipRateGrpCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckRateGrpCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeResponse> CheckRateGrpCodeAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckRateGrpCodeRequest request) {
            return base.Channel.CheckRateGrpCodeAsync(request);
        }
        
        public void CheckRenewalNbr(int iOrderNum, int iOrderLine, int iContractNum, int iRenewalNbr) {
            base.Channel.CheckRenewalNbr(iOrderNum, iOrderLine, iContractNum, iRenewalNbr);
        }
        
        public System.Threading.Tasks.Task CheckRenewalNbrAsync(int iOrderNum, int iOrderLine, int iContractNum, int iRenewalNbr) {
            return base.Channel.CheckRenewalNbrAsync(iOrderNum, iOrderLine, iContractNum, iRenewalNbr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckSellingFactorDirection(EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionRequest request) {
            return base.Channel.CheckSellingFactorDirection(request);
        }
        
        public void CheckSellingFactorDirection(string ip_SellingFactorDirection, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionRequest();
            inValue.ip_SellingFactorDirection = ip_SellingFactorDirection;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckSellingFactorDirection(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionResponse> CheckSellingFactorDirectionAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckSellingFactorDirectionRequest request) {
            return base.Channel.CheckSellingFactorDirectionAsync(request);
        }
        
        public string CheckSellingQuantityChange(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, decimal dSellingQuantity) {
            return base.Channel.CheckSellingQuantityChange(ds, dSellingQuantity);
        }
        
        public System.Threading.Tasks.Task<string> CheckSellingQuantityChangeAsync(EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds, decimal dSellingQuantity) {
            return base.Channel.CheckSellingQuantityChangeAsync(ds, dSellingQuantity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckSONumResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckSONum(EpicorConsole.Epicor.SalesOrderSvc.CheckSONumRequest request) {
            return base.Channel.CheckSONum(request);
        }
        
        public bool CheckSONum(int ProposedSONum, out string opMessage) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckSONumRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckSONumRequest();
            inValue.ProposedSONum = ProposedSONum;
            EpicorConsole.Epicor.SalesOrderSvc.CheckSONumResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckSONum(inValue);
            opMessage = retVal.opMessage;
            return retVal.opFoundSO;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckSONumResponse> CheckSONumAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckSONumRequest request) {
            return base.Channel.CheckSONumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CheckQuoteForCreditLimit(EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitRequest request) {
            return base.Channel.CheckQuoteForCreditLimit(request);
        }
        
        public string CheckQuoteForCreditLimit(int iQuoteNum, int iCustNum, out string cCreditStatus) {
            EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitRequest();
            inValue.iQuoteNum = iQuoteNum;
            inValue.iCustNum = iCustNum;
            EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CheckQuoteForCreditLimit(inValue);
            cCreditStatus = retVal.cCreditStatus;
            return retVal.cCreditLimitMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitResponse> CheckQuoteForCreditLimitAsync(EpicorConsole.Epicor.SalesOrderSvc.CheckQuoteForCreditLimitRequest request) {
            return base.Channel.CheckQuoteForCreditLimitAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.chkCustomerCreditLimitForCopyOrder(EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderRequest request) {
            return base.Channel.chkCustomerCreditLimitForCopyOrder(request);
        }
        
        public string chkCustomerCreditLimitForCopyOrder(int CustNum, int OrderNum, string ARLocId, decimal NewLineAmt, bool updCreditHold, out string cCreditShipAction, out string cCreditLimitMessage, out string cCreditStatus) {
            EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderRequest();
            inValue.CustNum = CustNum;
            inValue.OrderNum = OrderNum;
            inValue.ARLocId = ARLocId;
            inValue.NewLineAmt = NewLineAmt;
            inValue.updCreditHold = updCreditHold;
            EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).chkCustomerCreditLimitForCopyOrder(inValue);
            cCreditShipAction = retVal.cCreditShipAction;
            cCreditLimitMessage = retVal.cCreditLimitMessage;
            cCreditStatus = retVal.cCreditStatus;
            return retVal.cCreditOrderAction;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderResponse> chkCustomerCreditLimitForCopyOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.chkCustomerCreditLimitForCopyOrderRequest request) {
            return base.Channel.chkCustomerCreditLimitForCopyOrderAsync(request);
        }
        
        public string chkLtrOfCrdt(int iOrderNum, string cARLOCID, decimal dTotalCharges) {
            return base.Channel.chkLtrOfCrdt(iOrderNum, cARLOCID, dTotalCharges);
        }
        
        public System.Threading.Tasks.Task<string> chkLtrOfCrdtAsync(int iOrderNum, string cARLOCID, decimal dTotalCharges) {
            return base.Channel.chkLtrOfCrdtAsync(iOrderNum, cARLOCID, dTotalCharges);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CloseOrder(int iOrderNum) {
            return base.Channel.CloseOrder(iOrderNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CloseOrderAsync(int iOrderNum) {
            return base.Channel.CloseOrderAsync(iOrderNum);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CloseOrderLine(int iOrderNum, int iOrderLine) {
            return base.Channel.CloseOrderLine(iOrderNum, iOrderLine);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CloseOrderLineAsync(int iOrderNum, int iOrderLine) {
            return base.Channel.CloseOrderLineAsync(iOrderNum, iOrderLine);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CloseRelease(int iOrderNum, int iOrderLine, int iOrderRelNum) {
            return base.Channel.CloseRelease(iOrderNum, iOrderLine, iOrderRelNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CloseReleaseAsync(int iOrderNum, int iOrderLine, int iOrderRelNum) {
            return base.Channel.CloseReleaseAsync(iOrderNum, iOrderLine, iOrderRelNum);
        }
        
        public string PreCopyOrder(int orderNum) {
            return base.Channel.PreCopyOrder(orderNum);
        }
        
        public System.Threading.Tasks.Task<string> PreCopyOrderAsync(int orderNum) {
            return base.Channel.PreCopyOrderAsync(orderNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CopyOrderResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CopyOrder(EpicorConsole.Epicor.SalesOrderSvc.CopyOrderRequest request) {
            return base.Channel.CopyOrder(request);
        }
        
        public int CopyOrder(int orderNum, string ipPONum, bool ipOpenRel, bool ipReNbr, bool ipPreserve, bool ipCalc, out string OutMessage) {
            EpicorConsole.Epicor.SalesOrderSvc.CopyOrderRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CopyOrderRequest();
            inValue.orderNum = orderNum;
            inValue.ipPONum = ipPONum;
            inValue.ipOpenRel = ipOpenRel;
            inValue.ipReNbr = ipReNbr;
            inValue.ipPreserve = ipPreserve;
            inValue.ipCalc = ipCalc;
            EpicorConsole.Epicor.SalesOrderSvc.CopyOrderResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CopyOrder(inValue);
            OutMessage = retVal.OutMessage;
            return retVal.NewOrderNum;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CopyOrderResponse> CopyOrderAsync(EpicorConsole.Epicor.SalesOrderSvc.CopyOrderRequest request) {
            return base.Channel.CopyOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CreateGlbSugPOChg(EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgRequest request) {
            return base.Channel.CreateGlbSugPOChg(request);
        }
        
        public void CreateGlbSugPOChg(ref EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset ds, int iOrderNum, int iOrderLine, int iOrderRel) {
            EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgRequest();
            inValue.ds = ds;
            inValue.iOrderNum = iOrderNum;
            inValue.iOrderLine = iOrderLine;
            inValue.iOrderRel = iOrderRel;
            EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CreateGlbSugPOChg(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgResponse> CreateGlbSugPOChgAsync(EpicorConsole.Epicor.SalesOrderSvc.CreateGlbSugPOChgRequest request) {
            return base.Channel.CreateGlbSugPOChgAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CreateLineMiscChargesFromQuote(EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteRequest request) {
            return base.Channel.CreateLineMiscChargesFromQuote(request);
        }
        
        public void CreateLineMiscChargesFromQuote(int ipOrderNum, int ipOrderLine, int ipQuoteNum, int ipQuoteLine, int ipQtyNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteRequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ipOrderLine = ipOrderLine;
            inValue.ipQuoteNum = ipQuoteNum;
            inValue.ipQuoteLine = ipQuoteLine;
            inValue.ipQtyNum = ipQtyNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CreateLineMiscChargesFromQuote(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteResponse> CreateLineMiscChargesFromQuoteAsync(EpicorConsole.Epicor.SalesOrderSvc.CreateLineMiscChargesFromQuoteRequest request) {
            return base.Channel.CreateLineMiscChargesFromQuoteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CreateLinesFromHistory(EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryRequest request) {
            return base.Channel.CreateLinesFromHistory(request);
        }
        
        public void CreateLinesFromHistory(int iOrderNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CreateLinesFromHistory(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryResponse> CreateLinesFromHistoryAsync(EpicorConsole.Epicor.SalesOrderSvc.CreateLinesFromHistoryRequest request) {
            return base.Channel.CreateLinesFromHistoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.CreateOrderDtlComplements(EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsRequest request) {
            return base.Channel.CreateOrderDtlComplements(request);
        }
        
        public void CreateOrderDtlComplements(int iOrderNum, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).CreateOrderDtlComplements(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsResponse> CreateOrderDtlComplementsAsync(EpicorConsole.Epicor.SalesOrderSvc.CreateOrderDtlComplementsRequest request) {
            return base.Channel.CreateOrderDtlComplementsAsync(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CreateOrderFromQuote(int iQuoteNum, string iPoNum, string iCreditStatus, bool iCreditHold) {
            return base.Channel.CreateOrderFromQuote(iQuoteNum, iPoNum, iCreditStatus, iCreditHold);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CreateOrderFromQuoteAsync(int iQuoteNum, string iPoNum, string iCreditStatus, bool iCreditHold) {
            return base.Channel.CreateOrderFromQuoteAsync(iQuoteNum, iPoNum, iCreditStatus, iCreditHold);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset CreateOrderFromQuoteSaveOTS(int iQuoteNum, EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsTableset ds) {
            return base.Channel.CreateOrderFromQuoteSaveOTS(iQuoteNum, ds);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> CreateOrderFromQuoteSaveOTSAsync(int iQuoteNum, EpicorConsole.Epicor.SalesOrderSvc.SaveOTSParamsTableset ds) {
            return base.Channel.CreateOrderFromQuoteSaveOTSAsync(iQuoteNum, ds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.ETCValidateAddress(EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressRequest request) {
            return base.Channel.ETCValidateAddress(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.ETCAddrValidationTableset ETCValidateAddress(int OrderNum, int OrderLine, int OrderRelNum, out bool StatusFlag, out bool ErrorFlag, out string ErrorMsg, out bool ExceptionFlag) {
            EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressRequest();
            inValue.OrderNum = OrderNum;
            inValue.OrderLine = OrderLine;
            inValue.OrderRelNum = OrderRelNum;
            EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).ETCValidateAddress(inValue);
            StatusFlag = retVal.StatusFlag;
            ErrorFlag = retVal.ErrorFlag;
            ErrorMsg = retVal.ErrorMsg;
            ExceptionFlag = retVal.ExceptionFlag;
            return retVal.ETCValidateAddressResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressResponse> ETCValidateAddressAsync(EpicorConsole.Epicor.SalesOrderSvc.ETCValidateAddressRequest request) {
            return base.Channel.ETCValidateAddressAsync(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset GetByIDLinkedOrder(int iOrderNum) {
            return base.Channel.GetByIDLinkedOrder(iOrderNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset> GetByIDLinkedOrderAsync(int iOrderNum) {
            return base.Channel.GetByIDLinkedOrderAsync(iOrderNum);
        }
        
        public bool GetCalcQtyPref() {
            return base.Channel.GetCalcQtyPref();
        }
        
        public System.Threading.Tasks.Task<bool> GetCalcQtyPrefAsync() {
            return base.Channel.GetCalcQtyPrefAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetGlbSugPOChg(EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgRequest request) {
            return base.Channel.GetGlbSugPOChg(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.GlbSugPOChgTableset GetGlbSugPOChg(int iOrderNum, int iOrderLine, int iOrderRelNum, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.iOrderLine = iOrderLine;
            inValue.iOrderRelNum = iOrderRelNum;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetGlbSugPOChg(inValue);
            morePages = retVal.morePages;
            return retVal.GetGlbSugPOChgResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgResponse> GetGlbSugPOChgAsync(EpicorConsole.Epicor.SalesOrderSvc.GetGlbSugPOChgRequest request) {
            return base.Channel.GetGlbSugPOChgAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetInventoryQuantities(EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesRequest request) {
            return base.Channel.GetInventoryQuantities(request);
        }
        
        public void GetInventoryQuantities(bool lOnlyRel, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesRequest();
            inValue.lOnlyRel = lOnlyRel;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetInventoryQuantities(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesResponse> GetInventoryQuantitiesAsync(EpicorConsole.Epicor.SalesOrderSvc.GetInventoryQuantitiesRequest request) {
            return base.Channel.GetInventoryQuantitiesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetJobProdResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetJobProd(EpicorConsole.Epicor.SalesOrderSvc.GetJobProdRequest request) {
            return base.Channel.GetJobProd(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.OrdRelJobProdTableset GetJobProd(int iOrderNum, int iOrderLine, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.SalesOrderSvc.GetJobProdRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetJobProdRequest();
            inValue.iOrderNum = iOrderNum;
            inValue.iOrderLine = iOrderLine;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.SalesOrderSvc.GetJobProdResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetJobProd(inValue);
            morePages = retVal.morePages;
            return retVal.GetJobProdResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetJobProdResponse> GetJobProdAsync(EpicorConsole.Epicor.SalesOrderSvc.GetJobProdRequest request) {
            return base.Channel.GetJobProdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetKitComponents(EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsRequest request) {
            return base.Channel.GetKitComponents(request);
        }
        
        public int GetKitComponents(string iPartNum, string iRevisionNum, int iTargetAsm, int orderNum, int orderLine, bool iUseMethodForParts, bool regenerateKit, ref string errorMsg, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsRequest();
            inValue.iPartNum = iPartNum;
            inValue.iRevisionNum = iRevisionNum;
            inValue.iTargetAsm = iTargetAsm;
            inValue.orderNum = orderNum;
            inValue.orderLine = orderLine;
            inValue.iUseMethodForParts = iUseMethodForParts;
            inValue.regenerateKit = regenerateKit;
            inValue.errorMsg = errorMsg;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetKitComponents(inValue);
            errorMsg = retVal.errorMsg;
            ds = retVal.ds;
            return retVal.errorType;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsResponse> GetKitComponentsAsync(EpicorConsole.Epicor.SalesOrderSvc.GetKitComponentsRequest request) {
            return base.Channel.GetKitComponentsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetListCustomResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetListCustom(EpicorConsole.Epicor.SalesOrderSvc.GetListCustomRequest request) {
            return base.Channel.GetListCustom(request);
        }
        
        public EpicorConsole.Epicor.SalesOrderSvc.OrderHedListTableset GetListCustom(string whereClause, int pageSize, int absolutePage, string customClause, out bool morePages) {
            EpicorConsole.Epicor.SalesOrderSvc.GetListCustomRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetListCustomRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            inValue.customClause = customClause;
            EpicorConsole.Epicor.SalesOrderSvc.GetListCustomResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetListCustom(inValue);
            morePages = retVal.morePages;
            return retVal.GetListCustomResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetListCustomResponse> GetListCustomAsync(EpicorConsole.Epicor.SalesOrderSvc.GetListCustomRequest request) {
            return base.Channel.GetListCustomAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetNewSalesKit(EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitRequest request) {
            return base.Channel.GetNewSalesKit(request);
        }
        
        public void GetNewSalesKit(int OrderNum, int OrderLine, ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitRequest();
            inValue.OrderNum = OrderNum;
            inValue.OrderLine = OrderLine;
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetNewSalesKit(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitResponse> GetNewSalesKitAsync(EpicorConsole.Epicor.SalesOrderSvc.GetNewSalesKitRequest request) {
            return base.Channel.GetNewSalesKitAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsResponse EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract.GetPayBTFlagDefaults(EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsRequest request) {
            return base.Channel.GetPayBTFlagDefaults(request);
        }
        
        public void GetPayBTFlagDefaults(ref EpicorConsole.Epicor.SalesOrderSvc.SalesOrderTableset ds) {
            EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsRequest inValue = new EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsResponse retVal = ((EpicorConsole.Epicor.SalesOrderSvc.SalesOrderSvcContract)(this)).GetPayBTFlagDefaults(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsResponse> GetPayBTFlagDefaultsAsync(EpicorConsole.Epicor.SalesOrderSvc.GetPayBTFlagDefaultsRequest request) {
            return base.Channel.GetPayBTFlagDefaultsAsync(request);
        }
        
        public bool GetPlantConfCtrlInfo() {
            return base.Channel.GetPlantConfCtrlInfo();
        }
        
        public System.Threading.Tasks.Task<bool> GetPlantConfCtrlInfoAsync() {
            return base.Channel.GetPlantConfCtrlInfoAsync();
        }
    }
}
