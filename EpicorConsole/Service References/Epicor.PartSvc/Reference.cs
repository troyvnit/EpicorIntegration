//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicorConsole.Epicor.PartSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.GlbPartTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartWhereUsedTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartGetDMRListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.UpdExtPartTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbPartTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class GlbPartTableset : EpicorConsole.Epicor.PartSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.GlbPartTable GlbPartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.GlbPartTable GlbPart {
            get {
                return this.GlbPartField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPartField, value) != true)) {
                    this.GlbPartField = value;
                    this.RaisePropertyChanged("GlbPart");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartListTableset : EpicorConsole.Epicor.PartSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartListTable PartListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartListTable PartList {
            get {
                return this.PartListField;
            }
            set {
                if ((object.ReferenceEquals(this.PartListField, value) != true)) {
                    this.PartListField = value;
                    this.RaisePropertyChanged("PartList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartWhereUsedTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartWhereUsedTableset : EpicorConsole.Epicor.PartSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRefDesWhereUsedTable PartRefDesWhereUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartWhereUsedTable PartWhereUsedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRefDesWhereUsedTable PartRefDesWhereUsed {
            get {
                return this.PartRefDesWhereUsedField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRefDesWhereUsedField, value) != true)) {
                    this.PartRefDesWhereUsedField = value;
                    this.RaisePropertyChanged("PartRefDesWhereUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartWhereUsedTable PartWhereUsed {
            get {
                return this.PartWhereUsedField;
            }
            set {
                if ((object.ReferenceEquals(this.PartWhereUsedField, value) != true)) {
                    this.PartWhereUsedField = value;
                    this.RaisePropertyChanged("PartWhereUsed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartGetDMRListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartGetDMRListTableset : EpicorConsole.Epicor.PartSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartGetDMRListTable PartGetDMRListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartGetDMRListTable PartGetDMRList {
            get {
                return this.PartGetDMRListField;
            }
            set {
                if ((object.ReferenceEquals(this.PartGetDMRListField, value) != true)) {
                    this.PartGetDMRListField = value;
                    this.RaisePropertyChanged("PartGetDMRList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtPartTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtPartTableset : EpicorConsole.Epicor.PartSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.EntityGLCTable EntityGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartTable PartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartAttchTable PartAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartAuditTable PartAuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartBinInfoTable PartBinInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartCOOTable PartCOOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartCOPartTable PartCOPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartDimTable PartDimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartLangDescTable PartLangDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartPCTable PartPCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartPlantTable PartPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRestrictSubstTable PartRestrictSubstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRestrictionTable PartRestrictionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevTable PartRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevAttchTable PartRevAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevInspPlanTable PartRevInspPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevInspPlanAttchTable PartRevInspPlanAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevInspVendTable PartRevInspVendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartSubsTable PartSubsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartUOMTable PartUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartWhseTable PartWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.TaxExemptTable TaxExemptField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.EntityGLCTable EntityGLC {
            get {
                return this.EntityGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityGLCField, value) != true)) {
                    this.EntityGLCField = value;
                    this.RaisePropertyChanged("EntityGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartTable Part {
            get {
                return this.PartField;
            }
            set {
                if ((object.ReferenceEquals(this.PartField, value) != true)) {
                    this.PartField = value;
                    this.RaisePropertyChanged("Part");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartAttchTable PartAttch {
            get {
                return this.PartAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PartAttchField, value) != true)) {
                    this.PartAttchField = value;
                    this.RaisePropertyChanged("PartAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartAuditTable PartAudit {
            get {
                return this.PartAuditField;
            }
            set {
                if ((object.ReferenceEquals(this.PartAuditField, value) != true)) {
                    this.PartAuditField = value;
                    this.RaisePropertyChanged("PartAudit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartBinInfoTable PartBinInfo {
            get {
                return this.PartBinInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PartBinInfoField, value) != true)) {
                    this.PartBinInfoField = value;
                    this.RaisePropertyChanged("PartBinInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartCOOTable PartCOO {
            get {
                return this.PartCOOField;
            }
            set {
                if ((object.ReferenceEquals(this.PartCOOField, value) != true)) {
                    this.PartCOOField = value;
                    this.RaisePropertyChanged("PartCOO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartCOPartTable PartCOPart {
            get {
                return this.PartCOPartField;
            }
            set {
                if ((object.ReferenceEquals(this.PartCOPartField, value) != true)) {
                    this.PartCOPartField = value;
                    this.RaisePropertyChanged("PartCOPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartDimTable PartDim {
            get {
                return this.PartDimField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDimField, value) != true)) {
                    this.PartDimField = value;
                    this.RaisePropertyChanged("PartDim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartLangDescTable PartLangDesc {
            get {
                return this.PartLangDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PartLangDescField, value) != true)) {
                    this.PartLangDescField = value;
                    this.RaisePropertyChanged("PartLangDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartPCTable PartPC {
            get {
                return this.PartPCField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPCField, value) != true)) {
                    this.PartPCField = value;
                    this.RaisePropertyChanged("PartPC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartPlantTable PartPlant {
            get {
                return this.PartPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPlantField, value) != true)) {
                    this.PartPlantField = value;
                    this.RaisePropertyChanged("PartPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRestrictSubstTable PartRestrictSubst {
            get {
                return this.PartRestrictSubstField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRestrictSubstField, value) != true)) {
                    this.PartRestrictSubstField = value;
                    this.RaisePropertyChanged("PartRestrictSubst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRestrictionTable PartRestriction {
            get {
                return this.PartRestrictionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRestrictionField, value) != true)) {
                    this.PartRestrictionField = value;
                    this.RaisePropertyChanged("PartRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevTable PartRev {
            get {
                return this.PartRevField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevField, value) != true)) {
                    this.PartRevField = value;
                    this.RaisePropertyChanged("PartRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevAttchTable PartRevAttch {
            get {
                return this.PartRevAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevAttchField, value) != true)) {
                    this.PartRevAttchField = value;
                    this.RaisePropertyChanged("PartRevAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevInspPlanTable PartRevInspPlan {
            get {
                return this.PartRevInspPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevInspPlanField, value) != true)) {
                    this.PartRevInspPlanField = value;
                    this.RaisePropertyChanged("PartRevInspPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevInspPlanAttchTable PartRevInspPlanAttch {
            get {
                return this.PartRevInspPlanAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevInspPlanAttchField, value) != true)) {
                    this.PartRevInspPlanAttchField = value;
                    this.RaisePropertyChanged("PartRevInspPlanAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevInspVendTable PartRevInspVend {
            get {
                return this.PartRevInspVendField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevInspVendField, value) != true)) {
                    this.PartRevInspVendField = value;
                    this.RaisePropertyChanged("PartRevInspVend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartSubsTable PartSubs {
            get {
                return this.PartSubsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSubsField, value) != true)) {
                    this.PartSubsField = value;
                    this.RaisePropertyChanged("PartSubs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartUOMTable PartUOM {
            get {
                return this.PartUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartUOMField, value) != true)) {
                    this.PartUOMField = value;
                    this.RaisePropertyChanged("PartUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartWhseTable PartWhse {
            get {
                return this.PartWhseField;
            }
            set {
                if ((object.ReferenceEquals(this.PartWhseField, value) != true)) {
                    this.PartWhseField = value;
                    this.RaisePropertyChanged("PartWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.TaxExemptTable TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : EpicorConsole.Epicor.PartSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartTableset : EpicorConsole.Epicor.PartSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.EntityGLCTable EntityGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartTable PartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartAttchTable PartAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartAuditTable PartAuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartBinInfoTable PartBinInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartCOOTable PartCOOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartCOPartTable PartCOPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartDimTable PartDimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartLangDescTable PartLangDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartPCTable PartPCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartPlantTable PartPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRestrictSubstTable PartRestrictSubstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRestrictionTable PartRestrictionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevTable PartRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevAttchTable PartRevAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevInspPlanTable PartRevInspPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevInspPlanAttchTable PartRevInspPlanAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevInspVendTable PartRevInspVendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartSubsTable PartSubsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartUOMTable PartUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartWhseTable PartWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.TaxExemptTable TaxExemptField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.EntityGLCTable EntityGLC {
            get {
                return this.EntityGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityGLCField, value) != true)) {
                    this.EntityGLCField = value;
                    this.RaisePropertyChanged("EntityGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartTable Part {
            get {
                return this.PartField;
            }
            set {
                if ((object.ReferenceEquals(this.PartField, value) != true)) {
                    this.PartField = value;
                    this.RaisePropertyChanged("Part");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartAttchTable PartAttch {
            get {
                return this.PartAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PartAttchField, value) != true)) {
                    this.PartAttchField = value;
                    this.RaisePropertyChanged("PartAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartAuditTable PartAudit {
            get {
                return this.PartAuditField;
            }
            set {
                if ((object.ReferenceEquals(this.PartAuditField, value) != true)) {
                    this.PartAuditField = value;
                    this.RaisePropertyChanged("PartAudit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartBinInfoTable PartBinInfo {
            get {
                return this.PartBinInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PartBinInfoField, value) != true)) {
                    this.PartBinInfoField = value;
                    this.RaisePropertyChanged("PartBinInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartCOOTable PartCOO {
            get {
                return this.PartCOOField;
            }
            set {
                if ((object.ReferenceEquals(this.PartCOOField, value) != true)) {
                    this.PartCOOField = value;
                    this.RaisePropertyChanged("PartCOO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartCOPartTable PartCOPart {
            get {
                return this.PartCOPartField;
            }
            set {
                if ((object.ReferenceEquals(this.PartCOPartField, value) != true)) {
                    this.PartCOPartField = value;
                    this.RaisePropertyChanged("PartCOPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartDimTable PartDim {
            get {
                return this.PartDimField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDimField, value) != true)) {
                    this.PartDimField = value;
                    this.RaisePropertyChanged("PartDim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartLangDescTable PartLangDesc {
            get {
                return this.PartLangDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PartLangDescField, value) != true)) {
                    this.PartLangDescField = value;
                    this.RaisePropertyChanged("PartLangDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartPCTable PartPC {
            get {
                return this.PartPCField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPCField, value) != true)) {
                    this.PartPCField = value;
                    this.RaisePropertyChanged("PartPC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartPlantTable PartPlant {
            get {
                return this.PartPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPlantField, value) != true)) {
                    this.PartPlantField = value;
                    this.RaisePropertyChanged("PartPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRestrictSubstTable PartRestrictSubst {
            get {
                return this.PartRestrictSubstField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRestrictSubstField, value) != true)) {
                    this.PartRestrictSubstField = value;
                    this.RaisePropertyChanged("PartRestrictSubst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRestrictionTable PartRestriction {
            get {
                return this.PartRestrictionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRestrictionField, value) != true)) {
                    this.PartRestrictionField = value;
                    this.RaisePropertyChanged("PartRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevTable PartRev {
            get {
                return this.PartRevField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevField, value) != true)) {
                    this.PartRevField = value;
                    this.RaisePropertyChanged("PartRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevAttchTable PartRevAttch {
            get {
                return this.PartRevAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevAttchField, value) != true)) {
                    this.PartRevAttchField = value;
                    this.RaisePropertyChanged("PartRevAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevInspPlanTable PartRevInspPlan {
            get {
                return this.PartRevInspPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevInspPlanField, value) != true)) {
                    this.PartRevInspPlanField = value;
                    this.RaisePropertyChanged("PartRevInspPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevInspPlanAttchTable PartRevInspPlanAttch {
            get {
                return this.PartRevInspPlanAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevInspPlanAttchField, value) != true)) {
                    this.PartRevInspPlanAttchField = value;
                    this.RaisePropertyChanged("PartRevInspPlanAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevInspVendTable PartRevInspVend {
            get {
                return this.PartRevInspVendField;
            }
            set {
                if ((object.ReferenceEquals(this.PartRevInspVendField, value) != true)) {
                    this.PartRevInspVendField = value;
                    this.RaisePropertyChanged("PartRevInspVend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartSubsTable PartSubs {
            get {
                return this.PartSubsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSubsField, value) != true)) {
                    this.PartSubsField = value;
                    this.RaisePropertyChanged("PartSubs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartUOMTable PartUOM {
            get {
                return this.PartUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartUOMField, value) != true)) {
                    this.PartUOMField = value;
                    this.RaisePropertyChanged("PartUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartWhseTable PartWhse {
            get {
                return this.PartWhseField;
            }
            set {
                if ((object.ReferenceEquals(this.PartWhseField, value) != true)) {
                    this.PartWhseField = value;
                    this.RaisePropertyChanged("PartWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.TaxExemptTable TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EntityGLCTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EntityGLCRow")]
    [System.SerializableAttribute()]
    public class EntityGLCTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.EntityGLCRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartRow")]
    [System.SerializableAttribute()]
    public class PartTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartAttchRow")]
    [System.SerializableAttribute()]
    public class PartAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartAuditTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartAuditRow")]
    [System.SerializableAttribute()]
    public class PartAuditTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartAuditRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartBinInfoTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartBinInfoRow")]
    [System.SerializableAttribute()]
    public class PartBinInfoTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartBinInfoRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartCOOTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartCOORow")]
    [System.SerializableAttribute()]
    public class PartCOOTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartCOORow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartCOPartTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartCOPartRow")]
    [System.SerializableAttribute()]
    public class PartCOPartTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartCOPartRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartDimTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartDimRow")]
    [System.SerializableAttribute()]
    public class PartDimTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartDimRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartLangDescTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartLangDescRow")]
    [System.SerializableAttribute()]
    public class PartLangDescTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartLangDescRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartPCTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartPCRow")]
    [System.SerializableAttribute()]
    public class PartPCTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartPCRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartPlantTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartPlantRow")]
    [System.SerializableAttribute()]
    public class PartPlantTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartPlantRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartRestrictSubstTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartRestrictSubstRow")]
    [System.SerializableAttribute()]
    public class PartRestrictSubstTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartRestrictSubstRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartRestrictionTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartRestrictionRow")]
    [System.SerializableAttribute()]
    public class PartRestrictionTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartRestrictionRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartRevTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartRevRow")]
    [System.SerializableAttribute()]
    public class PartRevTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartRevRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartRevAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartRevAttchRow")]
    [System.SerializableAttribute()]
    public class PartRevAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartRevAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartRevInspPlanTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartRevInspPlanRow")]
    [System.SerializableAttribute()]
    public class PartRevInspPlanTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartRevInspPlanRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartRevInspPlanAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartRevInspPlanAttchRow")]
    [System.SerializableAttribute()]
    public class PartRevInspPlanAttchTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartRevInspPlanAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartRevInspVendTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartRevInspVendRow")]
    [System.SerializableAttribute()]
    public class PartRevInspVendTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartRevInspVendRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartSubsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartSubsRow")]
    [System.SerializableAttribute()]
    public class PartSubsTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartSubsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartUOMTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartUOMRow")]
    [System.SerializableAttribute()]
    public class PartUOMTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartUOMRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartWhseTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartWhseRow")]
    [System.SerializableAttribute()]
    public class PartWhseTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartWhseRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TaxExemptTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="TaxExemptRow")]
    [System.SerializableAttribute()]
    public class TaxExemptTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.TaxExemptRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="GlbPartTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="GlbPartRow")]
    [System.SerializableAttribute()]
    public class GlbPartTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.GlbPartRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbPartRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class GlbPartRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AESExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGProductMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGUseGoodMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BuyToOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNSpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CSFCJ5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CSFLMWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.GlbPartRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialSize1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialSize2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialSubBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommodityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidatedPurchasingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConstrainedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEDenominationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEInternationalSecuritiesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DEIsInvestmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DEIsSecurityFinancialDerivativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DEIsServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEPayStatCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultDimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiameterInsideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiameterOutsideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiameterUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DiffPrc2PrchUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DupOnJobCrtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurometerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCNNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDICodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineeringAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstimateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstimateOrPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpLicNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpLicTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExtConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExternalCRMLastSyncField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalCRMPartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalCRMSyncRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAssetClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FSSalesUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GravityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GrossWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrossWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazGvrnmtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazPackInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazSubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazTechNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INChapterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISOrigCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ISSuppUnitsFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspPlanTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InternalUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompliantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConfiguredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGiftCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRestrictedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSafetyItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkToContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotAppendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotBatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotBeforeDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotCureDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LotDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotExpDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotFirmwareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotHeatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotLeadingZerosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotMfgBatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotMfgDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotMfgLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LotNxtNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotSeqIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LotShelfLifeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotUseGlobalSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LowLevelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MDPVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MobilePartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MtlAnalysisCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlBurRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAFTAOrigCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAFTAPrefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAFTAProdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NetVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetVolumeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NetWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OnHoldDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnHoldReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrigCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnershipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMObjIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PESUNATTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PESUNATUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartLengthWidthHeightUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartPhotoExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartSpecificPackingUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartsPerContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomBOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PurchasingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchasingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QtyBearingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RCOverThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RCUnderThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RcvInspectionReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecDocReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnableContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevChargeMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchedBcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipDocReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SkippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StockPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SyncToExternalCRMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThicknessMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThicknessUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPCCode1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPCCode2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPCCode3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseHTSDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseMaskSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsePartRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebInStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebPartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AESExp {
            get {
                return this.AESExpField;
            }
            set {
                if ((object.ReferenceEquals(this.AESExpField, value) != true)) {
                    this.AESExpField = value;
                    this.RaisePropertyChanged("AESExp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGProductMark {
            get {
                return this.AGProductMarkField;
            }
            set {
                if ((this.AGProductMarkField.Equals(value) != true)) {
                    this.AGProductMarkField = value;
                    this.RaisePropertyChanged("AGProductMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGUseGoodMark {
            get {
                return this.AGUseGoodMarkField;
            }
            set {
                if ((this.AGUseGoodMarkField.Equals(value) != true)) {
                    this.AGUseGoodMarkField = value;
                    this.RaisePropertyChanged("AGUseGoodMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisCode {
            get {
                return this.AnalysisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisCodeField, value) != true)) {
                    this.AnalysisCodeField = value;
                    this.RaisePropertyChanged("AnalysisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasePartNum {
            get {
                return this.BasePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BasePartNumField, value) != true)) {
                    this.BasePartNumField = value;
                    this.RaisePropertyChanged("BasePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BuyToOrder {
            get {
                return this.BuyToOrderField;
            }
            set {
                if ((this.BuyToOrderField.Equals(value) != true)) {
                    this.BuyToOrderField = value;
                    this.RaisePropertyChanged("BuyToOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNSpecification {
            get {
                return this.CNSpecificationField;
            }
            set {
                if ((object.ReferenceEquals(this.CNSpecificationField, value) != true)) {
                    this.CNSpecificationField = value;
                    this.RaisePropertyChanged("CNSpecification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CSFCJ5 {
            get {
                return this.CSFCJ5Field;
            }
            set {
                if ((this.CSFCJ5Field.Equals(value) != true)) {
                    this.CSFCJ5Field = value;
                    this.RaisePropertyChanged("CSFCJ5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CSFLMW {
            get {
                return this.CSFLMWField;
            }
            set {
                if ((this.CSFLMWField.Equals(value) != true)) {
                    this.CSFLMWField = value;
                    this.RaisePropertyChanged("CSFLMW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassIDField, value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.GlbPartRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialBrand {
            get {
                return this.CommercialBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialBrandField, value) != true)) {
                    this.CommercialBrandField = value;
                    this.RaisePropertyChanged("CommercialBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialCategory {
            get {
                return this.CommercialCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialCategoryField, value) != true)) {
                    this.CommercialCategoryField = value;
                    this.RaisePropertyChanged("CommercialCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialColor {
            get {
                return this.CommercialColorField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialColorField, value) != true)) {
                    this.CommercialColorField = value;
                    this.RaisePropertyChanged("CommercialColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialSize1 {
            get {
                return this.CommercialSize1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialSize1Field, value) != true)) {
                    this.CommercialSize1Field = value;
                    this.RaisePropertyChanged("CommercialSize1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialSize2 {
            get {
                return this.CommercialSize2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialSize2Field, value) != true)) {
                    this.CommercialSize2Field = value;
                    this.RaisePropertyChanged("CommercialSize2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialStyle {
            get {
                return this.CommercialStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialStyleField, value) != true)) {
                    this.CommercialStyleField = value;
                    this.RaisePropertyChanged("CommercialStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialSubBrand {
            get {
                return this.CommercialSubBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialSubBrandField, value) != true)) {
                    this.CommercialSubBrandField = value;
                    this.RaisePropertyChanged("CommercialSubBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialSubCategory {
            get {
                return this.CommercialSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialSubCategoryField, value) != true)) {
                    this.CommercialSubCategoryField = value;
                    this.RaisePropertyChanged("CommercialSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommodityCode {
            get {
                return this.CommodityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommodityCodeField, value) != true)) {
                    this.CommodityCodeField = value;
                    this.RaisePropertyChanged("CommodityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionField, value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidatedPurchasing {
            get {
                return this.ConsolidatedPurchasingField;
            }
            set {
                if ((this.ConsolidatedPurchasingField.Equals(value) != true)) {
                    this.ConsolidatedPurchasingField = value;
                    this.RaisePropertyChanged("ConsolidatedPurchasing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Constrained {
            get {
                return this.ConstrainedField;
            }
            set {
                if ((this.ConstrainedField.Equals(value) != true)) {
                    this.ConstrainedField = value;
                    this.RaisePropertyChanged("Constrained");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostMethod {
            get {
                return this.CostMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.CostMethodField, value) != true)) {
                    this.CostMethodField = value;
                    this.RaisePropertyChanged("CostMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEDenomination {
            get {
                return this.DEDenominationField;
            }
            set {
                if ((object.ReferenceEquals(this.DEDenominationField, value) != true)) {
                    this.DEDenominationField = value;
                    this.RaisePropertyChanged("DEDenomination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEInternationalSecuritiesID {
            get {
                return this.DEInternationalSecuritiesIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DEInternationalSecuritiesIDField, value) != true)) {
                    this.DEInternationalSecuritiesIDField = value;
                    this.RaisePropertyChanged("DEInternationalSecuritiesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DEIsInvestment {
            get {
                return this.DEIsInvestmentField;
            }
            set {
                if ((this.DEIsInvestmentField.Equals(value) != true)) {
                    this.DEIsInvestmentField = value;
                    this.RaisePropertyChanged("DEIsInvestment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DEIsSecurityFinancialDerivative {
            get {
                return this.DEIsSecurityFinancialDerivativeField;
            }
            set {
                if ((this.DEIsSecurityFinancialDerivativeField.Equals(value) != true)) {
                    this.DEIsSecurityFinancialDerivativeField = value;
                    this.RaisePropertyChanged("DEIsSecurityFinancialDerivative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DEIsServices {
            get {
                return this.DEIsServicesField;
            }
            set {
                if ((this.DEIsServicesField.Equals(value) != true)) {
                    this.DEIsServicesField = value;
                    this.RaisePropertyChanged("DEIsServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPayStatCode {
            get {
                return this.DEPayStatCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPayStatCodeField, value) != true)) {
                    this.DEPayStatCodeField = value;
                    this.RaisePropertyChanged("DEPayStatCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultDim {
            get {
                return this.DefaultDimField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultDimField, value) != true)) {
                    this.DefaultDimField = value;
                    this.RaisePropertyChanged("DefaultDim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Diameter {
            get {
                return this.DiameterField;
            }
            set {
                if ((this.DiameterField.Equals(value) != true)) {
                    this.DiameterField = value;
                    this.RaisePropertyChanged("Diameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiameterInside {
            get {
                return this.DiameterInsideField;
            }
            set {
                if ((this.DiameterInsideField.Equals(value) != true)) {
                    this.DiameterInsideField = value;
                    this.RaisePropertyChanged("DiameterInside");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiameterOutside {
            get {
                return this.DiameterOutsideField;
            }
            set {
                if ((this.DiameterOutsideField.Equals(value) != true)) {
                    this.DiameterOutsideField = value;
                    this.RaisePropertyChanged("DiameterOutside");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiameterUM {
            get {
                return this.DiameterUMField;
            }
            set {
                if ((object.ReferenceEquals(this.DiameterUMField, value) != true)) {
                    this.DiameterUMField = value;
                    this.RaisePropertyChanged("DiameterUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DiffPrc2PrchUOM {
            get {
                return this.DiffPrc2PrchUOMField;
            }
            set {
                if ((this.DiffPrc2PrchUOMField.Equals(value) != true)) {
                    this.DiffPrc2PrchUOMField = value;
                    this.RaisePropertyChanged("DiffPrc2PrchUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispPartNum {
            get {
                return this.DispPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DispPartNumField, value) != true)) {
                    this.DispPartNumField = value;
                    this.RaisePropertyChanged("DispPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DupOnJobCrt {
            get {
                return this.DupOnJobCrtField;
            }
            set {
                if ((this.DupOnJobCrtField.Equals(value) != true)) {
                    this.DupOnJobCrtField = value;
                    this.RaisePropertyChanged("DupOnJobCrt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Durometer {
            get {
                return this.DurometerField;
            }
            set {
                if ((object.ReferenceEquals(this.DurometerField, value) != true)) {
                    this.DurometerField = value;
                    this.RaisePropertyChanged("Durometer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCNNumber {
            get {
                return this.ECCNNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCNNumberField, value) != true)) {
                    this.ECCNNumberField = value;
                    this.RaisePropertyChanged("ECCNNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDICode {
            get {
                return this.EDICodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EDICodeField, value) != true)) {
                    this.EDICodeField = value;
                    this.RaisePropertyChanged("EDICode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineeringAlert {
            get {
                return this.EngineeringAlertField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineeringAlertField, value) != true)) {
                    this.EngineeringAlertField = value;
                    this.RaisePropertyChanged("EngineeringAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstimateID {
            get {
                return this.EstimateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EstimateIDField, value) != true)) {
                    this.EstimateIDField = value;
                    this.RaisePropertyChanged("EstimateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstimateOrPlan {
            get {
                return this.EstimateOrPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.EstimateOrPlanField, value) != true)) {
                    this.EstimateOrPlanField = value;
                    this.RaisePropertyChanged("EstimateOrPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpLicNumber {
            get {
                return this.ExpLicNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpLicNumberField, value) != true)) {
                    this.ExpLicNumberField = value;
                    this.RaisePropertyChanged("ExpLicNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpLicType {
            get {
                return this.ExpLicTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpLicTypeField, value) != true)) {
                    this.ExpLicTypeField = value;
                    this.RaisePropertyChanged("ExpLicType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExtConfig {
            get {
                return this.ExtConfigField;
            }
            set {
                if ((this.ExtConfigField.Equals(value) != true)) {
                    this.ExtConfigField = value;
                    this.RaisePropertyChanged("ExtConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExternalCRMLastSync {
            get {
                return this.ExternalCRMLastSyncField;
            }
            set {
                if ((this.ExternalCRMLastSyncField.Equals(value) != true)) {
                    this.ExternalCRMLastSyncField = value;
                    this.RaisePropertyChanged("ExternalCRMLastSync");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalCRMPartID {
            get {
                return this.ExternalCRMPartIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalCRMPartIDField, value) != true)) {
                    this.ExternalCRMPartIDField = value;
                    this.RaisePropertyChanged("ExternalCRMPartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalCRMSyncRequired {
            get {
                return this.ExternalCRMSyncRequiredField;
            }
            set {
                if ((this.ExternalCRMSyncRequiredField.Equals(value) != true)) {
                    this.ExternalCRMSyncRequiredField = value;
                    this.RaisePropertyChanged("ExternalCRMSyncRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAssetClassCode {
            get {
                return this.FSAssetClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAssetClassCodeField, value) != true)) {
                    this.FSAssetClassCodeField = value;
                    this.RaisePropertyChanged("FSAssetClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSPricePerCode {
            get {
                return this.FSPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FSPricePerCodeField, value) != true)) {
                    this.FSPricePerCodeField = value;
                    this.RaisePropertyChanged("FSPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FSSalesUnitPrice {
            get {
                return this.FSSalesUnitPriceField;
            }
            set {
                if ((this.FSSalesUnitPriceField.Equals(value) != true)) {
                    this.FSSalesUnitPriceField = value;
                    this.RaisePropertyChanged("FSSalesUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbPartNum {
            get {
                return this.GlbPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPartNumField, value) != true)) {
                    this.GlbPartNumField = value;
                    this.RaisePropertyChanged("GlbPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalPart {
            get {
                return this.GlobalPartField;
            }
            set {
                if ((this.GlobalPartField.Equals(value) != true)) {
                    this.GlobalPartField = value;
                    this.RaisePropertyChanged("GlobalPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Gravity {
            get {
                return this.GravityField;
            }
            set {
                if ((this.GravityField.Equals(value) != true)) {
                    this.GravityField = value;
                    this.RaisePropertyChanged("Gravity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GrossWeight {
            get {
                return this.GrossWeightField;
            }
            set {
                if ((this.GrossWeightField.Equals(value) != true)) {
                    this.GrossWeightField = value;
                    this.RaisePropertyChanged("GrossWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrossWeightUOM {
            get {
                return this.GrossWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.GrossWeightUOMField, value) != true)) {
                    this.GrossWeightUOMField = value;
                    this.RaisePropertyChanged("GrossWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HTS {
            get {
                return this.HTSField;
            }
            set {
                if ((object.ReferenceEquals(this.HTSField, value) != true)) {
                    this.HTSField = value;
                    this.RaisePropertyChanged("HTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazClass {
            get {
                return this.HazClassField;
            }
            set {
                if ((object.ReferenceEquals(this.HazClassField, value) != true)) {
                    this.HazClassField = value;
                    this.RaisePropertyChanged("HazClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazGvrnmtID {
            get {
                return this.HazGvrnmtIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HazGvrnmtIDField, value) != true)) {
                    this.HazGvrnmtIDField = value;
                    this.RaisePropertyChanged("HazGvrnmtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HazItem {
            get {
                return this.HazItemField;
            }
            set {
                if ((this.HazItemField.Equals(value) != true)) {
                    this.HazItemField = value;
                    this.RaisePropertyChanged("HazItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazPackInstr {
            get {
                return this.HazPackInstrField;
            }
            set {
                if ((object.ReferenceEquals(this.HazPackInstrField, value) != true)) {
                    this.HazPackInstrField = value;
                    this.RaisePropertyChanged("HazPackInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazSub {
            get {
                return this.HazSubField;
            }
            set {
                if ((object.ReferenceEquals(this.HazSubField, value) != true)) {
                    this.HazSubField = value;
                    this.RaisePropertyChanged("HazSub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazTechName {
            get {
                return this.HazTechNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HazTechNameField, value) != true)) {
                    this.HazTechNameField = value;
                    this.RaisePropertyChanged("HazTechName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INChapterID {
            get {
                return this.INChapterIDField;
            }
            set {
                if ((object.ReferenceEquals(this.INChapterIDField, value) != true)) {
                    this.INChapterIDField = value;
                    this.RaisePropertyChanged("INChapterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISOrigCountry {
            get {
                return this.ISOrigCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ISOrigCountryField, value) != true)) {
                    this.ISOrigCountryField = value;
                    this.RaisePropertyChanged("ISOrigCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISRegion {
            get {
                return this.ISRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.ISRegionField, value) != true)) {
                    this.ISRegionField = value;
                    this.RaisePropertyChanged("ISRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ISSuppUnitsFactor {
            get {
                return this.ISSuppUnitsFactorField;
            }
            set {
                if ((this.ISSuppUnitsFactorField.Equals(value) != true)) {
                    this.ISSuppUnitsFactorField = value;
                    this.RaisePropertyChanged("ISSuppUnitsFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFileName {
            get {
                return this.ImageFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFileNameField, value) != true)) {
                    this.ImageFileNameField = value;
                    this.RaisePropertyChanged("ImageFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageID {
            get {
                return this.ImageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageIDField, value) != true)) {
                    this.ImageIDField = value;
                    this.RaisePropertyChanged("ImageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InActive {
            get {
                return this.InActiveField;
            }
            set {
                if ((this.InActiveField.Equals(value) != true)) {
                    this.InActiveField = value;
                    this.RaisePropertyChanged("InActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspPlanType {
            get {
                return this.InspPlanTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InspPlanTypeField, value) != true)) {
                    this.InspPlanTypeField = value;
                    this.RaisePropertyChanged("InspPlanType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalPricePerCode {
            get {
                return this.InternalPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalPricePerCodeField, value) != true)) {
                    this.InternalPricePerCodeField = value;
                    this.RaisePropertyChanged("InternalPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InternalUnitPrice {
            get {
                return this.InternalUnitPriceField;
            }
            set {
                if ((this.InternalUnitPriceField.Equals(value) != true)) {
                    this.InternalUnitPriceField = value;
                    this.RaisePropertyChanged("InternalUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCompliant {
            get {
                return this.IsCompliantField;
            }
            set {
                if ((this.IsCompliantField.Equals(value) != true)) {
                    this.IsCompliantField = value;
                    this.RaisePropertyChanged("IsCompliant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConfigured {
            get {
                return this.IsConfiguredField;
            }
            set {
                if ((this.IsConfiguredField.Equals(value) != true)) {
                    this.IsConfiguredField = value;
                    this.RaisePropertyChanged("IsConfigured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGiftCard {
            get {
                return this.IsGiftCardField;
            }
            set {
                if ((this.IsGiftCardField.Equals(value) != true)) {
                    this.IsGiftCardField = value;
                    this.RaisePropertyChanged("IsGiftCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRestricted {
            get {
                return this.IsRestrictedField;
            }
            set {
                if ((this.IsRestrictedField.Equals(value) != true)) {
                    this.IsRestrictedField = value;
                    this.RaisePropertyChanged("IsRestricted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSafetyItem {
            get {
                return this.IsSafetyItemField;
            }
            set {
                if ((this.IsSafetyItemField.Equals(value) != true)) {
                    this.IsSafetyItemField = value;
                    this.RaisePropertyChanged("IsSafetyItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkPartNum {
            get {
                return this.LinkPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkPartNumField, value) != true)) {
                    this.LinkPartNumField = value;
                    this.RaisePropertyChanged("LinkPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkToContract {
            get {
                return this.LinkToContractField;
            }
            set {
                if ((this.LinkToContractField.Equals(value) != true)) {
                    this.LinkToContractField = value;
                    this.RaisePropertyChanged("LinkToContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotAppendDate {
            get {
                return this.LotAppendDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LotAppendDateField, value) != true)) {
                    this.LotAppendDateField = value;
                    this.RaisePropertyChanged("LotAppendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotBatch {
            get {
                return this.LotBatchField;
            }
            set {
                if ((this.LotBatchField.Equals(value) != true)) {
                    this.LotBatchField = value;
                    this.RaisePropertyChanged("LotBatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotBeforeDt {
            get {
                return this.LotBeforeDtField;
            }
            set {
                if ((this.LotBeforeDtField.Equals(value) != true)) {
                    this.LotBeforeDtField = value;
                    this.RaisePropertyChanged("LotBeforeDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotCureDt {
            get {
                return this.LotCureDtField;
            }
            set {
                if ((this.LotCureDtField.Equals(value) != true)) {
                    this.LotCureDtField = value;
                    this.RaisePropertyChanged("LotCureDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LotDigits {
            get {
                return this.LotDigitsField;
            }
            set {
                if ((this.LotDigitsField.Equals(value) != true)) {
                    this.LotDigitsField = value;
                    this.RaisePropertyChanged("LotDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotExpDt {
            get {
                return this.LotExpDtField;
            }
            set {
                if ((this.LotExpDtField.Equals(value) != true)) {
                    this.LotExpDtField = value;
                    this.RaisePropertyChanged("LotExpDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotFirmware {
            get {
                return this.LotFirmwareField;
            }
            set {
                if ((this.LotFirmwareField.Equals(value) != true)) {
                    this.LotFirmwareField = value;
                    this.RaisePropertyChanged("LotFirmware");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotHeat {
            get {
                return this.LotHeatField;
            }
            set {
                if ((this.LotHeatField.Equals(value) != true)) {
                    this.LotHeatField = value;
                    this.RaisePropertyChanged("LotHeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotLeadingZeros {
            get {
                return this.LotLeadingZerosField;
            }
            set {
                if ((this.LotLeadingZerosField.Equals(value) != true)) {
                    this.LotLeadingZerosField = value;
                    this.RaisePropertyChanged("LotLeadingZeros");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotMfgBatch {
            get {
                return this.LotMfgBatchField;
            }
            set {
                if ((this.LotMfgBatchField.Equals(value) != true)) {
                    this.LotMfgBatchField = value;
                    this.RaisePropertyChanged("LotMfgBatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotMfgDt {
            get {
                return this.LotMfgDtField;
            }
            set {
                if ((this.LotMfgDtField.Equals(value) != true)) {
                    this.LotMfgDtField = value;
                    this.RaisePropertyChanged("LotMfgDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotMfgLot {
            get {
                return this.LotMfgLotField;
            }
            set {
                if ((this.LotMfgLotField.Equals(value) != true)) {
                    this.LotMfgLotField = value;
                    this.RaisePropertyChanged("LotMfgLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LotNxtNum {
            get {
                return this.LotNxtNumField;
            }
            set {
                if ((this.LotNxtNumField.Equals(value) != true)) {
                    this.LotNxtNumField = value;
                    this.RaisePropertyChanged("LotNxtNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotPrefix {
            get {
                return this.LotPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.LotPrefixField, value) != true)) {
                    this.LotPrefixField = value;
                    this.RaisePropertyChanged("LotPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotSeqID {
            get {
                return this.LotSeqIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LotSeqIDField, value) != true)) {
                    this.LotSeqIDField = value;
                    this.RaisePropertyChanged("LotSeqID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LotShelfLife {
            get {
                return this.LotShelfLifeField;
            }
            set {
                if ((this.LotShelfLifeField.Equals(value) != true)) {
                    this.LotShelfLifeField = value;
                    this.RaisePropertyChanged("LotShelfLife");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotUseGlobalSeq {
            get {
                return this.LotUseGlobalSeqField;
            }
            set {
                if ((this.LotUseGlobalSeqField.Equals(value) != true)) {
                    this.LotUseGlobalSeqField = value;
                    this.RaisePropertyChanged("LotUseGlobalSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LowLevelCode {
            get {
                return this.LowLevelCodeField;
            }
            set {
                if ((this.LowLevelCodeField.Equals(value) != true)) {
                    this.LowLevelCodeField = value;
                    this.RaisePropertyChanged("LowLevelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MDPV {
            get {
                return this.MDPVField;
            }
            set {
                if ((this.MDPVField.Equals(value) != true)) {
                    this.MDPVField = value;
                    this.RaisePropertyChanged("MDPV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Method {
            get {
                return this.MethodField;
            }
            set {
                if ((this.MethodField.Equals(value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgComment {
            get {
                return this.MfgCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgCommentField, value) != true)) {
                    this.MfgCommentField = value;
                    this.RaisePropertyChanged("MfgComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MobilePart {
            get {
                return this.MobilePartField;
            }
            set {
                if ((this.MobilePartField.Equals(value) != true)) {
                    this.MobilePartField = value;
                    this.RaisePropertyChanged("MobilePart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MtlAnalysisCode {
            get {
                return this.MtlAnalysisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MtlAnalysisCodeField, value) != true)) {
                    this.MtlAnalysisCodeField = value;
                    this.RaisePropertyChanged("MtlAnalysisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlBurRate {
            get {
                return this.MtlBurRateField;
            }
            set {
                if ((this.MtlBurRateField.Equals(value) != true)) {
                    this.MtlBurRateField = value;
                    this.RaisePropertyChanged("MtlBurRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAFTAOrigCountry {
            get {
                return this.NAFTAOrigCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.NAFTAOrigCountryField, value) != true)) {
                    this.NAFTAOrigCountryField = value;
                    this.RaisePropertyChanged("NAFTAOrigCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAFTAPref {
            get {
                return this.NAFTAPrefField;
            }
            set {
                if ((object.ReferenceEquals(this.NAFTAPrefField, value) != true)) {
                    this.NAFTAPrefField = value;
                    this.RaisePropertyChanged("NAFTAPref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAFTAProd {
            get {
                return this.NAFTAProdField;
            }
            set {
                if ((object.ReferenceEquals(this.NAFTAProdField, value) != true)) {
                    this.NAFTAProdField = value;
                    this.RaisePropertyChanged("NAFTAProd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NetVolume {
            get {
                return this.NetVolumeField;
            }
            set {
                if ((this.NetVolumeField.Equals(value) != true)) {
                    this.NetVolumeField = value;
                    this.RaisePropertyChanged("NetVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetVolumeUOM {
            get {
                return this.NetVolumeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.NetVolumeUOMField, value) != true)) {
                    this.NetVolumeUOMField = value;
                    this.RaisePropertyChanged("NetVolumeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NetWeight {
            get {
                return this.NetWeightField;
            }
            set {
                if ((this.NetWeightField.Equals(value) != true)) {
                    this.NetWeightField = value;
                    this.RaisePropertyChanged("NetWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetWeightUOM {
            get {
                return this.NetWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.NetWeightUOMField, value) != true)) {
                    this.NetWeightUOMField = value;
                    this.RaisePropertyChanged("NetWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStock {
            get {
                return this.NonStockField;
            }
            set {
                if ((this.NonStockField.Equals(value) != true)) {
                    this.NonStockField = value;
                    this.RaisePropertyChanged("NonStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldCompany {
            get {
                return this.OldCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.OldCompanyField, value) != true)) {
                    this.OldCompanyField = value;
                    this.RaisePropertyChanged("OldCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPartNum {
            get {
                return this.OldPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPartNumField, value) != true)) {
                    this.OldPartNumField = value;
                    this.RaisePropertyChanged("OldPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnHold {
            get {
                return this.OnHoldField;
            }
            set {
                if ((this.OnHoldField.Equals(value) != true)) {
                    this.OnHoldField = value;
                    this.RaisePropertyChanged("OnHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OnHoldDate {
            get {
                return this.OnHoldDateField;
            }
            set {
                if ((this.OnHoldDateField.Equals(value) != true)) {
                    this.OnHoldDateField = value;
                    this.RaisePropertyChanged("OnHoldDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnHoldReasonCode {
            get {
                return this.OnHoldReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OnHoldReasonCodeField, value) != true)) {
                    this.OnHoldReasonCodeField = value;
                    this.RaisePropertyChanged("OnHoldReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrigCountry {
            get {
                return this.OrigCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.OrigCountryField, value) != true)) {
                    this.OrigCountryField = value;
                    this.RaisePropertyChanged("OrigCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnershipStatus {
            get {
                return this.OwnershipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnershipStatusField, value) != true)) {
                    this.OwnershipStatusField = value;
                    this.RaisePropertyChanged("OwnershipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMObjID {
            get {
                return this.PDMObjIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMObjIDField, value) != true)) {
                    this.PDMObjIDField = value;
                    this.RaisePropertyChanged("PDMObjID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PESUNATType {
            get {
                return this.PESUNATTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PESUNATTypeField, value) != true)) {
                    this.PESUNATTypeField = value;
                    this.RaisePropertyChanged("PESUNATType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PESUNATUOM {
            get {
                return this.PESUNATUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PESUNATUOMField, value) != true)) {
                    this.PESUNATUOMField = value;
                    this.RaisePropertyChanged("PESUNATUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartHeight {
            get {
                return this.PartHeightField;
            }
            set {
                if ((this.PartHeightField.Equals(value) != true)) {
                    this.PartHeightField = value;
                    this.RaisePropertyChanged("PartHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartLength {
            get {
                return this.PartLengthField;
            }
            set {
                if ((this.PartLengthField.Equals(value) != true)) {
                    this.PartLengthField = value;
                    this.RaisePropertyChanged("PartLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartLengthWidthHeightUM {
            get {
                return this.PartLengthWidthHeightUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartLengthWidthHeightUMField, value) != true)) {
                    this.PartLengthWidthHeightUMField = value;
                    this.RaisePropertyChanged("PartLengthWidthHeightUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartPhotoExists {
            get {
                return this.PartPhotoExistsField;
            }
            set {
                if ((this.PartPhotoExistsField.Equals(value) != true)) {
                    this.PartPhotoExistsField = value;
                    this.RaisePropertyChanged("PartPhotoExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartSpecificPackingUOM {
            get {
                return this.PartSpecificPackingUOMField;
            }
            set {
                if ((this.PartSpecificPackingUOMField.Equals(value) != true)) {
                    this.PartSpecificPackingUOMField = value;
                    this.RaisePropertyChanged("PartSpecificPackingUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartWidth {
            get {
                return this.PartWidthField;
            }
            set {
                if ((this.PartWidthField.Equals(value) != true)) {
                    this.PartWidthField = value;
                    this.RaisePropertyChanged("PartWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartsPerContainer {
            get {
                return this.PartsPerContainerField;
            }
            set {
                if ((this.PartsPerContainerField.Equals(value) != true)) {
                    this.PartsPerContainerField = value;
                    this.RaisePropertyChanged("PartsPerContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomBOM {
            get {
                return this.PhantomBOMField;
            }
            set {
                if ((this.PhantomBOMField.Equals(value) != true)) {
                    this.PhantomBOMField = value;
                    this.RaisePropertyChanged("PhantomBOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoFile {
            get {
                return this.PhotoFileField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFileField, value) != true)) {
                    this.PhotoFileField = value;
                    this.RaisePropertyChanged("PhotoFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricePerCode {
            get {
                return this.PricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PricePerCodeField, value) != true)) {
                    this.PricePerCodeField = value;
                    this.RaisePropertyChanged("PricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricingFactor {
            get {
                return this.PricingFactorField;
            }
            set {
                if ((this.PricingFactorField.Equals(value) != true)) {
                    this.PricingFactorField = value;
                    this.RaisePropertyChanged("PricingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingUOM {
            get {
                return this.PricingUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingUOMField, value) != true)) {
                    this.PricingUOMField = value;
                    this.RaisePropertyChanged("PricingUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCodeDescription {
            get {
                return this.ProdCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeDescriptionField, value) != true)) {
                    this.ProdCodeDescriptionField = value;
                    this.RaisePropertyChanged("ProdCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurComment {
            get {
                return this.PurCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.PurCommentField, value) != true)) {
                    this.PurCommentField = value;
                    this.RaisePropertyChanged("PurComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PurchasingFactor {
            get {
                return this.PurchasingFactorField;
            }
            set {
                if ((this.PurchasingFactorField.Equals(value) != true)) {
                    this.PurchasingFactorField = value;
                    this.RaisePropertyChanged("PurchasingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchasingFactorDirection {
            get {
                return this.PurchasingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchasingFactorDirectionField, value) != true)) {
                    this.PurchasingFactorDirectionField = value;
                    this.RaisePropertyChanged("PurchasingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QtyBearing {
            get {
                return this.QtyBearingField;
            }
            set {
                if ((this.QtyBearingField.Equals(value) != true)) {
                    this.QtyBearingField = value;
                    this.RaisePropertyChanged("QtyBearing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RCOverThreshold {
            get {
                return this.RCOverThresholdField;
            }
            set {
                if ((this.RCOverThresholdField.Equals(value) != true)) {
                    this.RCOverThresholdField = value;
                    this.RaisePropertyChanged("RCOverThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RCUnderThreshold {
            get {
                return this.RCUnderThresholdField;
            }
            set {
                if ((this.RCUnderThresholdField.Equals(value) != true)) {
                    this.RCUnderThresholdField = value;
                    this.RaisePropertyChanged("RCUnderThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RcvInspectionReq {
            get {
                return this.RcvInspectionReqField;
            }
            set {
                if ((this.RcvInspectionReqField.Equals(value) != true)) {
                    this.RcvInspectionReqField = value;
                    this.RaisePropertyChanged("RcvInspectionReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecDocReq {
            get {
                return this.RecDocReqField;
            }
            set {
                if ((this.RecDocReqField.Equals(value) != true)) {
                    this.RecDocReqField = value;
                    this.RaisePropertyChanged("RecDocReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCategory {
            get {
                return this.RefCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCategoryField, value) != true)) {
                    this.RefCategoryField = value;
                    this.RaisePropertyChanged("RefCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnableContainer {
            get {
                return this.ReturnableContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnableContainerField, value) != true)) {
                    this.ReturnableContainerField = value;
                    this.RaisePropertyChanged("ReturnableContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevChargeMethod {
            get {
                return this.RevChargeMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.RevChargeMethodField, value) != true)) {
                    this.RevChargeMethodField = value;
                    this.RaisePropertyChanged("RevChargeMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RunOut {
            get {
                return this.RunOutField;
            }
            set {
                if ((this.RunOutField.Equals(value) != true)) {
                    this.RunOutField = value;
                    this.RaisePropertyChanged("RunOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskExample {
            get {
                return this.SNMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskExampleField, value) != true)) {
                    this.SNMaskExampleField = value;
                    this.RaisePropertyChanged("SNMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchedBcode {
            get {
                return this.SchedBcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SchedBcodeField, value) != true)) {
                    this.SchedBcodeField = value;
                    this.RaisePropertyChanged("SchedBcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchWord {
            get {
                return this.SearchWordField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchWordField, value) != true)) {
                    this.SearchWordField = value;
                    this.RaisePropertyChanged("SearchWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingFactor {
            get {
                return this.SellingFactorField;
            }
            set {
                if ((this.SellingFactorField.Equals(value) != true)) {
                    this.SellingFactorField = value;
                    this.RaisePropertyChanged("SellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingFactorDirection {
            get {
                return this.SellingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingFactorDirectionField, value) != true)) {
                    this.SellingFactorDirectionField = value;
                    this.RaisePropertyChanged("SellingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipDocReq {
            get {
                return this.ShipDocReqField;
            }
            set {
                if ((this.ShipDocReqField.Equals(value) != true)) {
                    this.ShipDocReqField = value;
                    this.RaisePropertyChanged("ShipDocReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Skipped {
            get {
                return this.SkippedField;
            }
            set {
                if ((this.SkippedField.Equals(value) != true)) {
                    this.SkippedField = value;
                    this.RaisePropertyChanged("Skipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specification {
            get {
                return this.SpecificationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificationField, value) != true)) {
                    this.SpecificationField = value;
                    this.RaisePropertyChanged("Specification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StockPart {
            get {
                return this.StockPartField;
            }
            set {
                if ((this.StockPartField.Equals(value) != true)) {
                    this.StockPartField = value;
                    this.RaisePropertyChanged("StockPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPart {
            get {
                return this.SubPartField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartField, value) != true)) {
                    this.SubPartField = value;
                    this.RaisePropertyChanged("SubPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SyncToExternalCRM {
            get {
                return this.SyncToExternalCRMField;
            }
            set {
                if ((this.SyncToExternalCRMField.Equals(value) != true)) {
                    this.SyncToExternalCRMField = value;
                    this.RaisePropertyChanged("SyncToExternalCRM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThicknessMax {
            get {
                return this.ThicknessMaxField;
            }
            set {
                if ((this.ThicknessMaxField.Equals(value) != true)) {
                    this.ThicknessMaxField = value;
                    this.RaisePropertyChanged("ThicknessMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThicknessUM {
            get {
                return this.ThicknessUMField;
            }
            set {
                if ((object.ReferenceEquals(this.ThicknessUMField, value) != true)) {
                    this.ThicknessUMField = value;
                    this.RaisePropertyChanged("ThicknessUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackDimension {
            get {
                return this.TrackDimensionField;
            }
            set {
                if ((this.TrackDimensionField.Equals(value) != true)) {
                    this.TrackDimensionField = value;
                    this.RaisePropertyChanged("TrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackLots {
            get {
                return this.TrackLotsField;
            }
            set {
                if ((this.TrackLotsField.Equals(value) != true)) {
                    this.TrackLotsField = value;
                    this.RaisePropertyChanged("TrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackSerialNum {
            get {
                return this.TrackSerialNumField;
            }
            set {
                if ((this.TrackSerialNumField.Equals(value) != true)) {
                    this.TrackSerialNumField = value;
                    this.RaisePropertyChanged("TrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCodeDescription {
            get {
                return this.TypeCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeDescriptionField, value) != true)) {
                    this.TypeCodeDescriptionField = value;
                    this.RaisePropertyChanged("TypeCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOMClassID {
            get {
                return this.UOMClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMClassIDField, value) != true)) {
                    this.UOMClassIDField = value;
                    this.RaisePropertyChanged("UOMClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPCCode1 {
            get {
                return this.UPCCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UPCCode1Field, value) != true)) {
                    this.UPCCode1Field = value;
                    this.RaisePropertyChanged("UPCCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPCCode2 {
            get {
                return this.UPCCode2Field;
            }
            set {
                if ((object.ReferenceEquals(this.UPCCode2Field, value) != true)) {
                    this.UPCCode2Field = value;
                    this.RaisePropertyChanged("UPCCode2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPCCode3 {
            get {
                return this.UPCCode3Field;
            }
            set {
                if ((object.ReferenceEquals(this.UPCCode3Field, value) != true)) {
                    this.UPCCode3Field = value;
                    this.RaisePropertyChanged("UPCCode3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseHTSDesc {
            get {
                return this.UseHTSDescField;
            }
            set {
                if ((this.UseHTSDescField.Equals(value) != true)) {
                    this.UseHTSDescField = value;
                    this.RaisePropertyChanged("UseHTSDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseMaskSeq {
            get {
                return this.UseMaskSeqField;
            }
            set {
                if ((this.UseMaskSeqField.Equals(value) != true)) {
                    this.UseMaskSeqField = value;
                    this.RaisePropertyChanged("UseMaskSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsePartRev {
            get {
                return this.UsePartRevField;
            }
            set {
                if ((this.UsePartRevField.Equals(value) != true)) {
                    this.UsePartRevField = value;
                    this.RaisePropertyChanged("UsePartRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyCode {
            get {
                return this.WarrantyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCodeField, value) != true)) {
                    this.WarrantyCodeField = value;
                    this.RaisePropertyChanged("WarrantyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebInStock {
            get {
                return this.WebInStockField;
            }
            set {
                if ((this.WebInStockField.Equals(value) != true)) {
                    this.WebInStockField = value;
                    this.RaisePropertyChanged("WebInStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebPart {
            get {
                return this.WebPartField;
            }
            set {
                if ((this.WebPartField.Equals(value) != true)) {
                    this.WebPartField = value;
                    this.RaisePropertyChanged("WebPart");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.EntityGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartAuditRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartBinInfoRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartCOORow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartCOPartRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartDimRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartLangDescRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartPCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartPlantRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRestrictSubstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRestrictionRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevInspPlanRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevInspPlanAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevInspVendRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartSubsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartUOMRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartWhseRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.TaxExemptRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRefDesWhereUsedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartWhereUsedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartGetDMRListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.GlbPartRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.EntityGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartAuditRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartBinInfoRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartCOORow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartCOPartRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartDimRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartLangDescRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartPCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartPlantRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRestrictSubstRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRestrictionRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevInspPlanRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevInspPlanAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRevInspVendRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartSubsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartUOMRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartWhseRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.TaxExemptRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartRefDesWhereUsedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartWhereUsedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.PartGetDMRListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.PartSvc.GlbPartRow))]
    public partial class IceRow : EpicorConsole.Epicor.PartSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityGLCRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EntityGLCRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankFeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CashDeskIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.EntityGLCRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeductionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtSystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLCntrlDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLCntrlTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLControlCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalEntityGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFilteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JCDeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OprTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReclassCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedToFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxTblIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctID {
            get {
                return this.BankAcctIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctIDField, value) != true)) {
                    this.BankAcctIDField = value;
                    this.RaisePropertyChanged("BankAcctID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankFeeID {
            get {
                return this.BankFeeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankFeeIDField, value) != true)) {
                    this.BankFeeIDField = value;
                    this.RaisePropertyChanged("BankFeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessEntity {
            get {
                return this.BusinessEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessEntityField, value) != true)) {
                    this.BusinessEntityField = value;
                    this.RaisePropertyChanged("BusinessEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallCode {
            get {
                return this.CallCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CallCodeField, value) != true)) {
                    this.CallCodeField = value;
                    this.RaisePropertyChanged("CallCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CashDeskID {
            get {
                return this.CashDeskIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CashDeskIDField, value) != true)) {
                    this.CashDeskIDField = value;
                    this.RaisePropertyChanged("CashDeskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeCode {
            get {
                return this.ChargeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeCodeField, value) != true)) {
                    this.ChargeCodeField = value;
                    this.RaisePropertyChanged("ChargeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassCode {
            get {
                return this.ClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassCodeField, value) != true)) {
                    this.ClassCodeField = value;
                    this.RaisePropertyChanged("ClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassIDField, value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.EntityGLCRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeductionID {
            get {
                return this.DeductionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeductionIDField, value) != true)) {
                    this.DeductionIDField = value;
                    this.RaisePropertyChanged("DeductionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseCode {
            get {
                return this.ExpenseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseCodeField, value) != true)) {
                    this.ExpenseCodeField = value;
                    this.RaisePropertyChanged("ExpenseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseTypeCode {
            get {
                return this.ExpenseTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseTypeCodeField, value) != true)) {
                    this.ExpenseTypeCodeField = value;
                    this.RaisePropertyChanged("ExpenseTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompanyID {
            get {
                return this.ExtCompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyIDField, value) != true)) {
                    this.ExtCompanyIDField = value;
                    this.RaisePropertyChanged("ExtCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtSystemID {
            get {
                return this.ExtSystemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtSystemIDField, value) != true)) {
                    this.ExtSystemIDField = value;
                    this.RaisePropertyChanged("ExtSystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromPlant {
            get {
                return this.FromPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.FromPlantField, value) != true)) {
                    this.FromPlantField = value;
                    this.RaisePropertyChanged("FromPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLCntrlDescription {
            get {
                return this.GLCntrlDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GLCntrlDescriptionField, value) != true)) {
                    this.GLCntrlDescriptionField = value;
                    this.RaisePropertyChanged("GLCntrlDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLCntrlTypeDescription {
            get {
                return this.GLCntrlTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GLCntrlTypeDescriptionField, value) != true)) {
                    this.GLCntrlTypeDescriptionField = value;
                    this.RaisePropertyChanged("GLCntrlTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLControlCode {
            get {
                return this.GLControlCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLControlCodeField, value) != true)) {
                    this.GLControlCodeField = value;
                    this.RaisePropertyChanged("GLControlCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLControlType {
            get {
                return this.GLControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLControlTypeField, value) != true)) {
                    this.GLControlTypeField = value;
                    this.RaisePropertyChanged("GLControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalEntityGLC {
            get {
                return this.GlobalEntityGLCField;
            }
            set {
                if ((this.GlobalEntityGLCField.Equals(value) != true)) {
                    this.GlobalEntityGLCField = value;
                    this.RaisePropertyChanged("GlobalEntityGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeadNum {
            get {
                return this.HeadNumField;
            }
            set {
                if ((this.HeadNumField.Equals(value) != true)) {
                    this.HeadNumField = value;
                    this.RaisePropertyChanged("HeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumField, value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternalCompany {
            get {
                return this.IsExternalCompanyField;
            }
            set {
                if ((this.IsExternalCompanyField.Equals(value) != true)) {
                    this.IsExternalCompanyField = value;
                    this.RaisePropertyChanged("IsExternalCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFiltered {
            get {
                return this.IsFilteredField;
            }
            set {
                if ((this.IsFilteredField.Equals(value) != true)) {
                    this.IsFilteredField = value;
                    this.RaisePropertyChanged("IsFiltered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JCDept {
            get {
                return this.JCDeptField;
            }
            set {
                if ((object.ReferenceEquals(this.JCDeptField, value) != true)) {
                    this.JCDeptField = value;
                    this.RaisePropertyChanged("JCDept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key1 {
            get {
                return this.Key1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key1Field, value) != true)) {
                    this.Key1Field = value;
                    this.RaisePropertyChanged("Key1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key2 {
            get {
                return this.Key2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key2Field, value) != true)) {
                    this.Key2Field = value;
                    this.RaisePropertyChanged("Key2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key3 {
            get {
                return this.Key3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key3Field, value) != true)) {
                    this.Key3Field = value;
                    this.RaisePropertyChanged("Key3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key4 {
            get {
                return this.Key4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key4Field, value) != true)) {
                    this.Key4Field = value;
                    this.RaisePropertyChanged("Key4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key5 {
            get {
                return this.Key5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key5Field, value) != true)) {
                    this.Key5Field = value;
                    this.RaisePropertyChanged("Key5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key6 {
            get {
                return this.Key6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key6Field, value) != true)) {
                    this.Key6Field = value;
                    this.RaisePropertyChanged("Key6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OprTypeCode {
            get {
                return this.OprTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OprTypeCodeField, value) != true)) {
                    this.OprTypeCodeField = value;
                    this.RaisePropertyChanged("OprTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIStatus {
            get {
                return this.PIStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PIStatusField, value) != true)) {
                    this.PIStatusField = value;
                    this.RaisePropertyChanged("PIStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayTypeID {
            get {
                return this.PayTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PayTypeIDField, value) != true)) {
                    this.PayTypeIDField = value;
                    this.RaisePropertyChanged("PayTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PerConName {
            get {
                return this.PerConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PerConNameField, value) != true)) {
                    this.PerConNameField = value;
                    this.RaisePropertyChanged("PerConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchCode {
            get {
                return this.PurchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchCodeField, value) != true)) {
                    this.PurchCodeField = value;
                    this.RaisePropertyChanged("PurchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCode {
            get {
                return this.ReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeField, value) != true)) {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonType {
            get {
                return this.ReasonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonTypeField, value) != true)) {
                    this.ReasonTypeField = value;
                    this.RaisePropertyChanged("ReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReclassCodeID {
            get {
                return this.ReclassCodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReclassCodeIDField, value) != true)) {
                    this.ReclassCodeIDField = value;
                    this.RaisePropertyChanged("ReclassCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedToFile {
            get {
                return this.RelatedToFileField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedToFileField, value) != true)) {
                    this.RelatedToFileField = value;
                    this.RaisePropertyChanged("RelatedToFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesCatID {
            get {
                return this.SalesCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesCatIDField, value) != true)) {
                    this.SalesCatIDField = value;
                    this.RaisePropertyChanged("SalesCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Shift {
            get {
                return this.ShiftField;
            }
            set {
                if ((this.ShiftField.Equals(value) != true)) {
                    this.ShiftField = value;
                    this.RaisePropertyChanged("Shift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TIN {
            get {
                return this.TINField;
            }
            set {
                if ((object.ReferenceEquals(this.TINField, value) != true)) {
                    this.TINField = value;
                    this.RaisePropertyChanged("TIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxTblID {
            get {
                return this.TaxTblIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxTblIDField, value) != true)) {
                    this.TaxTblIDField = value;
                    this.RaisePropertyChanged("TaxTblID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToPlant {
            get {
                return this.ToPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.ToPlantField, value) != true)) {
                    this.ToPlantField = value;
                    this.RaisePropertyChanged("ToPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferMethod {
            get {
                return this.TransferMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferMethodField, value) != true)) {
                    this.TransferMethodField = value;
                    this.RaisePropertyChanged("TransferMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeIDField, value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AESExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGProductMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGUseGoodMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisCdDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BuyToOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNSpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COASegReferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CSFCJ5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CSFLMWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoPartCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialSize1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialSize2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialSubBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialSubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommodityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommodityCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommodityCodeSuppUnitsUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidatedPurchasingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConstrainedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEDenominationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEInternationalSecuritiesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DEIsInvestmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DEIsSecurityFinancialDerivativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DEIsServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEPayStatCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultDimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiameterInsideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiameterOutsideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiameterUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DiffPrc2PrchUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DupOnJobCrtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurometerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECCNNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDICodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableExpressCheckOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableGlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableGlobalPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableInActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableRevChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableUOMClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineeringAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstimateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstimateOrPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpLicNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpLicTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExtCoExistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExtConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExternalCRMLastSyncField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalCRMPartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalCRMSyncRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAssetClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAssetClassCodeFSAssetClassDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FSSalesUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbTableAllowUpdTrackDimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbTableAllowUpdTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlbTableAllowUpdTrackSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GravityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GrossWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrossWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasOnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazGvrnmtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazPackInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazSubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazTechNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INChapterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISOrigCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ISOrigCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ISSuppUnitsFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternalPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InternalUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCoPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompliantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsComponentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConfiguredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGiftCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRestrictedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSafetyItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkToContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotAppendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotBatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotBeforeDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotCureDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LotDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotExpDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotFirmwareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotHeatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotLeadingZerosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotMfgBatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotMfgDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotMfgLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LotNxtNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotSeqIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LotShelfLifeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotUseGlobalSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LowLevelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MDPVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MobilePartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MtlAnalysisCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlBurRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Mtl_AnalysisCdDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAFTAOrigCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAFTAPrefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAFTAProdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NetVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetVolumeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NetWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextGeneratedLotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OnHoldDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnHoldReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnHoldReasonCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnershipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMObjIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PESUNATTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PESUNATUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PLMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PLMEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartLengthWidthHeightUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartPhotoExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartSpecificPackingUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartsPerContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomBOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricingUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimCostAltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimCostPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimCostRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PurchasingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchasingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QtyBearingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RCOverThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RCUnderThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RcvInspectionReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecDocReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCategoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnableContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevChargeMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RevisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SNLeadingZerosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SNMaskPrefixLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SNMaskSuffixLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SNNumODigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMDispField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchedBcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialMaskMaskTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipDocReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubLevelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SyncToExternalCRMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThicknessMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThicknessUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMClassIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPCCode1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPCCode2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPCCode3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdatePartPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateSNPartPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseHTSDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseMaskSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsePartRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserChar1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserChar2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserChar3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserChar4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UserDate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UserDate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UserDate3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UserDate4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UserDecimal1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UserDecimal2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UserDecimal3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UserDecimal4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserInteger1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserInteger2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCodeWarrDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebInStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebPartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AESExp {
            get {
                return this.AESExpField;
            }
            set {
                if ((object.ReferenceEquals(this.AESExpField, value) != true)) {
                    this.AESExpField = value;
                    this.RaisePropertyChanged("AESExp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGProductMark {
            get {
                return this.AGProductMarkField;
            }
            set {
                if ((this.AGProductMarkField.Equals(value) != true)) {
                    this.AGProductMarkField = value;
                    this.RaisePropertyChanged("AGProductMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGUseGoodMark {
            get {
                return this.AGUseGoodMarkField;
            }
            set {
                if ((this.AGUseGoodMarkField.Equals(value) != true)) {
                    this.AGUseGoodMarkField = value;
                    this.RaisePropertyChanged("AGUseGoodMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisCdDescription {
            get {
                return this.AnalysisCdDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisCdDescriptionField, value) != true)) {
                    this.AnalysisCdDescriptionField = value;
                    this.RaisePropertyChanged("AnalysisCdDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisCode {
            get {
                return this.AnalysisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisCodeField, value) != true)) {
                    this.AnalysisCodeField = value;
                    this.RaisePropertyChanged("AnalysisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasePartNum {
            get {
                return this.BasePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BasePartNumField, value) != true)) {
                    this.BasePartNumField = value;
                    this.RaisePropertyChanged("BasePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BuyToOrder {
            get {
                return this.BuyToOrderField;
            }
            set {
                if ((this.BuyToOrderField.Equals(value) != true)) {
                    this.BuyToOrderField = value;
                    this.RaisePropertyChanged("BuyToOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNSpecification {
            get {
                return this.CNSpecificationField;
            }
            set {
                if ((object.ReferenceEquals(this.CNSpecificationField, value) != true)) {
                    this.CNSpecificationField = value;
                    this.RaisePropertyChanged("CNSpecification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COASegReferences {
            get {
                return this.COASegReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.COASegReferencesField, value) != true)) {
                    this.COASegReferencesField = value;
                    this.RaisePropertyChanged("COASegReferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CSFCJ5 {
            get {
                return this.CSFCJ5Field;
            }
            set {
                if ((this.CSFCJ5Field.Equals(value) != true)) {
                    this.CSFCJ5Field = value;
                    this.RaisePropertyChanged("CSFCJ5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CSFLMW {
            get {
                return this.CSFLMWField;
            }
            set {
                if ((this.CSFLMWField.Equals(value) != true)) {
                    this.CSFLMWField = value;
                    this.RaisePropertyChanged("CSFLMW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassDescription {
            get {
                return this.ClassDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassDescriptionField, value) != true)) {
                    this.ClassDescriptionField = value;
                    this.RaisePropertyChanged("ClassDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassIDField, value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoPartCount {
            get {
                return this.CoPartCountField;
            }
            set {
                if ((this.CoPartCountField.Equals(value) != true)) {
                    this.CoPartCountField = value;
                    this.RaisePropertyChanged("CoPartCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialBrand {
            get {
                return this.CommercialBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialBrandField, value) != true)) {
                    this.CommercialBrandField = value;
                    this.RaisePropertyChanged("CommercialBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialCategory {
            get {
                return this.CommercialCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialCategoryField, value) != true)) {
                    this.CommercialCategoryField = value;
                    this.RaisePropertyChanged("CommercialCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialColor {
            get {
                return this.CommercialColorField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialColorField, value) != true)) {
                    this.CommercialColorField = value;
                    this.RaisePropertyChanged("CommercialColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialSize1 {
            get {
                return this.CommercialSize1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialSize1Field, value) != true)) {
                    this.CommercialSize1Field = value;
                    this.RaisePropertyChanged("CommercialSize1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialSize2 {
            get {
                return this.CommercialSize2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialSize2Field, value) != true)) {
                    this.CommercialSize2Field = value;
                    this.RaisePropertyChanged("CommercialSize2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialStyle {
            get {
                return this.CommercialStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialStyleField, value) != true)) {
                    this.CommercialStyleField = value;
                    this.RaisePropertyChanged("CommercialStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialSubBrand {
            get {
                return this.CommercialSubBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialSubBrandField, value) != true)) {
                    this.CommercialSubBrandField = value;
                    this.RaisePropertyChanged("CommercialSubBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialSubCategory {
            get {
                return this.CommercialSubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialSubCategoryField, value) != true)) {
                    this.CommercialSubCategoryField = value;
                    this.RaisePropertyChanged("CommercialSubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommodityCode {
            get {
                return this.CommodityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommodityCodeField, value) != true)) {
                    this.CommodityCodeField = value;
                    this.RaisePropertyChanged("CommodityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommodityCodeDescription {
            get {
                return this.CommodityCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CommodityCodeDescriptionField, value) != true)) {
                    this.CommodityCodeDescriptionField = value;
                    this.RaisePropertyChanged("CommodityCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommodityCodeSuppUnitsUOM {
            get {
                return this.CommodityCodeSuppUnitsUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.CommodityCodeSuppUnitsUOMField, value) != true)) {
                    this.CommodityCodeSuppUnitsUOMField = value;
                    this.RaisePropertyChanged("CommodityCodeSuppUnitsUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionField, value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidatedPurchasing {
            get {
                return this.ConsolidatedPurchasingField;
            }
            set {
                if ((this.ConsolidatedPurchasingField.Equals(value) != true)) {
                    this.ConsolidatedPurchasingField = value;
                    this.RaisePropertyChanged("ConsolidatedPurchasing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Constrained {
            get {
                return this.ConstrainedField;
            }
            set {
                if ((this.ConstrainedField.Equals(value) != true)) {
                    this.ConstrainedField = value;
                    this.RaisePropertyChanged("Constrained");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostMethod {
            get {
                return this.CostMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.CostMethodField, value) != true)) {
                    this.CostMethodField = value;
                    this.RaisePropertyChanged("CostMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryNumDescription {
            get {
                return this.CountryNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNumDescriptionField, value) != true)) {
                    this.CountryNumDescriptionField = value;
                    this.RaisePropertyChanged("CountryNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEDenomination {
            get {
                return this.DEDenominationField;
            }
            set {
                if ((object.ReferenceEquals(this.DEDenominationField, value) != true)) {
                    this.DEDenominationField = value;
                    this.RaisePropertyChanged("DEDenomination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEInternationalSecuritiesID {
            get {
                return this.DEInternationalSecuritiesIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DEInternationalSecuritiesIDField, value) != true)) {
                    this.DEInternationalSecuritiesIDField = value;
                    this.RaisePropertyChanged("DEInternationalSecuritiesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DEIsInvestment {
            get {
                return this.DEIsInvestmentField;
            }
            set {
                if ((this.DEIsInvestmentField.Equals(value) != true)) {
                    this.DEIsInvestmentField = value;
                    this.RaisePropertyChanged("DEIsInvestment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DEIsSecurityFinancialDerivative {
            get {
                return this.DEIsSecurityFinancialDerivativeField;
            }
            set {
                if ((this.DEIsSecurityFinancialDerivativeField.Equals(value) != true)) {
                    this.DEIsSecurityFinancialDerivativeField = value;
                    this.RaisePropertyChanged("DEIsSecurityFinancialDerivative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DEIsServices {
            get {
                return this.DEIsServicesField;
            }
            set {
                if ((this.DEIsServicesField.Equals(value) != true)) {
                    this.DEIsServicesField = value;
                    this.RaisePropertyChanged("DEIsServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPayStatCode {
            get {
                return this.DEPayStatCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPayStatCodeField, value) != true)) {
                    this.DEPayStatCodeField = value;
                    this.RaisePropertyChanged("DEPayStatCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultDim {
            get {
                return this.DefaultDimField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultDimField, value) != true)) {
                    this.DefaultDimField = value;
                    this.RaisePropertyChanged("DefaultDim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Diameter {
            get {
                return this.DiameterField;
            }
            set {
                if ((this.DiameterField.Equals(value) != true)) {
                    this.DiameterField = value;
                    this.RaisePropertyChanged("Diameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiameterInside {
            get {
                return this.DiameterInsideField;
            }
            set {
                if ((this.DiameterInsideField.Equals(value) != true)) {
                    this.DiameterInsideField = value;
                    this.RaisePropertyChanged("DiameterInside");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiameterOutside {
            get {
                return this.DiameterOutsideField;
            }
            set {
                if ((this.DiameterOutsideField.Equals(value) != true)) {
                    this.DiameterOutsideField = value;
                    this.RaisePropertyChanged("DiameterOutside");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiameterUM {
            get {
                return this.DiameterUMField;
            }
            set {
                if ((object.ReferenceEquals(this.DiameterUMField, value) != true)) {
                    this.DiameterUMField = value;
                    this.RaisePropertyChanged("DiameterUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DiffPrc2PrchUOM {
            get {
                return this.DiffPrc2PrchUOMField;
            }
            set {
                if ((this.DiffPrc2PrchUOMField.Equals(value) != true)) {
                    this.DiffPrc2PrchUOMField = value;
                    this.RaisePropertyChanged("DiffPrc2PrchUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DupOnJobCrt {
            get {
                return this.DupOnJobCrtField;
            }
            set {
                if ((this.DupOnJobCrtField.Equals(value) != true)) {
                    this.DupOnJobCrtField = value;
                    this.RaisePropertyChanged("DupOnJobCrt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Durometer {
            get {
                return this.DurometerField;
            }
            set {
                if ((object.ReferenceEquals(this.DurometerField, value) != true)) {
                    this.DurometerField = value;
                    this.RaisePropertyChanged("Durometer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECCNNumber {
            get {
                return this.ECCNNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ECCNNumberField, value) != true)) {
                    this.ECCNNumberField = value;
                    this.RaisePropertyChanged("ECCNNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDICode {
            get {
                return this.EDICodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EDICodeField, value) != true)) {
                    this.EDICodeField = value;
                    this.RaisePropertyChanged("EDICode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableExpressCheckOut {
            get {
                return this.EnableExpressCheckOutField;
            }
            set {
                if ((this.EnableExpressCheckOutField.Equals(value) != true)) {
                    this.EnableExpressCheckOutField = value;
                    this.RaisePropertyChanged("EnableExpressCheckOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableGlobalLock {
            get {
                return this.EnableGlobalLockField;
            }
            set {
                if ((this.EnableGlobalLockField.Equals(value) != true)) {
                    this.EnableGlobalLockField = value;
                    this.RaisePropertyChanged("EnableGlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableGlobalPart {
            get {
                return this.EnableGlobalPartField;
            }
            set {
                if ((this.EnableGlobalPartField.Equals(value) != true)) {
                    this.EnableGlobalPartField = value;
                    this.RaisePropertyChanged("EnableGlobalPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableIUM {
            get {
                return this.EnableIUMField;
            }
            set {
                if ((this.EnableIUMField.Equals(value) != true)) {
                    this.EnableIUMField = value;
                    this.RaisePropertyChanged("EnableIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableInActive {
            get {
                return this.EnableInActiveField;
            }
            set {
                if ((this.EnableInActiveField.Equals(value) != true)) {
                    this.EnableInActiveField = value;
                    this.RaisePropertyChanged("EnableInActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableRevCharge {
            get {
                return this.EnableRevChargeField;
            }
            set {
                if ((this.EnableRevChargeField.Equals(value) != true)) {
                    this.EnableRevChargeField = value;
                    this.RaisePropertyChanged("EnableRevCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSerialNum {
            get {
                return this.EnableSerialNumField;
            }
            set {
                if ((this.EnableSerialNumField.Equals(value) != true)) {
                    this.EnableSerialNumField = value;
                    this.RaisePropertyChanged("EnableSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTrackSerialNum {
            get {
                return this.EnableTrackSerialNumField;
            }
            set {
                if ((this.EnableTrackSerialNumField.Equals(value) != true)) {
                    this.EnableTrackSerialNumField = value;
                    this.RaisePropertyChanged("EnableTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableUOMClass {
            get {
                return this.EnableUOMClassField;
            }
            set {
                if ((this.EnableUOMClassField.Equals(value) != true)) {
                    this.EnableUOMClassField = value;
                    this.RaisePropertyChanged("EnableUOMClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineeringAlert {
            get {
                return this.EngineeringAlertField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineeringAlertField, value) != true)) {
                    this.EngineeringAlertField = value;
                    this.RaisePropertyChanged("EngineeringAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstimateID {
            get {
                return this.EstimateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EstimateIDField, value) != true)) {
                    this.EstimateIDField = value;
                    this.RaisePropertyChanged("EstimateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstimateOrPlan {
            get {
                return this.EstimateOrPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.EstimateOrPlanField, value) != true)) {
                    this.EstimateOrPlanField = value;
                    this.RaisePropertyChanged("EstimateOrPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpLicNumber {
            get {
                return this.ExpLicNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpLicNumberField, value) != true)) {
                    this.ExpLicNumberField = value;
                    this.RaisePropertyChanged("ExpLicNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpLicType {
            get {
                return this.ExpLicTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpLicTypeField, value) != true)) {
                    this.ExpLicTypeField = value;
                    this.RaisePropertyChanged("ExpLicType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExtCoExist {
            get {
                return this.ExtCoExistField;
            }
            set {
                if ((this.ExtCoExistField.Equals(value) != true)) {
                    this.ExtCoExistField = value;
                    this.RaisePropertyChanged("ExtCoExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExtConfig {
            get {
                return this.ExtConfigField;
            }
            set {
                if ((this.ExtConfigField.Equals(value) != true)) {
                    this.ExtConfigField = value;
                    this.RaisePropertyChanged("ExtConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExternalCRMLastSync {
            get {
                return this.ExternalCRMLastSyncField;
            }
            set {
                if ((this.ExternalCRMLastSyncField.Equals(value) != true)) {
                    this.ExternalCRMLastSyncField = value;
                    this.RaisePropertyChanged("ExternalCRMLastSync");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalCRMPartID {
            get {
                return this.ExternalCRMPartIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalCRMPartIDField, value) != true)) {
                    this.ExternalCRMPartIDField = value;
                    this.RaisePropertyChanged("ExternalCRMPartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalCRMSyncRequired {
            get {
                return this.ExternalCRMSyncRequiredField;
            }
            set {
                if ((this.ExternalCRMSyncRequiredField.Equals(value) != true)) {
                    this.ExternalCRMSyncRequiredField = value;
                    this.RaisePropertyChanged("ExternalCRMSyncRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAssetClassCode {
            get {
                return this.FSAssetClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAssetClassCodeField, value) != true)) {
                    this.FSAssetClassCodeField = value;
                    this.RaisePropertyChanged("FSAssetClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAssetClassCodeFSAssetClassDesc {
            get {
                return this.FSAssetClassCodeFSAssetClassDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAssetClassCodeFSAssetClassDescField, value) != true)) {
                    this.FSAssetClassCodeFSAssetClassDescField = value;
                    this.RaisePropertyChanged("FSAssetClassCodeFSAssetClassDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSPricePerCode {
            get {
                return this.FSPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FSPricePerCodeField, value) != true)) {
                    this.FSPricePerCodeField = value;
                    this.RaisePropertyChanged("FSPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FSSalesUnitPrice {
            get {
                return this.FSSalesUnitPriceField;
            }
            set {
                if ((this.FSSalesUnitPriceField.Equals(value) != true)) {
                    this.FSSalesUnitPriceField = value;
                    this.RaisePropertyChanged("FSSalesUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbFlag {
            get {
                return this.GlbFlagField;
            }
            set {
                if ((this.GlbFlagField.Equals(value) != true)) {
                    this.GlbFlagField = value;
                    this.RaisePropertyChanged("GlbFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbLink {
            get {
                return this.GlbLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbLinkField, value) != true)) {
                    this.GlbLinkField = value;
                    this.RaisePropertyChanged("GlbLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbTableAllowUpdTrackDim {
            get {
                return this.GlbTableAllowUpdTrackDimField;
            }
            set {
                if ((this.GlbTableAllowUpdTrackDimField.Equals(value) != true)) {
                    this.GlbTableAllowUpdTrackDimField = value;
                    this.RaisePropertyChanged("GlbTableAllowUpdTrackDim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbTableAllowUpdTrackLots {
            get {
                return this.GlbTableAllowUpdTrackLotsField;
            }
            set {
                if ((this.GlbTableAllowUpdTrackLotsField.Equals(value) != true)) {
                    this.GlbTableAllowUpdTrackLotsField = value;
                    this.RaisePropertyChanged("GlbTableAllowUpdTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlbTableAllowUpdTrackSerial {
            get {
                return this.GlbTableAllowUpdTrackSerialField;
            }
            set {
                if ((this.GlbTableAllowUpdTrackSerialField.Equals(value) != true)) {
                    this.GlbTableAllowUpdTrackSerialField = value;
                    this.RaisePropertyChanged("GlbTableAllowUpdTrackSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalPart {
            get {
                return this.GlobalPartField;
            }
            set {
                if ((this.GlobalPartField.Equals(value) != true)) {
                    this.GlobalPartField = value;
                    this.RaisePropertyChanged("GlobalPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Gravity {
            get {
                return this.GravityField;
            }
            set {
                if ((this.GravityField.Equals(value) != true)) {
                    this.GravityField = value;
                    this.RaisePropertyChanged("Gravity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GrossWeight {
            get {
                return this.GrossWeightField;
            }
            set {
                if ((this.GrossWeightField.Equals(value) != true)) {
                    this.GrossWeightField = value;
                    this.RaisePropertyChanged("GrossWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrossWeightUOM {
            get {
                return this.GrossWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.GrossWeightUOMField, value) != true)) {
                    this.GrossWeightUOMField = value;
                    this.RaisePropertyChanged("GrossWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HTS {
            get {
                return this.HTSField;
            }
            set {
                if ((object.ReferenceEquals(this.HTSField, value) != true)) {
                    this.HTSField = value;
                    this.RaisePropertyChanged("HTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasOnHandQty {
            get {
                return this.HasOnHandQtyField;
            }
            set {
                if ((this.HasOnHandQtyField.Equals(value) != true)) {
                    this.HasOnHandQtyField = value;
                    this.RaisePropertyChanged("HasOnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazClass {
            get {
                return this.HazClassField;
            }
            set {
                if ((object.ReferenceEquals(this.HazClassField, value) != true)) {
                    this.HazClassField = value;
                    this.RaisePropertyChanged("HazClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazGvrnmtID {
            get {
                return this.HazGvrnmtIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HazGvrnmtIDField, value) != true)) {
                    this.HazGvrnmtIDField = value;
                    this.RaisePropertyChanged("HazGvrnmtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HazItem {
            get {
                return this.HazItemField;
            }
            set {
                if ((this.HazItemField.Equals(value) != true)) {
                    this.HazItemField = value;
                    this.RaisePropertyChanged("HazItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazPackInstr {
            get {
                return this.HazPackInstrField;
            }
            set {
                if ((object.ReferenceEquals(this.HazPackInstrField, value) != true)) {
                    this.HazPackInstrField = value;
                    this.RaisePropertyChanged("HazPackInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazSub {
            get {
                return this.HazSubField;
            }
            set {
                if ((object.ReferenceEquals(this.HazSubField, value) != true)) {
                    this.HazSubField = value;
                    this.RaisePropertyChanged("HazSub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazTechName {
            get {
                return this.HazTechNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HazTechNameField, value) != true)) {
                    this.HazTechNameField = value;
                    this.RaisePropertyChanged("HazTechName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INChapterID {
            get {
                return this.INChapterIDField;
            }
            set {
                if ((object.ReferenceEquals(this.INChapterIDField, value) != true)) {
                    this.INChapterIDField = value;
                    this.RaisePropertyChanged("INChapterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISOrigCountry {
            get {
                return this.ISOrigCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ISOrigCountryField, value) != true)) {
                    this.ISOrigCountryField = value;
                    this.RaisePropertyChanged("ISOrigCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ISOrigCountryNum {
            get {
                return this.ISOrigCountryNumField;
            }
            set {
                if ((this.ISOrigCountryNumField.Equals(value) != true)) {
                    this.ISOrigCountryNumField = value;
                    this.RaisePropertyChanged("ISOrigCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISRegion {
            get {
                return this.ISRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.ISRegionField, value) != true)) {
                    this.ISRegionField = value;
                    this.RaisePropertyChanged("ISRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ISSuppUnitsFactor {
            get {
                return this.ISSuppUnitsFactorField;
            }
            set {
                if ((this.ISSuppUnitsFactorField.Equals(value) != true)) {
                    this.ISSuppUnitsFactorField = value;
                    this.RaisePropertyChanged("ISSuppUnitsFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFileName {
            get {
                return this.ImageFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFileNameField, value) != true)) {
                    this.ImageFileNameField = value;
                    this.RaisePropertyChanged("ImageFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageID {
            get {
                return this.ImageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageIDField, value) != true)) {
                    this.ImageIDField = value;
                    this.RaisePropertyChanged("ImageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InActive {
            get {
                return this.InActiveField;
            }
            set {
                if ((this.InActiveField.Equals(value) != true)) {
                    this.InActiveField = value;
                    this.RaisePropertyChanged("InActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalPricePerCode {
            get {
                return this.InternalPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalPricePerCodeField, value) != true)) {
                    this.InternalPricePerCodeField = value;
                    this.RaisePropertyChanged("InternalPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InternalUnitPrice {
            get {
                return this.InternalUnitPriceField;
            }
            set {
                if ((this.InternalUnitPriceField.Equals(value) != true)) {
                    this.InternalUnitPriceField = value;
                    this.RaisePropertyChanged("InternalUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCoPart {
            get {
                return this.IsCoPartField;
            }
            set {
                if ((this.IsCoPartField.Equals(value) != true)) {
                    this.IsCoPartField = value;
                    this.RaisePropertyChanged("IsCoPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCompliant {
            get {
                return this.IsCompliantField;
            }
            set {
                if ((this.IsCompliantField.Equals(value) != true)) {
                    this.IsCompliantField = value;
                    this.RaisePropertyChanged("IsCompliant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsComponent {
            get {
                return this.IsComponentField;
            }
            set {
                if ((this.IsComponentField.Equals(value) != true)) {
                    this.IsComponentField = value;
                    this.RaisePropertyChanged("IsComponent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConfigured {
            get {
                return this.IsConfiguredField;
            }
            set {
                if ((this.IsConfiguredField.Equals(value) != true)) {
                    this.IsConfiguredField = value;
                    this.RaisePropertyChanged("IsConfigured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGiftCard {
            get {
                return this.IsGiftCardField;
            }
            set {
                if ((this.IsGiftCardField.Equals(value) != true)) {
                    this.IsGiftCardField = value;
                    this.RaisePropertyChanged("IsGiftCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRestricted {
            get {
                return this.IsRestrictedField;
            }
            set {
                if ((this.IsRestrictedField.Equals(value) != true)) {
                    this.IsRestrictedField = value;
                    this.RaisePropertyChanged("IsRestricted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSafetyItem {
            get {
                return this.IsSafetyItemField;
            }
            set {
                if ((this.IsSafetyItemField.Equals(value) != true)) {
                    this.IsSafetyItemField = value;
                    this.RaisePropertyChanged("IsSafetyItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkToContract {
            get {
                return this.LinkToContractField;
            }
            set {
                if ((this.LinkToContractField.Equals(value) != true)) {
                    this.LinkToContractField = value;
                    this.RaisePropertyChanged("LinkToContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotAppendDate {
            get {
                return this.LotAppendDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LotAppendDateField, value) != true)) {
                    this.LotAppendDateField = value;
                    this.RaisePropertyChanged("LotAppendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotBatch {
            get {
                return this.LotBatchField;
            }
            set {
                if ((this.LotBatchField.Equals(value) != true)) {
                    this.LotBatchField = value;
                    this.RaisePropertyChanged("LotBatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotBeforeDt {
            get {
                return this.LotBeforeDtField;
            }
            set {
                if ((this.LotBeforeDtField.Equals(value) != true)) {
                    this.LotBeforeDtField = value;
                    this.RaisePropertyChanged("LotBeforeDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotCureDt {
            get {
                return this.LotCureDtField;
            }
            set {
                if ((this.LotCureDtField.Equals(value) != true)) {
                    this.LotCureDtField = value;
                    this.RaisePropertyChanged("LotCureDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LotDigits {
            get {
                return this.LotDigitsField;
            }
            set {
                if ((this.LotDigitsField.Equals(value) != true)) {
                    this.LotDigitsField = value;
                    this.RaisePropertyChanged("LotDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotExpDt {
            get {
                return this.LotExpDtField;
            }
            set {
                if ((this.LotExpDtField.Equals(value) != true)) {
                    this.LotExpDtField = value;
                    this.RaisePropertyChanged("LotExpDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotFirmware {
            get {
                return this.LotFirmwareField;
            }
            set {
                if ((this.LotFirmwareField.Equals(value) != true)) {
                    this.LotFirmwareField = value;
                    this.RaisePropertyChanged("LotFirmware");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotHeat {
            get {
                return this.LotHeatField;
            }
            set {
                if ((this.LotHeatField.Equals(value) != true)) {
                    this.LotHeatField = value;
                    this.RaisePropertyChanged("LotHeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotLeadingZeros {
            get {
                return this.LotLeadingZerosField;
            }
            set {
                if ((this.LotLeadingZerosField.Equals(value) != true)) {
                    this.LotLeadingZerosField = value;
                    this.RaisePropertyChanged("LotLeadingZeros");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotMfgBatch {
            get {
                return this.LotMfgBatchField;
            }
            set {
                if ((this.LotMfgBatchField.Equals(value) != true)) {
                    this.LotMfgBatchField = value;
                    this.RaisePropertyChanged("LotMfgBatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotMfgDt {
            get {
                return this.LotMfgDtField;
            }
            set {
                if ((this.LotMfgDtField.Equals(value) != true)) {
                    this.LotMfgDtField = value;
                    this.RaisePropertyChanged("LotMfgDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotMfgLot {
            get {
                return this.LotMfgLotField;
            }
            set {
                if ((this.LotMfgLotField.Equals(value) != true)) {
                    this.LotMfgLotField = value;
                    this.RaisePropertyChanged("LotMfgLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LotNxtNum {
            get {
                return this.LotNxtNumField;
            }
            set {
                if ((this.LotNxtNumField.Equals(value) != true)) {
                    this.LotNxtNumField = value;
                    this.RaisePropertyChanged("LotNxtNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotPrefix {
            get {
                return this.LotPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.LotPrefixField, value) != true)) {
                    this.LotPrefixField = value;
                    this.RaisePropertyChanged("LotPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotSeqID {
            get {
                return this.LotSeqIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LotSeqIDField, value) != true)) {
                    this.LotSeqIDField = value;
                    this.RaisePropertyChanged("LotSeqID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LotShelfLife {
            get {
                return this.LotShelfLifeField;
            }
            set {
                if ((this.LotShelfLifeField.Equals(value) != true)) {
                    this.LotShelfLifeField = value;
                    this.RaisePropertyChanged("LotShelfLife");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotUseGlobalSeq {
            get {
                return this.LotUseGlobalSeqField;
            }
            set {
                if ((this.LotUseGlobalSeqField.Equals(value) != true)) {
                    this.LotUseGlobalSeqField = value;
                    this.RaisePropertyChanged("LotUseGlobalSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LowLevelCode {
            get {
                return this.LowLevelCodeField;
            }
            set {
                if ((this.LowLevelCodeField.Equals(value) != true)) {
                    this.LowLevelCodeField = value;
                    this.RaisePropertyChanged("LowLevelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MDPV {
            get {
                return this.MDPVField;
            }
            set {
                if ((this.MDPVField.Equals(value) != true)) {
                    this.MDPVField = value;
                    this.RaisePropertyChanged("MDPV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Method {
            get {
                return this.MethodField;
            }
            set {
                if ((this.MethodField.Equals(value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgComment {
            get {
                return this.MfgCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgCommentField, value) != true)) {
                    this.MfgCommentField = value;
                    this.RaisePropertyChanged("MfgComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MobilePart {
            get {
                return this.MobilePartField;
            }
            set {
                if ((this.MobilePartField.Equals(value) != true)) {
                    this.MobilePartField = value;
                    this.RaisePropertyChanged("MobilePart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MtlAnalysisCode {
            get {
                return this.MtlAnalysisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MtlAnalysisCodeField, value) != true)) {
                    this.MtlAnalysisCodeField = value;
                    this.RaisePropertyChanged("MtlAnalysisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlBurRate {
            get {
                return this.MtlBurRateField;
            }
            set {
                if ((this.MtlBurRateField.Equals(value) != true)) {
                    this.MtlBurRateField = value;
                    this.RaisePropertyChanged("MtlBurRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mtl_AnalysisCdDescription {
            get {
                return this.Mtl_AnalysisCdDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Mtl_AnalysisCdDescriptionField, value) != true)) {
                    this.Mtl_AnalysisCdDescriptionField = value;
                    this.RaisePropertyChanged("Mtl_AnalysisCdDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAFTAOrigCountry {
            get {
                return this.NAFTAOrigCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.NAFTAOrigCountryField, value) != true)) {
                    this.NAFTAOrigCountryField = value;
                    this.RaisePropertyChanged("NAFTAOrigCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAFTAPref {
            get {
                return this.NAFTAPrefField;
            }
            set {
                if ((object.ReferenceEquals(this.NAFTAPrefField, value) != true)) {
                    this.NAFTAPrefField = value;
                    this.RaisePropertyChanged("NAFTAPref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAFTAProd {
            get {
                return this.NAFTAProdField;
            }
            set {
                if ((object.ReferenceEquals(this.NAFTAProdField, value) != true)) {
                    this.NAFTAProdField = value;
                    this.RaisePropertyChanged("NAFTAProd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NetVolume {
            get {
                return this.NetVolumeField;
            }
            set {
                if ((this.NetVolumeField.Equals(value) != true)) {
                    this.NetVolumeField = value;
                    this.RaisePropertyChanged("NetVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetVolumeUOM {
            get {
                return this.NetVolumeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.NetVolumeUOMField, value) != true)) {
                    this.NetVolumeUOMField = value;
                    this.RaisePropertyChanged("NetVolumeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NetWeight {
            get {
                return this.NetWeightField;
            }
            set {
                if ((this.NetWeightField.Equals(value) != true)) {
                    this.NetWeightField = value;
                    this.RaisePropertyChanged("NetWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetWeightUOM {
            get {
                return this.NetWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.NetWeightUOMField, value) != true)) {
                    this.NetWeightUOMField = value;
                    this.RaisePropertyChanged("NetWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextGeneratedLotNum {
            get {
                return this.NextGeneratedLotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.NextGeneratedLotNumField, value) != true)) {
                    this.NextGeneratedLotNumField = value;
                    this.RaisePropertyChanged("NextGeneratedLotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStock {
            get {
                return this.NonStockField;
            }
            set {
                if ((this.NonStockField.Equals(value) != true)) {
                    this.NonStockField = value;
                    this.RaisePropertyChanged("NonStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnHold {
            get {
                return this.OnHoldField;
            }
            set {
                if ((this.OnHoldField.Equals(value) != true)) {
                    this.OnHoldField = value;
                    this.RaisePropertyChanged("OnHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OnHoldDate {
            get {
                return this.OnHoldDateField;
            }
            set {
                if ((this.OnHoldDateField.Equals(value) != true)) {
                    this.OnHoldDateField = value;
                    this.RaisePropertyChanged("OnHoldDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnHoldReasonCode {
            get {
                return this.OnHoldReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OnHoldReasonCodeField, value) != true)) {
                    this.OnHoldReasonCodeField = value;
                    this.RaisePropertyChanged("OnHoldReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnHoldReasonCodeDescription {
            get {
                return this.OnHoldReasonCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OnHoldReasonCodeDescriptionField, value) != true)) {
                    this.OnHoldReasonCodeDescriptionField = value;
                    this.RaisePropertyChanged("OnHoldReasonCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnershipStatus {
            get {
                return this.OwnershipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnershipStatusField, value) != true)) {
                    this.OwnershipStatusField = value;
                    this.RaisePropertyChanged("OwnershipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMObjID {
            get {
                return this.PDMObjIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMObjIDField, value) != true)) {
                    this.PDMObjIDField = value;
                    this.RaisePropertyChanged("PDMObjID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PESUNATType {
            get {
                return this.PESUNATTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PESUNATTypeField, value) != true)) {
                    this.PESUNATTypeField = value;
                    this.RaisePropertyChanged("PESUNATType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PESUNATUOM {
            get {
                return this.PESUNATUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PESUNATUOMField, value) != true)) {
                    this.PESUNATUOMField = value;
                    this.RaisePropertyChanged("PESUNATUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PLM {
            get {
                return this.PLMField;
            }
            set {
                if ((this.PLMField.Equals(value) != true)) {
                    this.PLMField = value;
                    this.RaisePropertyChanged("PLM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PLMEnabled {
            get {
                return this.PLMEnabledField;
            }
            set {
                if ((this.PLMEnabledField.Equals(value) != true)) {
                    this.PLMEnabledField = value;
                    this.RaisePropertyChanged("PLMEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartHeight {
            get {
                return this.PartHeightField;
            }
            set {
                if ((this.PartHeightField.Equals(value) != true)) {
                    this.PartHeightField = value;
                    this.RaisePropertyChanged("PartHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartLength {
            get {
                return this.PartLengthField;
            }
            set {
                if ((this.PartLengthField.Equals(value) != true)) {
                    this.PartLengthField = value;
                    this.RaisePropertyChanged("PartLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartLengthWidthHeightUM {
            get {
                return this.PartLengthWidthHeightUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartLengthWidthHeightUMField, value) != true)) {
                    this.PartLengthWidthHeightUMField = value;
                    this.RaisePropertyChanged("PartLengthWidthHeightUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartPhotoExists {
            get {
                return this.PartPhotoExistsField;
            }
            set {
                if ((this.PartPhotoExistsField.Equals(value) != true)) {
                    this.PartPhotoExistsField = value;
                    this.RaisePropertyChanged("PartPhotoExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartSpecificPackingUOM {
            get {
                return this.PartSpecificPackingUOMField;
            }
            set {
                if ((this.PartSpecificPackingUOMField.Equals(value) != true)) {
                    this.PartSpecificPackingUOMField = value;
                    this.RaisePropertyChanged("PartSpecificPackingUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartWidth {
            get {
                return this.PartWidthField;
            }
            set {
                if ((this.PartWidthField.Equals(value) != true)) {
                    this.PartWidthField = value;
                    this.RaisePropertyChanged("PartWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartsPerContainer {
            get {
                return this.PartsPerContainerField;
            }
            set {
                if ((this.PartsPerContainerField.Equals(value) != true)) {
                    this.PartsPerContainerField = value;
                    this.RaisePropertyChanged("PartsPerContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomBOM {
            get {
                return this.PhantomBOMField;
            }
            set {
                if ((this.PhantomBOMField.Equals(value) != true)) {
                    this.PhantomBOMField = value;
                    this.RaisePropertyChanged("PhantomBOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoFile {
            get {
                return this.PhotoFileField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFileField, value) != true)) {
                    this.PhotoFileField = value;
                    this.RaisePropertyChanged("PhotoFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricePerCode {
            get {
                return this.PricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PricePerCodeField, value) != true)) {
                    this.PricePerCodeField = value;
                    this.RaisePropertyChanged("PricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricingFactor {
            get {
                return this.PricingFactorField;
            }
            set {
                if ((this.PricingFactorField.Equals(value) != true)) {
                    this.PricingFactorField = value;
                    this.RaisePropertyChanged("PricingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricingUOM {
            get {
                return this.PricingUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PricingUOMField, value) != true)) {
                    this.PricingUOMField = value;
                    this.RaisePropertyChanged("PricingUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimCostAltMethod {
            get {
                return this.PrimCostAltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimCostAltMethodField, value) != true)) {
                    this.PrimCostAltMethodField = value;
                    this.RaisePropertyChanged("PrimCostAltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimCostPart {
            get {
                return this.PrimCostPartField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimCostPartField, value) != true)) {
                    this.PrimCostPartField = value;
                    this.RaisePropertyChanged("PrimCostPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimCostRev {
            get {
                return this.PrimCostRevField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimCostRevField, value) != true)) {
                    this.PrimCostRevField = value;
                    this.RaisePropertyChanged("PrimCostRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCodeDescription {
            get {
                return this.ProdCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeDescriptionField, value) != true)) {
                    this.ProdCodeDescriptionField = value;
                    this.RaisePropertyChanged("ProdCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurComment {
            get {
                return this.PurCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.PurCommentField, value) != true)) {
                    this.PurCommentField = value;
                    this.RaisePropertyChanged("PurComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PurchasingFactor {
            get {
                return this.PurchasingFactorField;
            }
            set {
                if ((this.PurchasingFactorField.Equals(value) != true)) {
                    this.PurchasingFactorField = value;
                    this.RaisePropertyChanged("PurchasingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchasingFactorDirection {
            get {
                return this.PurchasingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchasingFactorDirectionField, value) != true)) {
                    this.PurchasingFactorDirectionField = value;
                    this.RaisePropertyChanged("PurchasingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QtyBearing {
            get {
                return this.QtyBearingField;
            }
            set {
                if ((this.QtyBearingField.Equals(value) != true)) {
                    this.QtyBearingField = value;
                    this.RaisePropertyChanged("QtyBearing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RCOverThreshold {
            get {
                return this.RCOverThresholdField;
            }
            set {
                if ((this.RCOverThresholdField.Equals(value) != true)) {
                    this.RCOverThresholdField = value;
                    this.RaisePropertyChanged("RCOverThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RCUnderThreshold {
            get {
                return this.RCUnderThresholdField;
            }
            set {
                if ((this.RCUnderThresholdField.Equals(value) != true)) {
                    this.RCUnderThresholdField = value;
                    this.RaisePropertyChanged("RCUnderThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RcvInspectionReq {
            get {
                return this.RcvInspectionReqField;
            }
            set {
                if ((this.RcvInspectionReqField.Equals(value) != true)) {
                    this.RcvInspectionReqField = value;
                    this.RaisePropertyChanged("RcvInspectionReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecDocReq {
            get {
                return this.RecDocReqField;
            }
            set {
                if ((this.RecDocReqField.Equals(value) != true)) {
                    this.RecDocReqField = value;
                    this.RaisePropertyChanged("RecDocReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCategory {
            get {
                return this.RefCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCategoryField, value) != true)) {
                    this.RefCategoryField = value;
                    this.RaisePropertyChanged("RefCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCategoryDescription {
            get {
                return this.RefCategoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCategoryDescriptionField, value) != true)) {
                    this.RefCategoryDescriptionField = value;
                    this.RaisePropertyChanged("RefCategoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnableContainer {
            get {
                return this.ReturnableContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnableContainerField, value) != true)) {
                    this.ReturnableContainerField = value;
                    this.RaisePropertyChanged("ReturnableContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevChargeMethod {
            get {
                return this.RevChargeMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.RevChargeMethodField, value) != true)) {
                    this.RevChargeMethodField = value;
                    this.RaisePropertyChanged("RevChargeMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Revision {
            get {
                return this.RevisionField;
            }
            set {
                if ((this.RevisionField.Equals(value) != true)) {
                    this.RevisionField = value;
                    this.RaisePropertyChanged("Revision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RunOut {
            get {
                return this.RunOutField;
            }
            set {
                if ((this.RunOutField.Equals(value) != true)) {
                    this.RunOutField = value;
                    this.RaisePropertyChanged("RunOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SNLeadingZeros {
            get {
                return this.SNLeadingZerosField;
            }
            set {
                if ((this.SNLeadingZerosField.Equals(value) != true)) {
                    this.SNLeadingZerosField = value;
                    this.RaisePropertyChanged("SNLeadingZeros");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskExample {
            get {
                return this.SNMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskExampleField, value) != true)) {
                    this.SNMaskExampleField = value;
                    this.RaisePropertyChanged("SNMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SNMaskPrefixLength {
            get {
                return this.SNMaskPrefixLengthField;
            }
            set {
                if ((this.SNMaskPrefixLengthField.Equals(value) != true)) {
                    this.SNMaskPrefixLengthField = value;
                    this.RaisePropertyChanged("SNMaskPrefixLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SNMaskSuffixLength {
            get {
                return this.SNMaskSuffixLengthField;
            }
            set {
                if ((this.SNMaskSuffixLengthField.Equals(value) != true)) {
                    this.SNMaskSuffixLengthField = value;
                    this.RaisePropertyChanged("SNMaskSuffixLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SNNumODigits {
            get {
                return this.SNNumODigitsField;
            }
            set {
                if ((this.SNNumODigitsField.Equals(value) != true)) {
                    this.SNNumODigitsField = value;
                    this.RaisePropertyChanged("SNNumODigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUMDisp {
            get {
                return this.SalesUMDispField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMDispField, value) != true)) {
                    this.SalesUMDispField = value;
                    this.RaisePropertyChanged("SalesUMDisp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchedBcode {
            get {
                return this.SchedBcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SchedBcodeField, value) != true)) {
                    this.SchedBcodeField = value;
                    this.RaisePropertyChanged("SchedBcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchWord {
            get {
                return this.SearchWordField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchWordField, value) != true)) {
                    this.SearchWordField = value;
                    this.RaisePropertyChanged("SearchWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingFactor {
            get {
                return this.SellingFactorField;
            }
            set {
                if ((this.SellingFactorField.Equals(value) != true)) {
                    this.SellingFactorField = value;
                    this.RaisePropertyChanged("SellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingFactorDirection {
            get {
                return this.SellingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingFactorDirectionField, value) != true)) {
                    this.SellingFactorDirectionField = value;
                    this.RaisePropertyChanged("SellingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskDescription {
            get {
                return this.SerialMaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskDescriptionField, value) != true)) {
                    this.SerialMaskDescriptionField = value;
                    this.RaisePropertyChanged("SerialMaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialMaskMaskType {
            get {
                return this.SerialMaskMaskTypeField;
            }
            set {
                if ((this.SerialMaskMaskTypeField.Equals(value) != true)) {
                    this.SerialMaskMaskTypeField = value;
                    this.RaisePropertyChanged("SerialMaskMaskType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipDocReq {
            get {
                return this.ShipDocReqField;
            }
            set {
                if ((this.ShipDocReqField.Equals(value) != true)) {
                    this.ShipDocReqField = value;
                    this.RaisePropertyChanged("ShipDocReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specification {
            get {
                return this.SpecificationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificationField, value) != true)) {
                    this.SpecificationField = value;
                    this.RaisePropertyChanged("Specification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubLevelCode {
            get {
                return this.SubLevelCodeField;
            }
            set {
                if ((this.SubLevelCodeField.Equals(value) != true)) {
                    this.SubLevelCodeField = value;
                    this.RaisePropertyChanged("SubLevelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPart {
            get {
                return this.SubPartField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartField, value) != true)) {
                    this.SubPartField = value;
                    this.RaisePropertyChanged("SubPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SyncToExternalCRM {
            get {
                return this.SyncToExternalCRMField;
            }
            set {
                if ((this.SyncToExternalCRMField.Equals(value) != true)) {
                    this.SyncToExternalCRMField = value;
                    this.RaisePropertyChanged("SyncToExternalCRM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatIDDescription {
            get {
                return this.TaxCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDDescriptionField, value) != true)) {
                    this.TaxCatIDDescriptionField = value;
                    this.RaisePropertyChanged("TaxCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThicknessMax {
            get {
                return this.ThicknessMaxField;
            }
            set {
                if ((this.ThicknessMaxField.Equals(value) != true)) {
                    this.ThicknessMaxField = value;
                    this.RaisePropertyChanged("ThicknessMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThicknessUM {
            get {
                return this.ThicknessUMField;
            }
            set {
                if ((object.ReferenceEquals(this.ThicknessUMField, value) != true)) {
                    this.ThicknessUMField = value;
                    this.RaisePropertyChanged("ThicknessUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackDimension {
            get {
                return this.TrackDimensionField;
            }
            set {
                if ((this.TrackDimensionField.Equals(value) != true)) {
                    this.TrackDimensionField = value;
                    this.RaisePropertyChanged("TrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackLots {
            get {
                return this.TrackLotsField;
            }
            set {
                if ((this.TrackLotsField.Equals(value) != true)) {
                    this.TrackLotsField = value;
                    this.RaisePropertyChanged("TrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackSerialNum {
            get {
                return this.TrackSerialNumField;
            }
            set {
                if ((this.TrackSerialNumField.Equals(value) != true)) {
                    this.TrackSerialNumField = value;
                    this.RaisePropertyChanged("TrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOMClassID {
            get {
                return this.UOMClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMClassIDField, value) != true)) {
                    this.UOMClassIDField = value;
                    this.RaisePropertyChanged("UOMClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOMClassIDDescription {
            get {
                return this.UOMClassIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMClassIDDescriptionField, value) != true)) {
                    this.UOMClassIDDescriptionField = value;
                    this.RaisePropertyChanged("UOMClassIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPCCode1 {
            get {
                return this.UPCCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UPCCode1Field, value) != true)) {
                    this.UPCCode1Field = value;
                    this.RaisePropertyChanged("UPCCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPCCode2 {
            get {
                return this.UPCCode2Field;
            }
            set {
                if ((object.ReferenceEquals(this.UPCCode2Field, value) != true)) {
                    this.UPCCode2Field = value;
                    this.RaisePropertyChanged("UPCCode2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPCCode3 {
            get {
                return this.UPCCode3Field;
            }
            set {
                if ((object.ReferenceEquals(this.UPCCode3Field, value) != true)) {
                    this.UPCCode3Field = value;
                    this.RaisePropertyChanged("UPCCode3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatePartPlant {
            get {
                return this.UpdatePartPlantField;
            }
            set {
                if ((this.UpdatePartPlantField.Equals(value) != true)) {
                    this.UpdatePartPlantField = value;
                    this.RaisePropertyChanged("UpdatePartPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateSNPartPlant {
            get {
                return this.UpdateSNPartPlantField;
            }
            set {
                if ((this.UpdateSNPartPlantField.Equals(value) != true)) {
                    this.UpdateSNPartPlantField = value;
                    this.RaisePropertyChanged("UpdateSNPartPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseHTSDesc {
            get {
                return this.UseHTSDescField;
            }
            set {
                if ((this.UseHTSDescField.Equals(value) != true)) {
                    this.UseHTSDescField = value;
                    this.RaisePropertyChanged("UseHTSDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseMaskSeq {
            get {
                return this.UseMaskSeqField;
            }
            set {
                if ((this.UseMaskSeqField.Equals(value) != true)) {
                    this.UseMaskSeqField = value;
                    this.RaisePropertyChanged("UseMaskSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsePartRev {
            get {
                return this.UsePartRevField;
            }
            set {
                if ((this.UsePartRevField.Equals(value) != true)) {
                    this.UsePartRevField = value;
                    this.RaisePropertyChanged("UsePartRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserChar1 {
            get {
                return this.UserChar1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserChar1Field, value) != true)) {
                    this.UserChar1Field = value;
                    this.RaisePropertyChanged("UserChar1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserChar2 {
            get {
                return this.UserChar2Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserChar2Field, value) != true)) {
                    this.UserChar2Field = value;
                    this.RaisePropertyChanged("UserChar2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserChar3 {
            get {
                return this.UserChar3Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserChar3Field, value) != true)) {
                    this.UserChar3Field = value;
                    this.RaisePropertyChanged("UserChar3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserChar4 {
            get {
                return this.UserChar4Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserChar4Field, value) != true)) {
                    this.UserChar4Field = value;
                    this.RaisePropertyChanged("UserChar4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UserDate1 {
            get {
                return this.UserDate1Field;
            }
            set {
                if ((this.UserDate1Field.Equals(value) != true)) {
                    this.UserDate1Field = value;
                    this.RaisePropertyChanged("UserDate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UserDate2 {
            get {
                return this.UserDate2Field;
            }
            set {
                if ((this.UserDate2Field.Equals(value) != true)) {
                    this.UserDate2Field = value;
                    this.RaisePropertyChanged("UserDate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UserDate3 {
            get {
                return this.UserDate3Field;
            }
            set {
                if ((this.UserDate3Field.Equals(value) != true)) {
                    this.UserDate3Field = value;
                    this.RaisePropertyChanged("UserDate3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UserDate4 {
            get {
                return this.UserDate4Field;
            }
            set {
                if ((this.UserDate4Field.Equals(value) != true)) {
                    this.UserDate4Field = value;
                    this.RaisePropertyChanged("UserDate4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserDecimal1 {
            get {
                return this.UserDecimal1Field;
            }
            set {
                if ((this.UserDecimal1Field.Equals(value) != true)) {
                    this.UserDecimal1Field = value;
                    this.RaisePropertyChanged("UserDecimal1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserDecimal2 {
            get {
                return this.UserDecimal2Field;
            }
            set {
                if ((this.UserDecimal2Field.Equals(value) != true)) {
                    this.UserDecimal2Field = value;
                    this.RaisePropertyChanged("UserDecimal2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserDecimal3 {
            get {
                return this.UserDecimal3Field;
            }
            set {
                if ((this.UserDecimal3Field.Equals(value) != true)) {
                    this.UserDecimal3Field = value;
                    this.RaisePropertyChanged("UserDecimal3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserDecimal4 {
            get {
                return this.UserDecimal4Field;
            }
            set {
                if ((this.UserDecimal4Field.Equals(value) != true)) {
                    this.UserDecimal4Field = value;
                    this.RaisePropertyChanged("UserDecimal4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserInteger1 {
            get {
                return this.UserInteger1Field;
            }
            set {
                if ((this.UserInteger1Field.Equals(value) != true)) {
                    this.UserInteger1Field = value;
                    this.RaisePropertyChanged("UserInteger1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserInteger2 {
            get {
                return this.UserInteger2Field;
            }
            set {
                if ((this.UserInteger2Field.Equals(value) != true)) {
                    this.UserInteger2Field = value;
                    this.RaisePropertyChanged("UserInteger2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyCode {
            get {
                return this.WarrantyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCodeField, value) != true)) {
                    this.WarrantyCodeField = value;
                    this.RaisePropertyChanged("WarrantyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyCodeWarrDescription {
            get {
                return this.WarrantyCodeWarrDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCodeWarrDescriptionField, value) != true)) {
                    this.WarrantyCodeWarrDescriptionField = value;
                    this.RaisePropertyChanged("WarrantyCodeWarrDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebInStock {
            get {
                return this.WebInStockField;
            }
            set {
                if ((this.WebInStockField.Equals(value) != true)) {
                    this.WebInStockField = value;
                    this.RaisePropertyChanged("WebInStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebPart {
            get {
                return this.WebPartField;
            }
            set {
                if ((this.WebPartField.Equals(value) != true)) {
                    this.WebPartField = value;
                    this.RaisePropertyChanged("WebPart");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartAttchRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartAuditRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartAuditRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartAuditRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumRevDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumRevShortDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeDescription {
            get {
                return this.ChangeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeDescriptionField, value) != true)) {
                    this.ChangeDescriptionField = value;
                    this.RaisePropertyChanged("ChangeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartAuditRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspChangeTime {
            get {
                return this.DspChangeTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DspChangeTimeField, value) != true)) {
                    this.DspChangeTimeField = value;
                    this.RaisePropertyChanged("DspChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNumRevDescription {
            get {
                return this.RevisionNumRevDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumRevDescriptionField, value) != true)) {
                    this.RevisionNumRevDescriptionField = value;
                    this.RaisePropertyChanged("RevisionNumRevDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNumRevShortDesc {
            get {
                return this.RevisionNumRevShortDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumRevShortDescField, value) != true)) {
                    this.RevisionNumRevShortDescField = value;
                    this.RaisePropertyChanged("RevisionNumRevShortDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartBinInfoRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartBinInfoRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BinNumNonNettableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartBinInfoRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBActionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBBinNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBCodeKBActionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBCodeKBDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBPOLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBPONUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBPlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal KBQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBWarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBWarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaximumQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinimumQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnhandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SafetyQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SafetyQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNumDescription {
            get {
                return this.BinNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumDescriptionField, value) != true)) {
                    this.BinNumDescriptionField = value;
                    this.RaisePropertyChanged("BinNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BinNumNonNettable {
            get {
                return this.BinNumNonNettableField;
            }
            set {
                if ((this.BinNumNonNettableField.Equals(value) != true)) {
                    this.BinNumNonNettableField = value;
                    this.RaisePropertyChanged("BinNumNonNettable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartBinInfoRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBActionCode {
            get {
                return this.KBActionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KBActionCodeField, value) != true)) {
                    this.KBActionCodeField = value;
                    this.RaisePropertyChanged("KBActionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBActionDesc {
            get {
                return this.KBActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBActionDescField, value) != true)) {
                    this.KBActionDescField = value;
                    this.RaisePropertyChanged("KBActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBBinNum {
            get {
                return this.KBBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.KBBinNumField, value) != true)) {
                    this.KBBinNumField = value;
                    this.RaisePropertyChanged("KBBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBBinNumDescription {
            get {
                return this.KBBinNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KBBinNumDescriptionField, value) != true)) {
                    this.KBBinNumDescriptionField = value;
                    this.RaisePropertyChanged("KBBinNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBCode {
            get {
                return this.KBCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KBCodeField, value) != true)) {
                    this.KBCodeField = value;
                    this.RaisePropertyChanged("KBCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBCodeKBActionCode {
            get {
                return this.KBCodeKBActionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KBCodeKBActionCodeField, value) != true)) {
                    this.KBCodeKBActionCodeField = value;
                    this.RaisePropertyChanged("KBCodeKBActionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBCodeKBDescription {
            get {
                return this.KBCodeKBDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KBCodeKBDescriptionField, value) != true)) {
                    this.KBCodeKBDescriptionField = value;
                    this.RaisePropertyChanged("KBCodeKBDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBPOLine {
            get {
                return this.KBPOLineField;
            }
            set {
                if ((this.KBPOLineField.Equals(value) != true)) {
                    this.KBPOLineField = value;
                    this.RaisePropertyChanged("KBPOLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBPONUM {
            get {
                return this.KBPONUMField;
            }
            set {
                if ((this.KBPONUMField.Equals(value) != true)) {
                    this.KBPONUMField = value;
                    this.RaisePropertyChanged("KBPONUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBPlant {
            get {
                return this.KBPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.KBPlantField, value) != true)) {
                    this.KBPlantField = value;
                    this.RaisePropertyChanged("KBPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBPlantName {
            get {
                return this.KBPlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.KBPlantNameField, value) != true)) {
                    this.KBPlantNameField = value;
                    this.RaisePropertyChanged("KBPlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal KBQty {
            get {
                return this.KBQtyField;
            }
            set {
                if ((this.KBQtyField.Equals(value) != true)) {
                    this.KBQtyField = value;
                    this.RaisePropertyChanged("KBQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBWarehouseCode {
            get {
                return this.KBWarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KBWarehouseCodeField, value) != true)) {
                    this.KBWarehouseCodeField = value;
                    this.RaisePropertyChanged("KBWarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBWarehouseCodeDescription {
            get {
                return this.KBWarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KBWarehouseCodeDescriptionField, value) != true)) {
                    this.KBWarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("KBWarehouseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxQtyUOM {
            get {
                return this.MaxQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxQtyUOMField, value) != true)) {
                    this.MaxQtyUOMField = value;
                    this.RaisePropertyChanged("MaxQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumQty {
            get {
                return this.MaximumQtyField;
            }
            set {
                if ((this.MaximumQtyField.Equals(value) != true)) {
                    this.MaximumQtyField = value;
                    this.RaisePropertyChanged("MaximumQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinQtyUOM {
            get {
                return this.MinQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.MinQtyUOMField, value) != true)) {
                    this.MinQtyUOMField = value;
                    this.RaisePropertyChanged("MinQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinimumQty {
            get {
                return this.MinimumQtyField;
            }
            set {
                if ((this.MinimumQtyField.Equals(value) != true)) {
                    this.MinimumQtyField = value;
                    this.RaisePropertyChanged("MinimumQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnhandQty {
            get {
                return this.OnhandQtyField;
            }
            set {
                if ((this.OnhandQtyField.Equals(value) != true)) {
                    this.OnhandQtyField = value;
                    this.RaisePropertyChanged("OnhandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantOwner {
            get {
                return this.PlantOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantOwnerField, value) != true)) {
                    this.PlantOwnerField = value;
                    this.RaisePropertyChanged("PlantOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SafetyQty {
            get {
                return this.SafetyQtyField;
            }
            set {
                if ((this.SafetyQtyField.Equals(value) != true)) {
                    this.SafetyQtyField = value;
                    this.RaisePropertyChanged("SafetyQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SafetyQtyUOM {
            get {
                return this.SafetyQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.SafetyQtyUOMField, value) != true)) {
                    this.SafetyQtyUOMField = value;
                    this.RaisePropertyChanged("SafetyQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCodeDescription {
            get {
                return this.WarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeDescriptionField, value) != true)) {
                    this.WarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseCodeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartCOORow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartCOORow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartCOORowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrigCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QtyPercField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValuePercField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartCOORowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryDescription {
            get {
                return this.CountryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryDescriptionField, value) != true)) {
                    this.CountryDescriptionField = value;
                    this.RaisePropertyChanged("CountryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrigCountry {
            get {
                return this.OrigCountryField;
            }
            set {
                if ((this.OrigCountryField.Equals(value) != true)) {
                    this.OrigCountryField = value;
                    this.RaisePropertyChanged("OrigCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Primary {
            get {
                return this.PrimaryField;
            }
            set {
                if ((this.PrimaryField.Equals(value) != true)) {
                    this.PrimaryField = value;
                    this.RaisePropertyChanged("Primary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QtyPerc {
            get {
                return this.QtyPercField;
            }
            set {
                if ((this.QtyPercField.Equals(value) != true)) {
                    this.QtyPercField = value;
                    this.RaisePropertyChanged("QtyPerc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValuePerc {
            get {
                return this.ValuePercField;
            }
            set {
                if ((this.ValuePercField.Equals(value) != true)) {
                    this.ValuePercField = value;
                    this.RaisePropertyChanged("ValuePerc");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartCOPartRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartCOPartRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoRevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartCOPartRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePreventSuggField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LbrCostBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MtlCostBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartMasterPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartsPerOpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventSuggField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoPartNum {
            get {
                return this.CoPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CoPartNumField, value) != true)) {
                    this.CoPartNumField = value;
                    this.RaisePropertyChanged("CoPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoRevisionNum {
            get {
                return this.CoRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CoRevisionNumField, value) != true)) {
                    this.CoRevisionNumField = value;
                    this.RaisePropertyChanged("CoRevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartCOPartRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePreventSugg {
            get {
                return this.EnablePreventSuggField;
            }
            set {
                if ((this.EnablePreventSuggField.Equals(value) != true)) {
                    this.EnablePreventSuggField = value;
                    this.RaisePropertyChanged("EnablePreventSugg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LbrCostBase {
            get {
                return this.LbrCostBaseField;
            }
            set {
                if ((this.LbrCostBaseField.Equals(value) != true)) {
                    this.LbrCostBaseField = value;
                    this.RaisePropertyChanged("LbrCostBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MtlCostBase {
            get {
                return this.MtlCostBaseField;
            }
            set {
                if ((this.MtlCostBaseField.Equals(value) != true)) {
                    this.MtlCostBaseField = value;
                    this.RaisePropertyChanged("MtlCostBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartMasterPart {
            get {
                return this.PartMasterPartField;
            }
            set {
                if ((this.PartMasterPartField.Equals(value) != true)) {
                    this.PartMasterPartField = value;
                    this.RaisePropertyChanged("PartMasterPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartsPerOp {
            get {
                return this.PartsPerOpField;
            }
            set {
                if ((this.PartsPerOpField.Equals(value) != true)) {
                    this.PartsPerOpField = value;
                    this.RaisePropertyChanged("PartsPerOp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventSugg {
            get {
                return this.PreventSuggField;
            }
            set {
                if ((this.PreventSuggField.Equals(value) != true)) {
                    this.PreventSuggField = value;
                    this.RaisePropertyChanged("PreventSugg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrimaryCost {
            get {
                return this.PrimaryCostField;
            }
            set {
                if ((this.PrimaryCostField.Equals(value) != true)) {
                    this.PrimaryCostField = value;
                    this.RaisePropertyChanged("PrimaryCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessMode {
            get {
                return this.ProcessModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessModeField, value) != true)) {
                    this.ProcessModeField = value;
                    this.RaisePropertyChanged("ProcessMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartDimRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartDimRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartDimRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultDimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DimConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartDimRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUM {
            get {
                return this.DUMField;
            }
            set {
                if ((object.ReferenceEquals(this.DUMField, value) != true)) {
                    this.DUMField = value;
                    this.RaisePropertyChanged("DUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultDim {
            get {
                return this.DefaultDimField;
            }
            set {
                if ((this.DefaultDimField.Equals(value) != true)) {
                    this.DefaultDimField = value;
                    this.RaisePropertyChanged("DefaultDim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCode {
            get {
                return this.DimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeField, value) != true)) {
                    this.DimCodeField = value;
                    this.RaisePropertyChanged("DimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCodeDescription {
            get {
                return this.DimCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeDescriptionField, value) != true)) {
                    this.DimCodeDescriptionField = value;
                    this.RaisePropertyChanged("DimCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DimConvFactor {
            get {
                return this.DimConvFactorField;
            }
            set {
                if ((this.DimConvFactorField.Equals(value) != true)) {
                    this.DimConvFactorField = value;
                    this.RaisePropertyChanged("DimConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartLangDescRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartLangDescRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartLangDescRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangNameIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartLangDescRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LangNameID {
            get {
                return this.LangNameIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LangNameIDField, value) != true)) {
                    this.LangNameIDField = value;
                    this.RaisePropertyChanged("LangNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LangNameIDDescription {
            get {
                return this.LangNameIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LangNameIDDescriptionField, value) != true)) {
                    this.LangNameIDDescriptionField = value;
                    this.RaisePropertyChanged("LangNameIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartPCRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartPCRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartPCRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartPCRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCType {
            get {
                return this.PCTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PCTypeField, value) != true)) {
                    this.PCTypeField = value;
                    this.RaisePropertyChanged("PCType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOMCode {
            get {
                return this.UOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMCodeField, value) != true)) {
                    this.UOMCodeField = value;
                    this.RaisePropertyChanged("UOMCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartPlantRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartPlantRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ACWDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ACWPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllocatedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoConsumeStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BackFlushField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseUOMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BuyToOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyerIDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcPcntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalculatedLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartPlantRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsumeSafetyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DaysOfSupplyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteMRPJobsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DemandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableQtyBrngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalMESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForecastTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenNewPCIDDelaySecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenNewPCIDLimitDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GenerateSuggField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GetFromLocalWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICTraderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitAllowChangeParmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitAllowUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitBackFlushField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitPrintCompsInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitPrintCompsPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitShipCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LimitProdYldRecalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkToContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LvlMfgLeadTimeMnlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LvlMfgLeadTimeSysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MMSExcludeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MMSHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MMSIssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MMSMaxFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MMSSafetyFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MMSSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MRPLastCutOffDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MRPLastRunDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MRPLastRunTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MRPLastScheduledDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MRPRecalcNeededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxMfgLotSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaximumQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MfgLeadTimeCalcDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgLeadTimeEnteredByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MfgLeadTimeMnlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MfgLeadTimeMnlDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MfgLotMultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MfgLotSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinLotLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinMfgLotSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinStartQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinimumQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MultiLevelCTPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeverReuseMRPJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartRunMRPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PcntToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomBOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanTimeFenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlantConfCtrlSerialTrackingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrepTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimWhseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessMRPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyAdjToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QtyBearingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RawMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RcvInspectionReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReOrderLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReschedInDeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReschedOutDeltaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReservedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SLTPurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SLTVendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SNLeadingZerosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SNNumODigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SafetyQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SavedCalculatedUsageQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SavedMaximumQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SavedMinimumQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SavedOnDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SavedSafetyQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialMaskMaskTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortHorizonDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortHorizonDaysSuppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShortHorizonMaxMfgLotSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShortHorizonMinMfgLotSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartMinLotQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TopLvlMfgLeadTimeMnlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TopLvlMfgLeadTimeSysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotMfgLeadTimeMnlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotMfgLeadTimeSysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransferLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferPlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UrgentLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UrgentMinOrdQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UrgentMultQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgentPurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgentVendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UrgentVendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgentVendorVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseMaskSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ACWDays {
            get {
                return this.ACWDaysField;
            }
            set {
                if ((this.ACWDaysField.Equals(value) != true)) {
                    this.ACWDaysField = value;
                    this.RaisePropertyChanged("ACWDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ACWPercentage {
            get {
                return this.ACWPercentageField;
            }
            set {
                if ((this.ACWPercentageField.Equals(value) != true)) {
                    this.ACWPercentageField = value;
                    this.RaisePropertyChanged("ACWPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllocatedQty {
            get {
                return this.AllocatedQtyField;
            }
            set {
                if ((this.AllocatedQtyField.Equals(value) != true)) {
                    this.AllocatedQtyField = value;
                    this.RaisePropertyChanged("AllocatedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoConsumeStock {
            get {
                return this.AutoConsumeStockField;
            }
            set {
                if ((this.AutoConsumeStockField.Equals(value) != true)) {
                    this.AutoConsumeStockField = value;
                    this.RaisePropertyChanged("AutoConsumeStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BackFlush {
            get {
                return this.BackFlushField;
            }
            set {
                if ((this.BackFlushField.Equals(value) != true)) {
                    this.BackFlushField = value;
                    this.RaisePropertyChanged("BackFlush");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseUOMCode {
            get {
                return this.BaseUOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUOMCodeField, value) != true)) {
                    this.BaseUOMCodeField = value;
                    this.RaisePropertyChanged("BaseUOMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BuyToOrder {
            get {
                return this.BuyToOrderField;
            }
            set {
                if ((this.BuyToOrderField.Equals(value) != true)) {
                    this.BuyToOrderField = value;
                    this.RaisePropertyChanged("BuyToOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyerID {
            get {
                return this.BuyerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyerIDField, value) != true)) {
                    this.BuyerIDField = value;
                    this.RaisePropertyChanged("BuyerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyerIDName {
            get {
                return this.BuyerIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyerIDNameField, value) != true)) {
                    this.BuyerIDNameField = value;
                    this.RaisePropertyChanged("BuyerIDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcPcnt {
            get {
                return this.CalcPcntField;
            }
            set {
                if ((this.CalcPcntField.Equals(value) != true)) {
                    this.CalcPcntField = value;
                    this.RaisePropertyChanged("CalcPcnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcQty {
            get {
                return this.CalcQtyField;
            }
            set {
                if ((this.CalcQtyField.Equals(value) != true)) {
                    this.CalcQtyField = value;
                    this.RaisePropertyChanged("CalcQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcValue {
            get {
                return this.CalcValueField;
            }
            set {
                if ((this.CalcValueField.Equals(value) != true)) {
                    this.CalcValueField = value;
                    this.RaisePropertyChanged("CalcValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalculatedLeadTime {
            get {
                return this.CalculatedLeadTimeField;
            }
            set {
                if ((this.CalculatedLeadTimeField.Equals(value) != true)) {
                    this.CalculatedLeadTimeField = value;
                    this.RaisePropertyChanged("CalculatedLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartPlantRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsumeSafety {
            get {
                return this.ConsumeSafetyField;
            }
            set {
                if ((this.ConsumeSafetyField.Equals(value) != true)) {
                    this.ConsumeSafetyField = value;
                    this.RaisePropertyChanged("ConsumeSafety");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostMethod {
            get {
                return this.CostMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.CostMethodField, value) != true)) {
                    this.CostMethodField = value;
                    this.RaisePropertyChanged("CostMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysOfSupply {
            get {
                return this.DaysOfSupplyField;
            }
            set {
                if ((this.DaysOfSupplyField.Equals(value) != true)) {
                    this.DaysOfSupplyField = value;
                    this.RaisePropertyChanged("DaysOfSupply");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteMRPJobs {
            get {
                return this.DeleteMRPJobsField;
            }
            set {
                if ((this.DeleteMRPJobsField.Equals(value) != true)) {
                    this.DeleteMRPJobsField = value;
                    this.RaisePropertyChanged("DeleteMRPJobs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DemandQty {
            get {
                return this.DemandQtyField;
            }
            set {
                if ((this.DemandQtyField.Equals(value) != true)) {
                    this.DemandQtyField = value;
                    this.RaisePropertyChanged("DemandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableQtyBrng {
            get {
                return this.DisableQtyBrngField;
            }
            set {
                if ((this.DisableQtyBrngField.Equals(value) != true)) {
                    this.DisableQtyBrngField = value;
                    this.RaisePropertyChanged("DisableQtyBrng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSerialNum {
            get {
                return this.EnableSerialNumField;
            }
            set {
                if ((this.EnableSerialNumField.Equals(value) != true)) {
                    this.EnableSerialNumField = value;
                    this.RaisePropertyChanged("EnableSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtLeadTime {
            get {
                return this.ExtLeadTimeField;
            }
            set {
                if ((this.ExtLeadTimeField.Equals(value) != true)) {
                    this.ExtLeadTimeField = value;
                    this.RaisePropertyChanged("ExtLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalMES {
            get {
                return this.ExternalMESField;
            }
            set {
                if ((this.ExternalMESField.Equals(value) != true)) {
                    this.ExternalMESField = value;
                    this.RaisePropertyChanged("ExternalMES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForecastTime {
            get {
                return this.ForecastTimeField;
            }
            set {
                if ((this.ForecastTimeField.Equals(value) != true)) {
                    this.ForecastTimeField = value;
                    this.RaisePropertyChanged("ForecastTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenNewPCIDDelaySeconds {
            get {
                return this.GenNewPCIDDelaySecondsField;
            }
            set {
                if ((this.GenNewPCIDDelaySecondsField.Equals(value) != true)) {
                    this.GenNewPCIDDelaySecondsField = value;
                    this.RaisePropertyChanged("GenNewPCIDDelaySeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenNewPCIDLimitDays {
            get {
                return this.GenNewPCIDLimitDaysField;
            }
            set {
                if ((this.GenNewPCIDLimitDaysField.Equals(value) != true)) {
                    this.GenNewPCIDLimitDaysField = value;
                    this.RaisePropertyChanged("GenNewPCIDLimitDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GenerateSugg {
            get {
                return this.GenerateSuggField;
            }
            set {
                if ((this.GenerateSuggField.Equals(value) != true)) {
                    this.GenerateSuggField = value;
                    this.RaisePropertyChanged("GenerateSugg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetFromLocalWhse {
            get {
                return this.GetFromLocalWhseField;
            }
            set {
                if ((this.GetFromLocalWhseField.Equals(value) != true)) {
                    this.GetFromLocalWhseField = value;
                    this.RaisePropertyChanged("GetFromLocalWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICTrader {
            get {
                return this.ICTraderField;
            }
            set {
                if ((this.ICTraderField.Equals(value) != true)) {
                    this.ICTraderField = value;
                    this.RaisePropertyChanged("ICTrader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InActive {
            get {
                return this.InActiveField;
            }
            set {
                if ((this.InActiveField.Equals(value) != true)) {
                    this.InActiveField = value;
                    this.RaisePropertyChanged("InActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitAllowChangeParms {
            get {
                return this.KitAllowChangeParmsField;
            }
            set {
                if ((this.KitAllowChangeParmsField.Equals(value) != true)) {
                    this.KitAllowChangeParmsField = value;
                    this.RaisePropertyChanged("KitAllowChangeParms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitAllowUpdate {
            get {
                return this.KitAllowUpdateField;
            }
            set {
                if ((this.KitAllowUpdateField.Equals(value) != true)) {
                    this.KitAllowUpdateField = value;
                    this.RaisePropertyChanged("KitAllowUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitBackFlush {
            get {
                return this.KitBackFlushField;
            }
            set {
                if ((this.KitBackFlushField.Equals(value) != true)) {
                    this.KitBackFlushField = value;
                    this.RaisePropertyChanged("KitBackFlush");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitPricing {
            get {
                return this.KitPricingField;
            }
            set {
                if ((object.ReferenceEquals(this.KitPricingField, value) != true)) {
                    this.KitPricingField = value;
                    this.RaisePropertyChanged("KitPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitPrintCompsInv {
            get {
                return this.KitPrintCompsInvField;
            }
            set {
                if ((this.KitPrintCompsInvField.Equals(value) != true)) {
                    this.KitPrintCompsInvField = value;
                    this.RaisePropertyChanged("KitPrintCompsInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitPrintCompsPS {
            get {
                return this.KitPrintCompsPSField;
            }
            set {
                if ((this.KitPrintCompsPSField.Equals(value) != true)) {
                    this.KitPrintCompsPSField = value;
                    this.RaisePropertyChanged("KitPrintCompsPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitShipComplete {
            get {
                return this.KitShipCompleteField;
            }
            set {
                if ((this.KitShipCompleteField.Equals(value) != true)) {
                    this.KitShipCompleteField = value;
                    this.RaisePropertyChanged("KitShipComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KitTime {
            get {
                return this.KitTimeField;
            }
            set {
                if ((this.KitTimeField.Equals(value) != true)) {
                    this.KitTimeField = value;
                    this.RaisePropertyChanged("KitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeadTime {
            get {
                return this.LeadTimeField;
            }
            set {
                if ((this.LeadTimeField.Equals(value) != true)) {
                    this.LeadTimeField = value;
                    this.RaisePropertyChanged("LeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LimitProdYldRecalc {
            get {
                return this.LimitProdYldRecalcField;
            }
            set {
                if ((this.LimitProdYldRecalcField.Equals(value) != true)) {
                    this.LimitProdYldRecalcField = value;
                    this.RaisePropertyChanged("LimitProdYldRecalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkToContract {
            get {
                return this.LinkToContractField;
            }
            set {
                if ((this.LinkToContractField.Equals(value) != true)) {
                    this.LinkToContractField = value;
                    this.RaisePropertyChanged("LinkToContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LvlMfgLeadTimeMnl {
            get {
                return this.LvlMfgLeadTimeMnlField;
            }
            set {
                if ((this.LvlMfgLeadTimeMnlField.Equals(value) != true)) {
                    this.LvlMfgLeadTimeMnlField = value;
                    this.RaisePropertyChanged("LvlMfgLeadTimeMnl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LvlMfgLeadTimeSys {
            get {
                return this.LvlMfgLeadTimeSysField;
            }
            set {
                if ((this.LvlMfgLeadTimeSysField.Equals(value) != true)) {
                    this.LvlMfgLeadTimeSysField = value;
                    this.RaisePropertyChanged("LvlMfgLeadTimeSys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MMSExclude {
            get {
                return this.MMSExcludeField;
            }
            set {
                if ((this.MMSExcludeField.Equals(value) != true)) {
                    this.MMSExcludeField = value;
                    this.RaisePropertyChanged("MMSExclude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MMSHistory {
            get {
                return this.MMSHistoryField;
            }
            set {
                if ((this.MMSHistoryField.Equals(value) != true)) {
                    this.MMSHistoryField = value;
                    this.RaisePropertyChanged("MMSHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MMSIssue {
            get {
                return this.MMSIssueField;
            }
            set {
                if ((this.MMSIssueField.Equals(value) != true)) {
                    this.MMSIssueField = value;
                    this.RaisePropertyChanged("MMSIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MMSMaxFactor {
            get {
                return this.MMSMaxFactorField;
            }
            set {
                if ((this.MMSMaxFactorField.Equals(value) != true)) {
                    this.MMSMaxFactorField = value;
                    this.RaisePropertyChanged("MMSMaxFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MMSSafetyFactor {
            get {
                return this.MMSSafetyFactorField;
            }
            set {
                if ((this.MMSSafetyFactorField.Equals(value) != true)) {
                    this.MMSSafetyFactorField = value;
                    this.RaisePropertyChanged("MMSSafetyFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MMSSales {
            get {
                return this.MMSSalesField;
            }
            set {
                if ((this.MMSSalesField.Equals(value) != true)) {
                    this.MMSSalesField = value;
                    this.RaisePropertyChanged("MMSSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MRPLastCutOffDate {
            get {
                return this.MRPLastCutOffDateField;
            }
            set {
                if ((this.MRPLastCutOffDateField.Equals(value) != true)) {
                    this.MRPLastCutOffDateField = value;
                    this.RaisePropertyChanged("MRPLastCutOffDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MRPLastRunDate {
            get {
                return this.MRPLastRunDateField;
            }
            set {
                if ((this.MRPLastRunDateField.Equals(value) != true)) {
                    this.MRPLastRunDateField = value;
                    this.RaisePropertyChanged("MRPLastRunDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MRPLastRunTime {
            get {
                return this.MRPLastRunTimeField;
            }
            set {
                if ((this.MRPLastRunTimeField.Equals(value) != true)) {
                    this.MRPLastRunTimeField = value;
                    this.RaisePropertyChanged("MRPLastRunTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MRPLastScheduledDate {
            get {
                return this.MRPLastScheduledDateField;
            }
            set {
                if ((this.MRPLastScheduledDateField.Equals(value) != true)) {
                    this.MRPLastScheduledDateField = value;
                    this.RaisePropertyChanged("MRPLastScheduledDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MRPRecalcNeeded {
            get {
                return this.MRPRecalcNeededField;
            }
            set {
                if ((this.MRPRecalcNeededField.Equals(value) != true)) {
                    this.MRPRecalcNeededField = value;
                    this.RaisePropertyChanged("MRPRecalcNeeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxMfgLotSize {
            get {
                return this.MaxMfgLotSizeField;
            }
            set {
                if ((this.MaxMfgLotSizeField.Equals(value) != true)) {
                    this.MaxMfgLotSizeField = value;
                    this.RaisePropertyChanged("MaxMfgLotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumQty {
            get {
                return this.MaximumQtyField;
            }
            set {
                if ((this.MaximumQtyField.Equals(value) != true)) {
                    this.MaximumQtyField = value;
                    this.RaisePropertyChanged("MaximumQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MfgLeadTimeCalcDate {
            get {
                return this.MfgLeadTimeCalcDateField;
            }
            set {
                if ((this.MfgLeadTimeCalcDateField.Equals(value) != true)) {
                    this.MfgLeadTimeCalcDateField = value;
                    this.RaisePropertyChanged("MfgLeadTimeCalcDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgLeadTimeEnteredBy {
            get {
                return this.MfgLeadTimeEnteredByField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgLeadTimeEnteredByField, value) != true)) {
                    this.MfgLeadTimeEnteredByField = value;
                    this.RaisePropertyChanged("MfgLeadTimeEnteredBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MfgLeadTimeMnl {
            get {
                return this.MfgLeadTimeMnlField;
            }
            set {
                if ((this.MfgLeadTimeMnlField.Equals(value) != true)) {
                    this.MfgLeadTimeMnlField = value;
                    this.RaisePropertyChanged("MfgLeadTimeMnl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MfgLeadTimeMnlDate {
            get {
                return this.MfgLeadTimeMnlDateField;
            }
            set {
                if ((this.MfgLeadTimeMnlDateField.Equals(value) != true)) {
                    this.MfgLeadTimeMnlDateField = value;
                    this.RaisePropertyChanged("MfgLeadTimeMnlDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MfgLotMultiple {
            get {
                return this.MfgLotMultipleField;
            }
            set {
                if ((this.MfgLotMultipleField.Equals(value) != true)) {
                    this.MfgLotMultipleField = value;
                    this.RaisePropertyChanged("MfgLotMultiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MfgLotSize {
            get {
                return this.MfgLotSizeField;
            }
            set {
                if ((this.MfgLotSizeField.Equals(value) != true)) {
                    this.MfgLotSizeField = value;
                    this.RaisePropertyChanged("MfgLotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinLotLeadTime {
            get {
                return this.MinLotLeadTimeField;
            }
            set {
                if ((this.MinLotLeadTimeField.Equals(value) != true)) {
                    this.MinLotLeadTimeField = value;
                    this.RaisePropertyChanged("MinLotLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinMfgLotSize {
            get {
                return this.MinMfgLotSizeField;
            }
            set {
                if ((this.MinMfgLotSizeField.Equals(value) != true)) {
                    this.MinMfgLotSizeField = value;
                    this.RaisePropertyChanged("MinMfgLotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinOrderQty {
            get {
                return this.MinOrderQtyField;
            }
            set {
                if ((this.MinOrderQtyField.Equals(value) != true)) {
                    this.MinOrderQtyField = value;
                    this.RaisePropertyChanged("MinOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinStartQty {
            get {
                return this.MinStartQtyField;
            }
            set {
                if ((this.MinStartQtyField.Equals(value) != true)) {
                    this.MinStartQtyField = value;
                    this.RaisePropertyChanged("MinStartQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinimumQty {
            get {
                return this.MinimumQtyField;
            }
            set {
                if ((this.MinimumQtyField.Equals(value) != true)) {
                    this.MinimumQtyField = value;
                    this.RaisePropertyChanged("MinimumQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MultiLevelCTP {
            get {
                return this.MultiLevelCTPField;
            }
            set {
                if ((this.MultiLevelCTPField.Equals(value) != true)) {
                    this.MultiLevelCTPField = value;
                    this.RaisePropertyChanged("MultiLevelCTP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeverReuseMRPJob {
            get {
                return this.NeverReuseMRPJobField;
            }
            set {
                if ((this.NeverReuseMRPJobField.Equals(value) != true)) {
                    this.NeverReuseMRPJobField = value;
                    this.RaisePropertyChanged("NeverReuseMRPJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStock {
            get {
                return this.NonStockField;
            }
            set {
                if ((this.NonStockField.Equals(value) != true)) {
                    this.NonStockField = value;
                    this.RaisePropertyChanged("NonStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQty {
            get {
                return this.OnHandQtyField;
            }
            set {
                if ((this.OnHandQtyField.Equals(value) != true)) {
                    this.OnHandQtyField = value;
                    this.RaisePropertyChanged("OnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartRunMRP {
            get {
                return this.PartRunMRPField;
            }
            set {
                if ((this.PartRunMRPField.Equals(value) != true)) {
                    this.PartRunMRPField = value;
                    this.RaisePropertyChanged("PartRunMRP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PcntTolerance {
            get {
                return this.PcntToleranceField;
            }
            set {
                if ((this.PcntToleranceField.Equals(value) != true)) {
                    this.PcntToleranceField = value;
                    this.RaisePropertyChanged("PcntTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonIDField, value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonName {
            get {
                return this.PersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonNameField, value) != true)) {
                    this.PersonNameField = value;
                    this.RaisePropertyChanged("PersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomBOM {
            get {
                return this.PhantomBOMField;
            }
            set {
                if ((this.PhantomBOMField.Equals(value) != true)) {
                    this.PhantomBOMField = value;
                    this.RaisePropertyChanged("PhantomBOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanTimeFence {
            get {
                return this.PlanTimeFenceField;
            }
            set {
                if ((this.PlanTimeFenceField.Equals(value) != true)) {
                    this.PlanTimeFenceField = value;
                    this.RaisePropertyChanged("PlanTimeFence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlantConfCtrlSerialTracking {
            get {
                return this.PlantConfCtrlSerialTrackingField;
            }
            set {
                if ((this.PlantConfCtrlSerialTrackingField.Equals(value) != true)) {
                    this.PlantConfCtrlSerialTrackingField = value;
                    this.RaisePropertyChanged("PlantConfCtrlSerialTracking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrepTime {
            get {
                return this.PrepTimeField;
            }
            set {
                if ((this.PrepTimeField.Equals(value) != true)) {
                    this.PrepTimeField = value;
                    this.RaisePropertyChanged("PrepTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimWhse {
            get {
                return this.PrimWhseField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimWhseField, value) != true)) {
                    this.PrimWhseField = value;
                    this.RaisePropertyChanged("PrimWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimWhseDescription {
            get {
                return this.PrimWhseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimWhseDescriptionField, value) != true)) {
                    this.PrimWhseDescriptionField = value;
                    this.RaisePropertyChanged("PrimWhseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProcessMRP {
            get {
                return this.ProcessMRPField;
            }
            set {
                if ((this.ProcessMRPField.Equals(value) != true)) {
                    this.ProcessMRPField = value;
                    this.RaisePropertyChanged("ProcessMRP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyAdjTolerance {
            get {
                return this.QtyAdjToleranceField;
            }
            set {
                if ((this.QtyAdjToleranceField.Equals(value) != true)) {
                    this.QtyAdjToleranceField = value;
                    this.RaisePropertyChanged("QtyAdjTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QtyBearing {
            get {
                return this.QtyBearingField;
            }
            set {
                if ((this.QtyBearingField.Equals(value) != true)) {
                    this.QtyBearingField = value;
                    this.RaisePropertyChanged("QtyBearing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyTolerance {
            get {
                return this.QtyToleranceField;
            }
            set {
                if ((this.QtyToleranceField.Equals(value) != true)) {
                    this.QtyToleranceField = value;
                    this.RaisePropertyChanged("QtyTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RawMaterial {
            get {
                return this.RawMaterialField;
            }
            set {
                if ((this.RawMaterialField.Equals(value) != true)) {
                    this.RawMaterialField = value;
                    this.RaisePropertyChanged("RawMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RcvInspectionReq {
            get {
                return this.RcvInspectionReqField;
            }
            set {
                if ((this.RcvInspectionReqField.Equals(value) != true)) {
                    this.RcvInspectionReqField = value;
                    this.RaisePropertyChanged("RcvInspectionReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReOrderLevel {
            get {
                return this.ReOrderLevelField;
            }
            set {
                if ((this.ReOrderLevelField.Equals(value) != true)) {
                    this.ReOrderLevelField = value;
                    this.RaisePropertyChanged("ReOrderLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceiveTime {
            get {
                return this.ReceiveTimeField;
            }
            set {
                if ((this.ReceiveTimeField.Equals(value) != true)) {
                    this.ReceiveTimeField = value;
                    this.RaisePropertyChanged("ReceiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReschedInDelta {
            get {
                return this.ReschedInDeltaField;
            }
            set {
                if ((this.ReschedInDeltaField.Equals(value) != true)) {
                    this.ReschedInDeltaField = value;
                    this.RaisePropertyChanged("ReschedInDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReschedOutDelta {
            get {
                return this.ReschedOutDeltaField;
            }
            set {
                if ((this.ReschedOutDeltaField.Equals(value) != true)) {
                    this.ReschedOutDeltaField = value;
                    this.RaisePropertyChanged("ReschedOutDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReservedQty {
            get {
                return this.ReservedQtyField;
            }
            set {
                if ((this.ReservedQtyField.Equals(value) != true)) {
                    this.ReservedQtyField = value;
                    this.RaisePropertyChanged("ReservedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SLTPurPoint {
            get {
                return this.SLTPurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.SLTPurPointField, value) != true)) {
                    this.SLTPurPointField = value;
                    this.RaisePropertyChanged("SLTPurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SLTVendorNum {
            get {
                return this.SLTVendorNumField;
            }
            set {
                if ((this.SLTVendorNumField.Equals(value) != true)) {
                    this.SLTVendorNumField = value;
                    this.RaisePropertyChanged("SLTVendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SNLeadingZeros {
            get {
                return this.SNLeadingZerosField;
            }
            set {
                if ((this.SNLeadingZerosField.Equals(value) != true)) {
                    this.SNLeadingZerosField = value;
                    this.RaisePropertyChanged("SNLeadingZeros");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskExample {
            get {
                return this.SNMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskExampleField, value) != true)) {
                    this.SNMaskExampleField = value;
                    this.RaisePropertyChanged("SNMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SNNumODigits {
            get {
                return this.SNNumODigitsField;
            }
            set {
                if ((this.SNNumODigitsField.Equals(value) != true)) {
                    this.SNNumODigitsField = value;
                    this.RaisePropertyChanged("SNNumODigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SafetyQty {
            get {
                return this.SafetyQtyField;
            }
            set {
                if ((this.SafetyQtyField.Equals(value) != true)) {
                    this.SafetyQtyField = value;
                    this.RaisePropertyChanged("SafetyQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SavedCalculatedUsageQty {
            get {
                return this.SavedCalculatedUsageQtyField;
            }
            set {
                if ((this.SavedCalculatedUsageQtyField.Equals(value) != true)) {
                    this.SavedCalculatedUsageQtyField = value;
                    this.RaisePropertyChanged("SavedCalculatedUsageQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SavedMaximumQty {
            get {
                return this.SavedMaximumQtyField;
            }
            set {
                if ((this.SavedMaximumQtyField.Equals(value) != true)) {
                    this.SavedMaximumQtyField = value;
                    this.RaisePropertyChanged("SavedMaximumQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SavedMinimumQty {
            get {
                return this.SavedMinimumQtyField;
            }
            set {
                if ((this.SavedMinimumQtyField.Equals(value) != true)) {
                    this.SavedMinimumQtyField = value;
                    this.RaisePropertyChanged("SavedMinimumQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SavedOnDateTime {
            get {
                return this.SavedOnDateTimeField;
            }
            set {
                if ((this.SavedOnDateTimeField.Equals(value) != true)) {
                    this.SavedOnDateTimeField = value;
                    this.RaisePropertyChanged("SavedOnDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SavedSafetyQty {
            get {
                return this.SavedSafetyQtyField;
            }
            set {
                if ((this.SavedSafetyQtyField.Equals(value) != true)) {
                    this.SavedSafetyQtyField = value;
                    this.RaisePropertyChanged("SavedSafetyQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskDescription {
            get {
                return this.SerialMaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskDescriptionField, value) != true)) {
                    this.SerialMaskDescriptionField = value;
                    this.RaisePropertyChanged("SerialMaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialMaskMaskType {
            get {
                return this.SerialMaskMaskTypeField;
            }
            set {
                if ((this.SerialMaskMaskTypeField.Equals(value) != true)) {
                    this.SerialMaskMaskTypeField = value;
                    this.RaisePropertyChanged("SerialMaskMaskType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortHorizonDays {
            get {
                return this.ShortHorizonDaysField;
            }
            set {
                if ((this.ShortHorizonDaysField.Equals(value) != true)) {
                    this.ShortHorizonDaysField = value;
                    this.RaisePropertyChanged("ShortHorizonDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortHorizonDaysSupp {
            get {
                return this.ShortHorizonDaysSuppField;
            }
            set {
                if ((this.ShortHorizonDaysSuppField.Equals(value) != true)) {
                    this.ShortHorizonDaysSuppField = value;
                    this.RaisePropertyChanged("ShortHorizonDaysSupp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShortHorizonMaxMfgLotSize {
            get {
                return this.ShortHorizonMaxMfgLotSizeField;
            }
            set {
                if ((this.ShortHorizonMaxMfgLotSizeField.Equals(value) != true)) {
                    this.ShortHorizonMaxMfgLotSizeField = value;
                    this.RaisePropertyChanged("ShortHorizonMaxMfgLotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShortHorizonMinMfgLotSize {
            get {
                return this.ShortHorizonMinMfgLotSizeField;
            }
            set {
                if ((this.ShortHorizonMinMfgLotSizeField.Equals(value) != true)) {
                    this.ShortHorizonMinMfgLotSizeField = value;
                    this.RaisePropertyChanged("ShortHorizonMinMfgLotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortLeadTime {
            get {
                return this.ShortLeadTimeField;
            }
            set {
                if ((this.ShortLeadTimeField.Equals(value) != true)) {
                    this.ShortLeadTimeField = value;
                    this.RaisePropertyChanged("ShortLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceType {
            get {
                return this.SourceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceTypeField, value) != true)) {
                    this.SourceTypeField = value;
                    this.RaisePropertyChanged("SourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartMinLotQty {
            get {
                return this.StartMinLotQtyField;
            }
            set {
                if ((this.StartMinLotQtyField.Equals(value) != true)) {
                    this.StartMinLotQtyField = value;
                    this.RaisePropertyChanged("StartMinLotQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TopLvlMfgLeadTimeMnl {
            get {
                return this.TopLvlMfgLeadTimeMnlField;
            }
            set {
                if ((this.TopLvlMfgLeadTimeMnlField.Equals(value) != true)) {
                    this.TopLvlMfgLeadTimeMnlField = value;
                    this.RaisePropertyChanged("TopLvlMfgLeadTimeMnl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TopLvlMfgLeadTimeSys {
            get {
                return this.TopLvlMfgLeadTimeSysField;
            }
            set {
                if ((this.TopLvlMfgLeadTimeSysField.Equals(value) != true)) {
                    this.TopLvlMfgLeadTimeSysField = value;
                    this.RaisePropertyChanged("TopLvlMfgLeadTimeSys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotMfgLeadTimeMnl {
            get {
                return this.TotMfgLeadTimeMnlField;
            }
            set {
                if ((this.TotMfgLeadTimeMnlField.Equals(value) != true)) {
                    this.TotMfgLeadTimeMnlField = value;
                    this.RaisePropertyChanged("TotMfgLeadTimeMnl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotMfgLeadTimeSys {
            get {
                return this.TotMfgLeadTimeSysField;
            }
            set {
                if ((this.TotMfgLeadTimeSysField.Equals(value) != true)) {
                    this.TotMfgLeadTimeSysField = value;
                    this.RaisePropertyChanged("TotMfgLeadTimeSys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransferLeadTime {
            get {
                return this.TransferLeadTimeField;
            }
            set {
                if ((this.TransferLeadTimeField.Equals(value) != true)) {
                    this.TransferLeadTimeField = value;
                    this.RaisePropertyChanged("TransferLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferPlant {
            get {
                return this.TransferPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferPlantField, value) != true)) {
                    this.TransferPlantField = value;
                    this.RaisePropertyChanged("TransferPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferPlantName {
            get {
                return this.TransferPlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferPlantNameField, value) != true)) {
                    this.TransferPlantNameField = value;
                    this.RaisePropertyChanged("TransferPlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UrgentLeadTime {
            get {
                return this.UrgentLeadTimeField;
            }
            set {
                if ((this.UrgentLeadTimeField.Equals(value) != true)) {
                    this.UrgentLeadTimeField = value;
                    this.RaisePropertyChanged("UrgentLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UrgentMinOrdQty {
            get {
                return this.UrgentMinOrdQtyField;
            }
            set {
                if ((this.UrgentMinOrdQtyField.Equals(value) != true)) {
                    this.UrgentMinOrdQtyField = value;
                    this.RaisePropertyChanged("UrgentMinOrdQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UrgentMultQty {
            get {
                return this.UrgentMultQtyField;
            }
            set {
                if ((this.UrgentMultQtyField.Equals(value) != true)) {
                    this.UrgentMultQtyField = value;
                    this.RaisePropertyChanged("UrgentMultQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrgentPurPoint {
            get {
                return this.UrgentPurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgentPurPointField, value) != true)) {
                    this.UrgentPurPointField = value;
                    this.RaisePropertyChanged("UrgentPurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrgentVendorName {
            get {
                return this.UrgentVendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgentVendorNameField, value) != true)) {
                    this.UrgentVendorNameField = value;
                    this.RaisePropertyChanged("UrgentVendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UrgentVendorNum {
            get {
                return this.UrgentVendorNumField;
            }
            set {
                if ((this.UrgentVendorNumField.Equals(value) != true)) {
                    this.UrgentVendorNumField = value;
                    this.RaisePropertyChanged("UrgentVendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrgentVendorVendorID {
            get {
                return this.UrgentVendorVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgentVendorVendorIDField, value) != true)) {
                    this.UrgentVendorVendorIDField = value;
                    this.RaisePropertyChanged("UrgentVendorVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseMaskSeq {
            get {
                return this.UseMaskSeqField;
            }
            set {
                if ((this.UseMaskSeqField.Equals(value) != true)) {
                    this.UseMaskSeqField = value;
                    this.RaisePropertyChanged("UseMaskSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValueTolerance {
            get {
                return this.ValueToleranceField;
            }
            set {
                if ((this.ValueToleranceField.Equals(value) != true)) {
                    this.ValueToleranceField = value;
                    this.RaisePropertyChanged("ValueTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress1 {
            get {
                return this.VendorNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress1Field, value) != true)) {
                    this.VendorNumAddress1Field = value;
                    this.RaisePropertyChanged("VendorNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress2 {
            get {
                return this.VendorNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress2Field, value) != true)) {
                    this.VendorNumAddress2Field = value;
                    this.RaisePropertyChanged("VendorNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress3 {
            get {
                return this.VendorNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress3Field, value) != true)) {
                    this.VendorNumAddress3Field = value;
                    this.RaisePropertyChanged("VendorNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCity {
            get {
                return this.VendorNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCityField, value) != true)) {
                    this.VendorNumCityField = value;
                    this.RaisePropertyChanged("VendorNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCountry {
            get {
                return this.VendorNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCountryField, value) != true)) {
                    this.VendorNumCountryField = value;
                    this.RaisePropertyChanged("VendorNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCurrencyCode {
            get {
                return this.VendorNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCurrencyCodeField, value) != true)) {
                    this.VendorNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumDefaultFOB {
            get {
                return this.VendorNumDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumDefaultFOBField, value) != true)) {
                    this.VendorNumDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorNumDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName {
            get {
                return this.VendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumNameField, value) != true)) {
                    this.VendorNumNameField = value;
                    this.RaisePropertyChanged("VendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumState {
            get {
                return this.VendorNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumStateField, value) != true)) {
                    this.VendorNumStateField = value;
                    this.RaisePropertyChanged("VendorNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumTermsCode {
            get {
                return this.VendorNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumTermsCodeField, value) != true)) {
                    this.VendorNumTermsCodeField = value;
                    this.RaisePropertyChanged("VendorNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumVendorID {
            get {
                return this.VendorNumVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumVendorIDField, value) != true)) {
                    this.VendorNumVendorIDField = value;
                    this.RaisePropertyChanged("VendorNumVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumZIP {
            get {
                return this.VendorNumZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumZIPField, value) != true)) {
                    this.VendorNumZIPField = value;
                    this.RaisePropertyChanged("VendorNumZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartNum {
            get {
                return this.XRefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartNumField, value) != true)) {
                    this.XRefPartNumField = value;
                    this.RaisePropertyChanged("XRefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartType {
            get {
                return this.XRefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartTypeField, value) != true)) {
                    this.XRefPartTypeField = value;
                    this.RaisePropertyChanged("XRefPartType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRestrictSubstRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartRestrictSubstRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRestrictSubstRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExemptCertificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExemptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubstanceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubstanceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRestrictSubstRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Exempt {
            get {
                return this.ExemptField;
            }
            set {
                if ((this.ExemptField.Equals(value) != true)) {
                    this.ExemptField = value;
                    this.RaisePropertyChanged("Exempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExemptCertificate {
            get {
                return this.ExemptCertificateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExemptCertificateField, value) != true)) {
                    this.ExemptCertificateField = value;
                    this.RaisePropertyChanged("ExemptCertificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExemptDate {
            get {
                return this.ExemptDateField;
            }
            set {
                if ((this.ExemptDateField.Equals(value) != true)) {
                    this.ExemptDateField = value;
                    this.RaisePropertyChanged("ExemptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inactive {
            get {
                return this.InactiveField;
            }
            set {
                if ((this.InactiveField.Equals(value) != true)) {
                    this.InactiveField = value;
                    this.RaisePropertyChanged("Inactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionTypeDescription {
            get {
                return this.RestrictionTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionTypeDescriptionField, value) != true)) {
                    this.RestrictionTypeDescriptionField = value;
                    this.RaisePropertyChanged("RestrictionTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionTypeID {
            get {
                return this.RestrictionTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionTypeIDField, value) != true)) {
                    this.RestrictionTypeIDField = value;
                    this.RaisePropertyChanged("RestrictionTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstanceDescription {
            get {
                return this.SubstanceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubstanceDescriptionField, value) != true)) {
                    this.SubstanceDescriptionField = value;
                    this.RaisePropertyChanged("SubstanceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstanceID {
            get {
                return this.SubstanceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SubstanceIDField, value) != true)) {
                    this.SubstanceIDField = value;
                    this.RaisePropertyChanged("SubstanceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRestrictionRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartRestrictionRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRestrictionRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ComplianceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableRollUpTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastRollUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RollupTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRestrictionRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Compliance {
            get {
                return this.ComplianceField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplianceField, value) != true)) {
                    this.ComplianceField = value;
                    this.RaisePropertyChanged("Compliance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ComplianceDate {
            get {
                return this.ComplianceDateField;
            }
            set {
                if ((this.ComplianceDateField.Equals(value) != true)) {
                    this.ComplianceDateField = value;
                    this.RaisePropertyChanged("ComplianceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableRollUpType {
            get {
                return this.EnableRollUpTypeField;
            }
            set {
                if ((this.EnableRollUpTypeField.Equals(value) != true)) {
                    this.EnableRollUpTypeField = value;
                    this.RaisePropertyChanged("EnableRollUpType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inactive {
            get {
                return this.InactiveField;
            }
            set {
                if ((this.InactiveField.Equals(value) != true)) {
                    this.InactiveField = value;
                    this.RaisePropertyChanged("Inactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastRollUp {
            get {
                return this.LastRollUpField;
            }
            set {
                if ((this.LastRollUpField.Equals(value) != true)) {
                    this.LastRollUpField = value;
                    this.RaisePropertyChanged("LastRollUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionTypeDescription {
            get {
                return this.RestrictionTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionTypeDescriptionField, value) != true)) {
                    this.RestrictionTypeDescriptionField = value;
                    this.RaisePropertyChanged("RestrictionTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionTypeID {
            get {
                return this.RestrictionTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionTypeIDField, value) != true)) {
                    this.RestrictionTypeIDField = value;
                    this.RaisePropertyChanged("RestrictionTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RollupType {
            get {
                return this.RollupTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RollupTypeField, value) != true)) {
                    this.RollupTypeField = value;
                    this.RaisePropertyChanged("RollupType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartRevRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApprovedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AutoRecOprField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseRevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoPartsPerOpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoPartsReqQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConfiguredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultConfigPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECOGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExtConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalMESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FinalOprField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCoPartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspPlanDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLRBurdenCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLRLaborCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLRMaterialCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLRMtlBurCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLRSetupBurdenCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLRSetupLaborCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LLRSubcontractCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LaborCostPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlCostPctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnershipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMObjIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentAltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentAltMethodDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentRevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartDescriptionSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartDescriptionTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartDescriptionTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartDescriptionTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PcEntprsConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PcGlobalPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PcStatusConfigTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMAInspPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RMASampleSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RMASampleSizePctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMASpecIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RegenConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevShortDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevStatusAsOfDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RollupDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoughCutCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoughCutParamDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SIValuesGroupSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SIValuesHeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowInputPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecHedDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TLRBurdenCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TLRLaborCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TLRMaterialCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TLRMtlBurCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TLRSetupBurdenCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TLRSetupLaborCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TLRSubcontractCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseAltRevForPartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseStagingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValRefDesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebConfiguredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> vDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal vQtyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethodDesc {
            get {
                return this.AltMethodDescField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodDescField, value) != true)) {
                    this.AltMethodDescField = value;
                    this.RaisePropertyChanged("AltMethodDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedByField, value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApprovedDate {
            get {
                return this.ApprovedDateField;
            }
            set {
                if ((this.ApprovedDateField.Equals(value) != true)) {
                    this.ApprovedDateField = value;
                    this.RaisePropertyChanged("ApprovedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutoRecOpr {
            get {
                return this.AutoRecOprField;
            }
            set {
                if ((this.AutoRecOprField.Equals(value) != true)) {
                    this.AutoRecOprField = value;
                    this.RaisePropertyChanged("AutoRecOpr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasePartNum {
            get {
                return this.BasePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BasePartNumField, value) != true)) {
                    this.BasePartNumField = value;
                    this.RaisePropertyChanged("BasePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseRevisionNum {
            get {
                return this.BaseRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseRevisionNumField, value) != true)) {
                    this.BaseRevisionNumField = value;
                    this.RaisePropertyChanged("BaseRevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Class {
            get {
                return this.ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassField, value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoPartsPerOp {
            get {
                return this.CoPartsPerOpField;
            }
            set {
                if ((this.CoPartsPerOpField.Equals(value) != true)) {
                    this.CoPartsPerOpField = value;
                    this.RaisePropertyChanged("CoPartsPerOp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoPartsReqQty {
            get {
                return this.CoPartsReqQtyField;
            }
            set {
                if ((this.CoPartsReqQtyField.Equals(value) != true)) {
                    this.CoPartsReqQtyField = value;
                    this.RaisePropertyChanged("CoPartsReqQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigID {
            get {
                return this.ConfigIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigIDField, value) != true)) {
                    this.ConfigIDField = value;
                    this.RaisePropertyChanged("ConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Configured {
            get {
                return this.ConfiguredField;
            }
            set {
                if ((this.ConfiguredField.Equals(value) != true)) {
                    this.ConfiguredField = value;
                    this.RaisePropertyChanged("Configured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultConfigPart {
            get {
                return this.DefaultConfigPartField;
            }
            set {
                if ((this.DefaultConfigPartField.Equals(value) != true)) {
                    this.DefaultConfigPartField = value;
                    this.RaisePropertyChanged("DefaultConfigPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableApproved {
            get {
                return this.DisableApprovedField;
            }
            set {
                if ((this.DisableApprovedField.Equals(value) != true)) {
                    this.DisableApprovedField = value;
                    this.RaisePropertyChanged("DisableApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawNum {
            get {
                return this.DrawNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawNumField, value) != true)) {
                    this.DrawNumField = value;
                    this.RaisePropertyChanged("DrawNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECO {
            get {
                return this.ECOField;
            }
            set {
                if ((object.ReferenceEquals(this.ECOField, value) != true)) {
                    this.ECOField = value;
                    this.RaisePropertyChanged("ECO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECOGroup {
            get {
                return this.ECOGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ECOGroupField, value) != true)) {
                    this.ECOGroupField = value;
                    this.RaisePropertyChanged("ECOGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExtConfig {
            get {
                return this.ExtConfigField;
            }
            set {
                if ((this.ExtConfigField.Equals(value) != true)) {
                    this.ExtConfigField = value;
                    this.RaisePropertyChanged("ExtConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalMES {
            get {
                return this.ExternalMESField;
            }
            set {
                if ((this.ExternalMESField.Equals(value) != true)) {
                    this.ExternalMESField = value;
                    this.RaisePropertyChanged("ExternalMES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FinalOpr {
            get {
                return this.FinalOprField;
            }
            set {
                if ((this.FinalOprField.Equals(value) != true)) {
                    this.FinalOprField = value;
                    this.RaisePropertyChanged("FinalOpr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalRev {
            get {
                return this.GlobalRevField;
            }
            set {
                if ((this.GlobalRevField.Equals(value) != true)) {
                    this.GlobalRevField = value;
                    this.RaisePropertyChanged("GlobalRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCoParts {
            get {
                return this.HasCoPartsField;
            }
            set {
                if ((this.HasCoPartsField.Equals(value) != true)) {
                    this.HasCoPartsField = value;
                    this.RaisePropertyChanged("HasCoParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspPlanDescription {
            get {
                return this.InspPlanDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InspPlanDescriptionField, value) != true)) {
                    this.InspPlanDescriptionField = value;
                    this.RaisePropertyChanged("InspPlanDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLRBurdenCost {
            get {
                return this.LLRBurdenCostField;
            }
            set {
                if ((this.LLRBurdenCostField.Equals(value) != true)) {
                    this.LLRBurdenCostField = value;
                    this.RaisePropertyChanged("LLRBurdenCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLRLaborCost {
            get {
                return this.LLRLaborCostField;
            }
            set {
                if ((this.LLRLaborCostField.Equals(value) != true)) {
                    this.LLRLaborCostField = value;
                    this.RaisePropertyChanged("LLRLaborCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLRMaterialCost {
            get {
                return this.LLRMaterialCostField;
            }
            set {
                if ((this.LLRMaterialCostField.Equals(value) != true)) {
                    this.LLRMaterialCostField = value;
                    this.RaisePropertyChanged("LLRMaterialCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLRMtlBurCost {
            get {
                return this.LLRMtlBurCostField;
            }
            set {
                if ((this.LLRMtlBurCostField.Equals(value) != true)) {
                    this.LLRMtlBurCostField = value;
                    this.RaisePropertyChanged("LLRMtlBurCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLRSetupBurdenCost {
            get {
                return this.LLRSetupBurdenCostField;
            }
            set {
                if ((this.LLRSetupBurdenCostField.Equals(value) != true)) {
                    this.LLRSetupBurdenCostField = value;
                    this.RaisePropertyChanged("LLRSetupBurdenCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLRSetupLaborCost {
            get {
                return this.LLRSetupLaborCostField;
            }
            set {
                if ((this.LLRSetupLaborCostField.Equals(value) != true)) {
                    this.LLRSetupLaborCostField = value;
                    this.RaisePropertyChanged("LLRSetupLaborCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LLRSubcontractCost {
            get {
                return this.LLRSubcontractCostField;
            }
            set {
                if ((this.LLRSubcontractCostField.Equals(value) != true)) {
                    this.LLRSubcontractCostField = value;
                    this.RaisePropertyChanged("LLRSubcontractCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LaborCostPct {
            get {
                return this.LaborCostPctField;
            }
            set {
                if ((this.LaborCostPctField.Equals(value) != true)) {
                    this.LaborCostPctField = value;
                    this.RaisePropertyChanged("LaborCostPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Method {
            get {
                return this.MethodField;
            }
            set {
                if ((this.MethodField.Equals(value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlCostPct {
            get {
                return this.MtlCostPctField;
            }
            set {
                if ((this.MtlCostPctField.Equals(value) != true)) {
                    this.MtlCostPctField = value;
                    this.RaisePropertyChanged("MtlCostPct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStock {
            get {
                return this.NonStockField;
            }
            set {
                if ((this.NonStockField.Equals(value) != true)) {
                    this.NonStockField = value;
                    this.RaisePropertyChanged("NonStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnershipStatus {
            get {
                return this.OwnershipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnershipStatusField, value) != true)) {
                    this.OwnershipStatusField = value;
                    this.RaisePropertyChanged("OwnershipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMObjID {
            get {
                return this.PDMObjIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMObjIDField, value) != true)) {
                    this.PDMObjIDField = value;
                    this.RaisePropertyChanged("PDMObjID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentAltMethod {
            get {
                return this.ParentAltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentAltMethodField, value) != true)) {
                    this.ParentAltMethodField = value;
                    this.RaisePropertyChanged("ParentAltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentAltMethodDesc {
            get {
                return this.ParentAltMethodDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentAltMethodDescField, value) != true)) {
                    this.ParentAltMethodDescField = value;
                    this.RaisePropertyChanged("ParentAltMethodDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPartNum {
            get {
                return this.ParentPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPartNumField, value) != true)) {
                    this.ParentPartNumField = value;
                    this.RaisePropertyChanged("ParentPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentRevisionNum {
            get {
                return this.ParentRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentRevisionNumField, value) != true)) {
                    this.ParentRevisionNumField = value;
                    this.RaisePropertyChanged("ParentRevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescriptionIUM {
            get {
                return this.PartDescriptionIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionIUMField, value) != true)) {
                    this.PartDescriptionIUMField = value;
                    this.RaisePropertyChanged("PartDescriptionIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescriptionPartDescription {
            get {
                return this.PartDescriptionPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionPartDescriptionField, value) != true)) {
                    this.PartDescriptionPartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescriptionPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescriptionPricePerCode {
            get {
                return this.PartDescriptionPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionPricePerCodeField, value) != true)) {
                    this.PartDescriptionPricePerCodeField = value;
                    this.RaisePropertyChanged("PartDescriptionPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescriptionSalesUM {
            get {
                return this.PartDescriptionSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionSalesUMField, value) != true)) {
                    this.PartDescriptionSalesUMField = value;
                    this.RaisePropertyChanged("PartDescriptionSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartDescriptionSellingFactor {
            get {
                return this.PartDescriptionSellingFactorField;
            }
            set {
                if ((this.PartDescriptionSellingFactorField.Equals(value) != true)) {
                    this.PartDescriptionSellingFactorField = value;
                    this.RaisePropertyChanged("PartDescriptionSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartDescriptionTrackDimension {
            get {
                return this.PartDescriptionTrackDimensionField;
            }
            set {
                if ((this.PartDescriptionTrackDimensionField.Equals(value) != true)) {
                    this.PartDescriptionTrackDimensionField = value;
                    this.RaisePropertyChanged("PartDescriptionTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartDescriptionTrackLots {
            get {
                return this.PartDescriptionTrackLotsField;
            }
            set {
                if ((this.PartDescriptionTrackLotsField.Equals(value) != true)) {
                    this.PartDescriptionTrackLotsField = value;
                    this.RaisePropertyChanged("PartDescriptionTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartDescriptionTrackSerialNum {
            get {
                return this.PartDescriptionTrackSerialNumField;
            }
            set {
                if ((this.PartDescriptionTrackSerialNumField.Equals(value) != true)) {
                    this.PartDescriptionTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartDescriptionTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PcEntprsConf {
            get {
                return this.PcEntprsConfField;
            }
            set {
                if ((this.PcEntprsConfField.Equals(value) != true)) {
                    this.PcEntprsConfField = value;
                    this.RaisePropertyChanged("PcEntprsConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PcGlobalPart {
            get {
                return this.PcGlobalPartField;
            }
            set {
                if ((this.PcGlobalPartField.Equals(value) != true)) {
                    this.PcGlobalPartField = value;
                    this.RaisePropertyChanged("PcGlobalPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PcStatusConfigType {
            get {
                return this.PcStatusConfigTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PcStatusConfigTypeField, value) != true)) {
                    this.PcStatusConfigTypeField = value;
                    this.RaisePropertyChanged("PcStatusConfigType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessMode {
            get {
                return this.ProcessModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessModeField, value) != true)) {
                    this.ProcessModeField = value;
                    this.RaisePropertyChanged("ProcessMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMAInspPlan {
            get {
                return this.RMAInspPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.RMAInspPlanField, value) != true)) {
                    this.RMAInspPlanField = value;
                    this.RaisePropertyChanged("RMAInspPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RMASampleSize {
            get {
                return this.RMASampleSizeField;
            }
            set {
                if ((this.RMASampleSizeField.Equals(value) != true)) {
                    this.RMASampleSizeField = value;
                    this.RaisePropertyChanged("RMASampleSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RMASampleSizePct {
            get {
                return this.RMASampleSizePctField;
            }
            set {
                if ((this.RMASampleSizePctField.Equals(value) != true)) {
                    this.RMASampleSizePctField = value;
                    this.RaisePropertyChanged("RMASampleSizePct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMASpecID {
            get {
                return this.RMASpecIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RMASpecIDField, value) != true)) {
                    this.RMASpecIDField = value;
                    this.RaisePropertyChanged("RMASpecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RegenConfig {
            get {
                return this.RegenConfigField;
            }
            set {
                if ((this.RegenConfigField.Equals(value) != true)) {
                    this.RegenConfigField = value;
                    this.RaisePropertyChanged("RegenConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevDescription {
            get {
                return this.RevDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RevDescriptionField, value) != true)) {
                    this.RevDescriptionField = value;
                    this.RaisePropertyChanged("RevDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevShortDesc {
            get {
                return this.RevShortDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RevShortDescField, value) != true)) {
                    this.RevShortDescField = value;
                    this.RaisePropertyChanged("RevShortDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevStatusAsOfDate {
            get {
                return this.RevStatusAsOfDateField;
            }
            set {
                if ((this.RevStatusAsOfDateField.Equals(value) != true)) {
                    this.RevStatusAsOfDateField = value;
                    this.RaisePropertyChanged("RevStatusAsOfDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RollupDate {
            get {
                return this.RollupDateField;
            }
            set {
                if ((this.RollupDateField.Equals(value) != true)) {
                    this.RollupDateField = value;
                    this.RaisePropertyChanged("RollupDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoughCutCode {
            get {
                return this.RoughCutCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoughCutCodeField, value) != true)) {
                    this.RoughCutCodeField = value;
                    this.RaisePropertyChanged("RoughCutCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoughCutParamDescription {
            get {
                return this.RoughCutParamDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RoughCutParamDescriptionField, value) != true)) {
                    this.RoughCutParamDescriptionField = value;
                    this.RaisePropertyChanged("RoughCutParamDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SIValuesGroupSeq {
            get {
                return this.SIValuesGroupSeqField;
            }
            set {
                if ((this.SIValuesGroupSeqField.Equals(value) != true)) {
                    this.SIValuesGroupSeqField = value;
                    this.RaisePropertyChanged("SIValuesGroupSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SIValuesHeadNum {
            get {
                return this.SIValuesHeadNumField;
            }
            set {
                if ((this.SIValuesHeadNumField.Equals(value) != true)) {
                    this.SIValuesHeadNumField = value;
                    this.RaisePropertyChanged("SIValuesHeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowInputPrice {
            get {
                return this.ShowInputPriceField;
            }
            set {
                if ((this.ShowInputPriceField.Equals(value) != true)) {
                    this.ShowInputPriceField = value;
                    this.RaisePropertyChanged("ShowInputPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecHedDescription {
            get {
                return this.SpecHedDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecHedDescriptionField, value) != true)) {
                    this.SpecHedDescriptionField = value;
                    this.RaisePropertyChanged("SpecHedDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TLRBurdenCost {
            get {
                return this.TLRBurdenCostField;
            }
            set {
                if ((this.TLRBurdenCostField.Equals(value) != true)) {
                    this.TLRBurdenCostField = value;
                    this.RaisePropertyChanged("TLRBurdenCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TLRLaborCost {
            get {
                return this.TLRLaborCostField;
            }
            set {
                if ((this.TLRLaborCostField.Equals(value) != true)) {
                    this.TLRLaborCostField = value;
                    this.RaisePropertyChanged("TLRLaborCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TLRMaterialCost {
            get {
                return this.TLRMaterialCostField;
            }
            set {
                if ((this.TLRMaterialCostField.Equals(value) != true)) {
                    this.TLRMaterialCostField = value;
                    this.RaisePropertyChanged("TLRMaterialCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TLRMtlBurCost {
            get {
                return this.TLRMtlBurCostField;
            }
            set {
                if ((this.TLRMtlBurCostField.Equals(value) != true)) {
                    this.TLRMtlBurCostField = value;
                    this.RaisePropertyChanged("TLRMtlBurCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TLRSetupBurdenCost {
            get {
                return this.TLRSetupBurdenCostField;
            }
            set {
                if ((this.TLRSetupBurdenCostField.Equals(value) != true)) {
                    this.TLRSetupBurdenCostField = value;
                    this.RaisePropertyChanged("TLRSetupBurdenCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TLRSetupLaborCost {
            get {
                return this.TLRSetupLaborCostField;
            }
            set {
                if ((this.TLRSetupLaborCostField.Equals(value) != true)) {
                    this.TLRSetupLaborCostField = value;
                    this.RaisePropertyChanged("TLRSetupLaborCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TLRSubcontractCost {
            get {
                return this.TLRSubcontractCostField;
            }
            set {
                if ((this.TLRSubcontractCostField.Equals(value) != true)) {
                    this.TLRSubcontractCostField = value;
                    this.RaisePropertyChanged("TLRSubcontractCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAltRevForParts {
            get {
                return this.UseAltRevForPartsField;
            }
            set {
                if ((this.UseAltRevForPartsField.Equals(value) != true)) {
                    this.UseAltRevForPartsField = value;
                    this.RaisePropertyChanged("UseAltRevForParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseStaging {
            get {
                return this.UseStagingField;
            }
            set {
                if ((this.UseStagingField.Equals(value) != true)) {
                    this.UseStagingField = value;
                    this.RaisePropertyChanged("UseStaging");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValRefDes {
            get {
                return this.ValRefDesField;
            }
            set {
                if ((this.ValRefDesField.Equals(value) != true)) {
                    this.ValRefDesField = value;
                    this.RaisePropertyChanged("ValRefDes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebConfigured {
            get {
                return this.WebConfiguredField;
            }
            set {
                if ((this.WebConfiguredField.Equals(value) != true)) {
                    this.WebConfiguredField = value;
                    this.RaisePropertyChanged("WebConfigured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> vDate {
            get {
                return this.vDateField;
            }
            set {
                if ((this.vDateField.Equals(value) != true)) {
                    this.vDateField = value;
                    this.RaisePropertyChanged("vDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal vQty {
            get {
                return this.vQtyField;
            }
            set {
                if ((this.vQtyField.Equals(value) != true)) {
                    this.vQtyField = value;
                    this.RaisePropertyChanged("vQty");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartRevAttchRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevInspPlanRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartRevInspPlanRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevInspPlanRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspPlanDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspPlanPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SampleSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SampleSizePctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecHedDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevInspPlanRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspPlanDescription {
            get {
                return this.InspPlanDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InspPlanDescriptionField, value) != true)) {
                    this.InspPlanDescriptionField = value;
                    this.RaisePropertyChanged("InspPlanDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspPlanPartNum {
            get {
                return this.InspPlanPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InspPlanPartNumField, value) != true)) {
                    this.InspPlanPartNumField = value;
                    this.RaisePropertyChanged("InspPlanPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SampleSize {
            get {
                return this.SampleSizeField;
            }
            set {
                if ((this.SampleSizeField.Equals(value) != true)) {
                    this.SampleSizeField = value;
                    this.RaisePropertyChanged("SampleSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SampleSizePct {
            get {
                return this.SampleSizePctField;
            }
            set {
                if ((this.SampleSizePctField.Equals(value) != true)) {
                    this.SampleSizePctField = value;
                    this.RaisePropertyChanged("SampleSizePct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqPlan {
            get {
                return this.SeqPlanField;
            }
            set {
                if ((this.SeqPlanField.Equals(value) != true)) {
                    this.SeqPlanField = value;
                    this.RaisePropertyChanged("SeqPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecHedDescription {
            get {
                return this.SpecHedDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecHedDescriptionField, value) != true)) {
                    this.SpecHedDescriptionField = value;
                    this.RaisePropertyChanged("SpecHedDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecID {
            get {
                return this.SpecIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecIDField, value) != true)) {
                    this.SpecIDField = value;
                    this.RaisePropertyChanged("SpecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevInspPlanAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartRevInspPlanAttchRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevInspPlanAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevInspPlanAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqPlan {
            get {
                return this.SeqPlanField;
            }
            set {
                if ((this.SeqPlanField.Equals(value) != true)) {
                    this.SeqPlanField = value;
                    this.RaisePropertyChanged("SeqPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevInspVendRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartRevInspVendRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRevInspVendRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForceInspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InspCntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RejectCntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RejectCntByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RptCyclesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SampleSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SampleSizePctField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkipCntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SkipLotCtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkipLotCtlCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRevInspVendRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForceInsp {
            get {
                return this.ForceInspField;
            }
            set {
                if ((this.ForceInspField.Equals(value) != true)) {
                    this.ForceInspField = value;
                    this.RaisePropertyChanged("ForceInsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InspCnt {
            get {
                return this.InspCntField;
            }
            set {
                if ((this.InspCntField.Equals(value) != true)) {
                    this.InspCntField = value;
                    this.RaisePropertyChanged("InspCnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RejectCnt {
            get {
                return this.RejectCntField;
            }
            set {
                if ((this.RejectCntField.Equals(value) != true)) {
                    this.RejectCntField = value;
                    this.RaisePropertyChanged("RejectCnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RejectCntBy {
            get {
                return this.RejectCntByField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectCntByField, value) != true)) {
                    this.RejectCntByField = value;
                    this.RaisePropertyChanged("RejectCntBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RptCycles {
            get {
                return this.RptCyclesField;
            }
            set {
                if ((this.RptCyclesField.Equals(value) != true)) {
                    this.RptCyclesField = value;
                    this.RaisePropertyChanged("RptCycles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SampleSize {
            get {
                return this.SampleSizeField;
            }
            set {
                if ((this.SampleSizeField.Equals(value) != true)) {
                    this.SampleSizeField = value;
                    this.RaisePropertyChanged("SampleSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SampleSizePct {
            get {
                return this.SampleSizePctField;
            }
            set {
                if ((this.SampleSizePctField.Equals(value) != true)) {
                    this.SampleSizePctField = value;
                    this.RaisePropertyChanged("SampleSizePct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkipCnt {
            get {
                return this.SkipCntField;
            }
            set {
                if ((this.SkipCntField.Equals(value) != true)) {
                    this.SkipCntField = value;
                    this.RaisePropertyChanged("SkipCnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SkipLotCtl {
            get {
                return this.SkipLotCtlField;
            }
            set {
                if ((this.SkipLotCtlField.Equals(value) != true)) {
                    this.SkipLotCtlField = value;
                    this.RaisePropertyChanged("SkipLotCtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkipLotCtlCode {
            get {
                return this.SkipLotCtlCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SkipLotCtlCodeField, value) != true)) {
                    this.SkipLotCtlCodeField = value;
                    this.RaisePropertyChanged("SkipLotCtlCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartSubsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartSubsRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartSubsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultSubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubPartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubPartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubPartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubPartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubPartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SugOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SuggestedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartSubsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultSub {
            get {
                return this.DefaultSubField;
            }
            set {
                if ((this.DefaultSubField.Equals(value) != true)) {
                    this.DefaultSubField = value;
                    this.RaisePropertyChanged("DefaultSub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyPer {
            get {
                return this.QtyPerField;
            }
            set {
                if ((this.QtyPerField.Equals(value) != true)) {
                    this.QtyPerField = value;
                    this.RaisePropertyChanged("QtyPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecType {
            get {
                return this.RecTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecTypeField, value) != true)) {
                    this.RecTypeField = value;
                    this.RaisePropertyChanged("RecType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPart {
            get {
                return this.SubPartField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartField, value) != true)) {
                    this.SubPartField = value;
                    this.RaisePropertyChanged("SubPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartIUM {
            get {
                return this.SubPartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartIUMField, value) != true)) {
                    this.SubPartIUMField = value;
                    this.RaisePropertyChanged("SubPartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartPartDescription {
            get {
                return this.SubPartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartPartDescriptionField, value) != true)) {
                    this.SubPartPartDescriptionField = value;
                    this.RaisePropertyChanged("SubPartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartPricePerCode {
            get {
                return this.SubPartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartPricePerCodeField, value) != true)) {
                    this.SubPartPricePerCodeField = value;
                    this.RaisePropertyChanged("SubPartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubPartSalesUM {
            get {
                return this.SubPartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SubPartSalesUMField, value) != true)) {
                    this.SubPartSalesUMField = value;
                    this.RaisePropertyChanged("SubPartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubPartSellingFactor {
            get {
                return this.SubPartSellingFactorField;
            }
            set {
                if ((this.SubPartSellingFactorField.Equals(value) != true)) {
                    this.SubPartSellingFactorField = value;
                    this.RaisePropertyChanged("SubPartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubPartTrackDimension {
            get {
                return this.SubPartTrackDimensionField;
            }
            set {
                if ((this.SubPartTrackDimensionField.Equals(value) != true)) {
                    this.SubPartTrackDimensionField = value;
                    this.RaisePropertyChanged("SubPartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubPartTrackLots {
            get {
                return this.SubPartTrackLotsField;
            }
            set {
                if ((this.SubPartTrackLotsField.Equals(value) != true)) {
                    this.SubPartTrackLotsField = value;
                    this.RaisePropertyChanged("SubPartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubPartTrackSerialNum {
            get {
                return this.SubPartTrackSerialNumField;
            }
            set {
                if ((this.SubPartTrackSerialNumField.Equals(value) != true)) {
                    this.SubPartTrackSerialNumField = value;
                    this.RaisePropertyChanged("SubPartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SugOrderQty {
            get {
                return this.SugOrderQtyField;
            }
            set {
                if ((this.SugOrderQtyField.Equals(value) != true)) {
                    this.SugOrderQtyField = value;
                    this.RaisePropertyChanged("SugOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SuggestedQty {
            get {
                return this.SuggestedQtyField;
            }
            set {
                if ((this.SuggestedQtyField.Equals(value) != true)) {
                    this.SuggestedQtyField = value;
                    this.RaisePropertyChanged("SuggestedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartUOMRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartUOMRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseUOMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartUOMRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConvFromUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConvOperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConvOverrrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConvToUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispPkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispPkgCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DispPkgDisplayHiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DispPkgDisplaySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DispPkgIsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EAN13Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EAN14Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EAN8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTrackOnHandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GTIN14Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HIBCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasBeenUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NetVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetVolumeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartSpecificField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartSpecificPkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackOnHandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPC12Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WebUOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseUOMCode {
            get {
                return this.BaseUOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUOMCodeField, value) != true)) {
                    this.BaseUOMCodeField = value;
                    this.RaisePropertyChanged("BaseUOMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartUOMRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ConvFactor {
            get {
                return this.ConvFactorField;
            }
            set {
                if ((this.ConvFactorField.Equals(value) != true)) {
                    this.ConvFactorField = value;
                    this.RaisePropertyChanged("ConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConvFromUOM {
            get {
                return this.ConvFromUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ConvFromUOMField, value) != true)) {
                    this.ConvFromUOMField = value;
                    this.RaisePropertyChanged("ConvFromUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConvOperator {
            get {
                return this.ConvOperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.ConvOperatorField, value) != true)) {
                    this.ConvOperatorField = value;
                    this.RaisePropertyChanged("ConvOperator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConvOverrride {
            get {
                return this.ConvOverrrideField;
            }
            set {
                if ((this.ConvOverrrideField.Equals(value) != true)) {
                    this.ConvOverrrideField = value;
                    this.RaisePropertyChanged("ConvOverrride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConvToUOM {
            get {
                return this.ConvToUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ConvToUOMField, value) != true)) {
                    this.ConvToUOMField = value;
                    this.RaisePropertyChanged("ConvToUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispPkgCode {
            get {
                return this.DispPkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispPkgCodeField, value) != true)) {
                    this.DispPkgCodeField = value;
                    this.RaisePropertyChanged("DispPkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispPkgCodeDesc {
            get {
                return this.DispPkgCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DispPkgCodeDescField, value) != true)) {
                    this.DispPkgCodeDescField = value;
                    this.RaisePropertyChanged("DispPkgCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DispPkgDisplayHidden {
            get {
                return this.DispPkgDisplayHiddenField;
            }
            set {
                if ((this.DispPkgDisplayHiddenField.Equals(value) != true)) {
                    this.DispPkgDisplayHiddenField = value;
                    this.RaisePropertyChanged("DispPkgDisplayHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DispPkgDisplaySeq {
            get {
                return this.DispPkgDisplaySeqField;
            }
            set {
                if ((this.DispPkgDisplaySeqField.Equals(value) != true)) {
                    this.DispPkgDisplaySeqField = value;
                    this.RaisePropertyChanged("DispPkgDisplaySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DispPkgIsDefault {
            get {
                return this.DispPkgIsDefaultField;
            }
            set {
                if ((this.DispPkgIsDefaultField.Equals(value) != true)) {
                    this.DispPkgIsDefaultField = value;
                    this.RaisePropertyChanged("DispPkgIsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EAN13 {
            get {
                return this.EAN13Field;
            }
            set {
                if ((object.ReferenceEquals(this.EAN13Field, value) != true)) {
                    this.EAN13Field = value;
                    this.RaisePropertyChanged("EAN13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EAN14 {
            get {
                return this.EAN14Field;
            }
            set {
                if ((object.ReferenceEquals(this.EAN14Field, value) != true)) {
                    this.EAN14Field = value;
                    this.RaisePropertyChanged("EAN14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EAN8 {
            get {
                return this.EAN8Field;
            }
            set {
                if ((object.ReferenceEquals(this.EAN8Field, value) != true)) {
                    this.EAN8Field = value;
                    this.RaisePropertyChanged("EAN8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableConvFactor {
            get {
                return this.EnableConvFactorField;
            }
            set {
                if ((this.EnableConvFactorField.Equals(value) != true)) {
                    this.EnableConvFactorField = value;
                    this.RaisePropertyChanged("EnableConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTrackOnHand {
            get {
                return this.EnableTrackOnHandField;
            }
            set {
                if ((this.EnableTrackOnHandField.Equals(value) != true)) {
                    this.EnableTrackOnHandField = value;
                    this.RaisePropertyChanged("EnableTrackOnHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GTIN14 {
            get {
                return this.GTIN14Field;
            }
            set {
                if ((object.ReferenceEquals(this.GTIN14Field, value) != true)) {
                    this.GTIN14Field = value;
                    this.RaisePropertyChanged("GTIN14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HIBC {
            get {
                return this.HIBCField;
            }
            set {
                if ((object.ReferenceEquals(this.HIBCField, value) != true)) {
                    this.HIBCField = value;
                    this.RaisePropertyChanged("HIBC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasBeenUsed {
            get {
                return this.HasBeenUsedField;
            }
            set {
                if ((this.HasBeenUsedField.Equals(value) != true)) {
                    this.HasBeenUsedField = value;
                    this.RaisePropertyChanged("HasBeenUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NetVolume {
            get {
                return this.NetVolumeField;
            }
            set {
                if ((this.NetVolumeField.Equals(value) != true)) {
                    this.NetVolumeField = value;
                    this.RaisePropertyChanged("NetVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetVolumeUOM {
            get {
                return this.NetVolumeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.NetVolumeUOMField, value) != true)) {
                    this.NetVolumeUOMField = value;
                    this.RaisePropertyChanged("NetVolumeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartSpecific {
            get {
                return this.PartSpecificField;
            }
            set {
                if ((this.PartSpecificField.Equals(value) != true)) {
                    this.PartSpecificField = value;
                    this.RaisePropertyChanged("PartSpecific");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartSpecificPkgCode {
            get {
                return this.PartSpecificPkgCodeField;
            }
            set {
                if ((this.PartSpecificPkgCodeField.Equals(value) != true)) {
                    this.PartSpecificPkgCodeField = value;
                    this.RaisePropertyChanged("PartSpecificPkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackOnHand {
            get {
                return this.TrackOnHandField;
            }
            set {
                if ((this.TrackOnHandField.Equals(value) != true)) {
                    this.TrackOnHandField = value;
                    this.RaisePropertyChanged("TrackOnHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOMCode {
            get {
                return this.UOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMCodeField, value) != true)) {
                    this.UOMCodeField = value;
                    this.RaisePropertyChanged("UOMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOMDesc {
            get {
                return this.UOMDescField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMDescField, value) != true)) {
                    this.UOMDescField = value;
                    this.RaisePropertyChanged("UOMDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPC12 {
            get {
                return this.UPC12Field;
            }
            set {
                if ((object.ReferenceEquals(this.UPC12Field, value) != true)) {
                    this.UPC12Field = value;
                    this.RaisePropertyChanged("UPC12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WebUOM {
            get {
                return this.WebUOMField;
            }
            set {
                if ((this.WebUOMField.Equals(value) != true)) {
                    this.WebUOMField = value;
                    this.RaisePropertyChanged("WebUOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartWhseRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartWhseRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllocatedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyToOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcPcntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcQtyAdjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartWhseRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountFreqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CountedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DemandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobAllocatedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobDemandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobPickedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobPickingQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobReservedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBActionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBBinNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBCodeKBActionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBCodeKBDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBPOLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBPONUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBPlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal KBQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBWarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBWarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastCCDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualABCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaximumQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinAbcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinimumQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NonNettableQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OvrrideCountFreqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PcntToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PickedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PickingQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimBinNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyAdjToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReservedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SafetyQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SafetyQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalesAllocatedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalesDemandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalesPickedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalesPickingQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalesReservedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemAbcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TFOrdAllocatedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TFOrdDemandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TFOrdPickedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TFOrdPickingQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TFOrdReservedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalDemandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnfirmJobDemandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllocatedQty {
            get {
                return this.AllocatedQtyField;
            }
            set {
                if ((this.AllocatedQtyField.Equals(value) != true)) {
                    this.AllocatedQtyField = value;
                    this.RaisePropertyChanged("AllocatedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyToOrderQty {
            get {
                return this.BuyToOrderQtyField;
            }
            set {
                if ((this.BuyToOrderQtyField.Equals(value) != true)) {
                    this.BuyToOrderQtyField = value;
                    this.RaisePropertyChanged("BuyToOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcPcnt {
            get {
                return this.CalcPcntField;
            }
            set {
                if ((this.CalcPcntField.Equals(value) != true)) {
                    this.CalcPcntField = value;
                    this.RaisePropertyChanged("CalcPcnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcQty {
            get {
                return this.CalcQtyField;
            }
            set {
                if ((this.CalcQtyField.Equals(value) != true)) {
                    this.CalcQtyField = value;
                    this.RaisePropertyChanged("CalcQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcQtyAdj {
            get {
                return this.CalcQtyAdjField;
            }
            set {
                if ((this.CalcQtyAdjField.Equals(value) != true)) {
                    this.CalcQtyAdjField = value;
                    this.RaisePropertyChanged("CalcQtyAdj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcValue {
            get {
                return this.CalcValueField;
            }
            set {
                if ((this.CalcValueField.Equals(value) != true)) {
                    this.CalcValueField = value;
                    this.RaisePropertyChanged("CalcValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartWhseRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountFreq {
            get {
                return this.CountFreqField;
            }
            set {
                if ((this.CountFreqField.Equals(value) != true)) {
                    this.CountFreqField = value;
                    this.RaisePropertyChanged("CountFreq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CountedDate {
            get {
                return this.CountedDateField;
            }
            set {
                if ((this.CountedDateField.Equals(value) != true)) {
                    this.CountedDateField = value;
                    this.RaisePropertyChanged("CountedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultWhse {
            get {
                return this.DefaultWhseField;
            }
            set {
                if ((this.DefaultWhseField.Equals(value) != true)) {
                    this.DefaultWhseField = value;
                    this.RaisePropertyChanged("DefaultWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DemandQty {
            get {
                return this.DemandQtyField;
            }
            set {
                if ((this.DemandQtyField.Equals(value) != true)) {
                    this.DemandQtyField = value;
                    this.RaisePropertyChanged("DemandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobAllocatedQty {
            get {
                return this.JobAllocatedQtyField;
            }
            set {
                if ((this.JobAllocatedQtyField.Equals(value) != true)) {
                    this.JobAllocatedQtyField = value;
                    this.RaisePropertyChanged("JobAllocatedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobDemandQty {
            get {
                return this.JobDemandQtyField;
            }
            set {
                if ((this.JobDemandQtyField.Equals(value) != true)) {
                    this.JobDemandQtyField = value;
                    this.RaisePropertyChanged("JobDemandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobPickedQty {
            get {
                return this.JobPickedQtyField;
            }
            set {
                if ((this.JobPickedQtyField.Equals(value) != true)) {
                    this.JobPickedQtyField = value;
                    this.RaisePropertyChanged("JobPickedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobPickingQty {
            get {
                return this.JobPickingQtyField;
            }
            set {
                if ((this.JobPickingQtyField.Equals(value) != true)) {
                    this.JobPickingQtyField = value;
                    this.RaisePropertyChanged("JobPickingQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobReservedQty {
            get {
                return this.JobReservedQtyField;
            }
            set {
                if ((this.JobReservedQtyField.Equals(value) != true)) {
                    this.JobReservedQtyField = value;
                    this.RaisePropertyChanged("JobReservedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBActionCode {
            get {
                return this.KBActionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KBActionCodeField, value) != true)) {
                    this.KBActionCodeField = value;
                    this.RaisePropertyChanged("KBActionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBActionDesc {
            get {
                return this.KBActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBActionDescField, value) != true)) {
                    this.KBActionDescField = value;
                    this.RaisePropertyChanged("KBActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBBinNum {
            get {
                return this.KBBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.KBBinNumField, value) != true)) {
                    this.KBBinNumField = value;
                    this.RaisePropertyChanged("KBBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBBinNumDescription {
            get {
                return this.KBBinNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KBBinNumDescriptionField, value) != true)) {
                    this.KBBinNumDescriptionField = value;
                    this.RaisePropertyChanged("KBBinNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBCode {
            get {
                return this.KBCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KBCodeField, value) != true)) {
                    this.KBCodeField = value;
                    this.RaisePropertyChanged("KBCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBCodeKBActionCode {
            get {
                return this.KBCodeKBActionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KBCodeKBActionCodeField, value) != true)) {
                    this.KBCodeKBActionCodeField = value;
                    this.RaisePropertyChanged("KBCodeKBActionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBCodeKBDescription {
            get {
                return this.KBCodeKBDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KBCodeKBDescriptionField, value) != true)) {
                    this.KBCodeKBDescriptionField = value;
                    this.RaisePropertyChanged("KBCodeKBDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBPOLine {
            get {
                return this.KBPOLineField;
            }
            set {
                if ((this.KBPOLineField.Equals(value) != true)) {
                    this.KBPOLineField = value;
                    this.RaisePropertyChanged("KBPOLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBPONUM {
            get {
                return this.KBPONUMField;
            }
            set {
                if ((this.KBPONUMField.Equals(value) != true)) {
                    this.KBPONUMField = value;
                    this.RaisePropertyChanged("KBPONUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBPlant {
            get {
                return this.KBPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.KBPlantField, value) != true)) {
                    this.KBPlantField = value;
                    this.RaisePropertyChanged("KBPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBPlantName {
            get {
                return this.KBPlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.KBPlantNameField, value) != true)) {
                    this.KBPlantNameField = value;
                    this.RaisePropertyChanged("KBPlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal KBQty {
            get {
                return this.KBQtyField;
            }
            set {
                if ((this.KBQtyField.Equals(value) != true)) {
                    this.KBQtyField = value;
                    this.RaisePropertyChanged("KBQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBWarehouseCode {
            get {
                return this.KBWarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KBWarehouseCodeField, value) != true)) {
                    this.KBWarehouseCodeField = value;
                    this.RaisePropertyChanged("KBWarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBWarehouseCodeDescription {
            get {
                return this.KBWarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KBWarehouseCodeDescriptionField, value) != true)) {
                    this.KBWarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("KBWarehouseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastCCDate {
            get {
                return this.LastCCDateField;
            }
            set {
                if ((this.LastCCDateField.Equals(value) != true)) {
                    this.LastCCDateField = value;
                    this.RaisePropertyChanged("LastCCDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManualABC {
            get {
                return this.ManualABCField;
            }
            set {
                if ((this.ManualABCField.Equals(value) != true)) {
                    this.ManualABCField = value;
                    this.RaisePropertyChanged("ManualABC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxQtyUOM {
            get {
                return this.MaxQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxQtyUOMField, value) != true)) {
                    this.MaxQtyUOMField = value;
                    this.RaisePropertyChanged("MaxQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumQty {
            get {
                return this.MaximumQtyField;
            }
            set {
                if ((this.MaximumQtyField.Equals(value) != true)) {
                    this.MaximumQtyField = value;
                    this.RaisePropertyChanged("MaximumQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinAbc {
            get {
                return this.MinAbcField;
            }
            set {
                if ((object.ReferenceEquals(this.MinAbcField, value) != true)) {
                    this.MinAbcField = value;
                    this.RaisePropertyChanged("MinAbc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinQtyUOM {
            get {
                return this.MinQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.MinQtyUOMField, value) != true)) {
                    this.MinQtyUOMField = value;
                    this.RaisePropertyChanged("MinQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinimumQty {
            get {
                return this.MinimumQtyField;
            }
            set {
                if ((this.MinimumQtyField.Equals(value) != true)) {
                    this.MinimumQtyField = value;
                    this.RaisePropertyChanged("MinimumQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NonNettableQty {
            get {
                return this.NonNettableQtyField;
            }
            set {
                if ((this.NonNettableQtyField.Equals(value) != true)) {
                    this.NonNettableQtyField = value;
                    this.RaisePropertyChanged("NonNettableQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQty {
            get {
                return this.OnHandQtyField;
            }
            set {
                if ((this.OnHandQtyField.Equals(value) != true)) {
                    this.OnHandQtyField = value;
                    this.RaisePropertyChanged("OnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OvrrideCountFreq {
            get {
                return this.OvrrideCountFreqField;
            }
            set {
                if ((this.OvrrideCountFreqField.Equals(value) != true)) {
                    this.OvrrideCountFreqField = value;
                    this.RaisePropertyChanged("OvrrideCountFreq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PcntTolerance {
            get {
                return this.PcntToleranceField;
            }
            set {
                if ((this.PcntToleranceField.Equals(value) != true)) {
                    this.PcntToleranceField = value;
                    this.RaisePropertyChanged("PcntTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PickedQty {
            get {
                return this.PickedQtyField;
            }
            set {
                if ((this.PickedQtyField.Equals(value) != true)) {
                    this.PickedQtyField = value;
                    this.RaisePropertyChanged("PickedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PickingQty {
            get {
                return this.PickingQtyField;
            }
            set {
                if ((this.PickingQtyField.Equals(value) != true)) {
                    this.PickingQtyField = value;
                    this.RaisePropertyChanged("PickingQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantOwner {
            get {
                return this.PlantOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantOwnerField, value) != true)) {
                    this.PlantOwnerField = value;
                    this.RaisePropertyChanged("PlantOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimBinNum {
            get {
                return this.PrimBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimBinNumField, value) != true)) {
                    this.PrimBinNumField = value;
                    this.RaisePropertyChanged("PrimBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimBinNumDescription {
            get {
                return this.PrimBinNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimBinNumDescriptionField, value) != true)) {
                    this.PrimBinNumDescriptionField = value;
                    this.RaisePropertyChanged("PrimBinNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyAdjTolerance {
            get {
                return this.QtyAdjToleranceField;
            }
            set {
                if ((this.QtyAdjToleranceField.Equals(value) != true)) {
                    this.QtyAdjToleranceField = value;
                    this.RaisePropertyChanged("QtyAdjTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyTolerance {
            get {
                return this.QtyToleranceField;
            }
            set {
                if ((this.QtyToleranceField.Equals(value) != true)) {
                    this.QtyToleranceField = value;
                    this.RaisePropertyChanged("QtyTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReservedQty {
            get {
                return this.ReservedQtyField;
            }
            set {
                if ((this.ReservedQtyField.Equals(value) != true)) {
                    this.ReservedQtyField = value;
                    this.RaisePropertyChanged("ReservedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SafetyQty {
            get {
                return this.SafetyQtyField;
            }
            set {
                if ((this.SafetyQtyField.Equals(value) != true)) {
                    this.SafetyQtyField = value;
                    this.RaisePropertyChanged("SafetyQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SafetyQtyUOM {
            get {
                return this.SafetyQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.SafetyQtyUOMField, value) != true)) {
                    this.SafetyQtyUOMField = value;
                    this.RaisePropertyChanged("SafetyQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalesAllocatedQty {
            get {
                return this.SalesAllocatedQtyField;
            }
            set {
                if ((this.SalesAllocatedQtyField.Equals(value) != true)) {
                    this.SalesAllocatedQtyField = value;
                    this.RaisePropertyChanged("SalesAllocatedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalesDemandQty {
            get {
                return this.SalesDemandQtyField;
            }
            set {
                if ((this.SalesDemandQtyField.Equals(value) != true)) {
                    this.SalesDemandQtyField = value;
                    this.RaisePropertyChanged("SalesDemandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalesPickedQty {
            get {
                return this.SalesPickedQtyField;
            }
            set {
                if ((this.SalesPickedQtyField.Equals(value) != true)) {
                    this.SalesPickedQtyField = value;
                    this.RaisePropertyChanged("SalesPickedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalesPickingQty {
            get {
                return this.SalesPickingQtyField;
            }
            set {
                if ((this.SalesPickingQtyField.Equals(value) != true)) {
                    this.SalesPickingQtyField = value;
                    this.RaisePropertyChanged("SalesPickingQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalesReservedQty {
            get {
                return this.SalesReservedQtyField;
            }
            set {
                if ((this.SalesReservedQtyField.Equals(value) != true)) {
                    this.SalesReservedQtyField = value;
                    this.RaisePropertyChanged("SalesReservedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemAbc {
            get {
                return this.SystemAbcField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemAbcField, value) != true)) {
                    this.SystemAbcField = value;
                    this.RaisePropertyChanged("SystemAbc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TFOrdAllocatedQty {
            get {
                return this.TFOrdAllocatedQtyField;
            }
            set {
                if ((this.TFOrdAllocatedQtyField.Equals(value) != true)) {
                    this.TFOrdAllocatedQtyField = value;
                    this.RaisePropertyChanged("TFOrdAllocatedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TFOrdDemandQty {
            get {
                return this.TFOrdDemandQtyField;
            }
            set {
                if ((this.TFOrdDemandQtyField.Equals(value) != true)) {
                    this.TFOrdDemandQtyField = value;
                    this.RaisePropertyChanged("TFOrdDemandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TFOrdPickedQty {
            get {
                return this.TFOrdPickedQtyField;
            }
            set {
                if ((this.TFOrdPickedQtyField.Equals(value) != true)) {
                    this.TFOrdPickedQtyField = value;
                    this.RaisePropertyChanged("TFOrdPickedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TFOrdPickingQty {
            get {
                return this.TFOrdPickingQtyField;
            }
            set {
                if ((this.TFOrdPickingQtyField.Equals(value) != true)) {
                    this.TFOrdPickingQtyField = value;
                    this.RaisePropertyChanged("TFOrdPickingQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TFOrdReservedQty {
            get {
                return this.TFOrdReservedQtyField;
            }
            set {
                if ((this.TFOrdReservedQtyField.Equals(value) != true)) {
                    this.TFOrdReservedQtyField = value;
                    this.RaisePropertyChanged("TFOrdReservedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalDemand {
            get {
                return this.TotalDemandField;
            }
            set {
                if ((this.TotalDemandField.Equals(value) != true)) {
                    this.TotalDemandField = value;
                    this.RaisePropertyChanged("TotalDemand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnfirmJobDemandQty {
            get {
                return this.UnfirmJobDemandQtyField;
            }
            set {
                if ((this.UnfirmJobDemandQtyField.Equals(value) != true)) {
                    this.UnfirmJobDemandQtyField = value;
                    this.RaisePropertyChanged("UnfirmJobDemandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValueTolerance {
            get {
                return this.ValueToleranceField;
            }
            set {
                if ((this.ValueToleranceField.Equals(value) != true)) {
                    this.ValueToleranceField = value;
                    this.RaisePropertyChanged("ValueTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseDescription {
            get {
                return this.WarehouseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseDescriptionField, value) != true)) {
                    this.WarehouseDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxExemptRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class TaxExemptRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.TaxExemptRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedToFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesTRCDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesTaxDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxTextDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.TaxExemptRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveFrom {
            get {
                return this.EffectiveFromField;
            }
            set {
                if ((this.EffectiveFromField.Equals(value) != true)) {
                    this.EffectiveFromField = value;
                    this.RaisePropertyChanged("EffectiveFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveTo {
            get {
                return this.EffectiveToField;
            }
            set {
                if ((this.EffectiveToField.Equals(value) != true)) {
                    this.EffectiveToField = value;
                    this.RaisePropertyChanged("EffectiveTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key1 {
            get {
                return this.Key1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key1Field, value) != true)) {
                    this.Key1Field = value;
                    this.RaisePropertyChanged("Key1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key2 {
            get {
                return this.Key2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key2Field, value) != true)) {
                    this.Key2Field = value;
                    this.RaisePropertyChanged("Key2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedToFile {
            get {
                return this.RelatedToFileField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedToFileField, value) != true)) {
                    this.RelatedToFileField = value;
                    this.RaisePropertyChanged("RelatedToFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesTRCDescription {
            get {
                return this.SalesTRCDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesTRCDescriptionField, value) != true)) {
                    this.SalesTRCDescriptionField = value;
                    this.RaisePropertyChanged("SalesTRCDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesTaxDescription {
            get {
                return this.SalesTaxDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesTaxDescriptionField, value) != true)) {
                    this.SalesTaxDescriptionField = value;
                    this.RaisePropertyChanged("SalesTaxDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxTextDescription {
            get {
                return this.TaxTextDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxTextDescriptionField, value) != true)) {
                    this.TaxTextDescriptionField = value;
                    this.RaisePropertyChanged("TaxTextDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartListRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotBatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotBeforeDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotCureDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotExpDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotFirmwareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotHeatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotMfgBatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotMfgDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LotMfgLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomBOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QtyBearingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassIDField, value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InActive {
            get {
                return this.InActiveField;
            }
            set {
                if ((this.InActiveField.Equals(value) != true)) {
                    this.InActiveField = value;
                    this.RaisePropertyChanged("InActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotBatch {
            get {
                return this.LotBatchField;
            }
            set {
                if ((this.LotBatchField.Equals(value) != true)) {
                    this.LotBatchField = value;
                    this.RaisePropertyChanged("LotBatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotBeforeDt {
            get {
                return this.LotBeforeDtField;
            }
            set {
                if ((this.LotBeforeDtField.Equals(value) != true)) {
                    this.LotBeforeDtField = value;
                    this.RaisePropertyChanged("LotBeforeDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotCureDt {
            get {
                return this.LotCureDtField;
            }
            set {
                if ((this.LotCureDtField.Equals(value) != true)) {
                    this.LotCureDtField = value;
                    this.RaisePropertyChanged("LotCureDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotExpDt {
            get {
                return this.LotExpDtField;
            }
            set {
                if ((this.LotExpDtField.Equals(value) != true)) {
                    this.LotExpDtField = value;
                    this.RaisePropertyChanged("LotExpDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotFirmware {
            get {
                return this.LotFirmwareField;
            }
            set {
                if ((this.LotFirmwareField.Equals(value) != true)) {
                    this.LotFirmwareField = value;
                    this.RaisePropertyChanged("LotFirmware");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotHeat {
            get {
                return this.LotHeatField;
            }
            set {
                if ((this.LotHeatField.Equals(value) != true)) {
                    this.LotHeatField = value;
                    this.RaisePropertyChanged("LotHeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotMfgBatch {
            get {
                return this.LotMfgBatchField;
            }
            set {
                if ((this.LotMfgBatchField.Equals(value) != true)) {
                    this.LotMfgBatchField = value;
                    this.RaisePropertyChanged("LotMfgBatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotMfgDt {
            get {
                return this.LotMfgDtField;
            }
            set {
                if ((this.LotMfgDtField.Equals(value) != true)) {
                    this.LotMfgDtField = value;
                    this.RaisePropertyChanged("LotMfgDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LotMfgLot {
            get {
                return this.LotMfgLotField;
            }
            set {
                if ((this.LotMfgLotField.Equals(value) != true)) {
                    this.LotMfgLotField = value;
                    this.RaisePropertyChanged("LotMfgLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Method {
            get {
                return this.MethodField;
            }
            set {
                if ((this.MethodField.Equals(value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStock {
            get {
                return this.NonStockField;
            }
            set {
                if ((this.NonStockField.Equals(value) != true)) {
                    this.NonStockField = value;
                    this.RaisePropertyChanged("NonStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnHold {
            get {
                return this.OnHoldField;
            }
            set {
                if ((this.OnHoldField.Equals(value) != true)) {
                    this.OnHoldField = value;
                    this.RaisePropertyChanged("OnHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomBOM {
            get {
                return this.PhantomBOMField;
            }
            set {
                if ((this.PhantomBOMField.Equals(value) != true)) {
                    this.PhantomBOMField = value;
                    this.RaisePropertyChanged("PhantomBOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QtyBearing {
            get {
                return this.QtyBearingField;
            }
            set {
                if ((this.QtyBearingField.Equals(value) != true)) {
                    this.QtyBearingField = value;
                    this.RaisePropertyChanged("QtyBearing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchWord {
            get {
                return this.SearchWordField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchWordField, value) != true)) {
                    this.SearchWordField = value;
                    this.RaisePropertyChanged("SearchWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackDimension {
            get {
                return this.TrackDimensionField;
            }
            set {
                if ((this.TrackDimensionField.Equals(value) != true)) {
                    this.TrackDimensionField = value;
                    this.RaisePropertyChanged("TrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackLots {
            get {
                return this.TrackLotsField;
            }
            set {
                if ((this.TrackLotsField.Equals(value) != true)) {
                    this.TrackLotsField = value;
                    this.RaisePropertyChanged("TrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackSerialNum {
            get {
                return this.TrackSerialNumField;
            }
            set {
                if ((this.TrackSerialNumField.Equals(value) != true)) {
                    this.TrackSerialNumField = value;
                    this.RaisePropertyChanged("TrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRefDesWhereUsedRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartRefDesWhereUsedRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartRefDesWhereUsedRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MtlPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefDesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RefDesSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal XLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal YLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ZLocationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartRefDesWhereUsedRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MtlPartNum {
            get {
                return this.MtlPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MtlPartNumField, value) != true)) {
                    this.MtlPartNumField = value;
                    this.RaisePropertyChanged("MtlPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MtlSeq {
            get {
                return this.MtlSeqField;
            }
            set {
                if ((this.MtlSeqField.Equals(value) != true)) {
                    this.MtlSeqField = value;
                    this.RaisePropertyChanged("MtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefDes {
            get {
                return this.RefDesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefDesField, value) != true)) {
                    this.RefDesField = value;
                    this.RaisePropertyChanged("RefDes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RefDesSeq {
            get {
                return this.RefDesSeqField;
            }
            set {
                if ((this.RefDesSeqField.Equals(value) != true)) {
                    this.RefDesSeqField = value;
                    this.RaisePropertyChanged("RefDesSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((this.RotationField.Equals(value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Side {
            get {
                return this.SideField;
            }
            set {
                if ((object.ReferenceEquals(this.SideField, value) != true)) {
                    this.SideField = value;
                    this.RaisePropertyChanged("Side");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal XLocation {
            get {
                return this.XLocationField;
            }
            set {
                if ((this.XLocationField.Equals(value) != true)) {
                    this.XLocationField = value;
                    this.RaisePropertyChanged("XLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal YLocation {
            get {
                return this.YLocationField;
            }
            set {
                if ((this.YLocationField.Equals(value) != true)) {
                    this.YLocationField = value;
                    this.RaisePropertyChanged("YLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ZLocation {
            get {
                return this.ZLocationField;
            }
            set {
                if ((this.ZLocationField.Equals(value) != true)) {
                    this.ZLocationField = value;
                    this.RaisePropertyChanged("ZLocation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartWhereUsedRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartWhereUsedRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BaseMethodOverriddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanTrackUpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartWhereUsedRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FindNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FixedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MtlPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PullAsAsmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyPerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltMethod {
            get {
                return this.AltMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.AltMethodField, value) != true)) {
                    this.AltMethodField = value;
                    this.RaisePropertyChanged("AltMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BaseMethodOverridden {
            get {
                return this.BaseMethodOverriddenField;
            }
            set {
                if ((this.BaseMethodOverriddenField.Equals(value) != true)) {
                    this.BaseMethodOverriddenField = value;
                    this.RaisePropertyChanged("BaseMethodOverridden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanTrackUp {
            get {
                return this.CanTrackUpField;
            }
            set {
                if ((this.CanTrackUpField.Equals(value) != true)) {
                    this.CanTrackUpField = value;
                    this.RaisePropertyChanged("CanTrackUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartWhereUsedRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FindNum {
            get {
                return this.FindNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FindNumField, value) != true)) {
                    this.FindNumField = value;
                    this.RaisePropertyChanged("FindNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FixedQty {
            get {
                return this.FixedQtyField;
            }
            set {
                if ((this.FixedQtyField.Equals(value) != true)) {
                    this.FixedQtyField = value;
                    this.RaisePropertyChanged("FixedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MtlPartNum {
            get {
                return this.MtlPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MtlPartNumField, value) != true)) {
                    this.MtlPartNumField = value;
                    this.RaisePropertyChanged("MtlPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MtlSeq {
            get {
                return this.MtlSeqField;
            }
            set {
                if ((this.MtlSeqField.Equals(value) != true)) {
                    this.MtlSeqField = value;
                    this.RaisePropertyChanged("MtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpCode {
            get {
                return this.OpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OpCodeField, value) != true)) {
                    this.OpCodeField = value;
                    this.RaisePropertyChanged("OpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpDesc {
            get {
                return this.OpDescField;
            }
            set {
                if ((object.ReferenceEquals(this.OpDescField, value) != true)) {
                    this.OpDescField = value;
                    this.RaisePropertyChanged("OpDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PullAsAsm {
            get {
                return this.PullAsAsmField;
            }
            set {
                if ((this.PullAsAsmField.Equals(value) != true)) {
                    this.PullAsAsmField = value;
                    this.RaisePropertyChanged("PullAsAsm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyPer {
            get {
                return this.QtyPerField;
            }
            set {
                if ((this.QtyPerField.Equals(value) != true)) {
                    this.QtyPerField = value;
                    this.RaisePropertyChanged("QtyPer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDesc {
            get {
                return this.TypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescField, value) != true)) {
                    this.TypeDescField = value;
                    this.RaisePropertyChanged("TypeDesc");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartGetDMRListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartGetDMRListRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvgBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvgLbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvgMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvgMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvgSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.PartSvc.PartGetDMRListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DMRNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaterialBurCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaterialLabCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaterialMtlCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaterialSubCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenDMRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OprSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyRemainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReqDMRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotAcceptedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDiscrepantQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotRejectedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendRMANumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvgBurUnitCost {
            get {
                return this.AvgBurUnitCostField;
            }
            set {
                if ((this.AvgBurUnitCostField.Equals(value) != true)) {
                    this.AvgBurUnitCostField = value;
                    this.RaisePropertyChanged("AvgBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvgLbrUnitCost {
            get {
                return this.AvgLbrUnitCostField;
            }
            set {
                if ((this.AvgLbrUnitCostField.Equals(value) != true)) {
                    this.AvgLbrUnitCostField = value;
                    this.RaisePropertyChanged("AvgLbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvgMtlBurUnitCost {
            get {
                return this.AvgMtlBurUnitCostField;
            }
            set {
                if ((this.AvgMtlBurUnitCostField.Equals(value) != true)) {
                    this.AvgMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("AvgMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvgMtlUnitCost {
            get {
                return this.AvgMtlUnitCostField;
            }
            set {
                if ((this.AvgMtlUnitCostField.Equals(value) != true)) {
                    this.AvgMtlUnitCostField = value;
                    this.RaisePropertyChanged("AvgMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvgSubUnitCost {
            get {
                return this.AvgSubUnitCostField;
            }
            set {
                if ((this.AvgSubUnitCostField.Equals(value) != true)) {
                    this.AvgSubUnitCostField = value;
                    this.RaisePropertyChanged("AvgSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.PartSvc.PartGetDMRListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DMRNum {
            get {
                return this.DMRNumField;
            }
            set {
                if ((this.DMRNumField.Equals(value) != true)) {
                    this.DMRNumField = value;
                    this.RaisePropertyChanged("DMRNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCode {
            get {
                return this.DimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeField, value) != true)) {
                    this.DimCodeField = value;
                    this.RaisePropertyChanged("DimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaterialBurCost {
            get {
                return this.MaterialBurCostField;
            }
            set {
                if ((this.MaterialBurCostField.Equals(value) != true)) {
                    this.MaterialBurCostField = value;
                    this.RaisePropertyChanged("MaterialBurCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaterialLabCost {
            get {
                return this.MaterialLabCostField;
            }
            set {
                if ((this.MaterialLabCostField.Equals(value) != true)) {
                    this.MaterialLabCostField = value;
                    this.RaisePropertyChanged("MaterialLabCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaterialMtlCost {
            get {
                return this.MaterialMtlCostField;
            }
            set {
                if ((this.MaterialMtlCostField.Equals(value) != true)) {
                    this.MaterialMtlCostField = value;
                    this.RaisePropertyChanged("MaterialMtlCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaterialSubCost {
            get {
                return this.MaterialSubCostField;
            }
            set {
                if ((this.MaterialSubCostField.Equals(value) != true)) {
                    this.MaterialSubCostField = value;
                    this.RaisePropertyChanged("MaterialSubCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MtlSeq {
            get {
                return this.MtlSeqField;
            }
            set {
                if ((this.MtlSeqField.Equals(value) != true)) {
                    this.MtlSeqField = value;
                    this.RaisePropertyChanged("MtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenDMR {
            get {
                return this.OpenDMRField;
            }
            set {
                if ((this.OpenDMRField.Equals(value) != true)) {
                    this.OpenDMRField = value;
                    this.RaisePropertyChanged("OpenDMR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OprSeq {
            get {
                return this.OprSeqField;
            }
            set {
                if ((this.OprSeqField.Equals(value) != true)) {
                    this.OprSeqField = value;
                    this.RaisePropertyChanged("OprSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyRemaining {
            get {
                return this.QtyRemainingField;
            }
            set {
                if ((this.QtyRemainingField.Equals(value) != true)) {
                    this.QtyRemainingField = value;
                    this.RaisePropertyChanged("QtyRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReqDMR {
            get {
                return this.ReqDMRField;
            }
            set {
                if ((this.ReqDMRField.Equals(value) != true)) {
                    this.ReqDMRField = value;
                    this.RaisePropertyChanged("ReqDMR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotAcceptedQty {
            get {
                return this.TotAcceptedQtyField;
            }
            set {
                if ((this.TotAcceptedQtyField.Equals(value) != true)) {
                    this.TotAcceptedQtyField = value;
                    this.RaisePropertyChanged("TotAcceptedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDiscrepantQty {
            get {
                return this.TotDiscrepantQtyField;
            }
            set {
                if ((this.TotDiscrepantQtyField.Equals(value) != true)) {
                    this.TotDiscrepantQtyField = value;
                    this.RaisePropertyChanged("TotDiscrepantQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotRejectedQty {
            get {
                return this.TotRejectedQtyField;
            }
            set {
                if ((this.TotRejectedQtyField.Equals(value) != true)) {
                    this.TotRejectedQtyField = value;
                    this.RaisePropertyChanged("TotRejectedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendRMANum {
            get {
                return this.VendRMANumField;
            }
            set {
                if ((object.ReferenceEquals(this.VendRMANumField, value) != true)) {
                    this.VendRMANumField = value;
                    this.RaisePropertyChanged("VendRMANum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCodeDescription {
            get {
                return this.WarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeDescriptionField, value) != true)) {
                    this.WarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseCodeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : EpicorConsole.Epicor.PartSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlbPartRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum GlbPartRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchWord = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStock = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchasingFactor = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitPrice = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePerCode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalUnitPrice = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalPricePerCode = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgComment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurComment = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostMethod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InActive = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LowLevelCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Method = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackLots = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackDimension = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultDim = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackSerialNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommodityCode = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCode = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomBOM = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactor = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlBurRate = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetWeight = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsePartRev = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartsPerContainer = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartLength = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartWidth = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartHeight = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotShelfLife = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebPart = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RunOut = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPart = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diameter = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gravity = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHold = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHoldDate = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHoldReasonCode = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnalysisCode = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPartNum = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlAnalysisCode = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalPart = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISSuppUnitsFactor = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldCompany = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldPartNum = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMObjID = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageFileName = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISOrigCountry = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Constrained = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPCCode1 = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPCCode2 = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPCCode3 = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDICode = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Skipped = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidatedPurchasing = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebInStock = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchasingFactorDirection = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactorDirection = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MDPV = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnableContainer = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetVolume = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecDocReq = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDocReq = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyBearing = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AESExp = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCNNumber = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpLicNumber = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpLicType = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazClass = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazGvrnmtID = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazItem = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazPackInstr = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazSub = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazTechName = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTS = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAFTAOrigCountry = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAFTAPref = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAFTAProd = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigCountry = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SchedBcode = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseHTSDesc = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OwnershipStatus = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RCOverThreshold = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RCUnderThreshold = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevChargeMethod = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOMClassID = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskExample = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotAppendDate = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotBatch = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotBeforeDt = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotCureDt = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotDigits = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotExpDt = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotFirmware = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotHeat = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotLeadingZeros = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotMfgBatch = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotMfgDt = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotMfgLot = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNxtNum = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotPrefix = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotSeqID = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotUseGlobalSeq = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetVolumeUOM = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetWeightUOM = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseMaskSeq = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyToOrder = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtConfig = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsConfigured = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCategory = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspPlanType = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSFCJ5 = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSFLMW = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeight = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeightUOM = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BasePartNum = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAssetClassCode = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSPricePerCode = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSSalesUnitPrice = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvInspectionReq = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISRegion = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INChapterID = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimateID = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimateOrPlan = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiffPrc2PrchUOM = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DupOnJobCrt = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricingFactor = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricingUOM = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobilePart = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGUseGoodMark = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGProductMark = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PESUNATType = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PESUNATUOM = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEIsServices = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEIsSecurityFinancialDerivative = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEInternationalSecuritiesID = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkToContract = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEIsInvestment = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEPayStatCode = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEDenomination = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartLengthWidthHeightUM = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiameterUM = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiameterInside = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiameterOutside = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThicknessUM = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thickness = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThicknessMax = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Durometer = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Specification = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EngineeringAlert = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Condition = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsCompliant = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsRestricted = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsSafetyItem = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialBrand = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialSubBrand = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialCategory = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialSubCategory = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialStyle = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialSize1 = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialSize2 = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialColor = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsGiftCard = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhotoFile = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPhotoExists = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentText = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSpecificPackingUOM = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageID = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNSpecification = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyncToExternalCRM = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMPartID = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMLastSync = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMSyncRequired = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkPartNum = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCodeDescription = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StockPart = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeCodeDescription = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispPartNum = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 201,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityGLCRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EntityGLCRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelatedToFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key1 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key2 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key3 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key4 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key5 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key6 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLControlType = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLControlCode = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessEntity = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompanyID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsExternalCompany = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalEntityGLC = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankFeeID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallCode = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassCode = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCode = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeductionID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseCode = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtSystemID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromPlant = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeadNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCDept = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayTypeID = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PerConName = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PIStatus = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchCode = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCode = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonType = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesCatID = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shift = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxTblID = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToPlant = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferMethod = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeID = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseTypeCode = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsFiltered = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OprTypeCode = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashDeskID = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TIN = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReclassCodeID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLCntrlDescription = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLCntrlTypeDescription = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 67,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchWord = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStock = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchasingFactor = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitPrice = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePerCode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalUnitPrice = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalPricePerCode = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgComment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurComment = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostMethod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChar1 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChar2 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChar3 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChar4 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDate1 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDate2 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDate3 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDate4 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDecimal1 = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDecimal2 = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDecimal3 = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDecimal4 = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserInteger1 = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserInteger2 = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InActive = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LowLevelCode = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Method = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackLots = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackDimension = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultDim = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackSerialNum = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommodityCode = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCode = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomBOM = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactor = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlBurRate = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetWeight = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsePartRev = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartsPerContainer = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartLength = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartWidth = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartHeight = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotShelfLife = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebPart = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RunOut = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPart = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diameter = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gravity = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHold = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHoldDate = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHoldReasonCode = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnalysisCode = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalPart = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlAnalysisCode = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISSuppUnitsFactor = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMObjID = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageFileName = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISOrigCountry = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Constrained = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPCCode1 = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPCCode2 = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPCCode3 = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDICode = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebInStock = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidatedPurchasing = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchasingFactorDirection = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactorDirection = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecDocReq = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MDPV = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDocReq = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnableContainer = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetVolume = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyBearing = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAFTAOrigCountry = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAFTAProd = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAFTAPref = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpLicType = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpLicNumber = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECCNNumber = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AESExp = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTS = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseHTSDesc = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SchedBcode = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazItem = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazTechName = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazClass = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazSub = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazGvrnmtID = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazPackInstr = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevChargeMethod = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RCUnderThreshold = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RCOverThreshold = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OwnershipStatus = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOMClassID = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskExample = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseMaskSeq = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetWeightUOM = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetVolumeUOM = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotBatch = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotMfgBatch = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotMfgLot = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotHeat = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotFirmware = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotBeforeDt = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotMfgDt = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotCureDt = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotExpDt = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotPrefix = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotUseGlobalSeq = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotSeqID = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNxtNum = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotDigits = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotLeadingZeros = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotAppendDate = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyToOrder = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsConfigured = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtConfig = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCategory = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSFCJ5 = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSFLMW = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeight = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeightUOM = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BasePartNum = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAssetClassCode = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSSalesUnitPrice = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSPricePerCode = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvInspectionReq = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimateID = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimateOrPlan = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiffPrc2PrchUOM = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DupOnJobCrt = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricingFactor = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricingUOM = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobilePart = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGUseGoodMark = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGProductMark = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISRegion = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INChapterID = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PESUNATType = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PESUNATUOM = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEIsServices = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEIsSecurityFinancialDerivative = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEInternationalSecuritiesID = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkToContract = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEIsInvestment = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEPayStatCode = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEDenomination = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartLengthWidthHeightUM = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiameterUM = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiameterInside = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiameterOutside = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThicknessUM = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thickness = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThicknessMax = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Durometer = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Specification = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EngineeringAlert = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Condition = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsCompliant = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsRestricted = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsSafetyItem = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialBrand = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialSubBrand = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialCategory = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialSubCategory = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialStyle = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialSize1 = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialSize2 = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialColor = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsGiftCard = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhotoFile = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPhotoExists = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentText = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSpecificPackingUOM = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageID = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNSpecification = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyncToExternalCRM = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMPartID = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMLastSync = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCRMSyncRequired = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableExpressCheckOut = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableGlobalLock = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableGlobalPart = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableInActive = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableIUM = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableRevCharge = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSerialNum = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTrackSerialNum = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableUOMClass = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCoExist = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbFlag = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbLink = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbTableAllowUpdTrackDim = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbTableAllowUpdTrackLots = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbTableAllowUpdTrackSerial = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasOnHandQty = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsComponent = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsCoPart = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISOrigCountryNum = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextGeneratedLotNum = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PLM = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PLMEnabled = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimCostAltMethod = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimCostPart = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimCostRev = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Revision = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUMDisp = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLeadingZeros = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefixLength = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffixLength = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNNumODigits = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubLevelCode = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdatePartPlant = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateSNPartPlant = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COASegReferences = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CoPartCount = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNumDescription = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnalysisCdDescription = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassDescription = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommodityCodeSuppUnitsUOM = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommodityCodeDescription = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAssetClassCodeFSAssetClassDesc = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mtl_AnalysisCdDescription = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHoldReasonCodeDescription = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCodeDescription = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCategoryDescription = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMaskType = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskDescription = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatIDDescription = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOMClassIDDescription = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCodeWarrDescription = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 254,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartAuditRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartAuditRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDescription = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspChangeTime = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNumRevDescription = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNumRevShortDesc = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 23,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartBinInfoRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartBinInfoRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinimumQty = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaximumQty = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SafetyQty = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBPONUM = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBPOLine = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBWarehouseCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBBinNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBPlant = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnhandQty = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBQty = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxQtyUOM = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinQtyUOM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SafetyQtyUOM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBActionCode = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBActionDesc = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantOwner = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNumDescription = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNumNonNettable = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBBinNumDescription = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBCodeKBDescription = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBCodeKBActionCode = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBPlantName = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBWarehouseCodeDescription = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCodeDescription = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 34,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartCOORowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartCOORowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigCountry = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyPerc = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValuePerc = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Primary = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryDescription = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartCOPartRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartCOPartRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CoPartNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CoRevisionNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartsPerOp = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LbrCostBase = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlCostBase = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreventSugg = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartMasterPart = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimaryCost = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePreventSugg = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessMode = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartDimRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartDimRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCodeDescription = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DUM = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimConvFactor = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultDim = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 19,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartLangDescRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartLangDescRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LangNameID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LangNameIDDescription = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartPCRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartPCRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCType = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOMCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartPlantRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartPlantRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimWhse = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinimumQty = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaximumQty = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SafetyQty = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinOrderQty = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadTime = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BackFlush = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgLotSize = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinMfgLotSize = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxMfgLotSize = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgLotMultiple = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DaysOfSupply = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReOrderLevel = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MRPRecalcNeeded = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessMRP = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerateSugg = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetFromLocalWhse = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForecastTime = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferPlant = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceType = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferLeadTime = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrepTime = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiveTime = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlanTimeFence = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReschedOutDelta = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReschedInDelta = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStock = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomBOM = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyerID = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PersonID = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostMethod = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitTime = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitAllowUpdate = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitShipComplete = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitAllowChangeParms = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitBackFlush = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPricing = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPrintCompsPS = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPrintCompsInv = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortHorizonDays = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortHorizonMinMfgLotSize = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortHorizonMaxMfgLotSize = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LimitProdYldRecalc = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyBearing = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MRPLastRunDate = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MRPLastRunTime = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MRPLastScheduledDate = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MRPLastCutOffDate = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortHorizonDaysSupp = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskExample = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseMaskSeq = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyToOrder = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcntTolerance = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcPcnt = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcQty = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcValue = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyAdjTolerance = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyTolerance = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValueTolerance = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQty = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReservedQty = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocatedQty = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartNum = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartType = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeverReuseMRPJob = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteMRPJobs = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotMfgLeadTimeSys = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotMfgLeadTimeMnl = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LvlMfgLeadTimeSys = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LvlMfgLeadTimeMnl = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgLeadTimeCalcDate = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgLeadTimeMnlDate = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoConsumeStock = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartMinLotQty = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinLotLeadTime = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgLeadTimeMnl = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgLeadTimeEnteredBy = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinStartQty = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawMaterial = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultiLevelCTP = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvInspectionReq = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumeSafety = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLTVendorNum = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLTPurPoint = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortLeadTime = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalMES = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UrgentLeadTime = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UrgentMinOrdQty = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UrgentMultQty = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UrgentPurPoint = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UrgentVendorNum = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartRunMRP = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkToContract = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MMSExclude = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MMSSales = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MMSIssue = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MMSHistory = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MMSSafetyFactor = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MMSMaxFactor = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedMinimumQty = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedMaximumQty = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedSafetyQty = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedCalculatedUsageQty = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedOnDateTime = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACWPercentage = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACWDays = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenNewPCIDDelaySeconds = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenNewPCIDLimitDays = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopLvlMfgLeadTimeSys = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopLvlMfgLeadTimeMnl = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseUOMCode = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalculatedLeadTime = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtLeadTime = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNNumODigits = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UrgentVendorName = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UrgentVendorVendorID = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableQtyBrng = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSerialNum = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICTrader = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InActive = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQty = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantConfCtrlSerialTracking = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLeadingZeros = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyerIDName = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PersonName = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimWhseDescription = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMaskType = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskDescription = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferPlantName = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress1 = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumState = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCountry = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCity = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCurrencyCode = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumDefaultFOB = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress2 = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumZIP = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumTermsCode = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress3 = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumVendorID = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 168,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRestrictSubstRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartRestrictSubstRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictionTypeID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubstanceID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptDate = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptCertificate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exempt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictionTypeDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubstanceDescription = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 25,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRestrictionRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartRestrictionRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictionTypeID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RollupType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Compliance = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComplianceDate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastRollUp = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableRollUpType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictionTypeDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 24,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartRevRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevShortDesc = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevDescription = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovedDate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovedBy = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EffectiveDate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TLRLaborCost = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TLRBurdenCost = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TLRMaterialCost = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TLRSubcontractCost = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TLRMtlBurCost = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TLRSetupLaborCost = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TLRSetupBurdenCost = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLRLaborCost = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLRBurdenCost = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLRMaterialCost = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLRSubcontractCost = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLRMtlBurCost = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLRSetupLaborCost = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LLRSetupBurdenCost = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RollupDate = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawNum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECO = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Method = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoRecOpr = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinalOpr = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMObjID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Configured = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebConfigured = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowInputPrice = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethodDesc = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentAltMethod = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseStaging = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseAltRevForParts = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OwnershipStatus = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtConfig = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValRefDes = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcGlobalPart = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcEntprsConf = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalRev = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoughCutCode = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMAInspPlan = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMASpecID = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMASampleSize = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMASampleSizePct = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BasePartNum = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseRevisionNum = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfigID = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RegenConfig = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIValuesGroupSeq = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIValuesHeadNum = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalMES = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessMode = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultConfigPart = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CoPartsReqQty = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlCostPct = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborCostPct = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CoPartsPerOp = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Class = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStock = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentAltMethodDesc = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecHedDescription = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        vDate = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        vQty = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableApproved = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECOGroup = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasCoParts = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentRevisionNum = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPartNum = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevStatusAsOfDate = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspPlanDescription = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionTrackDimension = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionSellingFactor = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionPartDescription = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionIUM = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionTrackLots = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionPricePerCode = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionSalesUM = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionTrackSerialNum = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcStatusConfigType = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoughCutParamDescription = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 92,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartRevAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevInspPlanRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartRevInspPlanRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqPlan = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspPlanPartNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SampleSize = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SampleSizePct = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsDefault = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecHedDescription = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspPlanDescription = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 17,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevInspPlanAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartRevInspPlanAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqPlan = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRevInspVendRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartRevInspVendRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipLotCtl = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipLotCtlCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspCnt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipCnt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RptCycles = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RejectCnt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RejectCntBy = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SampleSize = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SampleSizePct = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForceInsp = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorName = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 21,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartSubsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartSubsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPart = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubType = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyPer = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultSub = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Price = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuggestedQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selected = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SugOrderQty = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartSellingFactor = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartTrackSerialNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartTrackDimension = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartPartDescription = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartIUM = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartSalesUM = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartTrackLots = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubPartPricePerCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 33,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartUOMRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartUOMRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOMCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvFactor = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackOnHand = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetVolume = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetVolumeUOM = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasBeenUsed = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvOperator = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebUOM = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvFromUOM = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvOverrride = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvToUOM = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EAN13 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EAN14 = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EAN8 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableConvFactor = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTrackOnHand = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GTIN14 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HIBC = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSpecific = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOMDesc = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPC12 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseUOMCode = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispPkgCode = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispPkgCodeDesc = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispPkgDisplaySeq = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispPkgIsDefault = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSpecificPkgCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispPkgDisplayHidden = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 35,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartWhseRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartWhseRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandQty = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReservedQty = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocatedQty = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PickingQty = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PickedQty = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountedDate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQty = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonNettableQty = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyToOrderQty = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesDemandQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesReservedQty = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesAllocatedQty = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesPickingQty = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesPickedQty = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobDemandQty = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobReservedQty = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobAllocatedQty = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobPickingQty = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobPickedQty = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnfirmJobDemandQty = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdDemandQty = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdReservedQty = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdAllocatedQty = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdPickingQty = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdPickedQty = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBCode = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinimumQty = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaximumQty = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SafetyQty = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBPONUM = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBPOLine = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBWarehouseCode = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBBinNum = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBPlant = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBQty = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcntTolerance = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcPcnt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcQty = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcValue = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyAdjTolerance = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcQtyAdj = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinAbc = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAbc = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualABC = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastCCDate = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OvrrideCountFreq = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountFreq = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyTolerance = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValueTolerance = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultWhse = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimBinNum = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalDemand = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimBinNumDescription = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBActionCode = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBActionDesc = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantOwner = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxQtyUOM = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinQtyUOM = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SafetyQtyUOM = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBBinNumDescription = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBCodeKBActionCode = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBCodeKBDescription = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBPlantName = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBWarehouseCodeDescription = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseDescription = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 81,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxExemptRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum TaxExemptRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelatedToFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key1 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key2 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EffectiveFrom = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EffectiveTo = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesTaxDescription = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesTRCDescription = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxTextDescription = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 23,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchWord = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStock = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InActive = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Method = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackLots = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackDimension = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackSerialNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomBOM = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHold = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyBearing = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotBatch = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotMfgBatch = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotMfgLot = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotHeat = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotFirmware = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotBeforeDt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotMfgDt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotCureDt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotExpDt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 29,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartRefDesWhereUsedRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartRefDesWhereUsedRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlSeq = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefDes = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefDesSeq = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlPartNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Side = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XLocation = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YLocation = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZLocation = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rotation = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 18,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartWhereUsedRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartWhereUsedRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlPartNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyPer = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedQty = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PullAsAsm = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FindNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMethod = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseMethodOverridden = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeDesc = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanTrackUp = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpDesc = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 18,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartGetDMRListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartGetDMRListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DMRNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenDMR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDiscrepantQty = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotRejectedQty = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotAcceptedQty = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvgMtlUnitCost = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvgLbrUnitCost = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvgBurUnitCost = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvgSubUnitCost = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvgMtlBurUnitCost = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlSeq = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OprSeq = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialMtlCost = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialLabCost = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialSubCost = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialBurCost = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqDMR = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendRMANum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCodeDescription = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyRemaining = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplierName = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 39,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartListRow")]
    [System.SerializableAttribute()]
    public class PartListTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartRefDesWhereUsedTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartRefDesWhereUsedRow")]
    [System.SerializableAttribute()]
    public class PartRefDesWhereUsedTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartRefDesWhereUsedRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartWhereUsedTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartWhereUsedRow")]
    [System.SerializableAttribute()]
    public class PartWhereUsedTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartWhereUsedRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartGetDMRListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartGetDMRListRow")]
    [System.SerializableAttribute()]
    public class PartGetDMRListTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.PartGetDMRListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<EpicorConsole.Epicor.PartSvc.BOUpdErrorRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:Part", ConfigurationName="Epicor.PartSvc.PartSvcContract")]
    public interface PartSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartGlobalFields", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartGlobalFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetPartGlobalFieldsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetPartGlobalFields(string cPartNum, bool GlobalLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartGlobalFields", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartGlobalFieldsResponse")]
        System.Threading.Tasks.Task<string> GetPartGlobalFieldsAsync(string cPartNum, bool GlobalLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowDimensionMaintenance", ReplyAction="Erp:BO:Part/PartSvcContract/AllowDimensionMaintenanceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/AllowDimensionMaintenanceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void AllowDimensionMaintenance();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowDimensionMaintenance", ReplyAction="Erp:BO:Part/PartSvcContract/AllowDimensionMaintenanceResponse")]
        System.Threading.Tasks.Task AllowDimensionMaintenanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowInventoryInfo", ReplyAction="Erp:BO:Part/PartSvcContract/AllowInventoryInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/AllowInventoryInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void AllowInventoryInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowInventoryInfo", ReplyAction="Erp:BO:Part/PartSvcContract/AllowInventoryInfoResponse")]
        System.Threading.Tasks.Task AllowInventoryInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowLotMaintenance", ReplyAction="Erp:BO:Part/PartSvcContract/AllowLotMaintenanceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/AllowLotMaintenanceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void AllowLotMaintenance();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowLotMaintenance", ReplyAction="Erp:BO:Part/PartSvcContract/AllowLotMaintenanceResponse")]
        System.Threading.Tasks.Task AllowLotMaintenanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowPurchasingInfo", ReplyAction="Erp:BO:Part/PartSvcContract/AllowPurchasingInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/AllowPurchasingInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void AllowPurchasingInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowPurchasingInfo", ReplyAction="Erp:BO:Part/PartSvcContract/AllowPurchasingInfoResponse")]
        System.Threading.Tasks.Task AllowPurchasingInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowViewLotCosts", ReplyAction="Erp:BO:Part/PartSvcContract/AllowViewLotCostsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/AllowViewLotCostsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void AllowViewLotCosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/AllowViewLotCosts", ReplyAction="Erp:BO:Part/PartSvcContract/AllowViewLotCostsResponse")]
        System.Threading.Tasks.Task AllowViewLotCostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeMRPWarning", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeMRPWarningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangeMRPWarningEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warningMsg")]
        string ChangeMRPWarning(string partNum, string plant, bool processMRP);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeMRPWarning", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeMRPWarningResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warningMsg")]
        System.Threading.Tasks.Task<string> ChangeMRPWarningAsync(string partNum, string plant, bool processMRP);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartBinInfoKBCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartBinInfoKBCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartBinInfoKBCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeResponse ChangePartBinInfoKBCode(EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartBinInfoKBCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartBinInfoKBCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeResponse> ChangePartBinInfoKBCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartBuyToOrder", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartBuyToOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartBuyToOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderResponse ChangePartBuyToOrder(EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartBuyToOrder", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartBuyToOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderResponse> ChangePartBuyToOrderAsync(EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartCommodityCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartCommodityCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartCommodityCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeResponse ChangePartCommodityCode(EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartCommodityCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartCommodityCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeResponse> ChangePartCommodityCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartNonStock", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartNonStockResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartNonStockEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartNonStockResponse ChangePartNonStock(EpicorConsole.Epicor.PartSvc.ChangePartNonStockRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartNonStock", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartNonStockResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartNonStockResponse> ChangePartNonStockAsync(EpicorConsole.Epicor.PartSvc.ChangePartNonStockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartGlobalPart", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartGlobalPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartGlobalPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartResponse ChangePartGlobalPart(EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartGlobalPart", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartGlobalPartResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartResponse> ChangePartGlobalPartAsync(EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartNum", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartNumResponse ChangePartNum(EpicorConsole.Epicor.PartSvc.ChangePartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartNum", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartNumResponse> ChangePartNumAsync(EpicorConsole.Epicor.PartSvc.ChangePartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartPlantBuyToOrder", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartPlantBuyToOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartPlantBuyToOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderResponse ChangePartPlantBuyToOrder(EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartPlantBuyToOrder", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartPlantBuyToOrderResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderResponse> ChangePartPlantBuyToOrderAsync(EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartPlantSourceType", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartPlantSourceTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartPlantSourceTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeResponse ChangePartPlantSourceType(EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartPlantSourceType", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartPlantSourceTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeResponse> ChangePartPlantSourceTypeAsync(EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartPlantUrgentVendorID", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartPlantUrgentVendorIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartPlantUrgentVendorIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDResponse ChangePartPlantUrgentVendorID(EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartPlantUrgentVendorID", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartPlantUrgentVendorIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDResponse> ChangePartPlantUrgentVendorIDAsync(EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartPlantVendorID", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartPlantVendorIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartPlantVendorIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDResponse ChangePartPlantVendorID(EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartPlantVendorID", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartPlantVendorIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDResponse> ChangePartPlantVendorIDAsync(EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartProdCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartProdCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartProdCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartProdCodeResponse ChangePartProdCode(EpicorConsole.Epicor.PartSvc.ChangePartProdCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartProdCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartProdCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartProdCodeResponse> ChangePartProdCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartProdCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartRestrictionManual", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartRestrictionManualResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartRestrictionManualEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualResponse ChangePartRestrictionManual(EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartRestrictionManual", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartRestrictionManualResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualResponse> ChangePartRestrictionManualAsync(EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartRestrictionType", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartRestrictionTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartRestrictionTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeResponse ChangePartRestrictionType(EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartRestrictionType", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartRestrictionTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeResponse> ChangePartRestrictionTypeAsync(EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartRestrictSubstance", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartRestrictSubstanceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartRestrictSubstanceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceResponse ChangePartRestrictSubstance(EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartRestrictSubstance", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartRestrictSubstanceResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceResponse> ChangePartRestrictSubstanceAsync(EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartRevApproved", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartRevApprovedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartRevApprovedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedResponse ChangePartRevApproved(EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartRevApproved", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartRevApprovedResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedResponse> ChangePartRevApprovedAsync(EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartSNBaseDataType", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartSNBaseDataTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartSNBaseDataTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeResponse ChangePartSNBaseDataType(EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartSNBaseDataType", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartSNBaseDataTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeResponse> ChangePartSNBaseDataTypeAsync(EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartSNMaskPrefixSuffix", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartSNMaskPrefixSuffixResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartSNMaskPrefixSuffixEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixResponse ChangePartSNMaskPrefixSuffix(EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartSNMaskPrefixSuffix", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartSNMaskPrefixSuffixResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixResponse> ChangePartSNMaskPrefixSuffixAsync(EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartSubsPartNum", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartSubsPartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartSubsPartNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumResponse ChangePartSubsPartNum(EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartSubsPartNum", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartSubsPartNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumResponse> ChangePartSubsPartNumAsync(EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartTrackDimension", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartTrackDimensionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartTrackDimensionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionResponse ChangePartTrackDimension(EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartTrackDimension", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartTrackDimensionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionResponse> ChangePartTrackDimensionAsync(EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartTrackLots", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartTrackLotsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartTrackLotsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsResponse ChangePartTrackLots(EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartTrackLots", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartTrackLotsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsResponse> ChangePartTrackLotsAsync(EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartTrackSerialNum", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartTrackSerialNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartTrackSerialNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumResponse ChangePartTrackSerialNum(EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartTrackSerialNum", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartTrackSerialNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumResponse> ChangePartTrackSerialNumAsync(EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartTypeCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartTypeCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartTypeCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeResponse ChangePartTypeCode(EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartTypeCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartTypeCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeResponse> ChangePartTypeCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartUOMConvOverride", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartUOMConvOverrideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartUOMConvOverrideEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideResponse ChangePartUOMConvOverride(EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartUOMConvOverride", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartUOMConvOverrideResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideResponse> ChangePartUOMConvOverrideAsync(EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartWhseKBCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartWhseKBCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePartWhseKBCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeResponse ChangePartWhseKBCode(EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePartWhseKBCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePartWhseKBCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeResponse> ChangePartWhseKBCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePlantSNBaseDataType", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePlantSNBaseDataTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePlantSNBaseDataTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeResponse ChangePlantSNBaseDataType(EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePlantSNBaseDataType", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePlantSNBaseDataTypeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeResponse> ChangePlantSNBaseDataTypeAsync(EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePlantSNMaskPrefixSuffix", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePlantSNMaskPrefixSuffixResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangePlantSNMaskPrefixSuffixEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixResponse ChangePlantSNMaskPrefixSuffix(EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangePlantSNMaskPrefixSuffix", ReplyAction="Erp:BO:Part/PartSvcContract/ChangePlantSNMaskPrefixSuffixResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixResponse> ChangePlantSNMaskPrefixSuffixAsync(EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeQtyBearing", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeQtyBearingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangeQtyBearingEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangeQtyBearingResponse ChangeQtyBearing(EpicorConsole.Epicor.PartSvc.ChangeQtyBearingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeQtyBearing", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeQtyBearingResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeQtyBearingResponse> ChangeQtyBearingAsync(EpicorConsole.Epicor.PartSvc.ChangeQtyBearingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeLinkToContract", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeLinkToContractResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangeLinkToContractEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangeLinkToContractResponse ChangeLinkToContract(EpicorConsole.Epicor.PartSvc.ChangeLinkToContractRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeLinkToContract", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeLinkToContractResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeLinkToContractResponse> ChangeLinkToContractAsync(EpicorConsole.Epicor.PartSvc.ChangeLinkToContractRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeSNMask", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeSNMaskResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangeSNMaskEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangeSNMaskResponse ChangeSNMask(EpicorConsole.Epicor.PartSvc.ChangeSNMaskRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeSNMask", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeSNMaskResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeSNMaskResponse> ChangeSNMaskAsync(EpicorConsole.Epicor.PartSvc.ChangeSNMaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeUOMClassID", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeUOMClassIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangeUOMClassIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDResponse ChangeUOMClassID(EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeUOMClassID", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeUOMClassIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDResponse> ChangeUOMClassIDAsync(EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeUOMCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeUOMCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChangeUOMCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChangeUOMCodeResponse ChangeUOMCode(EpicorConsole.Epicor.PartSvc.ChangeUOMCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChangeUOMCode", ReplyAction="Erp:BO:Part/PartSvcContract/ChangeUOMCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeUOMCodeResponse> ChangeUOMCodeAsync(EpicorConsole.Epicor.PartSvc.ChangeUOMCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChanginPartRestrictSubs", ReplyAction="Erp:BO:Part/PartSvcContract/ChanginPartRestrictSubsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ChanginPartRestrictSubsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsResponse ChanginPartRestrictSubs(EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ChanginPartRestrictSubs", ReplyAction="Erp:BO:Part/PartSvcContract/ChanginPartRestrictSubsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsResponse> ChanginPartRestrictSubsAsync(EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckAltMethodForDelete", ReplyAction="Erp:BO:Part/PartSvcContract/CheckAltMethodForDeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/CheckAltMethodForDeleteEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opMessage")]
        string CheckAltMethodForDelete(string ipPartNum, string ipRevisionNum, string ipAltMethod);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckAltMethodForDelete", ReplyAction="Erp:BO:Part/PartSvcContract/CheckAltMethodForDeleteResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opMessage")]
        System.Threading.Tasks.Task<string> CheckAltMethodForDeleteAsync(string ipPartNum, string ipRevisionNum, string ipAltMethod);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckCOOPercents", ReplyAction="Erp:BO:Part/PartSvcContract/CheckCOOPercentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/CheckCOOPercentsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CheckCOOPercents(string cPartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckCOOPercents", ReplyAction="Erp:BO:Part/PartSvcContract/CheckCOOPercentsResponse")]
        System.Threading.Tasks.Task CheckCOOPercentsAsync(string cPartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckDuplicateCOO", ReplyAction="Erp:BO:Part/PartSvcContract/CheckDuplicateCOOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/CheckDuplicateCOOEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CheckDuplicateCOO(string ipPart, int ipOrigCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckDuplicateCOO", ReplyAction="Erp:BO:Part/PartSvcContract/CheckDuplicateCOOResponse")]
        System.Threading.Tasks.Task CheckDuplicateCOOAsync(string ipPart, int ipOrigCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckPartChanges", ReplyAction="Erp:BO:Part/PartSvcContract/CheckPartChangesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/CheckPartChangesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.CheckPartChangesResponse CheckPartChanges(EpicorConsole.Epicor.PartSvc.CheckPartChangesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckPartChanges", ReplyAction="Erp:BO:Part/PartSvcContract/CheckPartChangesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.CheckPartChangesResponse> CheckPartChangesAsync(EpicorConsole.Epicor.PartSvc.CheckPartChangesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/DeleteMRPJobs", ReplyAction="Erp:BO:Part/PartSvcContract/DeleteMRPJobsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/DeleteMRPJobsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.DeleteMRPJobsResponse DeleteMRPJobs(EpicorConsole.Epicor.PartSvc.DeleteMRPJobsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/DeleteMRPJobs", ReplyAction="Erp:BO:Part/PartSvcContract/DeleteMRPJobsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.DeleteMRPJobsResponse> DeleteMRPJobsAsync(EpicorConsole.Epicor.PartSvc.DeleteMRPJobsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/DeleteMultiLevelRules", ReplyAction="Erp:BO:Part/PartSvcContract/DeleteMultiLevelRulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/DeleteMultiLevelRulesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesResponse DeleteMultiLevelRules(EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/DeleteMultiLevelRules", ReplyAction="Erp:BO:Part/PartSvcContract/DeleteMultiLevelRulesResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesResponse> DeleteMultiLevelRulesAsync(EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/DuplicatePart", ReplyAction="Erp:BO:Part/PartSvcContract/DuplicatePartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/DuplicatePartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.PartTableset DuplicatePart(string sourcePartNum, string targetPartNum, string targetPartDescription, string configuratorMode, string configID, string configDescription, string configType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/DuplicatePart", ReplyAction="Erp:BO:Part/PartSvcContract/DuplicatePartResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> DuplicatePartAsync(string sourcePartNum, string targetPartNum, string targetPartDescription, string configuratorMode, string configID, string configDescription, string configType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetGlbPartList", ReplyAction="Erp:BO:Part/PartSvcContract/GetGlbPartListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetGlbPartListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GlbPartTableset GetGlbPartList(string GlbPartNumList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetGlbPartList", ReplyAction="Erp:BO:Part/PartSvcContract/GetGlbPartListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GlbPartTableset> GetGlbPartListAsync(string GlbPartNumList);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetListByConfigID", ReplyAction="Erp:BO:Part/PartSvcContract/GetListByConfigIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetListByConfigIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetListByConfigIDResponse GetListByConfigID(EpicorConsole.Epicor.PartSvc.GetListByConfigIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetListByConfigID", ReplyAction="Erp:BO:Part/PartSvcContract/GetListByConfigIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListByConfigIDResponse> GetListByConfigIDAsync(EpicorConsole.Epicor.PartSvc.GetListByConfigIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetListByWarehouseBin", ReplyAction="Erp:BO:Part/PartSvcContract/GetListByWarehouseBinResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetListByWarehouseBinEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinResponse GetListByWarehouseBin(EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetListByWarehouseBin", ReplyAction="Erp:BO:Part/PartSvcContract/GetListByWarehouseBinResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinResponse> GetListByWarehouseBinAsync(EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetListFilterPlants", ReplyAction="Erp:BO:Part/PartSvcContract/GetListFilterPlantsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetListFilterPlantsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetListFilterPlantsResponse GetListFilterPlants(EpicorConsole.Epicor.PartSvc.GetListFilterPlantsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetListFilterPlants", ReplyAction="Erp:BO:Part/PartSvcContract/GetListFilterPlantsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListFilterPlantsResponse> GetListFilterPlantsAsync(EpicorConsole.Epicor.PartSvc.GetListFilterPlantsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetListFromSelectedKeys", ReplyAction="Erp:BO:Part/PartSvcContract/GetListFromSelectedKeysResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetListFromSelectedKeysEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysResponse GetListFromSelectedKeys(EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetListFromSelectedKeys", ReplyAction="Erp:BO:Part/PartSvcContract/GetListFromSelectedKeysResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysResponse> GetListFromSelectedKeysAsync(EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartForLink", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartForLinkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetPartForLinkEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.PartTableset GetPartForLink(string PartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartForLink", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartForLinkResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> GetPartForLinkAsync(string PartNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartWhereUsed", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartWhereUsedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetPartWhereUsedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetPartWhereUsedResponse GetPartWhereUsed(EpicorConsole.Epicor.PartSvc.GetPartWhereUsedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartWhereUsed", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartWhereUsedResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetPartWhereUsedResponse> GetPartWhereUsedAsync(EpicorConsole.Epicor.PartSvc.GetPartWhereUsedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartXRefInfo", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartXRefInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetPartXRefInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetPartXRefInfoResponse GetPartXRefInfo(EpicorConsole.Epicor.PartSvc.GetPartXRefInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartXRefInfo", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartXRefInfoResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetPartXRefInfoResponse> GetPartXRefInfoAsync(EpicorConsole.Epicor.PartSvc.GetPartXRefInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetDMRListSearch", ReplyAction="Erp:BO:Part/PartSvcContract/GetDMRListSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetDMRListSearchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.PartGetDMRListTableset GetDMRListSearch(string part);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetDMRListSearch", ReplyAction="Erp:BO:Part/PartSvcContract/GetDMRListSearchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartGetDMRListTableset> GetDMRListSearchAsync(string part);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GlbPartsExist", ReplyAction="Erp:BO:Part/PartSvcContract/GlbPartsExistResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GlbPartsExistEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GlbPartsExist")]
        bool GlbPartsExist();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GlbPartsExist", ReplyAction="Erp:BO:Part/PartSvcContract/GlbPartsExistResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GlbPartsExist")]
        System.Threading.Tasks.Task<bool> GlbPartsExistAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/HasIntrastat", ReplyAction="Erp:BO:Part/PartSvcContract/HasIntrastatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/HasIntrastatEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="hasIntrastat")]
        bool HasIntrastat();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/HasIntrastat", ReplyAction="Erp:BO:Part/PartSvcContract/HasIntrastatResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="hasIntrastat")]
        System.Threading.Tasks.Task<bool> HasIntrastatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/IsRunOutOnHand", ReplyAction="Erp:BO:Part/PartSvcContract/IsRunOutOnHandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/IsRunOutOnHandEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IsRunOutOnHand")]
        bool IsRunOutOnHand(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/IsRunOutOnHand", ReplyAction="Erp:BO:Part/PartSvcContract/IsRunOutOnHandResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IsRunOutOnHand")]
        System.Threading.Tasks.Task<bool> IsRunOutOnHandAsync(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/LinkGlbPart", ReplyAction="Erp:BO:Part/PartSvcContract/LinkGlbPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/LinkGlbPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.LinkGlbPartResponse LinkGlbPart(EpicorConsole.Epicor.PartSvc.LinkGlbPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/LinkGlbPart", ReplyAction="Erp:BO:Part/PartSvcContract/LinkGlbPartResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.LinkGlbPartResponse> LinkGlbPartAsync(EpicorConsole.Epicor.PartSvc.LinkGlbPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangePkgCode", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangePkgCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/OnChangePkgCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.OnChangePkgCodeResponse OnChangePkgCode(EpicorConsole.Epicor.PartSvc.OnChangePkgCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangePkgCode", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangePkgCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.OnChangePkgCodeResponse> OnChangePkgCodeAsync(EpicorConsole.Epicor.PartSvc.OnChangePkgCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangePESUNAT", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangePESUNATResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/OnChangePESUNATEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.OnChangePESUNATResponse OnChangePESUNAT(EpicorConsole.Epicor.PartSvc.OnChangePESUNATRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangePESUNAT", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangePESUNATResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.OnChangePESUNATResponse> OnChangePESUNATAsync(EpicorConsole.Epicor.PartSvc.OnChangePESUNATRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangePlant", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangePlantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/OnChangePlantEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.OnChangePlantResponse OnChangePlant(EpicorConsole.Epicor.PartSvc.OnChangePlantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangePlant", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangePlantResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.OnChangePlantResponse> OnChangePlantAsync(EpicorConsole.Epicor.PartSvc.OnChangePlantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CalcACWDays", ReplyAction="Erp:BO:Part/PartSvcContract/CalcACWDaysResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/CalcACWDaysEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.CalcACWDaysResponse CalcACWDays(EpicorConsole.Epicor.PartSvc.CalcACWDaysRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CalcACWDays", ReplyAction="Erp:BO:Part/PartSvcContract/CalcACWDaysResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.CalcACWDaysResponse> CalcACWDaysAsync(EpicorConsole.Epicor.PartSvc.CalcACWDaysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PreLinkGlbPart", ReplyAction="Erp:BO:Part/PartSvcContract/PreLinkGlbPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/PreLinkGlbPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.PreLinkGlbPartResponse PreLinkGlbPart(EpicorConsole.Epicor.PartSvc.PreLinkGlbPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PreLinkGlbPart", ReplyAction="Erp:BO:Part/PartSvcContract/PreLinkGlbPartResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PreLinkGlbPartResponse> PreLinkGlbPartAsync(EpicorConsole.Epicor.PartSvc.PreLinkGlbPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PromptForPassword", ReplyAction="Erp:BO:Part/PartSvcContract/PromptForPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/PromptForPasswordEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opPromptForPassword")]
        bool PromptForPassword();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PromptForPassword", ReplyAction="Erp:BO:Part/PartSvcContract/PromptForPasswordResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opPromptForPassword")]
        System.Threading.Tasks.Task<bool> PromptForPasswordAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/RenamePartRev", ReplyAction="Erp:BO:Part/PartSvcContract/RenamePartRevResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/RenamePartRevEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void RenamePartRev(string sourcePartNum, string sourcePartRevNum, string targetPartRevNum, string targetPartRevDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/RenamePartRev", ReplyAction="Erp:BO:Part/PartSvcContract/RenamePartRevResponse")]
        System.Threading.Tasks.Task RenamePartRevAsync(string sourcePartNum, string sourcePartRevNum, string targetPartRevNum, string targetPartRevDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/SetMRPRecalcFlag", ReplyAction="Erp:BO:Part/PartSvcContract/SetMRPRecalcFlagResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/SetMRPRecalcFlagEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.PartTableset SetMRPRecalcFlag(string partNum, string plant);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/SetMRPRecalcFlag", ReplyAction="Erp:BO:Part/PartSvcContract/SetMRPRecalcFlagResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> SetMRPRecalcFlagAsync(string partNum, string plant);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/SetNextGeneratedLotNum", ReplyAction="Erp:BO:Part/PartSvcContract/SetNextGeneratedLotNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/SetNextGeneratedLotNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumResponse SetNextGeneratedLotNum(EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/SetNextGeneratedLotNum", ReplyAction="Erp:BO:Part/PartSvcContract/SetNextGeneratedLotNumResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumResponse> SetNextGeneratedLotNumAsync(EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/SkipGlbPart", ReplyAction="Erp:BO:Part/PartSvcContract/SkipGlbPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/SkipGlbPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.SkipGlbPartResponse SkipGlbPart(EpicorConsole.Epicor.PartSvc.SkipGlbPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/SkipGlbPart", ReplyAction="Erp:BO:Part/PartSvcContract/SkipGlbPartResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.SkipGlbPartResponse> SkipGlbPartAsync(EpicorConsole.Epicor.PartSvc.SkipGlbPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/UnlinkGlbPart", ReplyAction="Erp:BO:Part/PartSvcContract/UnlinkGlbPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/UnlinkGlbPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.UnlinkGlbPartResponse UnlinkGlbPart(EpicorConsole.Epicor.PartSvc.UnlinkGlbPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/UnlinkGlbPart", ReplyAction="Erp:BO:Part/PartSvcContract/UnlinkGlbPartResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.UnlinkGlbPartResponse> UnlinkGlbPartAsync(EpicorConsole.Epicor.PartSvc.UnlinkGlbPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ValidateInspection", ReplyAction="Erp:BO:Part/PartSvcContract/ValidateInspectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ValidateInspectionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ValidateInspectionResponse ValidateInspection(EpicorConsole.Epicor.PartSvc.ValidateInspectionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ValidateInspection", ReplyAction="Erp:BO:Part/PartSvcContract/ValidateInspectionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ValidateInspectionResponse> ValidateInspectionAsync(EpicorConsole.Epicor.PartSvc.ValidateInspectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ValidateInspVendor", ReplyAction="Erp:BO:Part/PartSvcContract/ValidateInspVendorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ValidateInspVendorEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ValidateInspVendorResponse ValidateInspVendor(EpicorConsole.Epicor.PartSvc.ValidateInspVendorRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ValidateInspVendor", ReplyAction="Erp:BO:Part/PartSvcContract/ValidateInspVendorResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ValidateInspVendorResponse> ValidateInspVendorAsync(EpicorConsole.Epicor.PartSvc.ValidateInspVendorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ValidateUOMconvChange", ReplyAction="Erp:BO:Part/PartSvcContract/ValidateUOMconvChangeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ValidateUOMconvChangeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ValidateUOMconvChange(string ipPartNum, string ipConvUOMClassID, string ipConvUOMIUM);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ValidateUOMconvChange", ReplyAction="Erp:BO:Part/PartSvcContract/ValidateUOMconvChangeResponse")]
        System.Threading.Tasks.Task ValidateUOMconvChangeAsync(string ipPartNum, string ipConvUOMClassID, string ipConvUOMIUM);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ValidateUOMConvTrans", ReplyAction="Erp:BO:Part/PartSvcContract/ValidateUOMConvTransResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ValidateUOMConvTransEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ValidateUOMConvTrans(string ipPartNum, string ipConvUOMClassID, string ipConvUOMIUM);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ValidateUOMConvTrans", ReplyAction="Erp:BO:Part/PartSvcContract/ValidateUOMConvTransResponse")]
        System.Threading.Tasks.Task ValidateUOMConvTransAsync(string ipPartNum, string ipConvUOMClassID, string ipConvUOMIUM);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetSNFormat", ReplyAction="Erp:BO:Part/PartSvcContract/GetSNFormatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetSNFormatEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetSNFormat();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetSNFormat", ReplyAction="Erp:BO:Part/PartSvcContract/GetSNFormatResponse")]
        System.Threading.Tasks.Task<string> GetSNFormatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PartExists", ReplyAction="Erp:BO:Part/PartSvcContract/PartExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/PartExistsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool PartExists(string PartNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PartExists", ReplyAction="Erp:BO:Part/PartSvcContract/PartExistsResponse")]
        System.Threading.Tasks.Task<bool> PartExistsAsync(string PartNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PartIsActive", ReplyAction="Erp:BO:Part/PartSvcContract/PartIsActiveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/PartIsActiveEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool PartIsActive(string PartNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PartIsActive", ReplyAction="Erp:BO:Part/PartSvcContract/PartIsActiveResponse")]
        System.Threading.Tasks.Task<bool> PartIsActiveAsync(string PartNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PartIsSalesKit", ReplyAction="Erp:BO:Part/PartSvcContract/PartIsSalesKitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/PartIsSalesKitEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.PartIsSalesKitResponse PartIsSalesKit(EpicorConsole.Epicor.PartSvc.PartIsSalesKitRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/PartIsSalesKit", ReplyAction="Erp:BO:Part/PartSvcContract/PartIsSalesKitResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartIsSalesKitResponse> PartIsSalesKitAsync(EpicorConsole.Epicor.PartSvc.PartIsSalesKitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetCodeDescList", ReplyAction="Erp:BO:Part/PartSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetCodeDescListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetCodeDescList", ReplyAction="Erp:BO:Part/PartSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/FindPart", ReplyAction="Erp:BO:Part/PartSvcContract/FindPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/FindPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.FindPartResponse FindPart(EpicorConsole.Epicor.PartSvc.FindPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/FindPart", ReplyAction="Erp:BO:Part/PartSvcContract/FindPartResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.FindPartResponse> FindPartAsync(EpicorConsole.Epicor.PartSvc.FindPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartFromRowID", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartFromRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetPartFromRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetPartFromRowIDResponse GetPartFromRowID(EpicorConsole.Epicor.PartSvc.GetPartFromRowIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetPartFromRowID", ReplyAction="Erp:BO:Part/PartSvcContract/GetPartFromRowIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetPartFromRowIDResponse> GetPartFromRowIDAsync(EpicorConsole.Epicor.PartSvc.GetPartFromRowIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangeSNLastUsedSeq", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangeSNLastUsedSeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/OnChangeSNLastUsedSeqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void OnChangeSNLastUsedSeq(string ipGenSeqStr, string ipLastUsedSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangeSNLastUsedSeq", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangeSNLastUsedSeqResponse")]
        System.Threading.Tasks.Task OnChangeSNLastUsedSeqAsync(string ipGenSeqStr, string ipLastUsedSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetDupPartConfigID", ReplyAction="Erp:BO:Part/PartSvcContract/GetDupPartConfigIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetDupPartConfigIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDResponse GetDupPartConfigID(EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetDupPartConfigID", ReplyAction="Erp:BO:Part/PartSvcContract/GetDupPartConfigIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDResponse> GetDupPartConfigIDAsync(EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ConfigIDChanging", ReplyAction="Erp:BO:Part/PartSvcContract/ConfigIDChangingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/ConfigIDChangingEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.ConfigIDChangingResponse ConfigIDChanging(EpicorConsole.Epicor.PartSvc.ConfigIDChangingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/ConfigIDChanging", ReplyAction="Erp:BO:Part/PartSvcContract/ConfigIDChangingResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ConfigIDChangingResponse> ConfigIDChangingAsync(EpicorConsole.Epicor.PartSvc.ConfigIDChangingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangedConfigID", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangedConfigIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/OnChangedConfigIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void OnChangedConfigID(string newConfigID, string partNum, string revisionNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/OnChangedConfigID", ReplyAction="Erp:BO:Part/PartSvcContract/OnChangedConfigIDResponse")]
        System.Threading.Tasks.Task OnChangedConfigIDAsync(string newConfigID, string partNum, string revisionNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckConfigForDelete", ReplyAction="Erp:BO:Part/PartSvcContract/CheckConfigForDeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/CheckConfigForDeleteEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opMessage")]
        string CheckConfigForDelete(string ipPartNum, string ipRevisionNum, string ipAltMethod, bool ipForRevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/CheckConfigForDelete", ReplyAction="Erp:BO:Part/PartSvcContract/CheckConfigForDeleteResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opMessage")]
        System.Threading.Tasks.Task<string> CheckConfigForDeleteAsync(string ipPartNum, string ipRevisionNum, string ipAltMethod, bool ipForRevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetIfCurrentSiteHasExternalMES", ReplyAction="Erp:BO:Part/PartSvcContract/GetIfCurrentSiteHasExternalMESResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetIfCurrentSiteHasExternalMESEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool GetIfCurrentSiteHasExternalMES(string site_ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetIfCurrentSiteHasExternalMES", ReplyAction="Erp:BO:Part/PartSvcContract/GetIfCurrentSiteHasExternalMESResponse")]
        System.Threading.Tasks.Task<bool> GetIfCurrentSiteHasExternalMESAsync(string site_ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetIfCurrentRevIsSiteExternalMES", ReplyAction="Erp:BO:Part/PartSvcContract/GetIfCurrentRevIsSiteExternalMESResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetIfCurrentRevIsSiteExternalMESEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool GetIfCurrentRevIsSiteExternalMES(string site_ex, string partnum_ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetIfCurrentRevIsSiteExternalMES", ReplyAction="Erp:BO:Part/PartSvcContract/GetIfCurrentRevIsSiteExternalMESResponse")]
        System.Threading.Tasks.Task<bool> GetIfCurrentRevIsSiteExternalMESAsync(string site_ex, string partnum_ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/RequestNoRevWithExternalMESForSiteValidation", ReplyAction="Erp:BO:Part/PartSvcContract/RequestNoRevWithExternalMESForSiteValidationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/RequestNoRevWithExternalMESForSiteValidationEpicorFau" +
            "ltDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool RequestNoRevWithExternalMESForSiteValidation(string company, string plant, string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/RequestNoRevWithExternalMESForSiteValidation", ReplyAction="Erp:BO:Part/PartSvcContract/RequestNoRevWithExternalMESForSiteValidationResponse")]
        System.Threading.Tasks.Task<bool> RequestNoRevWithExternalMESForSiteValidationAsync(string company, string plant, string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetExternalCRMIntegrationIsEnabled", ReplyAction="Erp:BO:Part/PartSvcContract/GetExternalCRMIntegrationIsEnabledResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetExternalCRMIntegrationIsEnabledEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool GetExternalCRMIntegrationIsEnabled();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetExternalCRMIntegrationIsEnabled", ReplyAction="Erp:BO:Part/PartSvcContract/GetExternalCRMIntegrationIsEnabledResponse")]
        System.Threading.Tasks.Task<bool> GetExternalCRMIntegrationIsEnabledAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPart", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartResponse GetNewPart(EpicorConsole.Epicor.PartSvc.GetNewPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPart", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartResponse> GetNewPartAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartAttch", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartAttchResponse GetNewPartAttch(EpicorConsole.Epicor.PartSvc.GetNewPartAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartAttch", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartAttchResponse> GetNewPartAttchAsync(EpicorConsole.Epicor.PartSvc.GetNewPartAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartCOO", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartCOOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartCOOEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartCOOResponse GetNewPartCOO(EpicorConsole.Epicor.PartSvc.GetNewPartCOORequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartCOO", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartCOOResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartCOOResponse> GetNewPartCOOAsync(EpicorConsole.Epicor.PartSvc.GetNewPartCOORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartDim", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartDimResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartDimEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartDimResponse GetNewPartDim(EpicorConsole.Epicor.PartSvc.GetNewPartDimRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartDim", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartDimResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartDimResponse> GetNewPartDimAsync(EpicorConsole.Epicor.PartSvc.GetNewPartDimRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartLangDesc", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartLangDescResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartLangDescEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartLangDescResponse GetNewPartLangDesc(EpicorConsole.Epicor.PartSvc.GetNewPartLangDescRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartLangDesc", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartLangDescResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartLangDescResponse> GetNewPartLangDescAsync(EpicorConsole.Epicor.PartSvc.GetNewPartLangDescRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartPlant", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartPlantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartPlantEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartPlantResponse GetNewPartPlant(EpicorConsole.Epicor.PartSvc.GetNewPartPlantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartPlant", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartPlantResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartPlantResponse> GetNewPartPlantAsync(EpicorConsole.Epicor.PartSvc.GetNewPartPlantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRestriction", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRestrictionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartRestrictionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionResponse GetNewPartRestriction(EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRestriction", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRestrictionResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionResponse> GetNewPartRestrictionAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRestrictSubst", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRestrictSubstResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartRestrictSubstEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstResponse GetNewPartRestrictSubst(EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRestrictSubst", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRestrictSubstResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstResponse> GetNewPartRestrictSubstAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRev", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartRevEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevResponse GetNewPartRev(EpicorConsole.Epicor.PartSvc.GetNewPartRevRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRev", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevResponse> GetNewPartRevAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRevAttch", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartRevAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchResponse GetNewPartRevAttch(EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRevAttch", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchResponse> GetNewPartRevAttchAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartAudit", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartAuditResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartAuditEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartAuditResponse GetNewPartAudit(EpicorConsole.Epicor.PartSvc.GetNewPartAuditRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartAudit", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartAuditResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartAuditResponse> GetNewPartAuditAsync(EpicorConsole.Epicor.PartSvc.GetNewPartAuditRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartCOPart", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartCOPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartCOPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartCOPartResponse GetNewPartCOPart(EpicorConsole.Epicor.PartSvc.GetNewPartCOPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartCOPart", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartCOPartResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartCOPartResponse> GetNewPartCOPartAsync(EpicorConsole.Epicor.PartSvc.GetNewPartCOPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlan", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlanEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanResponse GetNewPartRevInspPlan(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlan", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlanResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanResponse> GetNewPartRevInspPlanAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlanAttch", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlanAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlanAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchResponse GetNewPartRevInspPlanAttch(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlanAttch", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevInspPlanAttchResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchResponse> GetNewPartRevInspPlanAttchAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRevInspVend", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevInspVendResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartRevInspVendEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendResponse GetNewPartRevInspVend(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartRevInspVend", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartRevInspVendResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendResponse> GetNewPartRevInspVendAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartSubs", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartSubsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartSubsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartSubsResponse GetNewPartSubs(EpicorConsole.Epicor.PartSvc.GetNewPartSubsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartSubs", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartSubsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartSubsResponse> GetNewPartSubsAsync(EpicorConsole.Epicor.PartSvc.GetNewPartSubsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartPC", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartPCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartPCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartPCResponse GetNewPartPC(EpicorConsole.Epicor.PartSvc.GetNewPartPCRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartPC", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartPCResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartPCResponse> GetNewPartPCAsync(EpicorConsole.Epicor.PartSvc.GetNewPartPCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartWhse", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartWhseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartWhseEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartWhseResponse GetNewPartWhse(EpicorConsole.Epicor.PartSvc.GetNewPartWhseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartWhse", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartWhseResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartWhseResponse> GetNewPartWhseAsync(EpicorConsole.Epicor.PartSvc.GetNewPartWhseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartBinInfo", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartBinInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartBinInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoResponse GetNewPartBinInfo(EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartBinInfo", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartBinInfoResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoResponse> GetNewPartBinInfoAsync(EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartUOM", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartUOMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewPartUOMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewPartUOMResponse GetNewPartUOM(EpicorConsole.Epicor.PartSvc.GetNewPartUOMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewPartUOM", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewPartUOMResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartUOMResponse> GetNewPartUOMAsync(EpicorConsole.Epicor.PartSvc.GetNewPartUOMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewEntityGLC", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewEntityGLCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewEntityGLCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewEntityGLCResponse GetNewEntityGLC(EpicorConsole.Epicor.PartSvc.GetNewEntityGLCRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewEntityGLC", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewEntityGLCResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewEntityGLCResponse> GetNewEntityGLCAsync(EpicorConsole.Epicor.PartSvc.GetNewEntityGLCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewTaxExempt", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewTaxExemptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetNewTaxExemptEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetNewTaxExemptResponse GetNewTaxExempt(EpicorConsole.Epicor.PartSvc.GetNewTaxExemptRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetNewTaxExempt", ReplyAction="Erp:BO:Part/PartSvcContract/GetNewTaxExemptResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewTaxExemptResponse> GetNewTaxExemptAsync(EpicorConsole.Epicor.PartSvc.GetNewTaxExemptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/DeleteByID", ReplyAction="Erp:BO:Part/PartSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/DeleteByID", ReplyAction="Erp:BO:Part/PartSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetByID", ReplyAction="Erp:BO:Part/PartSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.PartTableset GetByID(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetByID", ReplyAction="Erp:BO:Part/PartSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> GetByIDAsync(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetList", ReplyAction="Erp:BO:Part/PartSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetListResponse GetList(EpicorConsole.Epicor.PartSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetList", ReplyAction="Erp:BO:Part/PartSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.PartSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetRows", ReplyAction="Erp:BO:Part/PartSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.GetRowsResponse GetRows(EpicorConsole.Epicor.PartSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetRows", ReplyAction="Erp:BO:Part/PartSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.PartSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetBySysRowID", ReplyAction="Erp:BO:Part/PartSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.PartTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetBySysRowID", ReplyAction="Erp:BO:Part/PartSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:Part/PartSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.PartTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:Part/PartSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/Update", ReplyAction="Erp:BO:Part/PartSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.UpdateResponse Update(EpicorConsole.Epicor.PartSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/Update", ReplyAction="Erp:BO:Part/PartSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.PartSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/UpdateExt", ReplyAction="Erp:BO:Part/PartSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.PartSvc.EpicorFaultDetail), Action="Erp:BO:Part/PartSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.PartSvc.UpdateExtResponse UpdateExt(EpicorConsole.Epicor.PartSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Part/PartSvcContract/UpdateExt", ReplyAction="Erp:BO:Part/PartSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.PartSvc.UpdateExtRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartBinInfoKBCode", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartBinInfoKBCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string NewKBCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartBinInfoKBCodeRequest() {
        }
        
        public ChangePartBinInfoKBCodeRequest(string NewKBCode, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.NewKBCode = NewKBCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartBinInfoKBCodeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartBinInfoKBCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartBinInfoKBCodeResponse() {
        }
        
        public ChangePartBinInfoKBCodeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartBuyToOrder", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartBuyToOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool ipBuyToOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartBuyToOrderRequest() {
        }
        
        public ChangePartBuyToOrderRequest(bool ipBuyToOrder, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipBuyToOrder = ipBuyToOrder;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartBuyToOrderResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartBuyToOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartBuyToOrderResponse() {
        }
        
        public ChangePartBuyToOrderResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartCommodityCode", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartCommodityCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string newCommodityCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartCommodityCodeRequest() {
        }
        
        public ChangePartCommodityCodeRequest(string newCommodityCode, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.newCommodityCode = newCommodityCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartCommodityCodeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartCommodityCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartCommodityCodeResponse() {
        }
        
        public ChangePartCommodityCodeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartNonStock", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartNonStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool newNonStock;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartNonStockRequest() {
        }
        
        public ChangePartNonStockRequest(bool newNonStock, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.newNonStock = newNonStock;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartNonStockResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartNonStockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartNonStockResponse() {
        }
        
        public ChangePartNonStockResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartGlobalPart", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartGlobalPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool ProposedGlobalPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartGlobalPartRequest() {
        }
        
        public ChangePartGlobalPartRequest(bool ProposedGlobalPart, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ProposedGlobalPart = ProposedGlobalPart;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartGlobalPartResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartGlobalPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartGlobalPartResponse() {
        }
        
        public ChangePartGlobalPartResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartNum", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ProposedPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartNumRequest() {
        }
        
        public ChangePartNumRequest(string ProposedPartNum, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ProposedPartNum = ProposedPartNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartNumResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartNumResponse() {
        }
        
        public ChangePartNumResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartPlantBuyToOrder", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartPlantBuyToOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool ipBuyToOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartPlantBuyToOrderRequest() {
        }
        
        public ChangePartPlantBuyToOrderRequest(bool ipBuyToOrder, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipBuyToOrder = ipBuyToOrder;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartPlantBuyToOrderResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartPlantBuyToOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartPlantBuyToOrderResponse() {
        }
        
        public ChangePartPlantBuyToOrderResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartPlantSourceType", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartPlantSourceTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string NewSourceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartPlantSourceTypeRequest() {
        }
        
        public ChangePartPlantSourceTypeRequest(string NewSourceType, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.NewSourceType = NewSourceType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartPlantSourceTypeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartPlantSourceTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ruleMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string singleLevelConfMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartPlantSourceTypeResponse() {
        }
        
        public ChangePartPlantSourceTypeResponse(string ruleMessage, string singleLevelConfMsg, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ruleMessage = ruleMessage;
            this.singleLevelConfMsg = singleLevelConfMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartPlantUrgentVendorID", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartPlantUrgentVendorIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string NewVendorId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartPlantUrgentVendorIDRequest() {
        }
        
        public ChangePartPlantUrgentVendorIDRequest(string NewVendorId, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.NewVendorId = NewVendorId;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartPlantUrgentVendorIDResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartPlantUrgentVendorIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartPlantUrgentVendorIDResponse() {
        }
        
        public ChangePartPlantUrgentVendorIDResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartPlantVendorID", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartPlantVendorIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string NewVendorId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartPlantVendorIDRequest() {
        }
        
        public ChangePartPlantVendorIDRequest(string NewVendorId, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.NewVendorId = NewVendorId;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartPlantVendorIDResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartPlantVendorIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartPlantVendorIDResponse() {
        }
        
        public ChangePartPlantVendorIDResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartProdCode", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartProdCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ProposedProdCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartProdCodeRequest() {
        }
        
        public ChangePartProdCodeRequest(string ProposedProdCode, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ProposedProdCode = ProposedProdCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartProdCodeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartProdCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartProdCodeResponse() {
        }
        
        public ChangePartProdCodeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartRestrictionManual", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartRestrictionManualRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool checkManual;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartRestrictionManualRequest() {
        }
        
        public ChangePartRestrictionManualRequest(bool checkManual, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.checkManual = checkManual;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartRestrictionManualResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartRestrictionManualResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartRestrictionManualResponse() {
        }
        
        public ChangePartRestrictionManualResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartRestrictionType", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartRestrictionTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartRestrictionTypeRequest() {
        }
        
        public ChangePartRestrictionTypeRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartRestrictionTypeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartRestrictionTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartRestrictionTypeResponse() {
        }
        
        public ChangePartRestrictionTypeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartRestrictSubstance", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartRestrictSubstanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartRestrictSubstanceRequest() {
        }
        
        public ChangePartRestrictSubstanceRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartRestrictSubstanceResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartRestrictSubstanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartRestrictSubstanceResponse() {
        }
        
        public ChangePartRestrictSubstanceResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartRevApproved", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartRevApprovedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool ipApproved;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool ipValidPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartRevApprovedRequest() {
        }
        
        public ChangePartRevApprovedRequest(bool ipApproved, bool ipValidPassword, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipApproved = ipApproved;
            this.ipValidPassword = ipValidPassword;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartRevApprovedResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartRevApprovedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartRevApprovedResponse() {
        }
        
        public ChangePartRevApprovedResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartSNBaseDataType", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartSNBaseDataTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ipSNBaseDataType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartSNBaseDataTypeRequest() {
        }
        
        public ChangePartSNBaseDataTypeRequest(string ipSNBaseDataType, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipSNBaseDataType = ipSNBaseDataType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartSNBaseDataTypeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartSNBaseDataTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartSNBaseDataTypeResponse() {
        }
        
        public ChangePartSNBaseDataTypeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartSNMaskPrefixSuffix", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartSNMaskPrefixSuffixRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ipSNMaskPrefix;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string ipSNMaskSuffix;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartSNMaskPrefixSuffixRequest() {
        }
        
        public ChangePartSNMaskPrefixSuffixRequest(string ipSNMaskPrefix, string ipSNMaskSuffix, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipSNMaskPrefix = ipSNMaskPrefix;
            this.ipSNMaskSuffix = ipSNMaskSuffix;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartSNMaskPrefixSuffixResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartSNMaskPrefixSuffixResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartSNMaskPrefixSuffixResponse() {
        }
        
        public ChangePartSNMaskPrefixSuffixResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartSubsPartNum", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartSubsPartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string proposedPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartSubsPartNumRequest() {
        }
        
        public ChangePartSubsPartNumRequest(string proposedPartNum, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.proposedPartNum = proposedPartNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartSubsPartNumResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartSubsPartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartSubsPartNumResponse() {
        }
        
        public ChangePartSubsPartNumResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartTrackDimension", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartTrackDimensionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool TrackDimension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartTrackDimensionRequest() {
        }
        
        public ChangePartTrackDimensionRequest(bool TrackDimension, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.TrackDimension = TrackDimension;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartTrackDimensionResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartTrackDimensionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartTrackDimensionResponse() {
        }
        
        public ChangePartTrackDimensionResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartTrackLots", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartTrackLotsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool TrackLots;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartTrackLotsRequest() {
        }
        
        public ChangePartTrackLotsRequest(bool TrackLots, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.TrackLots = TrackLots;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartTrackLotsResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartTrackLotsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartTrackLotsResponse() {
        }
        
        public ChangePartTrackLotsResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartTrackSerialNum", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartTrackSerialNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool TrackSerialNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartTrackSerialNumRequest() {
        }
        
        public ChangePartTrackSerialNumRequest(bool TrackSerialNum, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.TrackSerialNum = TrackSerialNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartTrackSerialNumResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartTrackSerialNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartTrackSerialNumResponse() {
        }
        
        public ChangePartTrackSerialNumResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartTypeCode", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartTypeCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string TypeCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartTypeCodeRequest() {
        }
        
        public ChangePartTypeCodeRequest(string TypeCode, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.TypeCode = TypeCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartTypeCodeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartTypeCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartTypeCodeResponse() {
        }
        
        public ChangePartTypeCodeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartUOMConvOverride", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartUOMConvOverrideRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool ipConvOverrride;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartUOMConvOverrideRequest() {
        }
        
        public ChangePartUOMConvOverrideRequest(bool ipConvOverrride, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipConvOverrride = ipConvOverrride;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartUOMConvOverrideResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartUOMConvOverrideResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartUOMConvOverrideResponse() {
        }
        
        public ChangePartUOMConvOverrideResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartWhseKBCode", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartWhseKBCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string NewKBCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartWhseKBCodeRequest() {
        }
        
        public ChangePartWhseKBCodeRequest(string NewKBCode, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.NewKBCode = NewKBCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePartWhseKBCodeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePartWhseKBCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePartWhseKBCodeResponse() {
        }
        
        public ChangePartWhseKBCodeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePlantSNBaseDataType", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePlantSNBaseDataTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ipSNBaseDataType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePlantSNBaseDataTypeRequest() {
        }
        
        public ChangePlantSNBaseDataTypeRequest(string ipSNBaseDataType, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipSNBaseDataType = ipSNBaseDataType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePlantSNBaseDataTypeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePlantSNBaseDataTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePlantSNBaseDataTypeResponse() {
        }
        
        public ChangePlantSNBaseDataTypeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePlantSNMaskPrefixSuffix", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePlantSNMaskPrefixSuffixRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ipSNMaskPrefix;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string ipSNMaskSuffix;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePlantSNMaskPrefixSuffixRequest() {
        }
        
        public ChangePlantSNMaskPrefixSuffixRequest(string ipSNMaskPrefix, string ipSNMaskSuffix, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipSNMaskPrefix = ipSNMaskPrefix;
            this.ipSNMaskSuffix = ipSNMaskSuffix;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePlantSNMaskPrefixSuffixResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangePlantSNMaskPrefixSuffixResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangePlantSNMaskPrefixSuffixResponse() {
        }
        
        public ChangePlantSNMaskPrefixSuffixResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQtyBearing", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeQtyBearingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool newQtyBearing;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeQtyBearingRequest() {
        }
        
        public ChangeQtyBearingRequest(bool newQtyBearing, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.newQtyBearing = newQtyBearing;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeQtyBearingResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeQtyBearingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeQtyBearingResponse() {
        }
        
        public ChangeQtyBearingResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeLinkToContract", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeLinkToContractRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool newLinkToContract;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeLinkToContractRequest() {
        }
        
        public ChangeLinkToContractRequest(bool newLinkToContract, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.newLinkToContract = newLinkToContract;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeLinkToContractResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeLinkToContractResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeLinkToContractResponse() {
        }
        
        public ChangeLinkToContractResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSNMask", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeSNMaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ipSNMask;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeSNMaskRequest() {
        }
        
        public ChangeSNMaskRequest(string ipSNMask, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipSNMask = ipSNMask;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSNMaskResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeSNMaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeSNMaskResponse() {
        }
        
        public ChangeSNMaskResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUOMClassID", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeUOMClassIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string uomClassID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeUOMClassIDRequest() {
        }
        
        public ChangeUOMClassIDRequest(string uomClassID, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.uomClassID = uomClassID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUOMClassIDResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeUOMClassIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeUOMClassIDResponse() {
        }
        
        public ChangeUOMClassIDResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUOMCode", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeUOMCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string uomCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeUOMCodeRequest() {
        }
        
        public ChangeUOMCodeRequest(string uomCode, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.uomCode = uomCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUOMCodeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChangeUOMCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChangeUOMCodeResponse() {
        }
        
        public ChangeUOMCodeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChanginPartRestrictSubs", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChanginPartRestrictSubsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string pSubstanceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChanginPartRestrictSubsRequest() {
        }
        
        public ChanginPartRestrictSubsRequest(string pSubstanceID, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.pSubstanceID = pSubstanceID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChanginPartRestrictSubsResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ChanginPartRestrictSubsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ChanginPartRestrictSubsResponse() {
        }
        
        public ChanginPartRestrictSubsResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPartChanges", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class CheckPartChangesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public CheckPartChangesRequest() {
        }
        
        public CheckPartChangesRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPartChangesResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class CheckPartChangesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string cPartChangedMsgText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string cPartSNChangedMsgText;
        
        public CheckPartChangesResponse() {
        }
        
        public CheckPartChangesResponse(string cPartChangedMsgText, string cPartSNChangedMsgText) {
            this.cPartChangedMsgText = cPartChangedMsgText;
            this.cPartSNChangedMsgText = cPartSNChangedMsgText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMRPJobs", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class DeleteMRPJobsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public DeleteMRPJobsRequest() {
        }
        
        public DeleteMRPJobsRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMRPJobsResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class DeleteMRPJobsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public DeleteMRPJobsResponse() {
        }
        
        public DeleteMRPJobsResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMultiLevelRules", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class DeleteMultiLevelRulesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string NewSourceType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public DeleteMultiLevelRulesRequest() {
        }
        
        public DeleteMultiLevelRulesRequest(string NewSourceType, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.NewSourceType = NewSourceType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMultiLevelRulesResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class DeleteMultiLevelRulesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public DeleteMultiLevelRulesResponse() {
        }
        
        public DeleteMultiLevelRulesResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListByConfigID", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListByConfigIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string WhereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string PartRevWhereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public int PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public int AbsolutePage;
        
        public GetListByConfigIDRequest() {
        }
        
        public GetListByConfigIDRequest(string WhereClause, string PartRevWhereClause, int PageSize, int AbsolutePage) {
            this.WhereClause = WhereClause;
            this.PartRevWhereClause = PartRevWhereClause;
            this.PageSize = PageSize;
            this.AbsolutePage = AbsolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListByConfigIDResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListByConfigIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartListTableset GetListByConfigIDResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool MorePages;
        
        public GetListByConfigIDResponse() {
        }
        
        public GetListByConfigIDResponse(EpicorConsole.Epicor.PartSvc.PartListTableset GetListByConfigIDResult, bool MorePages) {
            this.GetListByConfigIDResult = GetListByConfigIDResult;
            this.MorePages = MorePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListByWarehouseBin", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListByWarehouseBinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string partWhereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string warehouseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string binType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string zoneID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=4)]
        public string fromBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=5)]
        public string toBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=6)]
        public bool excludeNonNettable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=7)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=8)]
        public int absolutePage;
        
        public GetListByWarehouseBinRequest() {
        }
        
        public GetListByWarehouseBinRequest(string partWhereClause, string warehouseCode, string binType, string zoneID, string fromBinNum, string toBinNum, bool excludeNonNettable, int pageSize, int absolutePage) {
            this.partWhereClause = partWhereClause;
            this.warehouseCode = warehouseCode;
            this.binType = binType;
            this.zoneID = zoneID;
            this.fromBinNum = fromBinNum;
            this.toBinNum = toBinNum;
            this.excludeNonNettable = excludeNonNettable;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListByWarehouseBinResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListByWarehouseBinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartListTableset GetListByWarehouseBinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool morePages;
        
        public GetListByWarehouseBinResponse() {
        }
        
        public GetListByWarehouseBinResponse(EpicorConsole.Epicor.PartSvc.PartListTableset GetListByWarehouseBinResult, bool morePages) {
            this.GetListByWarehouseBinResult = GetListByWarehouseBinResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListFilterPlants", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListFilterPlantsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string WhereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public int PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public int AbsolutePage;
        
        public GetListFilterPlantsRequest() {
        }
        
        public GetListFilterPlantsRequest(string WhereClause, int PageSize, int AbsolutePage) {
            this.WhereClause = WhereClause;
            this.PageSize = PageSize;
            this.AbsolutePage = AbsolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListFilterPlantsResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListFilterPlantsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartListTableset GetListFilterPlantsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool MorePages;
        
        public GetListFilterPlantsResponse() {
        }
        
        public GetListFilterPlantsResponse(EpicorConsole.Epicor.PartSvc.PartListTableset GetListFilterPlantsResult, bool MorePages) {
            this.GetListFilterPlantsResult = GetListFilterPlantsResult;
            this.MorePages = MorePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListFromSelectedKeys", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListFromSelectedKeysRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartListTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public int absolutePage;
        
        public GetListFromSelectedKeysRequest() {
        }
        
        public GetListFromSelectedKeysRequest(EpicorConsole.Epicor.PartSvc.PartListTableset ds, int pageSize, int absolutePage) {
            this.ds = ds;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListFromSelectedKeysResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListFromSelectedKeysResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartListTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool morePages;
        
        public GetListFromSelectedKeysResponse() {
        }
        
        public GetListFromSelectedKeysResponse(EpicorConsole.Epicor.PartSvc.PartListTableset ds, bool morePages) {
            this.ds = ds;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartWhereUsed", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetPartWhereUsedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string whereUsedPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public int absolutePage;
        
        public GetPartWhereUsedRequest() {
        }
        
        public GetPartWhereUsedRequest(string whereUsedPartNum, int pageSize, int absolutePage) {
            this.whereUsedPartNum = whereUsedPartNum;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartWhereUsedResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetPartWhereUsedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartWhereUsedTableset GetPartWhereUsedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool morePages;
        
        public GetPartWhereUsedResponse() {
        }
        
        public GetPartWhereUsedResponse(EpicorConsole.Epicor.PartSvc.PartWhereUsedTableset GetPartWhereUsedResult, bool morePages) {
            this.GetPartWhereUsedResult = GetPartWhereUsedResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartXRefInfo", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetPartXRefInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public System.Guid SysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string rowType;
        
        public GetPartXRefInfoRequest() {
        }
        
        public GetPartXRefInfoRequest(string partNum, System.Guid SysRowID, string rowType) {
            this.partNum = partNum;
            this.SysRowID = SysRowID;
            this.rowType = rowType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartXRefInfoResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetPartXRefInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string serialWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string questionString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public bool multipleMatch;
        
        public GetPartXRefInfoResponse() {
        }
        
        public GetPartXRefInfoResponse(string partNum, string serialWarning, string questionString, bool multipleMatch) {
            this.partNum = partNum;
            this.serialWarning = serialWarning;
            this.questionString = questionString;
            this.multipleMatch = multipleMatch;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LinkGlbPart", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class LinkGlbPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string GlbPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public EpicorConsole.Epicor.PartSvc.GlbPartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds1;
        
        public LinkGlbPartRequest() {
        }
        
        public LinkGlbPartRequest(string glbCompany, string GlbPartNum, EpicorConsole.Epicor.PartSvc.GlbPartTableset ds, EpicorConsole.Epicor.PartSvc.PartTableset ds1) {
            this.glbCompany = glbCompany;
            this.GlbPartNum = GlbPartNum;
            this.ds = ds;
            this.ds1 = ds1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LinkGlbPartResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class LinkGlbPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds1;
        
        public LinkGlbPartResponse() {
        }
        
        public LinkGlbPartResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds1) {
            this.ds1 = ds1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePkgCode", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class OnChangePkgCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string uomCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string pkgCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public OnChangePkgCodeRequest() {
        }
        
        public OnChangePkgCodeRequest(string partNum, string uomCode, string pkgCode, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.partNum = partNum;
            this.uomCode = uomCode;
            this.pkgCode = pkgCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePkgCodeResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class OnChangePkgCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public OnChangePkgCodeResponse() {
        }
        
        public OnChangePkgCodeResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePESUNAT", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class OnChangePESUNATRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string codeType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public OnChangePESUNATRequest() {
        }
        
        public OnChangePESUNATRequest(string codeType, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.codeType = codeType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePESUNATResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class OnChangePESUNATResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public OnChangePESUNATResponse() {
        }
        
        public OnChangePESUNATResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePlant", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class OnChangePlantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string plantCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public OnChangePlantRequest() {
        }
        
        public OnChangePlantRequest(string plantCode, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.plantCode = plantCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePlantResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class OnChangePlantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public OnChangePlantResponse() {
        }
        
        public OnChangePlantResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalcACWDays", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class CalcACWDaysRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool ipMfgLeadTimeMnl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public int ipLvlMfgLeadTimeMnl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public int ipACWPercentage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public CalcACWDaysRequest() {
        }
        
        public CalcACWDaysRequest(bool ipMfgLeadTimeMnl, int ipLvlMfgLeadTimeMnl, int ipACWPercentage, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipMfgLeadTimeMnl = ipMfgLeadTimeMnl;
            this.ipLvlMfgLeadTimeMnl = ipLvlMfgLeadTimeMnl;
            this.ipACWPercentage = ipACWPercentage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalcACWDaysResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class CalcACWDaysResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public CalcACWDaysResponse() {
        }
        
        public CalcACWDaysResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreLinkGlbPart", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class PreLinkGlbPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string GlbPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public EpicorConsole.Epicor.PartSvc.GlbPartTableset ds;
        
        public PreLinkGlbPartRequest() {
        }
        
        public PreLinkGlbPartRequest(string glbCompany, string GlbPartNum, EpicorConsole.Epicor.PartSvc.GlbPartTableset ds) {
            this.glbCompany = glbCompany;
            this.GlbPartNum = GlbPartNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreLinkGlbPartResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class PreLinkGlbPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.GlbPartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string vMessage;
        
        public PreLinkGlbPartResponse() {
        }
        
        public PreLinkGlbPartResponse(EpicorConsole.Epicor.PartSvc.GlbPartTableset ds, string vMessage) {
            this.ds = ds;
            this.vMessage = vMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNextGeneratedLotNum", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class SetNextGeneratedLotNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public SetNextGeneratedLotNumRequest() {
        }
        
        public SetNextGeneratedLotNumRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNextGeneratedLotNumResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class SetNextGeneratedLotNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public SetNextGeneratedLotNumResponse() {
        }
        
        public SetNextGeneratedLotNumResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipGlbPart", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class SkipGlbPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string glbPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public EpicorConsole.Epicor.PartSvc.GlbPartTableset ds;
        
        public SkipGlbPartRequest() {
        }
        
        public SkipGlbPartRequest(string glbCompany, string glbPartNum, EpicorConsole.Epicor.PartSvc.GlbPartTableset ds) {
            this.glbCompany = glbCompany;
            this.glbPartNum = glbPartNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipGlbPartResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class SkipGlbPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.GlbPartTableset ds;
        
        public SkipGlbPartResponse() {
        }
        
        public SkipGlbPartResponse(EpicorConsole.Epicor.PartSvc.GlbPartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UnlinkGlbPart", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class UnlinkGlbPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string glbCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string glbPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public EpicorConsole.Epicor.PartSvc.GlbPartTableset ds;
        
        public UnlinkGlbPartRequest() {
        }
        
        public UnlinkGlbPartRequest(string glbCompany, string glbPartNum, EpicorConsole.Epicor.PartSvc.GlbPartTableset ds) {
            this.glbCompany = glbCompany;
            this.glbPartNum = glbPartNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UnlinkGlbPartResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class UnlinkGlbPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset UnlinkGlbPartResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.GlbPartTableset ds;
        
        public UnlinkGlbPartResponse() {
        }
        
        public UnlinkGlbPartResponse(EpicorConsole.Epicor.PartSvc.PartTableset UnlinkGlbPartResult, EpicorConsole.Epicor.PartSvc.GlbPartTableset ds) {
            this.UnlinkGlbPartResult = UnlinkGlbPartResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateInspection", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ValidateInspectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ipProposedInspPlan;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string ipProposedSpecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string iptable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ValidateInspectionRequest() {
        }
        
        public ValidateInspectionRequest(string ipProposedInspPlan, string ipProposedSpecId, string iptable, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipProposedInspPlan = ipProposedInspPlan;
            this.ipProposedSpecId = ipProposedSpecId;
            this.iptable = iptable;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateInspectionResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ValidateInspectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ValidateInspectionResponse() {
        }
        
        public ValidateInspectionResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateInspVendor", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ValidateInspVendorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ipProposedVendor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ValidateInspVendorRequest() {
        }
        
        public ValidateInspVendorRequest(string ipProposedVendor, EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ipProposedVendor = ipProposedVendor;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateInspVendorResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ValidateInspVendorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public ValidateInspVendorResponse() {
        }
        
        public ValidateInspVendorResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PartIsSalesKit", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class PartIsSalesKitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string PartNumber;
        
        public PartIsSalesKitRequest() {
        }
        
        public PartIsSalesKitRequest(string PartNumber) {
            this.PartNumber = PartNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PartIsSalesKitResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class PartIsSalesKitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public bool PartIsSalesKitResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool IsSalesKit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public bool IsPhantom;
        
        public PartIsSalesKitResponse() {
        }
        
        public PartIsSalesKitResponse(bool PartIsSalesKitResult, bool IsSalesKit, bool IsPhantom) {
            this.PartIsSalesKitResult = PartIsSalesKitResult;
            this.IsSalesKit = IsSalesKit;
            this.IsPhantom = IsPhantom;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindPart", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class FindPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ipPartNum;
        
        public FindPartRequest() {
        }
        
        public FindPartRequest(string ipPartNum) {
            this.ipPartNum = ipPartNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindPartResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class FindPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string opPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string opUOM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string opMatchType;
        
        public FindPartResponse() {
        }
        
        public FindPartResponse(string opPartNum, string opUOM, string opMatchType) {
            this.opPartNum = opPartNum;
            this.opUOM = opUOM;
            this.opMatchType = opMatchType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartFromRowID", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetPartFromRowIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string ipRowType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public System.Guid ipRowID;
        
        public GetPartFromRowIDRequest() {
        }
        
        public GetPartFromRowIDRequest(string ipRowType, System.Guid ipRowID) {
            this.ipRowType = ipRowType;
            this.ipRowID = ipRowID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartFromRowIDResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetPartFromRowIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string opPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string opUOM;
        
        public GetPartFromRowIDResponse() {
        }
        
        public GetPartFromRowIDResponse(string opPartNum, string opUOM) {
            this.opPartNum = opPartNum;
            this.opUOM = opUOM;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDupPartConfigID", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetDupPartConfigIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string configID;
        
        public GetDupPartConfigIDRequest() {
        }
        
        public GetDupPartConfigIDRequest(string configID) {
            this.configID = configID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDupPartConfigIDResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetDupPartConfigIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string foundConfigID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string foundDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string foundType;
        
        public GetDupPartConfigIDResponse() {
        }
        
        public GetDupPartConfigIDResponse(string message, string foundConfigID, string foundDescription, string foundType) {
            this.message = message;
            this.foundConfigID = foundConfigID;
            this.foundDescription = foundDescription;
            this.foundType = foundType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigIDChanging", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ConfigIDChangingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string configID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string revisionNum;
        
        public ConfigIDChangingRequest() {
        }
        
        public ConfigIDChangingRequest(string configID, string partNum, string revisionNum) {
            this.configID = configID;
            this.partNum = partNum;
            this.revisionNum = revisionNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigIDChangingResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class ConfigIDChangingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string configID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string outMessage;
        
        public ConfigIDChangingResponse() {
        }
        
        public ConfigIDChangingResponse(string configID, string outMessage) {
            this.configID = configID;
            this.outMessage = outMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPart", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartRequest() {
        }
        
        public GetNewPartRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartResponse() {
        }
        
        public GetNewPartResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartAttch", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        public GetNewPartAttchRequest() {
        }
        
        public GetNewPartAttchRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            this.ds = ds;
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartAttchResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartAttchResponse() {
        }
        
        public GetNewPartAttchResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartCOO", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartCOORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        public GetNewPartCOORequest() {
        }
        
        public GetNewPartCOORequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            this.ds = ds;
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartCOOResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartCOOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartCOOResponse() {
        }
        
        public GetNewPartCOOResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartDim", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartDimRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        public GetNewPartDimRequest() {
        }
        
        public GetNewPartDimRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            this.ds = ds;
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartDimResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartDimResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartDimResponse() {
        }
        
        public GetNewPartDimResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartLangDesc", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartLangDescRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        public GetNewPartLangDescRequest() {
        }
        
        public GetNewPartLangDescRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            this.ds = ds;
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartLangDescResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartLangDescResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartLangDescResponse() {
        }
        
        public GetNewPartLangDescResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartPlant", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartPlantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        public GetNewPartPlantRequest() {
        }
        
        public GetNewPartPlantRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            this.ds = ds;
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartPlantResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartPlantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartPlantResponse() {
        }
        
        public GetNewPartPlantResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRestriction", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRestrictionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        public GetNewPartRestrictionRequest() {
        }
        
        public GetNewPartRestrictionRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            this.ds = ds;
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRestrictionResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRestrictionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartRestrictionResponse() {
        }
        
        public GetNewPartRestrictionResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRestrictSubst", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRestrictSubstRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string restrictionTypeID;
        
        public GetNewPartRestrictSubstRequest() {
        }
        
        public GetNewPartRestrictSubstRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string restrictionTypeID) {
            this.ds = ds;
            this.partNum = partNum;
            this.restrictionTypeID = restrictionTypeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRestrictSubstResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRestrictSubstResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartRestrictSubstResponse() {
        }
        
        public GetNewPartRestrictSubstResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRev", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string revisionNum;
        
        public GetNewPartRevRequest() {
        }
        
        public GetNewPartRevRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum) {
            this.ds = ds;
            this.partNum = partNum;
            this.revisionNum = revisionNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRevResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartRevResponse() {
        }
        
        public GetNewPartRevResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRevAttch", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string altMethod;
        
        public GetNewPartRevAttchRequest() {
        }
        
        public GetNewPartRevAttchRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod) {
            this.ds = ds;
            this.partNum = partNum;
            this.revisionNum = revisionNum;
            this.altMethod = altMethod;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRevAttchResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartRevAttchResponse() {
        }
        
        public GetNewPartRevAttchResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartAudit", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartAuditRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string altMethod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=4)]
        public System.Nullable<System.DateTime> changeDate;
        
        public GetNewPartAuditRequest() {
        }
        
        public GetNewPartAuditRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod, System.Nullable<System.DateTime> changeDate) {
            this.ds = ds;
            this.partNum = partNum;
            this.revisionNum = revisionNum;
            this.altMethod = altMethod;
            this.changeDate = changeDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartAuditResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartAuditResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartAuditResponse() {
        }
        
        public GetNewPartAuditResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartCOPart", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartCOPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string altMethod;
        
        public GetNewPartCOPartRequest() {
        }
        
        public GetNewPartCOPartRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod) {
            this.ds = ds;
            this.partNum = partNum;
            this.revisionNum = revisionNum;
            this.altMethod = altMethod;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartCOPartResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartCOPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartCOPartResponse() {
        }
        
        public GetNewPartCOPartResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRevInspPlan", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevInspPlanRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string altMethod;
        
        public GetNewPartRevInspPlanRequest() {
        }
        
        public GetNewPartRevInspPlanRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod) {
            this.ds = ds;
            this.partNum = partNum;
            this.revisionNum = revisionNum;
            this.altMethod = altMethod;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRevInspPlanResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevInspPlanResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartRevInspPlanResponse() {
        }
        
        public GetNewPartRevInspPlanResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRevInspPlanAttch", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevInspPlanAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string altMethod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=4)]
        public int seqPlan;
        
        public GetNewPartRevInspPlanAttchRequest() {
        }
        
        public GetNewPartRevInspPlanAttchRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod, int seqPlan) {
            this.ds = ds;
            this.partNum = partNum;
            this.revisionNum = revisionNum;
            this.altMethod = altMethod;
            this.seqPlan = seqPlan;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRevInspPlanAttchResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevInspPlanAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartRevInspPlanAttchResponse() {
        }
        
        public GetNewPartRevInspPlanAttchResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRevInspVend", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevInspVendRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string revisionNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string altMethod;
        
        public GetNewPartRevInspVendRequest() {
        }
        
        public GetNewPartRevInspVendRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod) {
            this.ds = ds;
            this.partNum = partNum;
            this.revisionNum = revisionNum;
            this.altMethod = altMethod;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartRevInspVendResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartRevInspVendResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartRevInspVendResponse() {
        }
        
        public GetNewPartRevInspVendResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartSubs", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartSubsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        public GetNewPartSubsRequest() {
        }
        
        public GetNewPartSubsRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            this.ds = ds;
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartSubsResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartSubsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartSubsResponse() {
        }
        
        public GetNewPartSubsResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartPC", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartPCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string pcType;
        
        public GetNewPartPCRequest() {
        }
        
        public GetNewPartPCRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string pcType) {
            this.ds = ds;
            this.partNum = partNum;
            this.pcType = pcType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartPCResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartPCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartPCResponse() {
        }
        
        public GetNewPartPCResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartWhse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartWhseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string plant;
        
        public GetNewPartWhseRequest() {
        }
        
        public GetNewPartWhseRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string plant) {
            this.ds = ds;
            this.partNum = partNum;
            this.plant = plant;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartWhseResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartWhseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartWhseResponse() {
        }
        
        public GetNewPartWhseResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartBinInfo", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartBinInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string plant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string warehouseCode;
        
        public GetNewPartBinInfoRequest() {
        }
        
        public GetNewPartBinInfoRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string plant, string warehouseCode) {
            this.ds = ds;
            this.partNum = partNum;
            this.plant = plant;
            this.warehouseCode = warehouseCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartBinInfoResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartBinInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartBinInfoResponse() {
        }
        
        public GetNewPartBinInfoResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartUOM", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartUOMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string partNum;
        
        public GetNewPartUOMRequest() {
        }
        
        public GetNewPartUOMRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            this.ds = ds;
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartUOMResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewPartUOMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewPartUOMResponse() {
        }
        
        public GetNewPartUOMResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEntityGLC", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewEntityGLCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string relatedToFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string key1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string key2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=4)]
        public string key3;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=5)]
        public string key4;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=6)]
        public string key5;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=7)]
        public string key6;
        
        public GetNewEntityGLCRequest() {
        }
        
        public GetNewEntityGLCRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string relatedToFile, string key1, string key2, string key3, string key4, string key5, string key6) {
            this.ds = ds;
            this.relatedToFile = relatedToFile;
            this.key1 = key1;
            this.key2 = key2;
            this.key3 = key3;
            this.key4 = key4;
            this.key5 = key5;
            this.key6 = key6;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEntityGLCResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewEntityGLCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewEntityGLCResponse() {
        }
        
        public GetNewEntityGLCResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewTaxExempt", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewTaxExemptRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string relatedToFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string key1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string key2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=4)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=5)]
        public string rateCode;
        
        public GetNewTaxExemptRequest() {
        }
        
        public GetNewTaxExemptRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds, string relatedToFile, string key1, string key2, string taxCode, string rateCode) {
            this.ds = ds;
            this.relatedToFile = relatedToFile;
            this.key1 = key1;
            this.key2 = key2;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewTaxExemptResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetNewTaxExemptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public GetNewTaxExemptResponse() {
        }
        
        public GetNewTaxExemptResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicorConsole.Epicor.PartSvc.PartListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public string whereClausePart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public string whereClausePartAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public string whereClausePartCOO;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=3)]
        public string whereClausePartDim;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=4)]
        public string whereClausePartLangDesc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=5)]
        public string whereClausePartPlant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=6)]
        public string whereClausePartRestriction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=7)]
        public string whereClausePartRestrictSubst;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=8)]
        public string whereClausePartRev;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=9)]
        public string whereClausePartRevAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=10)]
        public string whereClausePartAudit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=11)]
        public string whereClausePartCOPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=12)]
        public string whereClausePartRevInspPlan;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=13)]
        public string whereClausePartRevInspPlanAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=14)]
        public string whereClausePartRevInspVend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=15)]
        public string whereClausePartSubs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=16)]
        public string whereClausePartPC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=17)]
        public string whereClausePartWhse;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=18)]
        public string whereClausePartBinInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=19)]
        public string whereClausePartUOM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=20)]
        public string whereClauseEntityGLC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=21)]
        public string whereClauseTaxExempt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=22)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=23)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(
                    string whereClausePart, 
                    string whereClausePartAttch, 
                    string whereClausePartCOO, 
                    string whereClausePartDim, 
                    string whereClausePartLangDesc, 
                    string whereClausePartPlant, 
                    string whereClausePartRestriction, 
                    string whereClausePartRestrictSubst, 
                    string whereClausePartRev, 
                    string whereClausePartRevAttch, 
                    string whereClausePartAudit, 
                    string whereClausePartCOPart, 
                    string whereClausePartRevInspPlan, 
                    string whereClausePartRevInspPlanAttch, 
                    string whereClausePartRevInspVend, 
                    string whereClausePartSubs, 
                    string whereClausePartPC, 
                    string whereClausePartWhse, 
                    string whereClausePartBinInfo, 
                    string whereClausePartUOM, 
                    string whereClauseEntityGLC, 
                    string whereClauseTaxExempt, 
                    int pageSize, 
                    int absolutePage) {
            this.whereClausePart = whereClausePart;
            this.whereClausePartAttch = whereClausePartAttch;
            this.whereClausePartCOO = whereClausePartCOO;
            this.whereClausePartDim = whereClausePartDim;
            this.whereClausePartLangDesc = whereClausePartLangDesc;
            this.whereClausePartPlant = whereClausePartPlant;
            this.whereClausePartRestriction = whereClausePartRestriction;
            this.whereClausePartRestrictSubst = whereClausePartRestrictSubst;
            this.whereClausePartRev = whereClausePartRev;
            this.whereClausePartRevAttch = whereClausePartRevAttch;
            this.whereClausePartAudit = whereClausePartAudit;
            this.whereClausePartCOPart = whereClausePartCOPart;
            this.whereClausePartRevInspPlan = whereClausePartRevInspPlan;
            this.whereClausePartRevInspPlanAttch = whereClausePartRevInspPlanAttch;
            this.whereClausePartRevInspVend = whereClausePartRevInspVend;
            this.whereClausePartSubs = whereClausePartSubs;
            this.whereClausePartPC = whereClausePartPC;
            this.whereClausePartWhse = whereClausePartWhse;
            this.whereClausePartBinInfo = whereClausePartBinInfo;
            this.whereClausePartUOM = whereClausePartUOM;
            this.whereClauseEntityGLC = whereClauseEntityGLC;
            this.whereClauseTaxExempt = whereClauseTaxExempt;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicorConsole.Epicor.PartSvc.PartTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.PartTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.UpdExtPartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(EpicorConsole.Epicor.PartSvc.UpdExtPartTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:Part", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=0)]
        public EpicorConsole.Epicor.PartSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=1)]
        public EpicorConsole.Epicor.PartSvc.UpdExtPartTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Part", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(EpicorConsole.Epicor.PartSvc.BOUpdErrorTableset UpdateExtResult, EpicorConsole.Epicor.PartSvc.UpdExtPartTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PartSvcContractChannel : EpicorConsole.Epicor.PartSvc.PartSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PartSvcContractClient : System.ServiceModel.ClientBase<EpicorConsole.Epicor.PartSvc.PartSvcContract>, EpicorConsole.Epicor.PartSvc.PartSvcContract {
        
        public PartSvcContractClient() {
        }
        
        public PartSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PartSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetPartGlobalFields(string cPartNum, bool GlobalLock) {
            return base.Channel.GetPartGlobalFields(cPartNum, GlobalLock);
        }
        
        public System.Threading.Tasks.Task<string> GetPartGlobalFieldsAsync(string cPartNum, bool GlobalLock) {
            return base.Channel.GetPartGlobalFieldsAsync(cPartNum, GlobalLock);
        }
        
        public void AllowDimensionMaintenance() {
            base.Channel.AllowDimensionMaintenance();
        }
        
        public System.Threading.Tasks.Task AllowDimensionMaintenanceAsync() {
            return base.Channel.AllowDimensionMaintenanceAsync();
        }
        
        public void AllowInventoryInfo() {
            base.Channel.AllowInventoryInfo();
        }
        
        public System.Threading.Tasks.Task AllowInventoryInfoAsync() {
            return base.Channel.AllowInventoryInfoAsync();
        }
        
        public void AllowLotMaintenance() {
            base.Channel.AllowLotMaintenance();
        }
        
        public System.Threading.Tasks.Task AllowLotMaintenanceAsync() {
            return base.Channel.AllowLotMaintenanceAsync();
        }
        
        public void AllowPurchasingInfo() {
            base.Channel.AllowPurchasingInfo();
        }
        
        public System.Threading.Tasks.Task AllowPurchasingInfoAsync() {
            return base.Channel.AllowPurchasingInfoAsync();
        }
        
        public void AllowViewLotCosts() {
            base.Channel.AllowViewLotCosts();
        }
        
        public System.Threading.Tasks.Task AllowViewLotCostsAsync() {
            return base.Channel.AllowViewLotCostsAsync();
        }
        
        public string ChangeMRPWarning(string partNum, string plant, bool processMRP) {
            return base.Channel.ChangeMRPWarning(partNum, plant, processMRP);
        }
        
        public System.Threading.Tasks.Task<string> ChangeMRPWarningAsync(string partNum, string plant, bool processMRP) {
            return base.Channel.ChangeMRPWarningAsync(partNum, plant, processMRP);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartBinInfoKBCode(EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeRequest request) {
            return base.Channel.ChangePartBinInfoKBCode(request);
        }
        
        public void ChangePartBinInfoKBCode(string NewKBCode, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeRequest();
            inValue.NewKBCode = NewKBCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartBinInfoKBCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeResponse> ChangePartBinInfoKBCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartBinInfoKBCodeRequest request) {
            return base.Channel.ChangePartBinInfoKBCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartBuyToOrder(EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderRequest request) {
            return base.Channel.ChangePartBuyToOrder(request);
        }
        
        public void ChangePartBuyToOrder(bool ipBuyToOrder, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderRequest();
            inValue.ipBuyToOrder = ipBuyToOrder;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartBuyToOrder(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderResponse> ChangePartBuyToOrderAsync(EpicorConsole.Epicor.PartSvc.ChangePartBuyToOrderRequest request) {
            return base.Channel.ChangePartBuyToOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartCommodityCode(EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeRequest request) {
            return base.Channel.ChangePartCommodityCode(request);
        }
        
        public void ChangePartCommodityCode(string newCommodityCode, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeRequest();
            inValue.newCommodityCode = newCommodityCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartCommodityCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeResponse> ChangePartCommodityCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartCommodityCodeRequest request) {
            return base.Channel.ChangePartCommodityCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartNonStockResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartNonStock(EpicorConsole.Epicor.PartSvc.ChangePartNonStockRequest request) {
            return base.Channel.ChangePartNonStock(request);
        }
        
        public void ChangePartNonStock(bool newNonStock, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartNonStockRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartNonStockRequest();
            inValue.newNonStock = newNonStock;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartNonStockResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartNonStock(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartNonStockResponse> ChangePartNonStockAsync(EpicorConsole.Epicor.PartSvc.ChangePartNonStockRequest request) {
            return base.Channel.ChangePartNonStockAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartGlobalPart(EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartRequest request) {
            return base.Channel.ChangePartGlobalPart(request);
        }
        
        public void ChangePartGlobalPart(bool ProposedGlobalPart, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartRequest();
            inValue.ProposedGlobalPart = ProposedGlobalPart;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartGlobalPart(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartResponse> ChangePartGlobalPartAsync(EpicorConsole.Epicor.PartSvc.ChangePartGlobalPartRequest request) {
            return base.Channel.ChangePartGlobalPartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartNumResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartNum(EpicorConsole.Epicor.PartSvc.ChangePartNumRequest request) {
            return base.Channel.ChangePartNum(request);
        }
        
        public void ChangePartNum(string ProposedPartNum, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartNumRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartNumRequest();
            inValue.ProposedPartNum = ProposedPartNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartNumResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartNumResponse> ChangePartNumAsync(EpicorConsole.Epicor.PartSvc.ChangePartNumRequest request) {
            return base.Channel.ChangePartNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartPlantBuyToOrder(EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderRequest request) {
            return base.Channel.ChangePartPlantBuyToOrder(request);
        }
        
        public void ChangePartPlantBuyToOrder(bool ipBuyToOrder, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderRequest();
            inValue.ipBuyToOrder = ipBuyToOrder;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartPlantBuyToOrder(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderResponse> ChangePartPlantBuyToOrderAsync(EpicorConsole.Epicor.PartSvc.ChangePartPlantBuyToOrderRequest request) {
            return base.Channel.ChangePartPlantBuyToOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartPlantSourceType(EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeRequest request) {
            return base.Channel.ChangePartPlantSourceType(request);
        }
        
        public string ChangePartPlantSourceType(string NewSourceType, ref EpicorConsole.Epicor.PartSvc.PartTableset ds, out string singleLevelConfMsg) {
            EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeRequest();
            inValue.NewSourceType = NewSourceType;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartPlantSourceType(inValue);
            singleLevelConfMsg = retVal.singleLevelConfMsg;
            ds = retVal.ds;
            return retVal.ruleMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeResponse> ChangePartPlantSourceTypeAsync(EpicorConsole.Epicor.PartSvc.ChangePartPlantSourceTypeRequest request) {
            return base.Channel.ChangePartPlantSourceTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartPlantUrgentVendorID(EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDRequest request) {
            return base.Channel.ChangePartPlantUrgentVendorID(request);
        }
        
        public void ChangePartPlantUrgentVendorID(string NewVendorId, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDRequest();
            inValue.NewVendorId = NewVendorId;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartPlantUrgentVendorID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDResponse> ChangePartPlantUrgentVendorIDAsync(EpicorConsole.Epicor.PartSvc.ChangePartPlantUrgentVendorIDRequest request) {
            return base.Channel.ChangePartPlantUrgentVendorIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartPlantVendorID(EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDRequest request) {
            return base.Channel.ChangePartPlantVendorID(request);
        }
        
        public void ChangePartPlantVendorID(string NewVendorId, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDRequest();
            inValue.NewVendorId = NewVendorId;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartPlantVendorID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDResponse> ChangePartPlantVendorIDAsync(EpicorConsole.Epicor.PartSvc.ChangePartPlantVendorIDRequest request) {
            return base.Channel.ChangePartPlantVendorIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartProdCodeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartProdCode(EpicorConsole.Epicor.PartSvc.ChangePartProdCodeRequest request) {
            return base.Channel.ChangePartProdCode(request);
        }
        
        public void ChangePartProdCode(string ProposedProdCode, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartProdCodeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartProdCodeRequest();
            inValue.ProposedProdCode = ProposedProdCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartProdCodeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartProdCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartProdCodeResponse> ChangePartProdCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartProdCodeRequest request) {
            return base.Channel.ChangePartProdCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartRestrictionManual(EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualRequest request) {
            return base.Channel.ChangePartRestrictionManual(request);
        }
        
        public void ChangePartRestrictionManual(bool checkManual, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualRequest();
            inValue.checkManual = checkManual;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartRestrictionManual(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualResponse> ChangePartRestrictionManualAsync(EpicorConsole.Epicor.PartSvc.ChangePartRestrictionManualRequest request) {
            return base.Channel.ChangePartRestrictionManualAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartRestrictionType(EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeRequest request) {
            return base.Channel.ChangePartRestrictionType(request);
        }
        
        public void ChangePartRestrictionType(ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartRestrictionType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeResponse> ChangePartRestrictionTypeAsync(EpicorConsole.Epicor.PartSvc.ChangePartRestrictionTypeRequest request) {
            return base.Channel.ChangePartRestrictionTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartRestrictSubstance(EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceRequest request) {
            return base.Channel.ChangePartRestrictSubstance(request);
        }
        
        public void ChangePartRestrictSubstance(ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartRestrictSubstance(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceResponse> ChangePartRestrictSubstanceAsync(EpicorConsole.Epicor.PartSvc.ChangePartRestrictSubstanceRequest request) {
            return base.Channel.ChangePartRestrictSubstanceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartRevApproved(EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedRequest request) {
            return base.Channel.ChangePartRevApproved(request);
        }
        
        public void ChangePartRevApproved(bool ipApproved, bool ipValidPassword, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedRequest();
            inValue.ipApproved = ipApproved;
            inValue.ipValidPassword = ipValidPassword;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartRevApproved(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedResponse> ChangePartRevApprovedAsync(EpicorConsole.Epicor.PartSvc.ChangePartRevApprovedRequest request) {
            return base.Channel.ChangePartRevApprovedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartSNBaseDataType(EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeRequest request) {
            return base.Channel.ChangePartSNBaseDataType(request);
        }
        
        public void ChangePartSNBaseDataType(string ipSNBaseDataType, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeRequest();
            inValue.ipSNBaseDataType = ipSNBaseDataType;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartSNBaseDataType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeResponse> ChangePartSNBaseDataTypeAsync(EpicorConsole.Epicor.PartSvc.ChangePartSNBaseDataTypeRequest request) {
            return base.Channel.ChangePartSNBaseDataTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartSNMaskPrefixSuffix(EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixRequest request) {
            return base.Channel.ChangePartSNMaskPrefixSuffix(request);
        }
        
        public void ChangePartSNMaskPrefixSuffix(string ipSNMaskPrefix, string ipSNMaskSuffix, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixRequest();
            inValue.ipSNMaskPrefix = ipSNMaskPrefix;
            inValue.ipSNMaskSuffix = ipSNMaskSuffix;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartSNMaskPrefixSuffix(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixResponse> ChangePartSNMaskPrefixSuffixAsync(EpicorConsole.Epicor.PartSvc.ChangePartSNMaskPrefixSuffixRequest request) {
            return base.Channel.ChangePartSNMaskPrefixSuffixAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartSubsPartNum(EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumRequest request) {
            return base.Channel.ChangePartSubsPartNum(request);
        }
        
        public void ChangePartSubsPartNum(string proposedPartNum, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumRequest();
            inValue.proposedPartNum = proposedPartNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartSubsPartNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumResponse> ChangePartSubsPartNumAsync(EpicorConsole.Epicor.PartSvc.ChangePartSubsPartNumRequest request) {
            return base.Channel.ChangePartSubsPartNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartTrackDimension(EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionRequest request) {
            return base.Channel.ChangePartTrackDimension(request);
        }
        
        public void ChangePartTrackDimension(bool TrackDimension, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionRequest();
            inValue.TrackDimension = TrackDimension;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartTrackDimension(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionResponse> ChangePartTrackDimensionAsync(EpicorConsole.Epicor.PartSvc.ChangePartTrackDimensionRequest request) {
            return base.Channel.ChangePartTrackDimensionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartTrackLots(EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsRequest request) {
            return base.Channel.ChangePartTrackLots(request);
        }
        
        public void ChangePartTrackLots(bool TrackLots, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsRequest();
            inValue.TrackLots = TrackLots;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartTrackLots(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsResponse> ChangePartTrackLotsAsync(EpicorConsole.Epicor.PartSvc.ChangePartTrackLotsRequest request) {
            return base.Channel.ChangePartTrackLotsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartTrackSerialNum(EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumRequest request) {
            return base.Channel.ChangePartTrackSerialNum(request);
        }
        
        public void ChangePartTrackSerialNum(bool TrackSerialNum, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumRequest();
            inValue.TrackSerialNum = TrackSerialNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartTrackSerialNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumResponse> ChangePartTrackSerialNumAsync(EpicorConsole.Epicor.PartSvc.ChangePartTrackSerialNumRequest request) {
            return base.Channel.ChangePartTrackSerialNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartTypeCode(EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeRequest request) {
            return base.Channel.ChangePartTypeCode(request);
        }
        
        public void ChangePartTypeCode(string TypeCode, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeRequest();
            inValue.TypeCode = TypeCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartTypeCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeResponse> ChangePartTypeCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartTypeCodeRequest request) {
            return base.Channel.ChangePartTypeCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartUOMConvOverride(EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideRequest request) {
            return base.Channel.ChangePartUOMConvOverride(request);
        }
        
        public void ChangePartUOMConvOverride(bool ipConvOverrride, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideRequest();
            inValue.ipConvOverrride = ipConvOverrride;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartUOMConvOverride(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideResponse> ChangePartUOMConvOverrideAsync(EpicorConsole.Epicor.PartSvc.ChangePartUOMConvOverrideRequest request) {
            return base.Channel.ChangePartUOMConvOverrideAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePartWhseKBCode(EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeRequest request) {
            return base.Channel.ChangePartWhseKBCode(request);
        }
        
        public void ChangePartWhseKBCode(string NewKBCode, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeRequest();
            inValue.NewKBCode = NewKBCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePartWhseKBCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeResponse> ChangePartWhseKBCodeAsync(EpicorConsole.Epicor.PartSvc.ChangePartWhseKBCodeRequest request) {
            return base.Channel.ChangePartWhseKBCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePlantSNBaseDataType(EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeRequest request) {
            return base.Channel.ChangePlantSNBaseDataType(request);
        }
        
        public void ChangePlantSNBaseDataType(string ipSNBaseDataType, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeRequest();
            inValue.ipSNBaseDataType = ipSNBaseDataType;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePlantSNBaseDataType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeResponse> ChangePlantSNBaseDataTypeAsync(EpicorConsole.Epicor.PartSvc.ChangePlantSNBaseDataTypeRequest request) {
            return base.Channel.ChangePlantSNBaseDataTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangePlantSNMaskPrefixSuffix(EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixRequest request) {
            return base.Channel.ChangePlantSNMaskPrefixSuffix(request);
        }
        
        public void ChangePlantSNMaskPrefixSuffix(string ipSNMaskPrefix, string ipSNMaskSuffix, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixRequest();
            inValue.ipSNMaskPrefix = ipSNMaskPrefix;
            inValue.ipSNMaskSuffix = ipSNMaskSuffix;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangePlantSNMaskPrefixSuffix(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixResponse> ChangePlantSNMaskPrefixSuffixAsync(EpicorConsole.Epicor.PartSvc.ChangePlantSNMaskPrefixSuffixRequest request) {
            return base.Channel.ChangePlantSNMaskPrefixSuffixAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangeQtyBearingResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangeQtyBearing(EpicorConsole.Epicor.PartSvc.ChangeQtyBearingRequest request) {
            return base.Channel.ChangeQtyBearing(request);
        }
        
        public void ChangeQtyBearing(bool newQtyBearing, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangeQtyBearingRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangeQtyBearingRequest();
            inValue.newQtyBearing = newQtyBearing;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangeQtyBearingResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangeQtyBearing(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeQtyBearingResponse> ChangeQtyBearingAsync(EpicorConsole.Epicor.PartSvc.ChangeQtyBearingRequest request) {
            return base.Channel.ChangeQtyBearingAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangeLinkToContractResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangeLinkToContract(EpicorConsole.Epicor.PartSvc.ChangeLinkToContractRequest request) {
            return base.Channel.ChangeLinkToContract(request);
        }
        
        public void ChangeLinkToContract(bool newLinkToContract, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangeLinkToContractRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangeLinkToContractRequest();
            inValue.newLinkToContract = newLinkToContract;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangeLinkToContractResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangeLinkToContract(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeLinkToContractResponse> ChangeLinkToContractAsync(EpicorConsole.Epicor.PartSvc.ChangeLinkToContractRequest request) {
            return base.Channel.ChangeLinkToContractAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangeSNMaskResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangeSNMask(EpicorConsole.Epicor.PartSvc.ChangeSNMaskRequest request) {
            return base.Channel.ChangeSNMask(request);
        }
        
        public void ChangeSNMask(string ipSNMask, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangeSNMaskRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangeSNMaskRequest();
            inValue.ipSNMask = ipSNMask;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangeSNMaskResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangeSNMask(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeSNMaskResponse> ChangeSNMaskAsync(EpicorConsole.Epicor.PartSvc.ChangeSNMaskRequest request) {
            return base.Channel.ChangeSNMaskAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangeUOMClassID(EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDRequest request) {
            return base.Channel.ChangeUOMClassID(request);
        }
        
        public void ChangeUOMClassID(string uomClassID, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDRequest();
            inValue.uomClassID = uomClassID;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangeUOMClassID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDResponse> ChangeUOMClassIDAsync(EpicorConsole.Epicor.PartSvc.ChangeUOMClassIDRequest request) {
            return base.Channel.ChangeUOMClassIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChangeUOMCodeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChangeUOMCode(EpicorConsole.Epicor.PartSvc.ChangeUOMCodeRequest request) {
            return base.Channel.ChangeUOMCode(request);
        }
        
        public void ChangeUOMCode(string uomCode, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChangeUOMCodeRequest inValue = new EpicorConsole.Epicor.PartSvc.ChangeUOMCodeRequest();
            inValue.uomCode = uomCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChangeUOMCodeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChangeUOMCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChangeUOMCodeResponse> ChangeUOMCodeAsync(EpicorConsole.Epicor.PartSvc.ChangeUOMCodeRequest request) {
            return base.Channel.ChangeUOMCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ChanginPartRestrictSubs(EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsRequest request) {
            return base.Channel.ChanginPartRestrictSubs(request);
        }
        
        public void ChanginPartRestrictSubs(string pSubstanceID, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsRequest inValue = new EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsRequest();
            inValue.pSubstanceID = pSubstanceID;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ChanginPartRestrictSubs(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsResponse> ChanginPartRestrictSubsAsync(EpicorConsole.Epicor.PartSvc.ChanginPartRestrictSubsRequest request) {
            return base.Channel.ChanginPartRestrictSubsAsync(request);
        }
        
        public string CheckAltMethodForDelete(string ipPartNum, string ipRevisionNum, string ipAltMethod) {
            return base.Channel.CheckAltMethodForDelete(ipPartNum, ipRevisionNum, ipAltMethod);
        }
        
        public System.Threading.Tasks.Task<string> CheckAltMethodForDeleteAsync(string ipPartNum, string ipRevisionNum, string ipAltMethod) {
            return base.Channel.CheckAltMethodForDeleteAsync(ipPartNum, ipRevisionNum, ipAltMethod);
        }
        
        public void CheckCOOPercents(string cPartNum) {
            base.Channel.CheckCOOPercents(cPartNum);
        }
        
        public System.Threading.Tasks.Task CheckCOOPercentsAsync(string cPartNum) {
            return base.Channel.CheckCOOPercentsAsync(cPartNum);
        }
        
        public void CheckDuplicateCOO(string ipPart, int ipOrigCountry) {
            base.Channel.CheckDuplicateCOO(ipPart, ipOrigCountry);
        }
        
        public System.Threading.Tasks.Task CheckDuplicateCOOAsync(string ipPart, int ipOrigCountry) {
            return base.Channel.CheckDuplicateCOOAsync(ipPart, ipOrigCountry);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.CheckPartChangesResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.CheckPartChanges(EpicorConsole.Epicor.PartSvc.CheckPartChangesRequest request) {
            return base.Channel.CheckPartChanges(request);
        }
        
        public string CheckPartChanges(EpicorConsole.Epicor.PartSvc.PartTableset ds, out string cPartSNChangedMsgText) {
            EpicorConsole.Epicor.PartSvc.CheckPartChangesRequest inValue = new EpicorConsole.Epicor.PartSvc.CheckPartChangesRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.CheckPartChangesResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).CheckPartChanges(inValue);
            cPartSNChangedMsgText = retVal.cPartSNChangedMsgText;
            return retVal.cPartChangedMsgText;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.CheckPartChangesResponse> CheckPartChangesAsync(EpicorConsole.Epicor.PartSvc.CheckPartChangesRequest request) {
            return base.Channel.CheckPartChangesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.DeleteMRPJobsResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.DeleteMRPJobs(EpicorConsole.Epicor.PartSvc.DeleteMRPJobsRequest request) {
            return base.Channel.DeleteMRPJobs(request);
        }
        
        public void DeleteMRPJobs(ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.DeleteMRPJobsRequest inValue = new EpicorConsole.Epicor.PartSvc.DeleteMRPJobsRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.DeleteMRPJobsResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).DeleteMRPJobs(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.DeleteMRPJobsResponse> DeleteMRPJobsAsync(EpicorConsole.Epicor.PartSvc.DeleteMRPJobsRequest request) {
            return base.Channel.DeleteMRPJobsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.DeleteMultiLevelRules(EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesRequest request) {
            return base.Channel.DeleteMultiLevelRules(request);
        }
        
        public void DeleteMultiLevelRules(string NewSourceType, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesRequest inValue = new EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesRequest();
            inValue.NewSourceType = NewSourceType;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).DeleteMultiLevelRules(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesResponse> DeleteMultiLevelRulesAsync(EpicorConsole.Epicor.PartSvc.DeleteMultiLevelRulesRequest request) {
            return base.Channel.DeleteMultiLevelRulesAsync(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartTableset DuplicatePart(string sourcePartNum, string targetPartNum, string targetPartDescription, string configuratorMode, string configID, string configDescription, string configType) {
            return base.Channel.DuplicatePart(sourcePartNum, targetPartNum, targetPartDescription, configuratorMode, configID, configDescription, configType);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> DuplicatePartAsync(string sourcePartNum, string targetPartNum, string targetPartDescription, string configuratorMode, string configID, string configDescription, string configType) {
            return base.Channel.DuplicatePartAsync(sourcePartNum, targetPartNum, targetPartDescription, configuratorMode, configID, configDescription, configType);
        }
        
        public EpicorConsole.Epicor.PartSvc.GlbPartTableset GetGlbPartList(string GlbPartNumList) {
            return base.Channel.GetGlbPartList(GlbPartNumList);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GlbPartTableset> GetGlbPartListAsync(string GlbPartNumList) {
            return base.Channel.GetGlbPartListAsync(GlbPartNumList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetListByConfigIDResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetListByConfigID(EpicorConsole.Epicor.PartSvc.GetListByConfigIDRequest request) {
            return base.Channel.GetListByConfigID(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartListTableset GetListByConfigID(string WhereClause, string PartRevWhereClause, int PageSize, int AbsolutePage, out bool MorePages) {
            EpicorConsole.Epicor.PartSvc.GetListByConfigIDRequest inValue = new EpicorConsole.Epicor.PartSvc.GetListByConfigIDRequest();
            inValue.WhereClause = WhereClause;
            inValue.PartRevWhereClause = PartRevWhereClause;
            inValue.PageSize = PageSize;
            inValue.AbsolutePage = AbsolutePage;
            EpicorConsole.Epicor.PartSvc.GetListByConfigIDResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetListByConfigID(inValue);
            MorePages = retVal.MorePages;
            return retVal.GetListByConfigIDResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListByConfigIDResponse> GetListByConfigIDAsync(EpicorConsole.Epicor.PartSvc.GetListByConfigIDRequest request) {
            return base.Channel.GetListByConfigIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetListByWarehouseBin(EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinRequest request) {
            return base.Channel.GetListByWarehouseBin(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartListTableset GetListByWarehouseBin(string partWhereClause, string warehouseCode, string binType, string zoneID, string fromBinNum, string toBinNum, bool excludeNonNettable, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinRequest inValue = new EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinRequest();
            inValue.partWhereClause = partWhereClause;
            inValue.warehouseCode = warehouseCode;
            inValue.binType = binType;
            inValue.zoneID = zoneID;
            inValue.fromBinNum = fromBinNum;
            inValue.toBinNum = toBinNum;
            inValue.excludeNonNettable = excludeNonNettable;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetListByWarehouseBin(inValue);
            morePages = retVal.morePages;
            return retVal.GetListByWarehouseBinResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinResponse> GetListByWarehouseBinAsync(EpicorConsole.Epicor.PartSvc.GetListByWarehouseBinRequest request) {
            return base.Channel.GetListByWarehouseBinAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetListFilterPlantsResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetListFilterPlants(EpicorConsole.Epicor.PartSvc.GetListFilterPlantsRequest request) {
            return base.Channel.GetListFilterPlants(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartListTableset GetListFilterPlants(string WhereClause, int PageSize, int AbsolutePage, out bool MorePages) {
            EpicorConsole.Epicor.PartSvc.GetListFilterPlantsRequest inValue = new EpicorConsole.Epicor.PartSvc.GetListFilterPlantsRequest();
            inValue.WhereClause = WhereClause;
            inValue.PageSize = PageSize;
            inValue.AbsolutePage = AbsolutePage;
            EpicorConsole.Epicor.PartSvc.GetListFilterPlantsResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetListFilterPlants(inValue);
            MorePages = retVal.MorePages;
            return retVal.GetListFilterPlantsResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListFilterPlantsResponse> GetListFilterPlantsAsync(EpicorConsole.Epicor.PartSvc.GetListFilterPlantsRequest request) {
            return base.Channel.GetListFilterPlantsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetListFromSelectedKeys(EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysRequest request) {
            return base.Channel.GetListFromSelectedKeys(request);
        }
        
        public bool GetListFromSelectedKeys(ref EpicorConsole.Epicor.PartSvc.PartListTableset ds, int pageSize, int absolutePage) {
            EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysRequest inValue = new EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysRequest();
            inValue.ds = ds;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetListFromSelectedKeys(inValue);
            ds = retVal.ds;
            return retVal.morePages;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysResponse> GetListFromSelectedKeysAsync(EpicorConsole.Epicor.PartSvc.GetListFromSelectedKeysRequest request) {
            return base.Channel.GetListFromSelectedKeysAsync(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartTableset GetPartForLink(string PartNum) {
            return base.Channel.GetPartForLink(PartNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> GetPartForLinkAsync(string PartNum) {
            return base.Channel.GetPartForLinkAsync(PartNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetPartWhereUsedResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetPartWhereUsed(EpicorConsole.Epicor.PartSvc.GetPartWhereUsedRequest request) {
            return base.Channel.GetPartWhereUsed(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartWhereUsedTableset GetPartWhereUsed(string whereUsedPartNum, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.PartSvc.GetPartWhereUsedRequest inValue = new EpicorConsole.Epicor.PartSvc.GetPartWhereUsedRequest();
            inValue.whereUsedPartNum = whereUsedPartNum;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.PartSvc.GetPartWhereUsedResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetPartWhereUsed(inValue);
            morePages = retVal.morePages;
            return retVal.GetPartWhereUsedResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetPartWhereUsedResponse> GetPartWhereUsedAsync(EpicorConsole.Epicor.PartSvc.GetPartWhereUsedRequest request) {
            return base.Channel.GetPartWhereUsedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetPartXRefInfoResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetPartXRefInfo(EpicorConsole.Epicor.PartSvc.GetPartXRefInfoRequest request) {
            return base.Channel.GetPartXRefInfo(request);
        }
        
        public string GetPartXRefInfo(ref string partNum, System.Guid SysRowID, string rowType, out string questionString, out bool multipleMatch) {
            EpicorConsole.Epicor.PartSvc.GetPartXRefInfoRequest inValue = new EpicorConsole.Epicor.PartSvc.GetPartXRefInfoRequest();
            inValue.partNum = partNum;
            inValue.SysRowID = SysRowID;
            inValue.rowType = rowType;
            EpicorConsole.Epicor.PartSvc.GetPartXRefInfoResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetPartXRefInfo(inValue);
            partNum = retVal.partNum;
            questionString = retVal.questionString;
            multipleMatch = retVal.multipleMatch;
            return retVal.serialWarning;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetPartXRefInfoResponse> GetPartXRefInfoAsync(EpicorConsole.Epicor.PartSvc.GetPartXRefInfoRequest request) {
            return base.Channel.GetPartXRefInfoAsync(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartGetDMRListTableset GetDMRListSearch(string part) {
            return base.Channel.GetDMRListSearch(part);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartGetDMRListTableset> GetDMRListSearchAsync(string part) {
            return base.Channel.GetDMRListSearchAsync(part);
        }
        
        public bool GlbPartsExist() {
            return base.Channel.GlbPartsExist();
        }
        
        public System.Threading.Tasks.Task<bool> GlbPartsExistAsync() {
            return base.Channel.GlbPartsExistAsync();
        }
        
        public bool HasIntrastat() {
            return base.Channel.HasIntrastat();
        }
        
        public System.Threading.Tasks.Task<bool> HasIntrastatAsync() {
            return base.Channel.HasIntrastatAsync();
        }
        
        public bool IsRunOutOnHand(string partNum) {
            return base.Channel.IsRunOutOnHand(partNum);
        }
        
        public System.Threading.Tasks.Task<bool> IsRunOutOnHandAsync(string partNum) {
            return base.Channel.IsRunOutOnHandAsync(partNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.LinkGlbPartResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.LinkGlbPart(EpicorConsole.Epicor.PartSvc.LinkGlbPartRequest request) {
            return base.Channel.LinkGlbPart(request);
        }
        
        public void LinkGlbPart(string glbCompany, string GlbPartNum, EpicorConsole.Epicor.PartSvc.GlbPartTableset ds, ref EpicorConsole.Epicor.PartSvc.PartTableset ds1) {
            EpicorConsole.Epicor.PartSvc.LinkGlbPartRequest inValue = new EpicorConsole.Epicor.PartSvc.LinkGlbPartRequest();
            inValue.glbCompany = glbCompany;
            inValue.GlbPartNum = GlbPartNum;
            inValue.ds = ds;
            inValue.ds1 = ds1;
            EpicorConsole.Epicor.PartSvc.LinkGlbPartResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).LinkGlbPart(inValue);
            ds1 = retVal.ds1;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.LinkGlbPartResponse> LinkGlbPartAsync(EpicorConsole.Epicor.PartSvc.LinkGlbPartRequest request) {
            return base.Channel.LinkGlbPartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.OnChangePkgCodeResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.OnChangePkgCode(EpicorConsole.Epicor.PartSvc.OnChangePkgCodeRequest request) {
            return base.Channel.OnChangePkgCode(request);
        }
        
        public void OnChangePkgCode(string partNum, string uomCode, string pkgCode, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.OnChangePkgCodeRequest inValue = new EpicorConsole.Epicor.PartSvc.OnChangePkgCodeRequest();
            inValue.partNum = partNum;
            inValue.uomCode = uomCode;
            inValue.pkgCode = pkgCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.OnChangePkgCodeResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).OnChangePkgCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.OnChangePkgCodeResponse> OnChangePkgCodeAsync(EpicorConsole.Epicor.PartSvc.OnChangePkgCodeRequest request) {
            return base.Channel.OnChangePkgCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.OnChangePESUNATResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.OnChangePESUNAT(EpicorConsole.Epicor.PartSvc.OnChangePESUNATRequest request) {
            return base.Channel.OnChangePESUNAT(request);
        }
        
        public void OnChangePESUNAT(string codeType, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.OnChangePESUNATRequest inValue = new EpicorConsole.Epicor.PartSvc.OnChangePESUNATRequest();
            inValue.codeType = codeType;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.OnChangePESUNATResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).OnChangePESUNAT(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.OnChangePESUNATResponse> OnChangePESUNATAsync(EpicorConsole.Epicor.PartSvc.OnChangePESUNATRequest request) {
            return base.Channel.OnChangePESUNATAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.OnChangePlantResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.OnChangePlant(EpicorConsole.Epicor.PartSvc.OnChangePlantRequest request) {
            return base.Channel.OnChangePlant(request);
        }
        
        public void OnChangePlant(string plantCode, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.OnChangePlantRequest inValue = new EpicorConsole.Epicor.PartSvc.OnChangePlantRequest();
            inValue.plantCode = plantCode;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.OnChangePlantResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).OnChangePlant(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.OnChangePlantResponse> OnChangePlantAsync(EpicorConsole.Epicor.PartSvc.OnChangePlantRequest request) {
            return base.Channel.OnChangePlantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.CalcACWDaysResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.CalcACWDays(EpicorConsole.Epicor.PartSvc.CalcACWDaysRequest request) {
            return base.Channel.CalcACWDays(request);
        }
        
        public void CalcACWDays(bool ipMfgLeadTimeMnl, int ipLvlMfgLeadTimeMnl, int ipACWPercentage, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.CalcACWDaysRequest inValue = new EpicorConsole.Epicor.PartSvc.CalcACWDaysRequest();
            inValue.ipMfgLeadTimeMnl = ipMfgLeadTimeMnl;
            inValue.ipLvlMfgLeadTimeMnl = ipLvlMfgLeadTimeMnl;
            inValue.ipACWPercentage = ipACWPercentage;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.CalcACWDaysResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).CalcACWDays(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.CalcACWDaysResponse> CalcACWDaysAsync(EpicorConsole.Epicor.PartSvc.CalcACWDaysRequest request) {
            return base.Channel.CalcACWDaysAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.PreLinkGlbPartResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.PreLinkGlbPart(EpicorConsole.Epicor.PartSvc.PreLinkGlbPartRequest request) {
            return base.Channel.PreLinkGlbPart(request);
        }
        
        public string PreLinkGlbPart(string glbCompany, string GlbPartNum, ref EpicorConsole.Epicor.PartSvc.GlbPartTableset ds) {
            EpicorConsole.Epicor.PartSvc.PreLinkGlbPartRequest inValue = new EpicorConsole.Epicor.PartSvc.PreLinkGlbPartRequest();
            inValue.glbCompany = glbCompany;
            inValue.GlbPartNum = GlbPartNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.PreLinkGlbPartResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).PreLinkGlbPart(inValue);
            ds = retVal.ds;
            return retVal.vMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PreLinkGlbPartResponse> PreLinkGlbPartAsync(EpicorConsole.Epicor.PartSvc.PreLinkGlbPartRequest request) {
            return base.Channel.PreLinkGlbPartAsync(request);
        }
        
        public bool PromptForPassword() {
            return base.Channel.PromptForPassword();
        }
        
        public System.Threading.Tasks.Task<bool> PromptForPasswordAsync() {
            return base.Channel.PromptForPasswordAsync();
        }
        
        public void RenamePartRev(string sourcePartNum, string sourcePartRevNum, string targetPartRevNum, string targetPartRevDescription) {
            base.Channel.RenamePartRev(sourcePartNum, sourcePartRevNum, targetPartRevNum, targetPartRevDescription);
        }
        
        public System.Threading.Tasks.Task RenamePartRevAsync(string sourcePartNum, string sourcePartRevNum, string targetPartRevNum, string targetPartRevDescription) {
            return base.Channel.RenamePartRevAsync(sourcePartNum, sourcePartRevNum, targetPartRevNum, targetPartRevDescription);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartTableset SetMRPRecalcFlag(string partNum, string plant) {
            return base.Channel.SetMRPRecalcFlag(partNum, plant);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> SetMRPRecalcFlagAsync(string partNum, string plant) {
            return base.Channel.SetMRPRecalcFlagAsync(partNum, plant);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.SetNextGeneratedLotNum(EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumRequest request) {
            return base.Channel.SetNextGeneratedLotNum(request);
        }
        
        public void SetNextGeneratedLotNum(ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumRequest inValue = new EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).SetNextGeneratedLotNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumResponse> SetNextGeneratedLotNumAsync(EpicorConsole.Epicor.PartSvc.SetNextGeneratedLotNumRequest request) {
            return base.Channel.SetNextGeneratedLotNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.SkipGlbPartResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.SkipGlbPart(EpicorConsole.Epicor.PartSvc.SkipGlbPartRequest request) {
            return base.Channel.SkipGlbPart(request);
        }
        
        public void SkipGlbPart(string glbCompany, string glbPartNum, ref EpicorConsole.Epicor.PartSvc.GlbPartTableset ds) {
            EpicorConsole.Epicor.PartSvc.SkipGlbPartRequest inValue = new EpicorConsole.Epicor.PartSvc.SkipGlbPartRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbPartNum = glbPartNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.SkipGlbPartResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).SkipGlbPart(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.SkipGlbPartResponse> SkipGlbPartAsync(EpicorConsole.Epicor.PartSvc.SkipGlbPartRequest request) {
            return base.Channel.SkipGlbPartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.UnlinkGlbPartResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.UnlinkGlbPart(EpicorConsole.Epicor.PartSvc.UnlinkGlbPartRequest request) {
            return base.Channel.UnlinkGlbPart(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartTableset UnlinkGlbPart(string glbCompany, string glbPartNum, ref EpicorConsole.Epicor.PartSvc.GlbPartTableset ds) {
            EpicorConsole.Epicor.PartSvc.UnlinkGlbPartRequest inValue = new EpicorConsole.Epicor.PartSvc.UnlinkGlbPartRequest();
            inValue.glbCompany = glbCompany;
            inValue.glbPartNum = glbPartNum;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.UnlinkGlbPartResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).UnlinkGlbPart(inValue);
            ds = retVal.ds;
            return retVal.UnlinkGlbPartResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.UnlinkGlbPartResponse> UnlinkGlbPartAsync(EpicorConsole.Epicor.PartSvc.UnlinkGlbPartRequest request) {
            return base.Channel.UnlinkGlbPartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ValidateInspectionResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ValidateInspection(EpicorConsole.Epicor.PartSvc.ValidateInspectionRequest request) {
            return base.Channel.ValidateInspection(request);
        }
        
        public void ValidateInspection(string ipProposedInspPlan, string ipProposedSpecId, string iptable, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ValidateInspectionRequest inValue = new EpicorConsole.Epicor.PartSvc.ValidateInspectionRequest();
            inValue.ipProposedInspPlan = ipProposedInspPlan;
            inValue.ipProposedSpecId = ipProposedSpecId;
            inValue.iptable = iptable;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ValidateInspectionResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ValidateInspection(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ValidateInspectionResponse> ValidateInspectionAsync(EpicorConsole.Epicor.PartSvc.ValidateInspectionRequest request) {
            return base.Channel.ValidateInspectionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ValidateInspVendorResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ValidateInspVendor(EpicorConsole.Epicor.PartSvc.ValidateInspVendorRequest request) {
            return base.Channel.ValidateInspVendor(request);
        }
        
        public void ValidateInspVendor(string ipProposedVendor, ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.ValidateInspVendorRequest inValue = new EpicorConsole.Epicor.PartSvc.ValidateInspVendorRequest();
            inValue.ipProposedVendor = ipProposedVendor;
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.ValidateInspVendorResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ValidateInspVendor(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ValidateInspVendorResponse> ValidateInspVendorAsync(EpicorConsole.Epicor.PartSvc.ValidateInspVendorRequest request) {
            return base.Channel.ValidateInspVendorAsync(request);
        }
        
        public void ValidateUOMconvChange(string ipPartNum, string ipConvUOMClassID, string ipConvUOMIUM) {
            base.Channel.ValidateUOMconvChange(ipPartNum, ipConvUOMClassID, ipConvUOMIUM);
        }
        
        public System.Threading.Tasks.Task ValidateUOMconvChangeAsync(string ipPartNum, string ipConvUOMClassID, string ipConvUOMIUM) {
            return base.Channel.ValidateUOMconvChangeAsync(ipPartNum, ipConvUOMClassID, ipConvUOMIUM);
        }
        
        public void ValidateUOMConvTrans(string ipPartNum, string ipConvUOMClassID, string ipConvUOMIUM) {
            base.Channel.ValidateUOMConvTrans(ipPartNum, ipConvUOMClassID, ipConvUOMIUM);
        }
        
        public System.Threading.Tasks.Task ValidateUOMConvTransAsync(string ipPartNum, string ipConvUOMClassID, string ipConvUOMIUM) {
            return base.Channel.ValidateUOMConvTransAsync(ipPartNum, ipConvUOMClassID, ipConvUOMIUM);
        }
        
        public string GetSNFormat() {
            return base.Channel.GetSNFormat();
        }
        
        public System.Threading.Tasks.Task<string> GetSNFormatAsync() {
            return base.Channel.GetSNFormatAsync();
        }
        
        public bool PartExists(string PartNumber) {
            return base.Channel.PartExists(PartNumber);
        }
        
        public System.Threading.Tasks.Task<bool> PartExistsAsync(string PartNumber) {
            return base.Channel.PartExistsAsync(PartNumber);
        }
        
        public bool PartIsActive(string PartNumber) {
            return base.Channel.PartIsActive(PartNumber);
        }
        
        public System.Threading.Tasks.Task<bool> PartIsActiveAsync(string PartNumber) {
            return base.Channel.PartIsActiveAsync(PartNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.PartIsSalesKitResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.PartIsSalesKit(EpicorConsole.Epicor.PartSvc.PartIsSalesKitRequest request) {
            return base.Channel.PartIsSalesKit(request);
        }
        
        public bool PartIsSalesKit(string PartNumber, out bool IsSalesKit, out bool IsPhantom) {
            EpicorConsole.Epicor.PartSvc.PartIsSalesKitRequest inValue = new EpicorConsole.Epicor.PartSvc.PartIsSalesKitRequest();
            inValue.PartNumber = PartNumber;
            EpicorConsole.Epicor.PartSvc.PartIsSalesKitResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).PartIsSalesKit(inValue);
            IsSalesKit = retVal.IsSalesKit;
            IsPhantom = retVal.IsPhantom;
            return retVal.PartIsSalesKitResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartIsSalesKitResponse> PartIsSalesKitAsync(EpicorConsole.Epicor.PartSvc.PartIsSalesKitRequest request) {
            return base.Channel.PartIsSalesKitAsync(request);
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.FindPartResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.FindPart(EpicorConsole.Epicor.PartSvc.FindPartRequest request) {
            return base.Channel.FindPart(request);
        }
        
        public string FindPart(string ipPartNum, out string opUOM, out string opMatchType) {
            EpicorConsole.Epicor.PartSvc.FindPartRequest inValue = new EpicorConsole.Epicor.PartSvc.FindPartRequest();
            inValue.ipPartNum = ipPartNum;
            EpicorConsole.Epicor.PartSvc.FindPartResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).FindPart(inValue);
            opUOM = retVal.opUOM;
            opMatchType = retVal.opMatchType;
            return retVal.opPartNum;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.FindPartResponse> FindPartAsync(EpicorConsole.Epicor.PartSvc.FindPartRequest request) {
            return base.Channel.FindPartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetPartFromRowIDResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetPartFromRowID(EpicorConsole.Epicor.PartSvc.GetPartFromRowIDRequest request) {
            return base.Channel.GetPartFromRowID(request);
        }
        
        public string GetPartFromRowID(string ipRowType, System.Guid ipRowID, out string opUOM) {
            EpicorConsole.Epicor.PartSvc.GetPartFromRowIDRequest inValue = new EpicorConsole.Epicor.PartSvc.GetPartFromRowIDRequest();
            inValue.ipRowType = ipRowType;
            inValue.ipRowID = ipRowID;
            EpicorConsole.Epicor.PartSvc.GetPartFromRowIDResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetPartFromRowID(inValue);
            opUOM = retVal.opUOM;
            return retVal.opPartNum;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetPartFromRowIDResponse> GetPartFromRowIDAsync(EpicorConsole.Epicor.PartSvc.GetPartFromRowIDRequest request) {
            return base.Channel.GetPartFromRowIDAsync(request);
        }
        
        public void OnChangeSNLastUsedSeq(string ipGenSeqStr, string ipLastUsedSeq) {
            base.Channel.OnChangeSNLastUsedSeq(ipGenSeqStr, ipLastUsedSeq);
        }
        
        public System.Threading.Tasks.Task OnChangeSNLastUsedSeqAsync(string ipGenSeqStr, string ipLastUsedSeq) {
            return base.Channel.OnChangeSNLastUsedSeqAsync(ipGenSeqStr, ipLastUsedSeq);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetDupPartConfigID(EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDRequest request) {
            return base.Channel.GetDupPartConfigID(request);
        }
        
        public string GetDupPartConfigID(string configID, out string foundConfigID, out string foundDescription, out string foundType) {
            EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDRequest inValue = new EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDRequest();
            inValue.configID = configID;
            EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetDupPartConfigID(inValue);
            foundConfigID = retVal.foundConfigID;
            foundDescription = retVal.foundDescription;
            foundType = retVal.foundType;
            return retVal.message;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDResponse> GetDupPartConfigIDAsync(EpicorConsole.Epicor.PartSvc.GetDupPartConfigIDRequest request) {
            return base.Channel.GetDupPartConfigIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.ConfigIDChangingResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.ConfigIDChanging(EpicorConsole.Epicor.PartSvc.ConfigIDChangingRequest request) {
            return base.Channel.ConfigIDChanging(request);
        }
        
        public string ConfigIDChanging(ref string configID, string partNum, string revisionNum) {
            EpicorConsole.Epicor.PartSvc.ConfigIDChangingRequest inValue = new EpicorConsole.Epicor.PartSvc.ConfigIDChangingRequest();
            inValue.configID = configID;
            inValue.partNum = partNum;
            inValue.revisionNum = revisionNum;
            EpicorConsole.Epicor.PartSvc.ConfigIDChangingResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).ConfigIDChanging(inValue);
            configID = retVal.configID;
            return retVal.outMessage;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.ConfigIDChangingResponse> ConfigIDChangingAsync(EpicorConsole.Epicor.PartSvc.ConfigIDChangingRequest request) {
            return base.Channel.ConfigIDChangingAsync(request);
        }
        
        public void OnChangedConfigID(string newConfigID, string partNum, string revisionNum) {
            base.Channel.OnChangedConfigID(newConfigID, partNum, revisionNum);
        }
        
        public System.Threading.Tasks.Task OnChangedConfigIDAsync(string newConfigID, string partNum, string revisionNum) {
            return base.Channel.OnChangedConfigIDAsync(newConfigID, partNum, revisionNum);
        }
        
        public string CheckConfigForDelete(string ipPartNum, string ipRevisionNum, string ipAltMethod, bool ipForRevision) {
            return base.Channel.CheckConfigForDelete(ipPartNum, ipRevisionNum, ipAltMethod, ipForRevision);
        }
        
        public System.Threading.Tasks.Task<string> CheckConfigForDeleteAsync(string ipPartNum, string ipRevisionNum, string ipAltMethod, bool ipForRevision) {
            return base.Channel.CheckConfigForDeleteAsync(ipPartNum, ipRevisionNum, ipAltMethod, ipForRevision);
        }
        
        public bool GetIfCurrentSiteHasExternalMES(string site_ex) {
            return base.Channel.GetIfCurrentSiteHasExternalMES(site_ex);
        }
        
        public System.Threading.Tasks.Task<bool> GetIfCurrentSiteHasExternalMESAsync(string site_ex) {
            return base.Channel.GetIfCurrentSiteHasExternalMESAsync(site_ex);
        }
        
        public bool GetIfCurrentRevIsSiteExternalMES(string site_ex, string partnum_ex) {
            return base.Channel.GetIfCurrentRevIsSiteExternalMES(site_ex, partnum_ex);
        }
        
        public System.Threading.Tasks.Task<bool> GetIfCurrentRevIsSiteExternalMESAsync(string site_ex, string partnum_ex) {
            return base.Channel.GetIfCurrentRevIsSiteExternalMESAsync(site_ex, partnum_ex);
        }
        
        public bool RequestNoRevWithExternalMESForSiteValidation(string company, string plant, string partNum) {
            return base.Channel.RequestNoRevWithExternalMESForSiteValidation(company, plant, partNum);
        }
        
        public System.Threading.Tasks.Task<bool> RequestNoRevWithExternalMESForSiteValidationAsync(string company, string plant, string partNum) {
            return base.Channel.RequestNoRevWithExternalMESForSiteValidationAsync(company, plant, partNum);
        }
        
        public bool GetExternalCRMIntegrationIsEnabled() {
            return base.Channel.GetExternalCRMIntegrationIsEnabled();
        }
        
        public System.Threading.Tasks.Task<bool> GetExternalCRMIntegrationIsEnabledAsync() {
            return base.Channel.GetExternalCRMIntegrationIsEnabledAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPart(EpicorConsole.Epicor.PartSvc.GetNewPartRequest request) {
            return base.Channel.GetNewPart(request);
        }
        
        public void GetNewPart(ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.GetNewPartRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.GetNewPartResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPart(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartResponse> GetNewPartAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRequest request) {
            return base.Channel.GetNewPartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartAttchResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartAttch(EpicorConsole.Epicor.PartSvc.GetNewPartAttchRequest request) {
            return base.Channel.GetNewPartAttch(request);
        }
        
        public void GetNewPartAttch(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            EpicorConsole.Epicor.PartSvc.GetNewPartAttchRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartAttchRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            EpicorConsole.Epicor.PartSvc.GetNewPartAttchResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartAttchResponse> GetNewPartAttchAsync(EpicorConsole.Epicor.PartSvc.GetNewPartAttchRequest request) {
            return base.Channel.GetNewPartAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartCOOResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartCOO(EpicorConsole.Epicor.PartSvc.GetNewPartCOORequest request) {
            return base.Channel.GetNewPartCOO(request);
        }
        
        public void GetNewPartCOO(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            EpicorConsole.Epicor.PartSvc.GetNewPartCOORequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartCOORequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            EpicorConsole.Epicor.PartSvc.GetNewPartCOOResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartCOO(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartCOOResponse> GetNewPartCOOAsync(EpicorConsole.Epicor.PartSvc.GetNewPartCOORequest request) {
            return base.Channel.GetNewPartCOOAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartDimResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartDim(EpicorConsole.Epicor.PartSvc.GetNewPartDimRequest request) {
            return base.Channel.GetNewPartDim(request);
        }
        
        public void GetNewPartDim(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            EpicorConsole.Epicor.PartSvc.GetNewPartDimRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartDimRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            EpicorConsole.Epicor.PartSvc.GetNewPartDimResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartDim(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartDimResponse> GetNewPartDimAsync(EpicorConsole.Epicor.PartSvc.GetNewPartDimRequest request) {
            return base.Channel.GetNewPartDimAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartLangDescResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartLangDesc(EpicorConsole.Epicor.PartSvc.GetNewPartLangDescRequest request) {
            return base.Channel.GetNewPartLangDesc(request);
        }
        
        public void GetNewPartLangDesc(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            EpicorConsole.Epicor.PartSvc.GetNewPartLangDescRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartLangDescRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            EpicorConsole.Epicor.PartSvc.GetNewPartLangDescResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartLangDesc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartLangDescResponse> GetNewPartLangDescAsync(EpicorConsole.Epicor.PartSvc.GetNewPartLangDescRequest request) {
            return base.Channel.GetNewPartLangDescAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartPlantResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartPlant(EpicorConsole.Epicor.PartSvc.GetNewPartPlantRequest request) {
            return base.Channel.GetNewPartPlant(request);
        }
        
        public void GetNewPartPlant(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            EpicorConsole.Epicor.PartSvc.GetNewPartPlantRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartPlantRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            EpicorConsole.Epicor.PartSvc.GetNewPartPlantResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartPlant(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartPlantResponse> GetNewPartPlantAsync(EpicorConsole.Epicor.PartSvc.GetNewPartPlantRequest request) {
            return base.Channel.GetNewPartPlantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartRestriction(EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionRequest request) {
            return base.Channel.GetNewPartRestriction(request);
        }
        
        public void GetNewPartRestriction(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartRestriction(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionResponse> GetNewPartRestrictionAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRestrictionRequest request) {
            return base.Channel.GetNewPartRestrictionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartRestrictSubst(EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstRequest request) {
            return base.Channel.GetNewPartRestrictSubst(request);
        }
        
        public void GetNewPartRestrictSubst(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string restrictionTypeID) {
            EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.restrictionTypeID = restrictionTypeID;
            EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartRestrictSubst(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstResponse> GetNewPartRestrictSubstAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRestrictSubstRequest request) {
            return base.Channel.GetNewPartRestrictSubstAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartRev(EpicorConsole.Epicor.PartSvc.GetNewPartRevRequest request) {
            return base.Channel.GetNewPartRev(request);
        }
        
        public void GetNewPartRev(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum) {
            EpicorConsole.Epicor.PartSvc.GetNewPartRevRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartRevRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.revisionNum = revisionNum;
            EpicorConsole.Epicor.PartSvc.GetNewPartRevResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartRev(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevResponse> GetNewPartRevAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevRequest request) {
            return base.Channel.GetNewPartRevAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartRevAttch(EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchRequest request) {
            return base.Channel.GetNewPartRevAttch(request);
        }
        
        public void GetNewPartRevAttch(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod) {
            EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.revisionNum = revisionNum;
            inValue.altMethod = altMethod;
            EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartRevAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchResponse> GetNewPartRevAttchAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevAttchRequest request) {
            return base.Channel.GetNewPartRevAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartAuditResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartAudit(EpicorConsole.Epicor.PartSvc.GetNewPartAuditRequest request) {
            return base.Channel.GetNewPartAudit(request);
        }
        
        public void GetNewPartAudit(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod, System.Nullable<System.DateTime> changeDate) {
            EpicorConsole.Epicor.PartSvc.GetNewPartAuditRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartAuditRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.revisionNum = revisionNum;
            inValue.altMethod = altMethod;
            inValue.changeDate = changeDate;
            EpicorConsole.Epicor.PartSvc.GetNewPartAuditResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartAudit(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartAuditResponse> GetNewPartAuditAsync(EpicorConsole.Epicor.PartSvc.GetNewPartAuditRequest request) {
            return base.Channel.GetNewPartAuditAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartCOPartResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartCOPart(EpicorConsole.Epicor.PartSvc.GetNewPartCOPartRequest request) {
            return base.Channel.GetNewPartCOPart(request);
        }
        
        public void GetNewPartCOPart(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod) {
            EpicorConsole.Epicor.PartSvc.GetNewPartCOPartRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartCOPartRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.revisionNum = revisionNum;
            inValue.altMethod = altMethod;
            EpicorConsole.Epicor.PartSvc.GetNewPartCOPartResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartCOPart(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartCOPartResponse> GetNewPartCOPartAsync(EpicorConsole.Epicor.PartSvc.GetNewPartCOPartRequest request) {
            return base.Channel.GetNewPartCOPartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartRevInspPlan(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanRequest request) {
            return base.Channel.GetNewPartRevInspPlan(request);
        }
        
        public void GetNewPartRevInspPlan(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod) {
            EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.revisionNum = revisionNum;
            inValue.altMethod = altMethod;
            EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartRevInspPlan(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanResponse> GetNewPartRevInspPlanAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanRequest request) {
            return base.Channel.GetNewPartRevInspPlanAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartRevInspPlanAttch(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchRequest request) {
            return base.Channel.GetNewPartRevInspPlanAttch(request);
        }
        
        public void GetNewPartRevInspPlanAttch(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod, int seqPlan) {
            EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.revisionNum = revisionNum;
            inValue.altMethod = altMethod;
            inValue.seqPlan = seqPlan;
            EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartRevInspPlanAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchResponse> GetNewPartRevInspPlanAttchAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspPlanAttchRequest request) {
            return base.Channel.GetNewPartRevInspPlanAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartRevInspVend(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendRequest request) {
            return base.Channel.GetNewPartRevInspVend(request);
        }
        
        public void GetNewPartRevInspVend(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string revisionNum, string altMethod) {
            EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.revisionNum = revisionNum;
            inValue.altMethod = altMethod;
            EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartRevInspVend(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendResponse> GetNewPartRevInspVendAsync(EpicorConsole.Epicor.PartSvc.GetNewPartRevInspVendRequest request) {
            return base.Channel.GetNewPartRevInspVendAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartSubsResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartSubs(EpicorConsole.Epicor.PartSvc.GetNewPartSubsRequest request) {
            return base.Channel.GetNewPartSubs(request);
        }
        
        public void GetNewPartSubs(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            EpicorConsole.Epicor.PartSvc.GetNewPartSubsRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartSubsRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            EpicorConsole.Epicor.PartSvc.GetNewPartSubsResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartSubs(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartSubsResponse> GetNewPartSubsAsync(EpicorConsole.Epicor.PartSvc.GetNewPartSubsRequest request) {
            return base.Channel.GetNewPartSubsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartPCResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartPC(EpicorConsole.Epicor.PartSvc.GetNewPartPCRequest request) {
            return base.Channel.GetNewPartPC(request);
        }
        
        public void GetNewPartPC(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string pcType) {
            EpicorConsole.Epicor.PartSvc.GetNewPartPCRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartPCRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.pcType = pcType;
            EpicorConsole.Epicor.PartSvc.GetNewPartPCResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartPC(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartPCResponse> GetNewPartPCAsync(EpicorConsole.Epicor.PartSvc.GetNewPartPCRequest request) {
            return base.Channel.GetNewPartPCAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartWhseResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartWhse(EpicorConsole.Epicor.PartSvc.GetNewPartWhseRequest request) {
            return base.Channel.GetNewPartWhse(request);
        }
        
        public void GetNewPartWhse(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string plant) {
            EpicorConsole.Epicor.PartSvc.GetNewPartWhseRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartWhseRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.plant = plant;
            EpicorConsole.Epicor.PartSvc.GetNewPartWhseResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartWhse(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartWhseResponse> GetNewPartWhseAsync(EpicorConsole.Epicor.PartSvc.GetNewPartWhseRequest request) {
            return base.Channel.GetNewPartWhseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartBinInfo(EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoRequest request) {
            return base.Channel.GetNewPartBinInfo(request);
        }
        
        public void GetNewPartBinInfo(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum, string plant, string warehouseCode) {
            EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            inValue.plant = plant;
            inValue.warehouseCode = warehouseCode;
            EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartBinInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoResponse> GetNewPartBinInfoAsync(EpicorConsole.Epicor.PartSvc.GetNewPartBinInfoRequest request) {
            return base.Channel.GetNewPartBinInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewPartUOMResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewPartUOM(EpicorConsole.Epicor.PartSvc.GetNewPartUOMRequest request) {
            return base.Channel.GetNewPartUOM(request);
        }
        
        public void GetNewPartUOM(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string partNum) {
            EpicorConsole.Epicor.PartSvc.GetNewPartUOMRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewPartUOMRequest();
            inValue.ds = ds;
            inValue.partNum = partNum;
            EpicorConsole.Epicor.PartSvc.GetNewPartUOMResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewPartUOM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewPartUOMResponse> GetNewPartUOMAsync(EpicorConsole.Epicor.PartSvc.GetNewPartUOMRequest request) {
            return base.Channel.GetNewPartUOMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewEntityGLCResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewEntityGLC(EpicorConsole.Epicor.PartSvc.GetNewEntityGLCRequest request) {
            return base.Channel.GetNewEntityGLC(request);
        }
        
        public void GetNewEntityGLC(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string relatedToFile, string key1, string key2, string key3, string key4, string key5, string key6) {
            EpicorConsole.Epicor.PartSvc.GetNewEntityGLCRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewEntityGLCRequest();
            inValue.ds = ds;
            inValue.relatedToFile = relatedToFile;
            inValue.key1 = key1;
            inValue.key2 = key2;
            inValue.key3 = key3;
            inValue.key4 = key4;
            inValue.key5 = key5;
            inValue.key6 = key6;
            EpicorConsole.Epicor.PartSvc.GetNewEntityGLCResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewEntityGLC(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewEntityGLCResponse> GetNewEntityGLCAsync(EpicorConsole.Epicor.PartSvc.GetNewEntityGLCRequest request) {
            return base.Channel.GetNewEntityGLCAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetNewTaxExemptResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetNewTaxExempt(EpicorConsole.Epicor.PartSvc.GetNewTaxExemptRequest request) {
            return base.Channel.GetNewTaxExempt(request);
        }
        
        public void GetNewTaxExempt(ref EpicorConsole.Epicor.PartSvc.PartTableset ds, string relatedToFile, string key1, string key2, string taxCode, string rateCode) {
            EpicorConsole.Epicor.PartSvc.GetNewTaxExemptRequest inValue = new EpicorConsole.Epicor.PartSvc.GetNewTaxExemptRequest();
            inValue.ds = ds;
            inValue.relatedToFile = relatedToFile;
            inValue.key1 = key1;
            inValue.key2 = key2;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicorConsole.Epicor.PartSvc.GetNewTaxExemptResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetNewTaxExempt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetNewTaxExemptResponse> GetNewTaxExemptAsync(EpicorConsole.Epicor.PartSvc.GetNewTaxExemptRequest request) {
            return base.Channel.GetNewTaxExemptAsync(request);
        }
        
        public void DeleteByID(string partNum) {
            base.Channel.DeleteByID(partNum);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(string partNum) {
            return base.Channel.DeleteByIDAsync(partNum);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartTableset GetByID(string partNum) {
            return base.Channel.GetByID(partNum);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> GetByIDAsync(string partNum) {
            return base.Channel.GetByIDAsync(partNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetListResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetList(EpicorConsole.Epicor.PartSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.PartSvc.GetListRequest inValue = new EpicorConsole.Epicor.PartSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.PartSvc.GetListResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.PartSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.GetRowsResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.GetRows(EpicorConsole.Epicor.PartSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartTableset GetRows(
                    string whereClausePart, 
                    string whereClausePartAttch, 
                    string whereClausePartCOO, 
                    string whereClausePartDim, 
                    string whereClausePartLangDesc, 
                    string whereClausePartPlant, 
                    string whereClausePartRestriction, 
                    string whereClausePartRestrictSubst, 
                    string whereClausePartRev, 
                    string whereClausePartRevAttch, 
                    string whereClausePartAudit, 
                    string whereClausePartCOPart, 
                    string whereClausePartRevInspPlan, 
                    string whereClausePartRevInspPlanAttch, 
                    string whereClausePartRevInspVend, 
                    string whereClausePartSubs, 
                    string whereClausePartPC, 
                    string whereClausePartWhse, 
                    string whereClausePartBinInfo, 
                    string whereClausePartUOM, 
                    string whereClauseEntityGLC, 
                    string whereClauseTaxExempt, 
                    int pageSize, 
                    int absolutePage, 
                    out bool morePages) {
            EpicorConsole.Epicor.PartSvc.GetRowsRequest inValue = new EpicorConsole.Epicor.PartSvc.GetRowsRequest();
            inValue.whereClausePart = whereClausePart;
            inValue.whereClausePartAttch = whereClausePartAttch;
            inValue.whereClausePartCOO = whereClausePartCOO;
            inValue.whereClausePartDim = whereClausePartDim;
            inValue.whereClausePartLangDesc = whereClausePartLangDesc;
            inValue.whereClausePartPlant = whereClausePartPlant;
            inValue.whereClausePartRestriction = whereClausePartRestriction;
            inValue.whereClausePartRestrictSubst = whereClausePartRestrictSubst;
            inValue.whereClausePartRev = whereClausePartRev;
            inValue.whereClausePartRevAttch = whereClausePartRevAttch;
            inValue.whereClausePartAudit = whereClausePartAudit;
            inValue.whereClausePartCOPart = whereClausePartCOPart;
            inValue.whereClausePartRevInspPlan = whereClausePartRevInspPlan;
            inValue.whereClausePartRevInspPlanAttch = whereClausePartRevInspPlanAttch;
            inValue.whereClausePartRevInspVend = whereClausePartRevInspVend;
            inValue.whereClausePartSubs = whereClausePartSubs;
            inValue.whereClausePartPC = whereClausePartPC;
            inValue.whereClausePartWhse = whereClausePartWhse;
            inValue.whereClausePartBinInfo = whereClausePartBinInfo;
            inValue.whereClausePartUOM = whereClausePartUOM;
            inValue.whereClauseEntityGLC = whereClauseEntityGLC;
            inValue.whereClauseTaxExempt = whereClauseTaxExempt;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.PartSvc.GetRowsResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.PartSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public EpicorConsole.Epicor.PartSvc.PartTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.PartTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.UpdateResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.Update(EpicorConsole.Epicor.PartSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref EpicorConsole.Epicor.PartSvc.PartTableset ds) {
            EpicorConsole.Epicor.PartSvc.UpdateRequest inValue = new EpicorConsole.Epicor.PartSvc.UpdateRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.PartSvc.UpdateResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.PartSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.PartSvc.UpdateExtResponse EpicorConsole.Epicor.PartSvc.PartSvcContract.UpdateExt(EpicorConsole.Epicor.PartSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public EpicorConsole.Epicor.PartSvc.BOUpdErrorTableset UpdateExt(ref EpicorConsole.Epicor.PartSvc.UpdExtPartTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            EpicorConsole.Epicor.PartSvc.UpdateExtRequest inValue = new EpicorConsole.Epicor.PartSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            EpicorConsole.Epicor.PartSvc.UpdateExtResponse retVal = ((EpicorConsole.Epicor.PartSvc.PartSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.PartSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.PartSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
    }
}
