//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicorConsole.Epicor.AbcCodeSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.UpdExtABCCodeTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABCCodeListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ABCCodeListTableset : EpicorConsole.Epicor.AbcCodeSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListTable ABCCodeListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListTable ABCCodeList {
            get {
                return this.ABCCodeListField;
            }
            set {
                if ((object.ReferenceEquals(this.ABCCodeListField, value) != true)) {
                    this.ABCCodeListField = value;
                    this.RaisePropertyChanged("ABCCodeList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtABCCodeTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtABCCodeTableset : EpicorConsole.Epicor.AbcCodeSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTable ABCCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTable ABCCode {
            get {
                return this.ABCCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ABCCodeField, value) != true)) {
                    this.ABCCodeField = value;
                    this.RaisePropertyChanged("ABCCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : EpicorConsole.Epicor.AbcCodeSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.AbcCodeSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.AbcCodeSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABCCodeTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ABCCodeTableset : EpicorConsole.Epicor.AbcCodeSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTable ABCCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTable ABCCode {
            get {
                return this.ABCCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ABCCodeField, value) != true)) {
                    this.ABCCodeField = value;
                    this.RaisePropertyChanged("ABCCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ABCCodeTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ABCCodeRow")]
    [System.SerializableAttribute()]
    public class ABCCodeTable : System.Collections.Generic.List<EpicorConsole.Epicor.AbcCodeSvc.ABCCodeRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ABCCodeListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ABCCodeListRow")]
    [System.SerializableAttribute()]
    public class ABCCodeListTable : System.Collections.Generic.List<EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABCCodeListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ABCCodeListRow : EpicorConsole.Epicor.AbcCodeSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ABCCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABCCode {
            get {
                return this.ABCCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ABCCodeField, value) != true)) {
                    this.ABCCodeField = value;
                    this.RaisePropertyChanged("ABCCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListRow))]
    public partial class IceRow : EpicorConsole.Epicor.AbcCodeSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.AbcCodeSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.AbcCodeSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABCCodeRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ABCCodeRow : EpicorConsole.Epicor.AbcCodeSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ABCCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcPcntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CalcValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.AbcCodeSvc.ABCCodeRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountFreqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludeFromCCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PcntToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyToleranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StockValPcntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueToleranceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABCCode {
            get {
                return this.ABCCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ABCCodeField, value) != true)) {
                    this.ABCCodeField = value;
                    this.RaisePropertyChanged("ABCCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcPcnt {
            get {
                return this.CalcPcntField;
            }
            set {
                if ((this.CalcPcntField.Equals(value) != true)) {
                    this.CalcPcntField = value;
                    this.RaisePropertyChanged("CalcPcnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcQty {
            get {
                return this.CalcQtyField;
            }
            set {
                if ((this.CalcQtyField.Equals(value) != true)) {
                    this.CalcQtyField = value;
                    this.RaisePropertyChanged("CalcQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CalcValue {
            get {
                return this.CalcValueField;
            }
            set {
                if ((this.CalcValueField.Equals(value) != true)) {
                    this.CalcValueField = value;
                    this.RaisePropertyChanged("CalcValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountFreq {
            get {
                return this.CountFreqField;
            }
            set {
                if ((this.CountFreqField.Equals(value) != true)) {
                    this.CountFreqField = value;
                    this.RaisePropertyChanged("CountFreq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludeFromCC {
            get {
                return this.ExcludeFromCCField;
            }
            set {
                if ((this.ExcludeFromCCField.Equals(value) != true)) {
                    this.ExcludeFromCCField = value;
                    this.RaisePropertyChanged("ExcludeFromCC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PcntTolerance {
            get {
                return this.PcntToleranceField;
            }
            set {
                if ((this.PcntToleranceField.Equals(value) != true)) {
                    this.PcntToleranceField = value;
                    this.RaisePropertyChanged("PcntTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyTolerance {
            get {
                return this.QtyToleranceField;
            }
            set {
                if ((this.QtyToleranceField.Equals(value) != true)) {
                    this.QtyToleranceField = value;
                    this.RaisePropertyChanged("QtyTolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StockValPcnt {
            get {
                return this.StockValPcntField;
            }
            set {
                if ((this.StockValPcntField.Equals(value) != true)) {
                    this.StockValPcntField = value;
                    this.RaisePropertyChanged("StockValPcnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValueTolerance {
            get {
                return this.ValueToleranceField;
            }
            set {
                if ((this.ValueToleranceField.Equals(value) != true)) {
                    this.ValueToleranceField = value;
                    this.RaisePropertyChanged("ValueTolerance");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : EpicorConsole.Epicor.AbcCodeSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABCCodeListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ABCCodeListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABCCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABCCodeRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ABCCodeRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABCCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountFreq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcludeFromCC = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StockValPcnt = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcntTolerance = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcPcnt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcQty = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalcValue = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyTolerance = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValueTolerance = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<EpicorConsole.Epicor.AbcCodeSvc.BOUpdErrorRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.AbcCodeSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.AbcCodeSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:ABCCode", ConfigurationName="Epicor.AbcCodeSvc.ABCCodeSvcContract")]
    public interface ABCCodeSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetNewABCCode", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetNewABCCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail), Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetNewABCCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeResponse GetNewABCCode(EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetNewABCCode", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetNewABCCodeResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeResponse> GetNewABCCodeAsync(EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/DeleteByID", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail), Action="Erp:BO:ABCCode/ABCCodeSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(string abCCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/DeleteByID", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(string abCCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetByID", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail), Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset GetByID(string abCCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetByID", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset> GetByIDAsync(string abCCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetList", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail), Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.AbcCodeSvc.GetListResponse GetList(EpicorConsole.Epicor.AbcCodeSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetList", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.AbcCodeSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetRows", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail), Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.AbcCodeSvc.GetRowsResponse GetRows(EpicorConsole.Epicor.AbcCodeSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetRows", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.AbcCodeSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowID", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail), Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowID", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail), Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/Update", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail), Action="Erp:BO:ABCCode/ABCCodeSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.AbcCodeSvc.UpdateResponse Update(EpicorConsole.Epicor.AbcCodeSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/Update", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.AbcCodeSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/UpdateExt", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicorConsole.Epicor.AbcCodeSvc.EpicorFaultDetail), Action="Erp:BO:ABCCode/ABCCodeSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicorConsole.Epicor.AbcCodeSvc.UpdateExtResponse UpdateExt(EpicorConsole.Epicor.AbcCodeSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ABCCode/ABCCodeSvcContract/UpdateExt", ReplyAction="Erp:BO:ABCCode/ABCCodeSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.AbcCodeSvc.UpdateExtRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewABCCode", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class GetNewABCCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds;
        
        public GetNewABCCodeRequest() {
        }
        
        public GetNewABCCodeRequest(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewABCCodeResponse", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class GetNewABCCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds;
        
        public GetNewABCCodeResponse() {
        }
        
        public GetNewABCCodeResponse(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public string whereClauseABCCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=2)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(string whereClauseABCCode, int pageSize, int absolutePage) {
            this.whereClauseABCCode = whereClauseABCCode;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public EpicorConsole.Epicor.AbcCodeSvc.UpdExtABCCodeTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(EpicorConsole.Epicor.AbcCodeSvc.UpdExtABCCodeTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:ABCCode", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=0)]
        public EpicorConsole.Epicor.AbcCodeSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=1)]
        public EpicorConsole.Epicor.AbcCodeSvc.UpdExtABCCodeTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ABCCode", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(EpicorConsole.Epicor.AbcCodeSvc.BOUpdErrorTableset UpdateExtResult, EpicorConsole.Epicor.AbcCodeSvc.UpdExtABCCodeTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ABCCodeSvcContractChannel : EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ABCCodeSvcContractClient : System.ServiceModel.ClientBase<EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract>, EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract {
        
        public ABCCodeSvcContractClient() {
        }
        
        public ABCCodeSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ABCCodeSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ABCCodeSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ABCCodeSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeResponse EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract.GetNewABCCode(EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeRequest request) {
            return base.Channel.GetNewABCCode(request);
        }
        
        public void GetNewABCCode(ref EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds) {
            EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeRequest inValue = new EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeResponse retVal = ((EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract)(this)).GetNewABCCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeResponse> GetNewABCCodeAsync(EpicorConsole.Epicor.AbcCodeSvc.GetNewABCCodeRequest request) {
            return base.Channel.GetNewABCCodeAsync(request);
        }
        
        public void DeleteByID(string abCCode) {
            base.Channel.DeleteByID(abCCode);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(string abCCode) {
            return base.Channel.DeleteByIDAsync(abCCode);
        }
        
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset GetByID(string abCCode) {
            return base.Channel.GetByID(abCCode);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset> GetByIDAsync(string abCCode) {
            return base.Channel.GetByIDAsync(abCCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.AbcCodeSvc.GetListResponse EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract.GetList(EpicorConsole.Epicor.AbcCodeSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.AbcCodeSvc.GetListRequest inValue = new EpicorConsole.Epicor.AbcCodeSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.AbcCodeSvc.GetListResponse retVal = ((EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.GetListResponse> GetListAsync(EpicorConsole.Epicor.AbcCodeSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.AbcCodeSvc.GetRowsResponse EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract.GetRows(EpicorConsole.Epicor.AbcCodeSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset GetRows(string whereClauseABCCode, int pageSize, int absolutePage, out bool morePages) {
            EpicorConsole.Epicor.AbcCodeSvc.GetRowsRequest inValue = new EpicorConsole.Epicor.AbcCodeSvc.GetRowsRequest();
            inValue.whereClauseABCCode = whereClauseABCCode;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicorConsole.Epicor.AbcCodeSvc.GetRowsResponse retVal = ((EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.GetRowsResponse> GetRowsAsync(EpicorConsole.Epicor.AbcCodeSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.AbcCodeSvc.UpdateResponse EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract.Update(EpicorConsole.Epicor.AbcCodeSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref EpicorConsole.Epicor.AbcCodeSvc.ABCCodeTableset ds) {
            EpicorConsole.Epicor.AbcCodeSvc.UpdateRequest inValue = new EpicorConsole.Epicor.AbcCodeSvc.UpdateRequest();
            inValue.ds = ds;
            EpicorConsole.Epicor.AbcCodeSvc.UpdateResponse retVal = ((EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.UpdateResponse> UpdateAsync(EpicorConsole.Epicor.AbcCodeSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicorConsole.Epicor.AbcCodeSvc.UpdateExtResponse EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract.UpdateExt(EpicorConsole.Epicor.AbcCodeSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public EpicorConsole.Epicor.AbcCodeSvc.BOUpdErrorTableset UpdateExt(ref EpicorConsole.Epicor.AbcCodeSvc.UpdExtABCCodeTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            EpicorConsole.Epicor.AbcCodeSvc.UpdateExtRequest inValue = new EpicorConsole.Epicor.AbcCodeSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            EpicorConsole.Epicor.AbcCodeSvc.UpdateExtResponse retVal = ((EpicorConsole.Epicor.AbcCodeSvc.ABCCodeSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<EpicorConsole.Epicor.AbcCodeSvc.UpdateExtResponse> UpdateExtAsync(EpicorConsole.Epicor.AbcCodeSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
    }
}
